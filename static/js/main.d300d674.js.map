{"version":3,"file":"static/js/main.d300d674.js","mappings":"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WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,SACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,UACA,OACA,WACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,MAGA,SACA,WACA,OACA,UACA,gBACA,IACA,QACA,OACA,iBACA,SACA,OACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,MACA,OACA,WACA,SCnIUvZ,SAAQ,YAClBhU,GAAOm9B,GAAcn9B,GAAOm9B,EAAAA,IAAAA,IELTC,GAAAA,WAAAA,SAAAA,EAOPtP,EAAgB5tB,GAAAA,KACrB4tB,MAAQA,EAAAA,KACR5tB,YAAcA,EAAAA,KACdi0B,SAAWL,EAAchG,GAI9BsE,EAAWQ,WAAW7xB,KAAKb,YAAc,8BAG3Cm9B,aAAA,SACEC,EACA/I,EACAC,EACAC,GAAAA,IAGMxvB,EAAMwvB,EADIE,GAAQ5zB,KAAK+sB,MAAOyG,EAAkBC,EAAYC,GACvCxa,KAAK,IAAK,IAC/BvK,EAAK3O,KAAKb,YAAco9B,EAG9B9I,EAAW3G,YAAYne,EAAIA,EAAIzK,EAAAA,EAAAA,EAGjCs4B,aAAA,SAAaD,EAAkB9I,GAC7BA,EAAWnB,WAAWtyB,KAAKb,YAAco9B,EAAAA,EAAAA,EAG3CE,aAAA,SACEF,EACA/I,EACAC,EACAC,GAEI6I,EAAW,GAAGlL,EAAWQ,WAAW7xB,KAAKb,YAAco9B,GAAAA,KAGtDC,aAAaD,EAAU9I,GAAAA,KACvB6I,aAAaC,EAAU/I,EAAkBC,EAAYC,EAAAA,EAAAA,CAAAA,CA7CzC2I,GCUN,SAASK,GACtBvR,GAAAA,IAAAA,IAAAA,EAAAA,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","sources":["../webpack/universalModuleDefinition","../../node_modules/@primer/octicons-react/dist/index.esm.js","../../node_modules/@primer/react/lib-esm/Box.js","../../node_modules/@primer/react/lib-esm/Button/IconButton.js","../../node_modules/@primer/react/lib-esm/Button/ButtonBase.js","../../node_modules/@primer/react/lib-esm/Button/Button.js","../../node_modules/@primer/react/lib-esm/Button/ButtonCounter.js","../../node_modules/@primer/react/lib-esm/Button/index.js","../../node_modules/@primer/react/lib-esm/Button/styles.js","../../node_modules/@primer/react/lib-esm/_getGlobalFocusStyles.js","../../node_modules/@primer/react/lib-esm/Button/types.js","../../node_modules/@primer/react/lib-esm/CounterLabel.js","../../node_modules/@primer/react/lib-esm/Heading.js","../../node_modules/@primer/react/lib-esm/Link.js","../../node_modules/@primer/react/lib-esm/Spinner.js","../../node_modules/@primer/react/lib-esm/Text.js","../../node_modules/@primer/react/lib-esm/_TextInputInnerVisualSlot.js","../../node_modules/@primer/react/lib-esm/_UnstyledTextInput.js","../../node_modules/@primer/react/lib-esm/_TextInputInnerAction.js","../../node_modules/@primer/react/lib-esm/TextInput.js","../../node_modules/@primer/react/lib-esm/ThemeProvider.js","../../node_modules/@primer/react/lib-esm/Tooltip.js","../../node_modules/@primer/react/lib-esm/_TextInputWrapper.js","../../node_modules/@styled-system/theme-get/dist/index.esm.js","../../node_modules/@primer/react/lib-esm/constants.js","../../node_modules/@primer/react/lib-esm/hooks/useProvidedRefOrCreate.js","../../node_modules/@primer/react/lib-esm/hooks/useProvidedStateOrCreate.js","../../node_modules/@primer/react/lib-esm/sx.js","../../node_modules/@primer/react/lib-esm/theme-preval.js","../../node_modules/@primer/react/lib-esm/theme.js","../../node_modules/@styled-system/core/dist/index.esm.js","../../node_modules/@styled-system/css/dist/index.esm.js","../../node_modules/classnames/index.js","../../node_modules/deepmerge/dist/cjs.js","../../node_modules/focus-visible/dist/focus-visible.js","../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../../node_modules/object-assign/index.js","../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-is/index.js","../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/shallowequal/index.js","../../node_modules/@emotion/stylis/dist/stylis.browser.esm.js","../../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../../node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.esm.js","../../node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js","../../node_modules/styled-components/src/utils/interleave.js","../../node_modules/styled-components/src/utils/isPlainObject.js","../../node_modules/styled-components/src/utils/empties.js","../../node_modules/styled-components/src/utils/isFunction.js","../../node_modules/styled-components/src/utils/getComponentName.js","../../node_modules/styled-components/src/utils/isStyledComponent.js","../../node_modules/styled-components/src/constants.js","../../node_modules/styled-components/src/utils/error.js","../../node_modules/styled-components/src/sheet/GroupedTag.js","../../node_modules/styled-components/src/sheet/GroupIDAllocator.js","../../node_modules/styled-components/src/sheet/Rehydration.js","../../node_modules/styled-components/src/utils/nonce.js","../../node_modules/styled-components/src/sheet/dom.js","../../node_modules/styled-components/src/sheet/Tag.js","../../node_modules/styled-components/src/sheet/Sheet.js","../../node_modules/styled-components/src/utils/generateAlphabeticName.js","../../node_modules/styled-components/src/utils/hash.js","../../node_modules/styled-components/src/utils/isStaticRules.js","../../node_modules/styled-components/src/models/ComponentStyle.js","../../node_modules/styled-components/src/utils/stylis.js","../../node_modules/styled-components/src/utils/stylisPluginInsertRule.js","../../node_modules/styled-components/src/models/StyleSheetManager.js","../../node_modules/styled-components/src/models/Keyframes.js","../../node_modules/styled-components/src/utils/hyphenateStyleName.js","../../node_modules/styled-components/src/utils/flatten.js","../../node_modules/styled-components/src/utils/isStatelessFunction.js","../../node_modules/styled-components/src/utils/addUnitIfNeeded.js","../../node_modules/styled-components/src/constructors/css.js","../../node_modules/styled-components/src/utils/checkDynamicCreation.js","../../node_modules/styled-components/src/utils/determineTheme.js","../../node_modules/styled-components/src/utils/escape.js","../../node_modules/styled-components/src/utils/generateComponentId.js","../../node_modules/styled-components/src/utils/isTag.js","../../node_modules/styled-components/src/utils/mixinDeep.js","../../node_modules/styled-components/src/models/ThemeProvider.js","../../node_modules/styled-components/src/models/StyledComponent.js","../../node_modules/styled-components/src/utils/generateDisplayName.js","../../node_modules/styled-components/src/utils/joinStrings.js","../../node_modules/styled-components/src/utils/domElements.js","../../node_modules/styled-components/src/constructors/styled.js","../../node_modules/styled-components/src/constructors/constructWithOptions.js","../../node_modules/styled-components/src/models/GlobalStyle.js","../../node_modules/styled-components/src/constructors/createGlobalStyle.js","../../node_modules/styled-components/src/constructors/keyframes.js","../../node_modules/styled-components/src/models/ServerStyleSheet.js","../../node_modules/styled-components/src/base.js","../../node_modules/@styled-system/layout/dist/index.esm.js","../../node_modules/@styled-system/color/dist/index.esm.js","../../node_modules/@styled-system/typography/dist/index.esm.js","../../node_modules/@styled-system/flexbox/dist/index.esm.js","../../node_modules/@styled-system/grid/dist/index.esm.js","../../node_modules/@styled-system/border/dist/index.esm.js","../../node_modules/@styled-system/background/dist/index.esm.js","../../node_modules/@styled-system/position/dist/index.esm.js","../../node_modules/@styled-system/space/dist/index.esm.js","../../node_modules/@styled-system/shadow/dist/index.esm.js","../../node_modules/@styled-system/variant/dist/index.esm.js","../../node_modules/styled-system/dist/index.esm.js","../../reviewstack/src/Username.tsx","../../node_modules/@primer/react/lib-esm/Header.js","../../node_modules/@primer/react/lib-esm/_VisuallyHidden.js","../../node_modules/@primer/react/lib-esm/ToggleSwitch.js","../../reviewstack/src/AppHeader.tsx","../../reviewstack/src/Link.tsx","../../reviewstack/src/URLFor.ts","../../reviewstack/src/constants.ts","../../reviewstack/src/diffServiceClient.ts","../../reviewstack/src/broadcast.ts","../../reviewstack/src/generated/graphql.ts","../../reviewstack/src/github/databaseInfo.ts","../../reviewstack/src/github/gitHubCredentials.ts","../../reviewstack/src/github/logoutBroadcastChannel.ts","../../reviewstack/src/github/queryGraphQL.ts","../../reviewstack/src/themeState.ts","../../shared/github/auth.ts","../../shared/rejectAfterTimeout.ts","../../shared/textmate-lib/textmateStyles.ts","../../shared/utils.ts","../external umd \"React\"","../external umd \"ReactDOM\"","../external umd \"Recoil\"","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/css loading","../webpack/runtime/jsonp chunk loading","LazyLoginDialog.tsx","../../reviewstack/src/LoginDialog.tsx","../../reviewstack/src/CenteredSpinner.tsx","../../reviewstack/src/TrustedRenderedMarkdown.tsx","../../reviewstack/src/github/GitHubClientStats.ts","../../reviewstack/src/github/CachingGitHubClient.ts","../../reviewstack/src/github/GraphQLGitHubClient.ts","../../reviewstack/src/joinPath.ts","../../reviewstack/src/github/diff.ts","../../reviewstack/src/utils.ts","../../reviewstack/src/github/diffVersions.ts","../../reviewstack/src/saplingStack.ts","../../reviewstack/src/stackState.ts","../../reviewstack/src/ghstackUtils.ts","../../reviewstack/src/recoil.ts","../../reviewstack/src/CommitHeader.tsx","../../reviewstack/src/CommitLink.tsx","../../reviewstack/src/SplitDiffFileHeader.tsx","../../node_modules/@primer/react/lib-esm/Avatar.js","../../reviewstack/src/ActorAvatar.tsx","../../reviewstack/src/ActorHeading.tsx","../../node_modules/@primer/react/lib-esm/Label.js","../../reviewstack/src/PendingLabel.tsx","../../node_modules/@primer/react/lib-esm/Textarea.js","../../reviewstack/src/PullRequestCommentInput.tsx","../../reviewstack/src/useRefreshPullRequest.ts","../../reviewstack/src/PullRequestInlineCommentInput.tsx","../../reviewstack/src/InlineCommentThread.tsx","../../reviewstack/src/PullRequestNewCommentInput.tsx","../../reviewstack/src/SplitDiffRow.tsx","../../reviewstack/src/generated/textmate/TextMateGrammarManifest.ts","../../node_modules/diff/lib/index.mjs","../../shared/createTokenizedIntralineDiff.tsx","../../shared/textmate-lib/FilepathClassifier.ts","../../shared/textmate-lib/splitPath.ts","../../reviewstack/src/SplitDiffView.tsx","../../shared/SplitDiffView/organizeLinesIntoGroups.ts","../../reviewstack/src/DiffView.tsx","../../reviewstack/src/CommitView.tsx","../../node_modules/@primer/react/lib-esm/Flash.js","../../node_modules/@primer/react/lib-esm/StyledOcticon.js","../../reviewstack/src/ErrorBoundary.tsx","../../reviewstack/src/GitHubProjectPage.tsx","../../shared/KeyboardShortcuts.tsx","../../reviewstack/src/KeyboardShortcuts.ts","../../reviewstack/src/PrimerStyles.tsx","../../reviewstack/src/PullRequestChangeCount.tsx","../../reviewstack/src/FieldLabel.tsx","../../reviewstack/src/useDebounced.ts","../../node_modules/@primer/react/lib-esm/ActionList/ActionListContainerContext.js","../../node_modules/@primer/react/lib-esm/ActionList/List.js","../../node_modules/@react-aria/ssr/dist/packages/@react-aria/ssr/src/SSRProvider.tsx","../../node_modules/@primer/react/lib-esm/ActionList/Group.js","../../node_modules/@primer/react/lib-esm/utils/use-force-update.js","../../node_modules/@primer/react/lib-esm/utils/useIsomorphicLayoutEffect.js","../../node_modules/@primer/react/lib-esm/utils/create-slots.js","../../node_modules/@primer/react/lib-esm/ActionList/Visuals.js","../../node_modules/@primer/react/lib-esm/ActionList/Selection.js","../../node_modules/@primer/react/lib-esm/ActionList/Item.js","../../node_modules/@primer/react/lib-esm/ActionList/LinkItem.js","../../node_modules/@primer/react/lib-esm/ActionList/Divider.js","../../node_modules/@primer/react/lib-esm/Truncate.js","../../node_modules/@primer/react/lib-esm/ActionList/Description.js","../../node_modules/@primer/react/lib-esm/ActionList/index.js","../../reviewstack/src/RepoLabelsInput.tsx","../../node_modules/@primer/react/lib-esm/hooks/useOnOutsideClick.js","../../node_modules/@primer/behaviors/dist/esm/utils/iterate-focusable-elements.js","../../node_modules/@primer/react/lib-esm/hooks/useOnEscapePress.js","../../node_modules/@primer/react/lib-esm/hooks/useOverlay.js","../../node_modules/@primer/react/lib-esm/hooks/useOpenAndCloseFocus.js","../../node_modules/@primer/react/lib-esm/Portal/Portal.js","../../node_modules/@primer/react/lib-esm/Portal/index.js","../../node_modules/@primer/react/lib-esm/Overlay.js","../../node_modules/@primer/react/lib-esm/hooks/useRefObjectAsForwardedRef.js","../../node_modules/@primer/behaviors/dist/esm/polyfills/event-listener-signal.js","../../node_modules/@primer/behaviors/dist/esm/focus-trap.js","../../node_modules/@primer/behaviors/dist/esm/utils/user-agent.js","../../node_modules/@primer/behaviors/dist/esm/utils/unique-id.js","../../node_modules/@primer/behaviors/dist/esm/focus-zone.js","../../node_modules/@primer/behaviors/dist/esm/anchored-position.js","../../node_modules/@primer/react/lib-esm/hooks/useResizeObserver.js","../../node_modules/@primer/react/lib-esm/AnchoredOverlay/AnchoredOverlay.js","../../node_modules/@primer/react/lib-esm/hooks/useRenderForcingRef.js","../../node_modules/@primer/react/lib-esm/hooks/useAnchoredPosition.js","../../node_modules/@primer/react/lib-esm/hooks/useFocusZone.js","../../node_modules/@primer/react/lib-esm/hooks/useFocusTrap.js","../../node_modules/@primer/react/lib-esm/hooks/useMenuInitialFocus.js","../../node_modules/@primer/react/lib-esm/hooks/useMenuKeyboardNavigation.js","../../node_modules/@primer/react/lib-esm/hooks/useMnemonics.js","../../node_modules/@primer/react/lib-esm/ActionMenu.js","../../node_modules/@primer/react/lib-esm/Token/TokenBase.js","../../node_modules/@primer/react/lib-esm/Token/_RemoveTokenButton.js","../../node_modules/color2k/src/guard.ts","../../node_modules/color2k/src/ColorError.ts","../../node_modules/color2k/src/parseToRgba.ts","../../node_modules/color2k/src/parseToHsla.ts","../../node_modules/color2k/src/hsla.ts","../../node_modules/@primer/react/lib-esm/Token/_TokenTextContainer.js","../../node_modules/@primer/react/lib-esm/Token/IssueLabelToken.js","../../reviewstack/src/PullRequestLabels.tsx","../../reviewstack/src/RepoAssignableUsersInput.tsx","../../node_modules/@primer/react/lib-esm/Token/Token.js","../../node_modules/@primer/react/lib-esm/Token/AvatarToken.js","../../reviewstack/src/PullRequestReviewers.tsx","../../node_modules/@primer/react/lib-esm/hooks/useDetails.js","../../node_modules/@primer/react/lib-esm/Details.js","../../reviewstack/src/PullRequestSignals.tsx","../../reviewstack/src/PullRequest.tsx","../../reviewstack/src/BulletItems.tsx","../../reviewstack/src/CommentCount.tsx","../../node_modules/@primer/react/lib-esm/StateLabel.js","../../reviewstack/src/PullRequestStateLabel.tsx","../../reviewstack/src/useNavigate.ts","../../reviewstack/src/useNavigateToPullRequest.ts","../../reviewstack/src/PullRequestStackItem.tsx","../../node_modules/@primer/react/lib-esm/ButtonGroup.js","../../reviewstack/src/PullRequestStack.tsx","../../reviewstack/src/PullRequestLatestVersionLink.tsx","../../reviewstack/src/ToggleButton.tsx","../../reviewstack/src/PullRequestVersionCommitSelectorItem.tsx","../../reviewstack/src/PullRequestVersionCommitSelector.tsx","../../reviewstack/src/PullRequestVersionSelectorItem.tsx","../../reviewstack/src/PullRequestVersionSelector.tsx","../../reviewstack/src/PullRequestVersions.tsx","../../reviewstack/src/PullRequestHeader.tsx","../../reviewstack/src/PullRequestReviewCommentLineNumber.tsx","../../reviewstack/src/PullRequestReviewComment.tsx","../../reviewstack/src/PullRequestTimeline.tsx","../../shared/OperatingSystem.ts","../../reviewstack/src/PullRequestReviewSelector.tsx","../../reviewstack/src/PullRequestTimelineCommentInput.tsx","../../shared/Drawers.tsx","../../shared/debounce.ts","../../reviewstack/src/PullRequestLayout.tsx","../../reviewstack/src/Pagination.tsx","../../reviewstack/src/PullRequestLink.tsx","../../reviewstack/src/PullRequestReviewDecisionLabel.tsx","../../node_modules/src/observe.ts","../../node_modules/src/InView.tsx","../../node_modules/src/useInView.tsx","../../node_modules/@primer/react/lib-esm/PageLayout/useStickyPaneHeight.js","../../node_modules/@primer/react/lib-esm/hooks/useMedia.js","../../node_modules/@primer/react/lib-esm/hooks/useResponsiveValue.js","../../node_modules/@primer/react/lib-esm/PageLayout/PageLayout.js","../../node_modules/@primer/react/lib-esm/SubNav.js","../../reviewstack/src/Pulls.tsx","../../reviewstack/src/PullsHeader.tsx","../../reviewstack/src/PullsView.tsx","../../reviewstack/src/SplitDiffViewPrimerStyles.tsx","../../reviewstack/src/UserHomePage.tsx","../../node_modules/@primer/react/lib-esm/BaseStyles.js","../../reviewstack/src/App.tsx","index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"), require(\"ReactDOM\"), require(\"Recoil\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\", \"ReactDOM\", \"Recoil\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReviewStack\"] = factory(require(\"React\"), require(\"ReactDOM\"), require(\"Recoil\"));\n\telse\n\t\troot[\"ReviewStack\"] = factory(root[\"React\"], root[\"ReactDOM\"], root[\"Recoil\"]);\n})(globalThis, (__WEBPACK_EXTERNAL_MODULE__1024__, __WEBPACK_EXTERNAL_MODULE__314__, __WEBPACK_EXTERNAL_MODULE__742__) => {\nreturn ","import React from 'react';\n\nvar sizeMap = {\n  small: 16,\n  medium: 32,\n  large: 64\n};\n\nfunction getSvgProps(_ref) {\n  var ariaLabel = _ref['aria-label'],\n      className = _ref.className,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === undefined ? 'currentColor' : _ref$fill,\n      size = _ref.size,\n      verticalAlign = _ref.verticalAlign,\n      svgDataByHeight = _ref.svgDataByHeight;\n\n  var height = sizeMap[size] || size;\n  var naturalHeight = closestNaturalHeight(Object.keys(svgDataByHeight), height);\n  var naturalWidth = svgDataByHeight[naturalHeight].width;\n  var width = height * (naturalWidth / naturalHeight);\n  var path = svgDataByHeight[naturalHeight].path;\n\n  return {\n    'aria-hidden': ariaLabel ? 'false' : 'true',\n    'aria-label': ariaLabel,\n    role: 'img',\n    className: className,\n    viewBox: '0 0 ' + naturalWidth + ' ' + naturalHeight,\n    width: width,\n    height: height,\n    fill: fill,\n    style: {\n      display: 'inline-block',\n      userSelect: 'none',\n      verticalAlign: verticalAlign,\n      overflow: 'visible'\n    },\n    dangerouslySetInnerHTML: { __html: path }\n  };\n}\n\nfunction closestNaturalHeight(naturalHeights, height) {\n  return naturalHeights.map(function (naturalHeight) {\n    return parseInt(naturalHeight, 10);\n  }).reduce(function (acc, naturalHeight) {\n    return naturalHeight <= height ? naturalHeight : acc;\n  }, naturalHeights[0]);\n}\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction AccessibilityIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M9.923 5.302a3 3 0 10-3.847 0A2.713 2.713 0 005.9 5.5H2A.75.75 0 002 7h3.3l-.578 5.163-.362 2.997a.75.75 0 101.49.18L6.132 13h3.736l.282 2.34a.75.75 0 101.49-.18l-.362-2.997L10.7 7H14a.75.75 0 000-1.5h-3.899a2.697 2.697 0 00-.178-.198zM9.5 3a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-.3 4.073l.495 4.427h-3.39l.496-4.427a1.207 1.207 0 012.398 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nAccessibilityIcon.defaultProps = {\n  className: 'octicon octicon-accessibility',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction AlertIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M13 17.5a1 1 0 11-2 0 1 1 0 012 0zm-.25-8.25a.75.75 0 00-1.5 0v4.5a.75.75 0 001.5 0v-4.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M9.836 3.244c.963-1.665 3.365-1.665 4.328 0l8.967 15.504c.963 1.667-.24 3.752-2.165 3.752H3.034c-1.926 0-3.128-2.085-2.165-3.752L9.836 3.244zm3.03.751a1 1 0 00-1.732 0L2.168 19.499A1 1 0 003.034 21h17.932a1 1 0 00.866-1.5L12.866 3.994z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nAlertIcon.defaultProps = {\n  className: 'octicon octicon-alert',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction AlertFillIcon(props) {\n  var svgDataByHeight = { \"12\": { \"width\": 12, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.855.708c.5-.896 1.79-.896 2.29 0l4.675 8.351a1.312 1.312 0 01-1.146 1.954H1.33A1.312 1.312 0 01.183 9.058L4.855.708zM7 7V3H5v4h2zm-1 3a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nAlertFillIcon.defaultProps = {\n  className: 'octicon octicon-alert-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction AppsIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 3.25c0-.966.784-1.75 1.75-1.75h2.5c.966 0 1.75.784 1.75 1.75v2.5A1.75 1.75 0 015.75 7.5h-2.5A1.75 1.75 0 011.5 5.75v-2.5zM3.25 3a.25.25 0 00-.25.25v2.5c0 .138.112.25.25.25h2.5A.25.25 0 006 5.75v-2.5A.25.25 0 005.75 3h-2.5zM1.5 10.25c0-.966.784-1.75 1.75-1.75h2.5c.966 0 1.75.784 1.75 1.75v2.5a1.75 1.75 0 01-1.75 1.75h-2.5a1.75 1.75 0 01-1.75-1.75v-2.5zM3.25 10a.25.25 0 00-.25.25v2.5c0 .138.112.25.25.25h2.5a.25.25 0 00.25-.25v-2.5a.25.25 0 00-.25-.25h-2.5zM8.5 3.25c0-.966.784-1.75 1.75-1.75h2.5c.966 0 1.75.784 1.75 1.75v2.5a1.75 1.75 0 01-1.75 1.75h-2.5A1.75 1.75 0 018.5 5.75v-2.5zM10.25 3a.25.25 0 00-.25.25v2.5c0 .138.112.25.25.25h2.5a.25.25 0 00.25-.25v-2.5a.25.25 0 00-.25-.25h-2.5zM8.5 10.25c0-.966.784-1.75 1.75-1.75h2.5c.966 0 1.75.784 1.75 1.75v2.5a1.75 1.75 0 01-1.75 1.75h-2.5a1.75 1.75 0 01-1.75-1.75v-2.5zm1.75-.25a.25.25 0 00-.25.25v2.5c0 .138.112.25.25.25h2.5a.25.25 0 00.25-.25v-2.5a.25.25 0 00-.25-.25h-2.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nAppsIcon.defaultProps = {\n  className: 'octicon octicon-apps',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArchiveIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 2.5a.25.25 0 00-.25.25v1.5c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-1.5a.25.25 0 00-.25-.25H1.75zM0 2.75C0 1.784.784 1 1.75 1h12.5c.966 0 1.75.784 1.75 1.75v1.5A1.75 1.75 0 0114.25 6H1.75A1.75 1.75 0 010 4.25v-1.5zM1.75 7a.75.75 0 01.75.75v5.5c0 .138.112.25.25.25h10.5a.25.25 0 00.25-.25v-5.5a.75.75 0 111.5 0v5.5A1.75 1.75 0 0113.25 15H2.75A1.75 1.75 0 011 13.25v-5.5A.75.75 0 011.75 7zm4.5 1a.75.75 0 000 1.5h3.5a.75.75 0 100-1.5h-3.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.75 2A1.75 1.75 0 001 3.75v3.5C1 8.216 1.784 9 2.75 9h18.5A1.75 1.75 0 0023 7.25v-3.5A1.75 1.75 0 0021.25 2H2.75zm18.5 1.5H2.75a.25.25 0 00-.25.25v3.5c0 .138.112.25.25.25h18.5a.25.25 0 00.25-.25v-3.5a.25.25 0 00-.25-.25z\\\"></path><path d=\\\"M2.75 10a.75.75 0 01.75.75v9.5c0 .138.112.25.25.25h16.5a.25.25 0 00.25-.25v-9.5a.75.75 0 011.5 0v9.5A1.75 1.75 0 0120.25 22H3.75A1.75 1.75 0 012 20.25v-9.5a.75.75 0 01.75-.75z\\\"></path><path d=\\\"M9.75 11.5a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArchiveIcon.defaultProps = {\n  className: 'octicon octicon-archive',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArrowBothIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.72 3.72a.75.75 0 011.06 1.06L2.56 7h10.88l-2.22-2.22a.75.75 0 011.06-1.06l3.5 3.5a.75.75 0 010 1.06l-3.5 3.5a.75.75 0 11-1.06-1.06l2.22-2.22H2.56l2.22 2.22a.75.75 0 11-1.06 1.06l-3.5-3.5a.75.75 0 010-1.06l3.5-3.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M7.78 5.97a.75.75 0 00-1.06 0l-5.25 5.25a.75.75 0 000 1.06l5.25 5.25a.75.75 0 001.06-1.06L3.81 12.5h16.38l-3.97 3.97a.75.75 0 101.06 1.06l5.25-5.25a.75.75 0 000-1.06l-5.25-5.25a.75.75 0 10-1.06 1.06L20.19 11H3.81l3.97-3.97a.75.75 0 000-1.06z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArrowBothIcon.defaultProps = {\n  className: 'octicon octicon-arrow-both',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArrowDownIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M13.03 8.22a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06 0L3.47 9.28a.75.75 0 011.06-1.06l2.97 2.97V3.75a.75.75 0 011.5 0v7.44l2.97-2.97a.75.75 0 011.06 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.97 13.22a.75.75 0 000 1.06l6.25 6.25a.75.75 0 001.06 0l6.25-6.25a.75.75 0 10-1.06-1.06l-4.97 4.97V3.75a.75.75 0 00-1.5 0v14.44l-4.97-4.97a.75.75 0 00-1.06 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArrowDownIcon.defaultProps = {\n  className: 'octicon octicon-arrow-down',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArrowDownLeftIcon(props) {\n  var svgDataByHeight = { \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.75 8.5a.75.75 0 00-.75.75v9c0 .414.336.75.75.75h9a.75.75 0 000-1.5H7.56L17.78 7.28a.75.75 0 00-1.06-1.06L6.5 16.44V9.25a.75.75 0 00-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArrowDownLeftIcon.defaultProps = {\n  className: 'octicon octicon-arrow-down-left',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArrowDownRightIcon(props) {\n  var svgDataByHeight = { \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M18.25 8.5a.75.75 0 01.75.75v9a.75.75 0 01-.75.75h-9a.75.75 0 010-1.5h7.19L6.22 7.28a.75.75 0 011.06-1.06L17.5 16.44V9.25a.75.75 0 01.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArrowDownRightIcon.defaultProps = {\n  className: 'octicon octicon-arrow-down-right',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArrowLeftIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.78 19.03a.75.75 0 01-1.06 0l-6.25-6.25a.75.75 0 010-1.06l6.25-6.25a.75.75 0 111.06 1.06L5.81 11.5h14.44a.75.75 0 010 1.5H5.81l4.97 4.97a.75.75 0 010 1.06z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArrowLeftIcon.defaultProps = {\n  className: 'octicon octicon-arrow-left',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArrowRightIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.22 2.97a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06l2.97-2.97H3.75a.75.75 0 010-1.5h7.44L8.22 4.03a.75.75 0 010-1.06z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M13.22 19.03a.75.75 0 001.06 0l6.25-6.25a.75.75 0 000-1.06l-6.25-6.25a.75.75 0 10-1.06 1.06l4.97 4.97H3.75a.75.75 0 000 1.5h14.44l-4.97 4.97a.75.75 0 000 1.06z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArrowRightIcon.defaultProps = {\n  className: 'octicon octicon-arrow-right',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArrowSwitchIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M5.22 14.78a.75.75 0 001.06-1.06L4.56 12h8.69a.75.75 0 000-1.5H4.56l1.72-1.72a.75.75 0 00-1.06-1.06l-3 3a.75.75 0 000 1.06l3 3zm5.56-6.5a.75.75 0 11-1.06-1.06l1.72-1.72H2.75a.75.75 0 010-1.5h8.69L9.72 2.28a.75.75 0 011.06-1.06l3 3a.75.75 0 010 1.06l-3 3z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M7.72 21.78a.75.75 0 001.06-1.06L5.56 17.5h14.69a.75.75 0 000-1.5H5.56l3.22-3.22a.75.75 0 10-1.06-1.06l-4.5 4.5a.75.75 0 000 1.06l4.5 4.5zm8.56-9.5a.75.75 0 11-1.06-1.06L18.44 8H3.75a.75.75 0 010-1.5h14.69l-3.22-3.22a.75.75 0 011.06-1.06l4.5 4.5a.75.75 0 010 1.06l-4.5 4.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArrowSwitchIcon.defaultProps = {\n  className: 'octicon octicon-arrow-switch',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArrowUpIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.47 7.78a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 0l4.25 4.25a.75.75 0 01-1.06 1.06L9 4.81v7.44a.75.75 0 01-1.5 0V4.81L4.53 7.78a.75.75 0 01-1.06 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M18.655 10.405a.75.75 0 000-1.06l-6.25-6.25a.75.75 0 00-1.06 0l-6.25 6.25a.75.75 0 101.06 1.06l4.97-4.97v14.44a.75.75 0 001.5 0V5.435l4.97 4.97a.75.75 0 001.06 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArrowUpIcon.defaultProps = {\n  className: 'octicon octicon-arrow-up',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArrowUpLeftIcon(props) {\n  var svgDataByHeight = { \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.75 15.5a.75.75 0 01-.75-.75v-9A.75.75 0 015.75 5h9a.75.75 0 010 1.5H7.56l10.22 10.22a.75.75 0 11-1.06 1.06L6.5 7.56v7.19a.75.75 0 01-.75.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArrowUpLeftIcon.defaultProps = {\n  className: 'octicon octicon-arrow-up-left',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ArrowUpRightIcon(props) {\n  var svgDataByHeight = { \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M18.25 15.5a.75.75 0 00.75-.75v-9a.75.75 0 00-.75-.75h-9a.75.75 0 000 1.5h7.19L6.22 16.72a.75.75 0 101.06 1.06L17.5 7.56v7.19c0 .414.336.75.75.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nArrowUpRightIcon.defaultProps = {\n  className: 'octicon octicon-arrow-up-right',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BeakerIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5 5.782V2.5h-.25a.75.75 0 010-1.5h6.5a.75.75 0 010 1.5H11v3.282l3.666 5.76C15.619 13.04 14.543 15 12.767 15H3.233c-1.776 0-2.852-1.96-1.899-3.458L5 5.782zM9.5 2.5h-3V6a.75.75 0 01-.117.403L4.73 9h6.54L9.617 6.403A.75.75 0 019.5 6V2.5zm-6.9 9.847L3.775 10.5h8.45l1.175 1.847a.75.75 0 01-.633 1.153H3.233a.75.75 0 01-.633-1.153z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 8.807V3.5h-.563a.75.75 0 010-1.5h9.125a.75.75 0 010 1.5H16v5.307l5.125 9.301c.964 1.75-.302 3.892-2.299 3.892H5.174c-1.998 0-3.263-2.142-2.3-3.892L8 8.807zM14.5 3.5h-5V9a.75.75 0 01-.093.362L7.127 13.5h9.746l-2.28-4.138A.75.75 0 0114.5 9V3.5zM4.189 18.832L6.3 15h11.4l2.111 3.832a1.125 1.125 0 01-.985 1.668H5.174a1.125 1.125 0 01-.985-1.668z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBeakerIcon.defaultProps = {\n  className: 'octicon octicon-beaker',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BellIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M8 1.5A3.5 3.5 0 004.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01l.001.006c0 .002.002.004.004.006a.017.017 0 00.006.004l.007.001h10.964l.007-.001a.016.016 0 00.006-.004.016.016 0 00.004-.006l.001-.007a.017.017 0 00-.003-.01l-1.703-2.554a1.75 1.75 0 01-.294-.97V5A3.5 3.5 0 008 1.5zM3 5a5 5 0 0110 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.518 1.518 0 0113.482 13H2.518a1.518 1.518 0 01-1.263-2.36l1.703-2.554A.25.25 0 003 7.947V5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C8.318 1 5 3.565 5 7v4.539a3.25 3.25 0 01-.546 1.803l-2.2 3.299A1.518 1.518 0 003.519 19H8.5a3.5 3.5 0 107 0h4.982a1.518 1.518 0 001.263-2.36l-2.2-3.298A3.25 3.25 0 0119 11.539V7c0-3.435-3.319-6-7-6zM6.5 7c0-2.364 2.383-4.5 5.5-4.5s5.5 2.136 5.5 4.5v4.539c0 .938.278 1.854.798 2.635l2.199 3.299a.017.017 0 01.003.01l-.001.006-.004.006-.006.004-.007.001H3.518l-.007-.001-.006-.004-.004-.006-.001-.007.003-.01 2.2-3.298a4.75 4.75 0 00.797-2.635V7zM14 19h-4a2 2 0 104 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBellIcon.defaultProps = {\n  className: 'octicon octicon-bell',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BellFillIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M8 16c.9 0 1.7-.6 1.9-1.5.1-.3-.1-.5-.4-.5h-3c-.3 0-.5.2-.4.5.2.9 1 1.5 1.9 1.5zM3 5c0-2.8 2.2-5 5-5s5 2.2 5 5v3l1.7 2.6c.2.2.3.5.3.8 0 .8-.7 1.5-1.5 1.5h-11c-.8.1-1.5-.6-1.5-1.4 0-.3.1-.6.3-.8L3 8.1V5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6 8a6 6 0 1112 0v2.917c0 .703.228 1.387.65 1.95L20.7 15.6a1.5 1.5 0 01-1.2 2.4h-15a1.5 1.5 0 01-1.2-2.4l2.05-2.733a3.25 3.25 0 00.65-1.95V8zm6 13.5A3.502 3.502 0 018.645 19h6.71A3.502 3.502 0 0112 21.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBellFillIcon.defaultProps = {\n  className: 'octicon octicon-bell-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BellSlashIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 1.5c-.997 0-1.895.416-2.534 1.086A.75.75 0 014.38 1.55 5 5 0 0113 5v2.373a.75.75 0 01-1.5 0V5A3.5 3.5 0 008 1.5zM4.182 4.31L1.19 2.143a.75.75 0 10-.88 1.214L3 5.305v2.642a.25.25 0 01-.042.139L1.255 10.64A1.518 1.518 0 002.518 13h11.108l1.184.857a.75.75 0 10.88-1.214l-1.375-.996a1.196 1.196 0 00-.013-.01L4.198 4.321a.733.733 0 00-.016-.011zm7.373 7.19L4.5 6.391v1.556c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01.015.015 0 00.005.012.017.017 0 00.006.004l.007.001h9.037zM8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.22 1.22a.75.75 0 011.06 0l20.5 20.5a.75.75 0 11-1.06 1.06L17.94 19H15.5a3.5 3.5 0 11-7 0H3.518a1.518 1.518 0 01-1.263-2.36l2.2-3.298A3.25 3.25 0 005 11.539V7c0-.294.025-.583.073-.866L1.22 2.28a.75.75 0 010-1.06zM10 19a2 2 0 104 0h-4zM6.5 7.56l9.94 9.94H3.517l-.007-.001-.006-.004-.004-.006-.001-.007.003-.01 2.2-3.298a4.75 4.75 0 00.797-2.635V7.56z\\\"></path><path d=\\\"M12 2.5c-1.463 0-2.8.485-3.788 1.257l-.04.032a.75.75 0 11-.935-1.173l.05-.04C8.548 1.59 10.212 1 12 1c3.681 0 7 2.565 7 6v4.539c0 .642.19 1.269.546 1.803l1.328 1.992a.75.75 0 11-1.248.832l-1.328-1.992a4.75 4.75 0 01-.798-2.635V7c0-2.364-2.383-4.5-5.5-4.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBellSlashIcon.defaultProps = {\n  className: 'octicon octicon-bell-slash',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BlockedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.467.22a.75.75 0 01.53-.22h6.006a.75.75 0 01.53.22l4.247 4.247c.141.14.22.331.22.53v6.006a.75.75 0 01-.22.53l-4.247 4.247a.75.75 0 01-.53.22H4.997a.75.75 0 01-.53-.22L.22 11.533a.75.75 0 01-.22-.53V4.997a.75.75 0 01.22-.53L4.467.22zm.84 1.28L1.5 5.308v5.384L5.308 14.5h5.384l3.808-3.808V5.308L10.692 1.5H5.308zM4 7.75A.75.75 0 014.75 7h6.5a.75.75 0 010 1.5h-6.5A.75.75 0 014 7.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.638 2.22a.75.75 0 01.53-.22h7.664a.75.75 0 01.53.22l5.418 5.418c.141.14.22.332.22.53v7.664a.75.75 0 01-.22.53l-5.418 5.418a.75.75 0 01-.53.22H8.168a.75.75 0 01-.53-.22l-5.42-5.418a.75.75 0 01-.219-.53V8.168a.75.75 0 01.22-.53l5.418-5.42zM8.48 3.5L3.5 8.48v7.04l4.98 4.98h7.04l4.98-4.98V8.48L15.52 3.5H8.48zM7 11.75a.75.75 0 01.75-.75h8.5a.75.75 0 010 1.5h-8.5a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBlockedIcon.defaultProps = {\n  className: 'octicon octicon-blocked',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BoldIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4 2a1 1 0 00-1 1v10a1 1 0 001 1h5.5a3.5 3.5 0 001.852-6.47A3.5 3.5 0 008.5 2H4zm4.5 5a1.5 1.5 0 100-3H5v3h3.5zM5 9v3h4.5a1.5 1.5 0 000-3H5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6 4.75c0-.69.56-1.25 1.25-1.25h5a4.75 4.75 0 013.888 7.479A5 5 0 0114 20.5H7.25c-.69 0-1.25-.56-1.25-1.25V4.75zM8.5 13v5H14a2.5 2.5 0 000-5H8.5zm0-2.5h3.751A2.25 2.25 0 0012.25 6H8.5v4.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBoldIcon.defaultProps = {\n  className: 'octicon octicon-bold',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BookIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 1.75A.75.75 0 01.75 1h4.253c1.227 0 2.317.59 3 1.501A3.744 3.744 0 0111.006 1h4.245a.75.75 0 01.75.75v10.5a.75.75 0 01-.75.75h-4.507a2.25 2.25 0 00-1.591.659l-.622.621a.75.75 0 01-1.06 0l-.622-.621A2.25 2.25 0 005.258 13H.75a.75.75 0 01-.75-.75V1.75zm8.755 3a2.25 2.25 0 012.25-2.25H14.5v9h-3.757c-.71 0-1.4.201-1.992.572l.004-7.322zm-1.504 7.324l.004-5.073-.002-2.253A2.25 2.25 0 005.003 2.5H1.5v9h3.757a3.75 3.75 0 011.994.574z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 3.75A.75.75 0 01.75 3h7.497c1.566 0 2.945.8 3.751 2.014A4.496 4.496 0 0115.75 3h7.5a.75.75 0 01.75.75v15.063a.75.75 0 01-.755.75l-7.682-.052a3 3 0 00-2.142.878l-.89.891a.75.75 0 01-1.061 0l-.902-.901a3 3 0 00-2.121-.879H.75a.75.75 0 01-.75-.75v-15zm11.247 3.747a3 3 0 00-3-2.997H1.5V18h6.947a4.5 4.5 0 012.803.98l-.003-11.483zm1.503 11.485V7.5a3 3 0 013-3h6.75v13.558l-6.927-.047a4.5 4.5 0 00-2.823.971z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBookIcon.defaultProps = {\n  className: 'octicon octicon-book',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BookmarkIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 2.5a.25.25 0 00-.25.25v9.91l3.023-2.489a.75.75 0 01.954 0l3.023 2.49V2.75a.25.25 0 00-.25-.25h-6.5zM3 2.75C3 1.784 3.784 1 4.75 1h6.5c.966 0 1.75.784 1.75 1.75v11.5a.75.75 0 01-1.227.579L8 11.722l-3.773 3.107A.75.75 0 013 14.25V2.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5 3.75C5 2.784 5.784 2 6.75 2h10.5c.966 0 1.75.784 1.75 1.75v17.5a.75.75 0 01-1.218.586L12 17.21l-5.781 4.625A.75.75 0 015 21.25V3.75zm1.75-.25a.25.25 0 00-.25.25v15.94l5.031-4.026a.75.75 0 01.938 0L17.5 19.69V3.75a.25.25 0 00-.25-.25H6.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBookmarkIcon.defaultProps = {\n  className: 'octicon octicon-bookmark',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BookmarkFillIcon(props) {\n  var svgDataByHeight = { \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.69 2a1.75 1.75 0 00-1.75 1.756L5 21.253a.75.75 0 001.219.583L12 17.21l5.782 4.625A.75.75 0 0019 21.25V3.75A1.75 1.75 0 0017.25 2H6.69z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBookmarkFillIcon.defaultProps = {\n  className: 'octicon octicon-bookmark-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BookmarkSlashIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.19 1.143a.75.75 0 10-.88 1.214L3 4.305v9.945a.75.75 0 001.206.596L8 11.944l3.794 2.902A.75.75 0 0013 14.25v-2.703l1.81 1.31a.75.75 0 10.88-1.214l-2.994-2.168a1.09 1.09 0 00-.014-.01L4.196 3.32a.712.712 0 00-.014-.01L1.19 1.143zM4.5 5.39v7.341l3.044-2.328a.75.75 0 01.912 0l3.044 2.328V10.46l-7-5.07zM5.865 1a.75.75 0 000 1.5h5.385a.25.25 0 01.25.25v3.624a.75.75 0 001.5 0V2.75A1.75 1.75 0 0011.25 1H5.865z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.565 2.018a.75.75 0 00-.88 1.214L5 6.357v14.902a.75.75 0 001.219.585L12 17.21l5.781 4.633A.75.75 0 0019 21.259v-4.764l3.435 2.487a.75.75 0 10.88-1.215L1.565 2.017zM17.5 15.408l-11-7.965v12.254l5.031-4.032a.75.75 0 01.938 0l5.031 4.032v-4.288z\\\"></path><path d=\\\"M7.25 2a.75.75 0 000 1.5h10a.25.25 0 01.25.25v6.5a.75.75 0 001.5 0v-6.5A1.75 1.75 0 0017.25 2h-10z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBookmarkSlashIcon.defaultProps = {\n  className: 'octicon octicon-bookmark-slash',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BookmarkSlashFillIcon(props) {\n  var svgDataByHeight = { \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.232 2.175a.75.75 0 10-.964 1.15l2.679 2.244L5 21.253a.75.75 0 001.219.583L12 17.21l5.782 4.625A.75.75 0 0019 21.25v-3.907l1.768 1.482a.75.75 0 10.964-1.15l-18.5-15.5zM7.422 2a.75.75 0 00-.482 1.325l10.828 9.073A.75.75 0 0019 11.823V3.75A1.75 1.75 0 0017.25 2H7.421h.001z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBookmarkSlashFillIcon.defaultProps = {\n  className: 'octicon octicon-bookmark-slash-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BriefcaseIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.75 0A1.75 1.75 0 005 1.75V3H1.75A1.75 1.75 0 000 4.75v8.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0016 13.25v-8.5A1.75 1.75 0 0014.25 3H11V1.75A1.75 1.75 0 009.25 0h-2.5zM9.5 3V1.75a.25.25 0 00-.25-.25h-2.5a.25.25 0 00-.25.25V3h3zM5 4.5H1.75a.25.25 0 00-.25.25V6a2 2 0 002 2h9a2 2 0 002-2V4.75a.25.25 0 00-.25-.25H5zm-1.5 5a3.484 3.484 0 01-2-.627v4.377c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25V8.873a3.484 3.484 0 01-2 .627h-9z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.5 1.75C7.5.784 8.284 0 9.25 0h5.5c.966 0 1.75.784 1.75 1.75V4h4.75c.966 0 1.75.784 1.75 1.75v14.5A1.75 1.75 0 0121.25 22H2.75A1.75 1.75 0 011 20.25V5.75C1 4.784 1.784 4 2.75 4H7.5V1.75zm-5 10.24v8.26c0 .138.112.25.25.25h18.5a.25.25 0 00.25-.25v-8.26A4.233 4.233 0 0118.75 13H5.25a4.233 4.233 0 01-2.75-1.01zm19-3.24a2.75 2.75 0 01-2.75 2.75H5.25A2.75 2.75 0 012.5 8.75v-3a.25.25 0 01.25-.25h18.5a.25.25 0 01.25.25v3zm-6.5-7V4H9V1.75a.25.25 0 01.25-.25h5.5a.25.25 0 01.25.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBriefcaseIcon.defaultProps = {\n  className: 'octicon octicon-briefcase',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BroadcastIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.267 1.457c.3.286.312.76.026 1.06A6.475 6.475 0 001.5 7a6.472 6.472 0 001.793 4.483.75.75 0 01-1.086 1.034 8.89 8.89 0 01-.276-.304l.569-.49-.569.49A7.971 7.971 0 010 7c0-2.139.84-4.083 2.207-5.517a.75.75 0 011.06-.026zm9.466 0a.75.75 0 011.06.026A7.975 7.975 0 0116 7c0 2.139-.84 4.083-2.207 5.517a.75.75 0 11-1.086-1.034A6.475 6.475 0 0014.5 7a6.475 6.475 0 00-1.793-4.483.75.75 0 01.026-1.06zM8.75 8.582a1.75 1.75 0 10-1.5 0v5.668a.75.75 0 001.5 0V8.582zM5.331 4.736a.75.75 0 10-1.143-.972A4.983 4.983 0 003 7c0 1.227.443 2.352 1.177 3.222a.75.75 0 001.146-.967A3.483 3.483 0 014.5 7c0-.864.312-1.654.831-2.264zm6.492-.958a.75.75 0 00-1.146.967c.514.61.823 1.395.823 2.255 0 .86-.31 1.646-.823 2.255a.75.75 0 101.146.967A4.983 4.983 0 0013 7a4.983 4.983 0 00-1.177-3.222z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M20.485 2.515a.75.75 0 00-1.06 1.06A10.465 10.465 0 0122.5 11c0 2.9-1.174 5.523-3.075 7.424a.75.75 0 001.06 1.061A11.965 11.965 0 0024 11c0-3.314-1.344-6.315-3.515-8.485zm-15.91 1.06a.75.75 0 00-1.06-1.06A11.965 11.965 0 000 11c0 3.313 1.344 6.314 3.515 8.485a.75.75 0 001.06-1.06A10.465 10.465 0 011.5 11c0-2.9 1.174-5.524 3.075-7.425zM8.11 7.11a.75.75 0 00-1.06-1.06A6.98 6.98 0 005 11a6.98 6.98 0 002.05 4.95.75.75 0 001.06-1.061 5.48 5.48 0 01-1.61-3.89 5.48 5.48 0 011.61-3.888zm8.84-1.06a.75.75 0 10-1.06 1.06A5.48 5.48 0 0117.5 11a5.48 5.48 0 01-1.61 3.889.75.75 0 101.06 1.06A6.98 6.98 0 0019 11a6.98 6.98 0 00-2.05-4.949zM14 11a2 2 0 01-1.25 1.855v8.395a.75.75 0 01-1.5 0v-8.395A2 2 0 1114 11z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBroadcastIcon.defaultProps = {\n  className: 'octicon octicon-broadcast',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BrowserIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 2.75C0 1.784.784 1 1.75 1h12.5c.966 0 1.75.784 1.75 1.75v10.5A1.75 1.75 0 0114.25 15H1.75A1.75 1.75 0 010 13.25V2.75zm1.75-.25a.25.25 0 00-.25.25V4.5h2v-2H1.75zM5 2.5v2h2v-2H5zm3.5 0v2h6V2.75a.25.25 0 00-.25-.25H8.5zm6 3.5h-13v7.25c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25V6z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 3.75C0 2.784.784 2 1.75 2h20.5c.966 0 1.75.784 1.75 1.75v16.5A1.75 1.75 0 0122.25 22H1.75A1.75 1.75 0 010 20.25V3.75zm1.75-.25a.25.25 0 00-.25.25V5.5h4v-2H1.75zM7 3.5v2h4v-2H7zm5.5 0v2h10V3.75a.25.25 0 00-.25-.25H12.5zm10 3.5h-21v13.25c0 .138.112.25.25.25h20.5a.25.25 0 00.25-.25V7z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBrowserIcon.defaultProps = {\n  className: 'octicon octicon-browser',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction BugIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.72.22a.75.75 0 011.06 0l1 .999a3.492 3.492 0 012.441 0l.999-1a.75.75 0 111.06 1.061l-.775.776c.616.63.995 1.493.995 2.444v.327c0 .1-.009.197-.025.292.408.14.764.392 1.029.722l1.968-.787a.75.75 0 01.556 1.392L13 7.258V9h2.25a.75.75 0 010 1.5H13v.5c0 .409-.049.806-.141 1.186l2.17.868a.75.75 0 01-.557 1.392l-2.184-.873A4.997 4.997 0 018 16a4.997 4.997 0 01-4.288-2.427l-2.183.873a.75.75 0 01-.558-1.392l2.17-.868A5.013 5.013 0 013 11v-.5H.75a.75.75 0 010-1.5H3V7.258L.971 6.446a.75.75 0 01.558-1.392l1.967.787c.265-.33.62-.583 1.03-.722a1.684 1.684 0 01-.026-.292V4.5c0-.951.38-1.814.995-2.444L4.72 1.28a.75.75 0 010-1.06zM6.173 5h3.654A.173.173 0 0010 4.827V4.5a2 2 0 10-4 0v.327c0 .096.077.173.173.173zM5.25 6.5a.75.75 0 00-.75.75V11a3.5 3.5 0 107 0V7.25a.75.75 0 00-.75-.75h-5.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.72.22a.75.75 0 011.06 0l1.204 1.203A4.983 4.983 0 0112 1c.717 0 1.4.151 2.016.423L15.22.22a.75.75 0 011.06 1.06l-.971.972A4.988 4.988 0 0117 6v1.104a2.755 2.755 0 011.917 1.974l1.998-.999a.75.75 0 01.67 1.342L19 10.714V13.5l3.25.003a.75.75 0 110 1.5L19 15.001V16a7.02 7.02 0 01-.204 1.686.833.833 0 01.04.018l2.75 1.375a.75.75 0 11-.671 1.342l-2.638-1.319A7 7 0 0112 23a7 7 0 01-6.197-3.742l-2.758 1.181a.75.75 0 11-.59-1.378l2.795-1.199A7.007 7.007 0 015 16v-.996H1.75a.75.75 0 010-1.5H5v-2.79L2.415 9.42a.75.75 0 01.67-1.342l1.998.999A2.755 2.755 0 017 7.104V6a4.99 4.99 0 011.69-3.748l-.97-.972a.75.75 0 010-1.06zM8.5 7h7V6a3.5 3.5 0 10-7 0v1zm-2 3.266V9.75c0-.69.56-1.25 1.25-1.25h8.5c.69 0 1.25.56 1.25 1.25V16a5.5 5.5 0 01-11 0v-5.734z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nBugIcon.defaultProps = {\n  className: 'octicon octicon-bug',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CacheIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 5.724c.241.15.503.286.779.407C4.525 6.68 6.195 7 8 7c1.805 0 3.475-.32 4.722-.869.622-.274 1.172-.62 1.578-1.04.408-.426.7-.965.7-1.591s-.292-1.165-.7-1.59c-.406-.422-.956-.767-1.579-1.041C11.476.32 9.806 0 8 0 6.195 0 4.525.32 3.279.869c-.623.274-1.173.62-1.579 1.04-.408.426-.7.965-.7 1.591v9c0 .626.292 1.165.7 1.59.406.422.956.767 1.579 1.041C4.525 15.68 6.195 16 8 16c.45 0 .89-.02 1.317-.058a.75.75 0 10-.134-1.494c-.381.034-.777.052-1.183.052-1.647 0-3.102-.295-4.117-.742-.51-.224-.874-.47-1.101-.707-.224-.233-.282-.418-.282-.551v-2.276c.164.102.334.196.507.28 1.102.543 2.582.89 4.204.975a.75.75 0 00.078-1.498c-1.476-.077-2.746-.392-3.62-.822C2.738 8.7 2.5 8.248 2.5 8V5.724zm0-2.224c0-.133.058-.318.282-.55.227-.237.592-.484 1.1-.708C4.899 1.795 6.354 1.5 8 1.5c1.647 0 3.102.295 4.117.742.51.224.874.47 1.101.707.224.233.282.418.282.551 0 .133-.058.318-.282.55-.227.237-.592.484-1.1.708C11.101 5.205 9.646 5.5 8 5.5c-1.647 0-3.102-.295-4.117-.742-.51-.224-.874-.47-1.101-.707-.224-.233-.282-.418-.282-.551z\\\"></path><path d=\\\"M14.49 7.582a.375.375 0 00-.66-.313l-3.625 4.625a.375.375 0 00.295.606h2.127l-.619 2.922a.375.375 0 00.666.304l3.125-4.125A.375.375 0 0015.5 11h-1.778l.769-3.418z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCacheIcon.defaultProps = {\n  className: 'octicon octicon-cache',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CalendarIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 0a.75.75 0 01.75.75V2h5V.75a.75.75 0 011.5 0V2h1.25c.966 0 1.75.784 1.75 1.75v10.5A1.75 1.75 0 0113.25 16H2.75A1.75 1.75 0 011 14.25V3.75C1 2.784 1.784 2 2.75 2H4V.75A.75.75 0 014.75 0zm0 3.5h8.5a.25.25 0 01.25.25V6h-11V3.75a.25.25 0 01.25-.25h2zm-2.25 4v6.75c0 .138.112.25.25.25h10.5a.25.25 0 00.25-.25V7.5h-11z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.75 0a.75.75 0 01.75.75V3h9V.75a.75.75 0 011.5 0V3h2.75c.966 0 1.75.784 1.75 1.75v16a1.75 1.75 0 01-1.75 1.75H3.25a1.75 1.75 0 01-1.75-1.75v-16C1.5 3.784 2.284 3 3.25 3H6V.75A.75.75 0 016.75 0zm-3.5 4.5a.25.25 0 00-.25.25V8h18V4.75a.25.25 0 00-.25-.25H3.25zM21 9.5H3v11.25c0 .138.112.25.25.25h17.5a.25.25 0 00.25-.25V9.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCalendarIcon.defaultProps = {\n  className: 'octicon octicon-calendar',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CheckIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M21.03 5.72a.75.75 0 010 1.06l-11.5 11.5a.75.75 0 01-1.072-.012l-5.5-5.75a.75.75 0 111.084-1.036l4.97 5.195L19.97 5.72a.75.75 0 011.06 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCheckIcon.defaultProps = {\n  className: 'octicon octicon-check',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CheckCircleIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM0 8a8 8 0 1116 0A8 8 0 010 8zm11.78-1.72a.75.75 0 00-1.06-1.06L6.75 9.19 5.28 7.72a.75.75 0 00-1.06 1.06l2 2a.75.75 0 001.06 0l4.5-4.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M17.28 9.28a.75.75 0 00-1.06-1.06l-5.97 5.97-2.47-2.47a.75.75 0 00-1.06 1.06l3 3a.75.75 0 001.06 0l6.5-6.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCheckCircleIcon.defaultProps = {\n  className: 'octicon octicon-check-circle',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CheckCircleFillIcon(props) {\n  var svgDataByHeight = { \"12\": { \"width\": 12, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6 0a6 6 0 100 12A6 6 0 006 0zm-.705 8.737L9.63 4.403 8.392 3.166 5.295 6.263l-1.7-1.702L2.356 5.8l2.938 2.938z\\\"></path>\" }, \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zm3.78-9.72a.75.75 0 00-1.06-1.06L6.75 9.19 5.28 7.72a.75.75 0 00-1.06 1.06l2 2a.75.75 0 001.06 0l4.5-4.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12zm16.28-2.72a.75.75 0 00-1.06-1.06l-5.97 5.97-2.47-2.47a.75.75 0 00-1.06 1.06l3 3a.75.75 0 001.06 0l6.5-6.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCheckCircleFillIcon.defaultProps = {\n  className: 'octicon octicon-check-circle-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CheckboxIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 2.75a.25.25 0 01.25-.25h10.5a.25.25 0 01.25.25v10.5a.25.25 0 01-.25.25H2.75a.25.25 0 01-.25-.25V2.75zM2.75 1A1.75 1.75 0 001 2.75v10.5c0 .966.784 1.75 1.75 1.75h10.5A1.75 1.75 0 0015 13.25V2.75A1.75 1.75 0 0013.25 1H2.75zm9.03 5.28a.75.75 0 00-1.06-1.06L6.75 9.19 5.28 7.72a.75.75 0 00-1.06 1.06l2 2a.75.75 0 001.06 0l4.5-4.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M17.28 9.28a.75.75 0 00-1.06-1.06l-5.97 5.97-2.47-2.47a.75.75 0 00-1.06 1.06l3 3a.75.75 0 001.06 0l6.5-6.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 2A1.75 1.75 0 002 3.75v16.5c0 .966.784 1.75 1.75 1.75h16.5A1.75 1.75 0 0022 20.25V3.75A1.75 1.75 0 0020.25 2H3.75zM3.5 3.75a.25.25 0 01.25-.25h16.5a.25.25 0 01.25.25v16.5a.25.25 0 01-.25.25H3.75a.25.25 0 01-.25-.25V3.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCheckboxIcon.defaultProps = {\n  className: 'octicon octicon-checkbox',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ChecklistIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 1.75a.25.25 0 01.25-.25h8.5a.25.25 0 01.25.25v7.736a.75.75 0 101.5 0V1.75A1.75 1.75 0 0011.25 0h-8.5A1.75 1.75 0 001 1.75v11.5c0 .966.784 1.75 1.75 1.75h3.17a.75.75 0 000-1.5H2.75a.25.25 0 01-.25-.25V1.75zM4.75 4a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zM4 7.75A.75.75 0 014.75 7h2a.75.75 0 010 1.5h-2A.75.75 0 014 7.75zm11.774 3.537a.75.75 0 00-1.048-1.074L10.7 14.145 9.281 12.72a.75.75 0 00-1.062 1.058l1.943 1.95a.75.75 0 001.055.008l4.557-4.45z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M3.5 3.75a.25.25 0 01.25-.25h13.5a.25.25 0 01.25.25v10a.75.75 0 001.5 0v-10A1.75 1.75 0 0017.25 2H3.75A1.75 1.75 0 002 3.75v16.5c0 .966.784 1.75 1.75 1.75h7a.75.75 0 000-1.5h-7a.25.25 0 01-.25-.25V3.75z\\\"></path><path d=\\\"M6.25 7a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm-.75 4.75a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75zm16.28 4.53a.75.75 0 10-1.06-1.06l-4.97 4.97-1.97-1.97a.75.75 0 10-1.06 1.06l2.5 2.5a.75.75 0 001.06 0l5.5-5.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nChecklistIcon.defaultProps = {\n  className: 'octicon octicon-checklist',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ChevronDownIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.78 6.22a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06 0L3.22 7.28a.75.75 0 011.06-1.06L8 9.94l3.72-3.72a.75.75 0 011.06 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.22 8.72a.75.75 0 000 1.06l6.25 6.25a.75.75 0 001.06 0l6.25-6.25a.75.75 0 00-1.06-1.06L12 14.44 6.28 8.72a.75.75 0 00-1.06 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nChevronDownIcon.defaultProps = {\n  className: 'octicon octicon-chevron-down',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ChevronLeftIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M9.78 12.78a.75.75 0 01-1.06 0L4.47 8.53a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L6.06 8l3.72 3.72a.75.75 0 010 1.06z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M15.28 5.22a.75.75 0 00-1.06 0l-6.25 6.25a.75.75 0 000 1.06l6.25 6.25a.75.75 0 101.06-1.06L9.56 12l5.72-5.72a.75.75 0 000-1.06z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nChevronLeftIcon.defaultProps = {\n  className: 'octicon octicon-chevron-left',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ChevronRightIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.72 18.78a.75.75 0 001.06 0l6.25-6.25a.75.75 0 000-1.06L9.78 5.22a.75.75 0 00-1.06 1.06L14.44 12l-5.72 5.72a.75.75 0 000 1.06z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nChevronRightIcon.defaultProps = {\n  className: 'octicon octicon-chevron-right',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ChevronUpIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.22 9.78a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 0l4.25 4.25a.75.75 0 01-1.06 1.06L8 6.06 4.28 9.78a.75.75 0 01-1.06 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M18.78 15.28a.75.75 0 000-1.06l-6.25-6.25a.75.75 0 00-1.06 0l-6.25 6.25a.75.75 0 101.06 1.06L12 9.56l5.72 5.72a.75.75 0 001.06 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nChevronUpIcon.defaultProps = {\n  className: 'octicon octicon-chevron-up',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CircleIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCircleIcon.defaultProps = {\n  className: 'octicon octicon-circle',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CircleSlashIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 8a6.5 6.5 0 0110.535-5.096l-9.131 9.131A6.472 6.472 0 011.5 8zm2.465 5.096a6.5 6.5 0 009.131-9.131l-9.131 9.131zM8 0a8 8 0 100 16A8 8 0 008 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12A9.5 9.5 0 0112 2.5c2.353 0 4.507.856 6.166 2.273L4.773 18.166A9.462 9.462 0 012.5 12zm3.334 7.227A9.462 9.462 0 0012 21.5a9.5 9.5 0 009.5-9.5 9.462 9.462 0 00-2.273-6.166L5.834 19.227z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCircleSlashIcon.defaultProps = {\n  className: 'octicon octicon-circle-slash',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ClockIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zm.5 4.75a.75.75 0 00-1.5 0v3.5a.75.75 0 00.471.696l2.5 1a.75.75 0 00.557-1.392L8.5 7.742V4.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M12.5 7.25a.75.75 0 00-1.5 0v5.5c0 .27.144.518.378.651l3.5 2a.75.75 0 00.744-1.302L12.5 12.315V7.25z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nClockIcon.defaultProps = {\n  className: 'octicon octicon-clock',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CloudIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 7.25A5.225 5.225 0 017.25 2a5.222 5.222 0 014.767 3.029A4.472 4.472 0 0116 9.5c0 2.505-1.995 4.5-4.5 4.5h-8A3.475 3.475 0 010 10.5c0-1.41.809-2.614 2.001-3.17L2 7.25zm1.54.482a.75.75 0 01-.556.832c-.86.22-1.484.987-1.484 1.936 0 1.124.876 2 2 2h8c1.676 0 3-1.324 3-3s-1.324-3-3-3a.75.75 0 01-.709-.504A3.72 3.72 0 007.25 3.5C5.16 3.5 3.5 5.16 3.5 7.25a3.276 3.276 0 00.035.436l.004.036.001.008v.002z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.103 10.107c0-4.244 3.445-7.607 7.733-7.607 3.19 0 5.912 1.858 7.099 4.563a.634.634 0 01.01.022l.001.006C21.348 7.345 24 10.095 24 13.536 24 17.148 21.076 20 17.431 20H5.017C2.23 20 0 17.83 0 15.06a4.9 4.9 0 013.112-4.581 8.024 8.024 0 01-.009-.372zM10.836 4c-3.485 0-6.233 2.717-6.233 6.107 0 .284.022.602.052.756a.75.75 0 01-.552.869c-1.52.385-2.603 1.712-2.603 3.328 0 1.917 1.532 3.44 3.517 3.44h12.414c2.843 0 5.069-2.206 5.069-4.964 0-2.759-2.226-4.965-5.069-4.965a.75.75 0 01-.696-.47l-.179-.446C15.606 5.5 13.424 4 10.836 4z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCloudIcon.defaultProps = {\n  className: 'octicon octicon-cloud',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CloudOfflineIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M7.25 2c-.69 0-1.351.13-1.957.371a.75.75 0 10.554 1.394c.43-.17.903-.265 1.403-.265a3.72 3.72 0 013.541 2.496.75.75 0 00.709.504c1.676 0 3 1.324 3 3a3 3 0 01-.681 1.92.75.75 0 001.156.955A4.496 4.496 0 0016 9.5a4.472 4.472 0 00-3.983-4.471A5.222 5.222 0 007.25 2z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M.72 1.72a.75.75 0 011.06 0l2.311 2.31c.03.025.056.052.08.08l8.531 8.532a.785.785 0 01.035.034l2.043 2.044a.75.75 0 11-1.06 1.06l-1.8-1.799a4.64 4.64 0 01-.42.019h-8A3.475 3.475 0 010 10.5c0-1.41.809-2.614 2.001-3.17a5.218 5.218 0 01.646-2.622L.72 2.78a.75.75 0 010-1.06zM3.5 7.25c0-.505.096-.983.271-1.418L10.44 12.5H3.5c-1.124 0-2-.876-2-2 0-.95.624-1.716 1.484-1.936a.75.75 0 00.557-.833A4.1 4.1 0 013.5 7.25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.78 2.22a.75.75 0 00-1.06 1.06l2.64 2.642a7.525 7.525 0 00-1.249 4.557A4.9 4.9 0 000 15.059C0 17.831 2.229 20 5.017 20h12.414a6.879 6.879 0 00.944-.065l2.845 2.845a.75.75 0 101.06-1.06L2.78 2.22zM16.94 18.5L5.448 7.01a6.03 6.03 0 00-.794 3.853.75.75 0 01-.552.869c-1.52.385-2.603 1.712-2.603 3.328 0 1.917 1.532 3.44 3.517 3.44H16.94z\\\"></path><path d=\\\"M10.836 2.5a7.865 7.865 0 00-3.638.88.75.75 0 10.692 1.331A6.365 6.365 0 0110.836 4c2.588 0 4.77 1.5 5.72 3.655l.179.445a.75.75 0 00.696.471c2.843 0 5.069 2.206 5.069 4.965a4.9 4.9 0 01-1.684 3.716.75.75 0 00.986 1.13A6.396 6.396 0 0024 13.536c0-3.44-2.652-6.191-6.054-6.445l-.002-.006a.634.634 0 00-.01-.022C16.749 4.358 14.026 2.5 10.837 2.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCloudOfflineIcon.defaultProps = {\n  className: 'octicon octicon-cloud-offline',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CodeIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.72 3.22a.75.75 0 011.06 1.06L2.06 8l3.72 3.72a.75.75 0 11-1.06 1.06L.47 8.53a.75.75 0 010-1.06l4.25-4.25zm6.56 0a.75.75 0 10-1.06 1.06L13.94 8l-3.72 3.72a.75.75 0 101.06 1.06l4.25-4.25a.75.75 0 000-1.06l-4.25-4.25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.78 4.97a.75.75 0 010 1.06L2.81 12l5.97 5.97a.75.75 0 11-1.06 1.06l-6.5-6.5a.75.75 0 010-1.06l6.5-6.5a.75.75 0 011.06 0zm6.44 0a.75.75 0 000 1.06L21.19 12l-5.97 5.97a.75.75 0 101.06 1.06l6.5-6.5a.75.75 0 000-1.06l-6.5-6.5a.75.75 0 00-1.06 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCodeIcon.defaultProps = {\n  className: 'octicon octicon-code',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CodeOfConductIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.048 2.241c.964-.709 2.079-1.238 3.325-1.241a4.613 4.613 0 013.282 1.355c.41.408.757.86.996 1.428.238.568.348 1.206.347 1.968 0 2.193-1.505 4.254-3.081 5.862-1.496 1.526-3.213 2.796-4.249 3.563l-.22.163a.75.75 0 01-.895 0l-.221-.163c-1.036-.767-2.753-2.037-4.249-3.563C1.51 10.008.007 7.952.002 5.762a4.614 4.614 0 011.353-3.407C3.123.585 6.223.537 8.048 2.24zm-1.153.983c-.81.78-1.546 1.669-2.166 2.417-.184.222-.358.432-.52.623a.75.75 0 00.04 1.016c.35.35.697.697 1.043 1.047.866.875 2.292.914 3.185.032.264-.26.534-.528.802-.797.694-.694 1.8-.701 2.474-.03L12.92 8.7l.283.284c-.244.334-.515.666-.81.995l-1.384-1.28A.75.75 0 109.99 9.802l1.357 1.252c-.325.31-.656.606-.984.887l-1.48-1.366a.75.75 0 10-1.018 1.102L9.191 12.9c-.433.34-.838.643-1.191.905-1.04-.773-2.537-1.907-3.846-3.242C2.611 8.99 1.502 7.306 1.502 5.75a3.114 3.114 0 01.913-2.335c1.159-1.158 3.23-1.224 4.48-.191zm7.112 4.442c.313-.65.491-1.293.491-1.916v-.001c0-.614-.088-1.045-.23-1.385-.143-.339-.357-.633-.673-.949a3.113 3.113 0 00-2.218-.915c-1.092.003-2.165.627-3.226 1.602-.823.755-1.554 1.637-2.228 2.45l-.127.154.562.566a.756.756 0 001.066.02l.794-.79c1.258-1.258 3.312-1.31 4.594-.032.396.394.792.791 1.173 1.173l.022.023z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.828 4.328C5.26 1.896 9.5 1.881 11.935 4.317c.024.024.046.05.067.076 1.391-1.078 2.993-1.886 4.777-1.89a6.216 6.216 0 014.424 1.825c.559.56 1.023 1.165 1.34 1.922.318.756.47 1.617.468 2.663 0 2.972-2.047 5.808-4.269 8.074-2.098 2.14-4.507 3.924-5.974 5.009l-.311.23a.752.752 0 01-.897 0l-.312-.23c-1.466-1.085-3.875-2.869-5.973-5.009-2.22-2.263-4.264-5.095-4.27-8.063v.012-.024.012a6.217 6.217 0 011.823-4.596zm8.033 1.042c-1.846-1.834-5.124-1.823-6.969.022a4.713 4.713 0 00-1.382 3.52c0 2.332 1.65 4.79 3.839 7.022 1.947 1.986 4.184 3.66 5.66 4.752a79.983 79.983 0 002.159-1.645l-2.14-1.974a.752.752 0 011.02-1.106l2.295 2.118c.616-.52 1.242-1.08 1.85-1.672l-2.16-1.992a.752.752 0 011.021-1.106l2.188 2.02a18.992 18.992 0 001.528-1.877l-.585-.586-1.651-1.652c-1.078-1.074-2.837-1.055-3.935.043-.379.38-.76.758-1.132 1.126-1.14 1.124-2.96 1.077-4.07-.043-.489-.495-.98-.988-1.475-1.482a.752.752 0 01-.04-1.019c.234-.276.483-.576.745-.893.928-1.12 2.023-2.442 3.234-3.576zm9.725 6.77c.579-1.08.92-2.167.92-3.228.002-.899-.128-1.552-.35-2.08-.22-.526-.551-.974-1.017-1.44a4.71 4.71 0 00-3.356-1.384c-1.66.004-3.25.951-4.77 2.346-1.18 1.084-2.233 2.353-3.188 3.506l-.351.423c.331.332.663.664.993.998a1.375 1.375 0 001.943.03c.37-.365.748-.74 1.125-1.118 1.662-1.663 4.373-1.726 6.06-.045.56.558 1.12 1.12 1.658 1.658l.333.334z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCodeOfConductIcon.defaultProps = {\n  className: 'octicon octicon-code-of-conduct',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CodeReviewIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 2.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v8.5a.25.25 0 01-.25.25h-6.5a.75.75 0 00-.53.22L4.5 14.44v-2.19a.75.75 0 00-.75-.75h-2a.25.25 0 01-.25-.25v-8.5zM1.75 1A1.75 1.75 0 000 2.75v8.5C0 12.216.784 13 1.75 13H3v1.543a1.457 1.457 0 002.487 1.03L8.061 13h6.189A1.75 1.75 0 0016 11.25v-8.5A1.75 1.75 0 0014.25 1H1.75zm5.03 3.47a.75.75 0 010 1.06L5.31 7l1.47 1.47a.75.75 0 01-1.06 1.06l-2-2a.75.75 0 010-1.06l2-2a.75.75 0 011.06 0zm2.44 0a.75.75 0 000 1.06L10.69 7 9.22 8.47a.75.75 0 001.06 1.06l2-2a.75.75 0 000-1.06l-2-2a.75.75 0 00-1.06 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M10.3 6.74a.75.75 0 01-.04 1.06l-2.908 2.7 2.908 2.7a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 011.06.04zm3.44 1.06a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.908-2.7-2.908-2.7z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 4.25c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v12.5a1.75 1.75 0 01-1.75 1.75h-9.69l-3.573 3.573A1.457 1.457 0 015 21.043V18.5H3.25a1.75 1.75 0 01-1.75-1.75V4.25zM3.25 4a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h2.5a.75.75 0 01.75.75v3.19l3.72-3.72a.75.75 0 01.53-.22h10a.25.25 0 00.25-.25V4.25a.25.25 0 00-.25-.25H3.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCodeReviewIcon.defaultProps = {\n  className: 'octicon octicon-code-review',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CodeSquareIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 1.5a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25V1.75a.25.25 0 00-.25-.25H1.75zM0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0114.25 16H1.75A1.75 1.75 0 010 14.25V1.75zm9.22 3.72a.75.75 0 000 1.06L10.69 8 9.22 9.47a.75.75 0 101.06 1.06l2-2a.75.75 0 000-1.06l-2-2a.75.75 0 00-1.06 0zM6.78 6.53a.75.75 0 00-1.06-1.06l-2 2a.75.75 0 000 1.06l2 2a.75.75 0 101.06-1.06L5.31 8l1.47-1.47z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M10.3 8.24a.75.75 0 01-.04 1.06L7.352 12l2.908 2.7a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 011.06.04zm3.44 1.06a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.908-2.7-2.908-2.7z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M2 3.75C2 2.784 2.784 2 3.75 2h16.5c.966 0 1.75.784 1.75 1.75v16.5A1.75 1.75 0 0120.25 22H3.75A1.75 1.75 0 012 20.25V3.75zm1.75-.25a.25.25 0 00-.25.25v16.5c0 .138.112.25.25.25h16.5a.25.25 0 00.25-.25V3.75a.25.25 0 00-.25-.25H3.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCodeSquareIcon.defaultProps = {\n  className: 'octicon octicon-code-square',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CodescanIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M8.47 4.97a.75.75 0 000 1.06L9.94 7.5 8.47 8.97a.75.75 0 101.06 1.06l2-2a.75.75 0 000-1.06l-2-2a.75.75 0 00-1.06 0zM6.53 6.03a.75.75 0 00-1.06-1.06l-2 2a.75.75 0 000 1.06l2 2a.75.75 0 101.06-1.06L5.06 7.5l1.47-1.47z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12.246 13.307a7.5 7.5 0 111.06-1.06l2.474 2.473a.75.75 0 11-1.06 1.06l-2.474-2.473zM1.5 7.5a6 6 0 1110.386 4.094.75.75 0 00-.292.293A6 6 0 011.5 7.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M11.97 6.97a.75.75 0 000 1.06l2.47 2.47-2.47 2.47a.75.75 0 101.06 1.06l3-3a.75.75 0 000-1.06l-3-3a.75.75 0 00-1.06 0zM9.03 8.03a.75.75 0 00-1.06-1.06l-3 3a.75.75 0 000 1.06l3 3a.75.75 0 001.06-1.06L6.56 10.5l2.47-2.47z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M10.5 0C4.701 0 0 4.701 0 10.5S4.701 21 10.5 21c2.63 0 5.033-.967 6.875-2.564l4.345 4.344a.75.75 0 101.06-1.06l-4.344-4.345A10.459 10.459 0 0021 10.5C21 4.701 16.299 0 10.5 0zm-9 10.5a9 9 0 1118 0 9 9 0 01-18 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCodescanIcon.defaultProps = {\n  className: 'octicon octicon-codescan',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CodescanCheckmarkIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M10.28 6.28a.75.75 0 10-1.06-1.06L6.25 8.19l-.97-.97a.75.75 0 00-1.06 1.06l1.5 1.5a.75.75 0 001.06 0l3.5-3.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M7.5 15a7.469 7.469 0 004.746-1.693l2.474 2.473a.75.75 0 101.06-1.06l-2.473-2.474A7.5 7.5 0 107.5 15zm0-13.5a6 6 0 104.094 10.386.75.75 0 01.293-.292A6 6 0 007.5 1.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M15.03 8.28a.75.75 0 00-1.06-1.06l-5.22 5.22-2.22-2.22a.75.75 0 10-1.06 1.06l2.75 2.75a.75.75 0 001.06 0l5.75-5.75z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M0 10.5C0 4.701 4.701 0 10.5 0S21 4.701 21 10.5c0 2.63-.967 5.033-2.564 6.875l4.344 4.345a.75.75 0 11-1.06 1.06l-4.345-4.344A10.459 10.459 0 0110.5 21C4.701 21 0 16.299 0 10.5zm10.5-9a9 9 0 100 18 9 9 0 000-18z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCodescanCheckmarkIcon.defaultProps = {\n  className: 'octicon octicon-codescan-checkmark',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CodespacesIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 1.75C2 .784 2.784 0 3.75 0h8.5C13.216 0 14 .784 14 1.75v5a1.75 1.75 0 01-1.75 1.75h-8.5A1.75 1.75 0 012 6.75v-5zm1.75-.25a.25.25 0 00-.25.25v5c0 .138.112.25.25.25h8.5a.25.25 0 00.25-.25v-5a.25.25 0 00-.25-.25h-8.5zM0 11.25c0-.966.784-1.75 1.75-1.75h12.5c.966 0 1.75.784 1.75 1.75v3A1.75 1.75 0 0114.25 16H1.75A1.75 1.75 0 010 14.25v-3zM1.75 11a.25.25 0 00-.25.25v3c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-3a.25.25 0 00-.25-.25H1.75z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M3 12.75a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75zm4 0a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.5 3.75C3.5 2.784 4.284 2 5.25 2h13.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0118.75 13H5.25a1.75 1.75 0 01-1.75-1.75v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h13.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H5.25zM1.5 15.75c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v4a1.75 1.75 0 01-1.75 1.75H3.25a1.75 1.75 0 01-1.75-1.75v-4zm1.75-.25a.25.25 0 00-.25.25v4c0 .138.112.25.25.25h17.5a.25.25 0 00.25-.25v-4a.25.25 0 00-.25-.25H3.25z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M10 17.75a.75.75 0 01.75-.75h6.5a.75.75 0 010 1.5h-6.5a.75.75 0 01-.75-.75zm-4 0a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCodespacesIcon.defaultProps = {\n  className: 'octicon octicon-codespaces',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ColumnsIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.75 0A1.75 1.75 0 001 1.75v12.5c0 .966.784 1.75 1.75 1.75h2.5A1.75 1.75 0 007 14.25V1.75A1.75 1.75 0 005.25 0h-2.5zM2.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25h-2.5a.25.25 0 01-.25-.25V1.75zM10.75 0A1.75 1.75 0 009 1.75v12.5c0 .966.784 1.75 1.75 1.75h2.5A1.75 1.75 0 0015 14.25V1.75A1.75 1.75 0 0013.25 0h-2.5zm-.25 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25h-2.5a.25.25 0 01-.25-.25V1.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 2A1.75 1.75 0 002 3.75v16.5c0 .966.784 1.75 1.75 1.75h5.5A1.75 1.75 0 0011 20.25V3.75A1.75 1.75 0 009.25 2h-5.5zM3.5 3.75a.25.25 0 01.25-.25h5.5a.25.25 0 01.25.25v16.5a.25.25 0 01-.25.25h-5.5a.25.25 0 01-.25-.25V3.75zM14.75 2A1.75 1.75 0 0013 3.75v16.5c0 .966.784 1.75 1.75 1.75h5.5A1.75 1.75 0 0022 20.25V3.75A1.75 1.75 0 0020.25 2h-5.5zm-.25 1.75a.25.25 0 01.25-.25h5.5a.25.25 0 01.25.25v16.5a.25.25 0 01-.25.25h-5.5a.25.25 0 01-.25-.25V3.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nColumnsIcon.defaultProps = {\n  className: 'octicon octicon-columns',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CommandPaletteIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M6.354 8.04l-4.773 4.773a.75.75 0 101.061 1.06L7.945 8.57a.75.75 0 000-1.06L2.642 2.206a.75.75 0 00-1.06 1.061L6.353 8.04zM8.75 11.5a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M3.045 18.894L9.94 12 3.045 5.106a.75.75 0 011.06-1.061l7.425 7.425a.75.75 0 010 1.06l-7.424 7.425a.75.75 0 01-1.061-1.06zm8.205.606a.75.75 0 000 1.5h9.5a.75.75 0 000-1.5h-9.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCommandPaletteIcon.defaultProps = {\n  className: 'octicon octicon-command-palette',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CommentIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.75 2.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H2.75zM1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0113.25 12H9.06l-2.573 2.573A1.457 1.457 0 014 13.543V12H2.75A1.75 1.75 0 011 10.25v-7.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.25 4a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h2.5a.75.75 0 01.75.75v3.19l3.72-3.72a.75.75 0 01.53-.22h10a.25.25 0 00.25-.25V4.25a.25.25 0 00-.25-.25H3.25zm-1.75.25c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v12.5a1.75 1.75 0 01-1.75 1.75h-9.69l-3.573 3.573A1.457 1.457 0 015 21.043V18.5H3.25a1.75 1.75 0 01-1.75-1.75V4.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCommentIcon.defaultProps = {\n  className: 'octicon octicon-comment',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CommentDiscussionIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 2.75a.25.25 0 01.25-.25h8.5a.25.25 0 01.25.25v5.5a.25.25 0 01-.25.25h-3.5a.75.75 0 00-.53.22L3.5 11.44V9.25a.75.75 0 00-.75-.75h-1a.25.25 0 01-.25-.25v-5.5zM1.75 1A1.75 1.75 0 000 2.75v5.5C0 9.216.784 10 1.75 10H2v1.543a1.457 1.457 0 002.487 1.03L7.061 10h3.189A1.75 1.75 0 0012 8.25v-5.5A1.75 1.75 0 0010.25 1h-8.5zM14.5 4.75a.25.25 0 00-.25-.25h-.5a.75.75 0 110-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0114.25 12H14v1.543a1.457 1.457 0 01-2.487 1.03L9.22 12.28a.75.75 0 111.06-1.06l2.22 2.22v-2.19a.75.75 0 01.75-.75h1a.25.25 0 00.25-.25v-5.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 1A1.75 1.75 0 000 2.75v9.5C0 13.216.784 14 1.75 14H3v1.543a1.457 1.457 0 002.487 1.03L8.061 14h6.189A1.75 1.75 0 0016 12.25v-9.5A1.75 1.75 0 0014.25 1H1.75zM1.5 2.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v9.5a.25.25 0 01-.25.25h-6.5a.75.75 0 00-.53.22L4.5 15.44v-2.19a.75.75 0 00-.75-.75h-2a.25.25 0 01-.25-.25v-9.5z\\\"></path><path d=\\\"M22.5 8.75a.25.25 0 00-.25-.25h-3.5a.75.75 0 010-1.5h3.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0122.25 20H21v1.543a1.457 1.457 0 01-2.487 1.03L15.939 20H10.75A1.75 1.75 0 019 18.25v-1.465a.75.75 0 011.5 0v1.465c0 .138.112.25.25.25h5.5a.75.75 0 01.53.22l2.72 2.72v-2.19a.75.75 0 01.75-.75h2a.25.25 0 00.25-.25v-9.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCommentDiscussionIcon.defaultProps = {\n  className: 'octicon octicon-comment-discussion',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CommitIcon(props) {\n  var svgDataByHeight = { \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M17.5 11.75a.75.75 0 01.75-.75h5a.75.75 0 010 1.5h-5a.75.75 0 01-.75-.75zm-17.5 0A.75.75 0 01.75 11h5a.75.75 0 010 1.5h-5a.75.75 0 01-.75-.75z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 16.25a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0 1.5a6 6 0 100-12 6 6 0 000 12z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCommitIcon.defaultProps = {\n  className: 'octicon octicon-commit',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ContainerIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.41.24l4.711 2.774A1.767 1.767 0 0116 4.54v5.01a1.77 1.77 0 01-.88 1.53l-7.753 4.521-.002.001a1.767 1.767 0 01-1.774 0H5.59L.873 12.85A1.762 1.762 0 010 11.327V6.292c0-.304.078-.598.22-.855l.004-.005.01-.019c.15-.262.369-.486.64-.643L8.641.239a1.75 1.75 0 011.765 0l.002.001zM9.397 1.534a.25.25 0 01.252 0l4.115 2.422-7.152 4.148a.267.267 0 01-.269 0L2.227 5.716l7.17-4.182zM7.365 9.402L8.73 8.61v4.46l-1.5.875V9.473a1.77 1.77 0 00.136-.071zm2.864 2.794V7.741l1.521-.882v4.45l-1.521.887zm3.021-1.762l1.115-.65h.002a.268.268 0 00.133-.232V5.264l-1.25.725v4.445zm-11.621 1.12l4.1 2.393V9.474a1.77 1.77 0 01-.138-.072L1.5 7.029v4.298c0 .095.05.181.129.227z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M13.152.682a2.25 2.25 0 012.269 0l.007.004 6.957 4.276a2.276 2.276 0 011.126 1.964v7.516c0 .81-.432 1.56-1.133 1.968l-.002.001-11.964 7.037-.004.003a2.276 2.276 0 01-2.284 0l-.026-.015-6.503-4.502a2.268 2.268 0 01-1.096-1.943V9.438c0-.392.1-.77.284-1.1l.003-.006.014-.026a2.28 2.28 0 01.82-.827h.002L13.152.681zm.757 1.295h-.001L2.648 8.616l6.248 4.247a.776.776 0 00.758-.01h.001l11.633-6.804-6.629-4.074a.75.75 0 00-.75.003zM18 9.709l-3.25 1.9v7.548L18 17.245V9.709zm1.5-.878v7.532l2.124-1.25a.777.777 0 00.387-.671V7.363L19.5 8.831zm-9.09 5.316l2.84-1.66v7.552l-3.233 1.902v-7.612c.134-.047.265-.107.391-.18l.002-.002zm-1.893 7.754V14.33a2.277 2.277 0 01-.393-.18l-.023-.014-6.102-4.147v7.003c0 .275.145.528.379.664l.025.014 6.114 4.232z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nContainerIcon.defaultProps = {\n  className: 'octicon octicon-container',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CopilotIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M6.25 9a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 016.25 9zm4.25.75a.75.75 0 00-1.5 0v1.5a.75.75 0 001.5 0v-1.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M7.86 1.77c.05.053.097.107.14.164.043-.057.09-.111.14-.164.681-.731 1.737-.9 2.943-.765 1.23.136 2.145.527 2.724 1.26.566.716.693 1.614.693 2.485 0 .572-.053 1.147-.254 1.655l.168.838.066.033A2.75 2.75 0 0116 9.736V11c0 .24-.086.438-.156.567a2.173 2.173 0 01-.259.366c-.18.21-.404.413-.605.58a10.373 10.373 0 01-.792.597l-.015.01-.006.004-.028.018a8.832 8.832 0 01-.456.281c-.307.177-.749.41-1.296.642C11.296 14.528 9.756 15 8 15c-1.756 0-3.296-.472-4.387-.935a12.06 12.06 0 01-1.296-.641 8.815 8.815 0 01-.456-.281l-.028-.02-.006-.003-.015-.01a7.077 7.077 0 01-.235-.166c-.15-.108-.352-.26-.557-.43a5.19 5.19 0 01-.605-.58 2.167 2.167 0 01-.259-.367A1.19 1.19 0 010 11V9.736a2.75 2.75 0 011.52-2.46l.067-.033.167-.838C1.553 5.897 1.5 5.322 1.5 4.75c0-.87.127-1.77.693-2.485.579-.733 1.494-1.124 2.724-1.26 1.206-.134 2.262.034 2.944.765zM3.024 7.709L3 7.824v4.261c.02.013.043.025.065.038.264.152.65.356 1.134.562.972.412 2.307.815 3.801.815 1.494 0 2.83-.403 3.8-.815a10.6 10.6 0 001.2-.6v-4.26l-.023-.116c-.49.21-1.075.291-1.727.291-1.146 0-2.06-.328-2.71-.991A3.223 3.223 0 018 6.266c-.144.269-.321.52-.54.743C6.81 7.672 5.896 8 4.75 8c-.652 0-1.237-.082-1.727-.291zm3.741-4.916c-.193-.207-.637-.414-1.681-.298-1.02.114-1.48.404-1.713.7-.247.313-.37.79-.37 1.555 0 .792.129 1.17.308 1.37.162.181.52.38 1.442.38.854 0 1.339-.236 1.638-.54.315-.323.527-.827.618-1.553.117-.936-.038-1.396-.242-1.614zm2.472 0c.193-.207.637-.414 1.681-.298 1.02.114 1.48.404 1.713.7.247.313.37.79.37 1.555 0 .792-.129 1.17-.308 1.37-.162.181-.52.38-1.442.38-.854 0-1.339-.236-1.638-.54-.315-.323-.527-.827-.618-1.553-.117-.936.038-1.396.242-1.614z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M9.75 14a.75.75 0 01.75.75v2.5a.75.75 0 01-1.5 0v-2.5a.75.75 0 01.75-.75zm4.5 0a.75.75 0 01.75.75v2.5a.75.75 0 01-1.5 0v-2.5a.75.75 0 01.75-.75z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 2c-2.214 0-4.248.657-5.747 1.756a7.43 7.43 0 00-.397.312c-.584.235-1.077.546-1.474.952-.85.87-1.132 2.037-1.132 3.368 0 .368.014.733.052 1.086l-.633 1.478-.043.022A4.75 4.75 0 000 15.222v1.028c0 .529.31.987.564 1.293.28.336.637.653.967.918a13.262 13.262 0 001.299.911l.024.015.006.004.04.025.144.087c.124.073.304.177.535.3.46.245 1.122.57 1.942.894C7.155 21.344 9.439 22 12 22s4.845-.656 6.48-1.303c.819-.324 1.481-.65 1.941-.895a13.797 13.797 0 00.68-.386l.039-.025.006-.004.024-.015a8.829 8.829 0 00.387-.248c.245-.164.577-.396.912-.663.33-.265.686-.582.966-.918.256-.306.565-.764.565-1.293v-1.028a4.75 4.75 0 00-2.626-4.248l-.043-.022-.633-1.478c.038-.353.052-.718.052-1.086 0-1.331-.282-2.499-1.132-3.368-.397-.406-.89-.717-1.474-.952a7.386 7.386 0 00-.397-.312C16.248 2.657 14.214 2 12 2zm-8 9.654l.038-.09c.046.06.094.12.145.177.793.9 2.057 1.259 3.782 1.259 1.59 0 2.739-.544 3.508-1.492.131-.161.249-.331.355-.508a32.948 32.948 0 00.344 0c.106.177.224.347.355.508.77.948 1.918 1.492 3.508 1.492 1.725 0 2.989-.359 3.782-1.259.05-.057.099-.116.145-.177l.038.09v6.669a17.618 17.618 0 01-2.073.98C16.405 19.906 14.314 20.5 12 20.5c-2.314 0-4.405-.594-5.927-1.197A17.62 17.62 0 014 18.323v-6.67zm6.309-1.092a2.35 2.35 0 01-.38.374c-.437.341-1.054.564-1.964.564-1.573 0-2.292-.337-2.657-.75-.192-.218-.331-.506-.423-.89-.091-.385-.135-.867-.135-1.472 0-1.14.243-1.847.705-2.32.477-.487 1.319-.861 2.824-1.024 1.487-.16 2.192.138 2.533.529l.008.01c.264.308.429.806.43 1.568v.031a7.203 7.203 0 01-.09 1.079c-.143.967-.406 1.754-.851 2.301zm2.504-2.497a7.174 7.174 0 01-.063-.894v-.02c.001-.77.17-1.27.438-1.578.341-.39 1.046-.69 2.533-.529 1.506.163 2.347.537 2.824 1.025.462.472.705 1.179.705 2.319 0 1.21-.174 1.926-.558 2.361-.365.414-1.084.751-2.657.751-1.21 0-1.902-.393-2.344-.938-.475-.584-.742-1.44-.878-2.497z\\\"></path>\" }, \"48\": { \"width\": 48, \"path\": \"<path d=\\\"M21 29.5a1.5 1.5 0 00-3 0v4a1.5 1.5 0 003 0v-4zm9 0a1.5 1.5 0 00-3 0v4a1.5 1.5 0 003 0v-4z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M34.895 8.939c1.89.602 3.378 1.472 4.41 2.73 1.397 1.703 1.736 3.837 1.55 6.19l.016.032 1.684 3.79.964.193a3.5 3.5 0 012.161 1.398l1.668 2.335A3.5 3.5 0 0148 27.64v4.86c0 1.058-.619 1.973-1.129 2.585-.56.673-1.273 1.308-1.934 1.836a26.506 26.506 0 01-2.597 1.824l-.048.029h-.001l-.012.008-.021.014-.058.035a27.766 27.766 0 01-1.358.773 37.77 37.77 0 01-3.883 1.79C33.69 42.69 29.123 44 24 44c-5.123 0-9.69-1.311-12.959-2.605a38.242 38.242 0 01-3.884-1.79 27.695 27.695 0 01-1.357-.773 9.58 9.58 0 01-.08-.05l-.011-.007-.001-.001-.048-.03c-.041-.025-.1-.06-.173-.107a26.538 26.538 0 01-2.424-1.716c-.66-.528-1.373-1.163-1.934-1.836C.619 34.473 0 33.558 0 32.5v-4.86c0-.729.228-1.44.652-2.033l1.668-2.335a3.5 3.5 0 012.161-1.398l.964-.193 1.684-3.79.015-.032c-.185-2.353.154-4.487 1.55-6.19 1.033-1.258 2.52-2.128 4.411-2.73C15.84 6.82 19.71 5.5 24 5.5c4.29 0 8.16 1.321 10.895 3.439zm2.913 9.285c-.21 1.875-.621 2.956-1.283 3.586-.169.16-.376.312-.636.445-.78.4-2.034.631-4.145.447a9.143 9.143 0 01-.389-.043c-1.889-.245-2.93-1.005-3.568-1.948a4.634 4.634 0 01-.192-.31c-.607-1.066-.897-2.503-.968-4.24-.095-2.368.35-3.665 1.021-4.31.623-.599 1.877-1.034 4.506-.514 2.668.527 4.082 1.322 4.832 2.235.721.88 1.047 2.144.869 4.174-.014.165-.03.324-.047.478zM23.643 20.5a70.806 70.806 0 00.714 0c.238.666.547 1.304.946 1.894 1.263 1.866 3.286 3.044 6.18 3.297 3.115.273 5.498-.171 7.11-1.707.439-.418.792-.89 1.078-1.404l.329.74v13.327c-.163.092-.353.197-.57.312a35.236 35.236 0 01-3.576 1.647C32.809 39.811 28.627 41 24 41c-4.627 0-8.81-1.189-11.854-2.395a35.236 35.236 0 01-3.577-1.647c-.216-.115-.406-.22-.569-.312V23.318l.329-.74c.286.515.639.987 1.077 1.405 1.613 1.536 3.996 1.98 7.111 1.707 2.894-.253 4.917-1.431 6.18-3.297.4-.59.708-1.228.946-1.894zm-12.514.907c.107.152.222.286.346.404.675.643 1.966 1.138 4.78.892 2.139-.187 3.277-.985 3.958-1.99.067-.1.131-.203.192-.31.607-1.067.897-2.504.968-4.242.095-2.367-.35-3.664-1.021-4.309-.623-.599-1.877-1.034-4.506-.514-2.668.527-4.082 1.322-4.832 2.235-.721.88-1.047 2.144-.869 4.174.157 1.796.474 2.934.984 3.66zM22.5 17a1 1 0 011-1h1a1 1 0 110 2h-1a1 1 0 01-1-1z\\\"></path>\" }, \"96\": { \"width\": 96, \"path\": \"<path d=\\\"M38 54a4 4 0 014 4v8a4 4 0 01-8 0v-8a4 4 0 014-4zm24 4a4 4 0 00-8 0v8a4 4 0 108 0v-8z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M25.013 15.024C31.008 10.628 39.145 8 48 8c8.855 0 16.992 2.628 22.987 7.024 3.64 2.67 6.553 6.05 8.278 9.92 1.615 2.744 2.114 5.94 1.968 9.397l3.898 9.026.355.07a11 11 0 016.794 4.394l2.416 3.382A7 7 0 0196 55.282V65c0 2.116-1.238 3.947-2.258 5.17-1.122 1.347-2.547 2.616-3.868 3.673a53.119 53.119 0 01-3.647 2.653 54.197 54.197 0 01-1.546.993l-.061.037-.036.022-.002.001-.024.015-.158.099c-.134.083-.327.201-.576.348a55.52 55.52 0 01-2.139 1.199 76.475 76.475 0 01-7.768 3.58C67.381 85.377 58.245 88 48 88c-10.245 0-19.381-2.622-25.917-5.21a76.482 76.482 0 01-7.768-3.58 55.52 55.52 0 01-2.14-1.199 34.133 34.133 0 01-.733-.447l-.024-.015-.002-.001-.038-.023-.059-.036-.345-.215a53.98 53.98 0 01-1.2-.778 53.104 53.104 0 01-3.648-2.653c-1.321-1.057-2.746-2.326-3.868-3.672C1.238 68.946 0 67.116 0 65v-9.718a7 7 0 011.304-4.069l2.416-3.382a11 11 0 016.794-4.393l.355-.071 3.898-9.026c-.146-3.457.353-6.654 1.968-9.398 1.725-3.87 4.637-7.249 8.278-9.919zM16 46.62l.982-2.275a11.586 11.586 0 002.282 3.065c3.167 3.016 7.837 3.88 13.914 3.348 5.658-.495 9.622-2.8 12.098-6.457.072-.107.143-.215.213-.324a136.57 136.57 0 005.022 0c.07.109.14.217.213.324 2.476 3.657 6.44 5.962 12.098 6.457 6.078.532 10.747-.332 13.914-3.348a11.583 11.583 0 002.281-3.065L80 46.62v26.671c-.326.184-.706.394-1.138.624a70.475 70.475 0 01-7.154 3.296C65.618 79.622 57.255 82 48 82c-9.255 0-17.619-2.378-23.708-4.79a70.482 70.482 0 01-7.154-3.295c-.432-.23-.812-.44-1.138-.624v-26.67zm24.307-5.683a7.803 7.803 0 01-2.982 2.628c-1.198.613-2.718 1.045-4.67 1.216-.342.03-.672.054-.992.073-4.79.284-7.051-.636-8.261-1.789a4.865 4.865 0 01-.233-.237c-.529-.577-.97-1.33-1.328-2.315-.477-1.313-.808-3.04-1.007-5.316-.345-3.946.289-6.384 1.677-8.076 1.443-1.76 4.177-3.303 9.368-4.328 5.113-1.01 7.523-.158 8.71.981 1.282 1.232 2.15 3.731 1.965 8.337-.15 3.719-.82 6.718-2.247 8.826zm15.386 0a7.803 7.803 0 002.982 2.628c1.198.613 2.718 1.045 4.67 1.216 5.475.479 7.962-.486 9.253-1.716.634-.604 1.151-1.425 1.56-2.551.478-1.314.808-3.04 1.008-5.317.345-3.946-.289-6.384-1.677-8.076-1.443-1.76-4.177-3.303-9.368-4.328-5.113-1.01-7.523-.158-8.71.981-1.282 1.232-2.15 3.731-1.965 8.337.15 3.719.82 6.718 2.247 8.826zm-9.27-5.997a6.5 6.5 0 013.154 0l.06.015a1.5 1.5 0 10.727-2.91l-.06-.015a9.5 9.5 0 00-4.608 0l-.06.015a1.5 1.5 0 10.728 2.91l.06-.015z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCopilotIcon.defaultProps = {\n  className: 'octicon octicon-copilot',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CopilotErrorIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.86 1.77c.05.053.097.107.14.164.043-.057.09-.111.14-.164.681-.731 1.737-.9 2.943-.765 1.23.136 2.145.527 2.724 1.26.566.716.693 1.614.693 2.485 0 .572-.053 1.147-.254 1.655l.168.838.066.033A2.75 2.75 0 0116 9.736V11c0 .24-.086.438-.156.567a1.755 1.755 0 01-.075.125L13 9.688V7.824l-.023-.115c-.49.21-1.075.291-1.727.291-.22 0-.43-.012-.633-.036L6.824 5.22c.082-.233.143-.503.182-.813.117-.936-.038-1.396-.242-1.614-.193-.207-.637-.414-1.681-.298-.707.079-1.144.243-1.424.434l-1.251-.905c.58-.579 1.422-.899 2.51-1.02 1.205-.133 2.26.035 2.943.766zm1.376 1.023c.193-.207.637-.414 1.681-.298 1.02.114 1.48.404 1.713.7.247.313.37.79.37 1.555 0 .792-.129 1.17-.308 1.37-.162.181-.52.38-1.442.38-.854 0-1.339-.236-1.638-.54-.315-.323-.527-.827-.618-1.553-.117-.936.038-1.396.242-1.614zM.865 2.759A.75.75 0 00.31 4.107l1.193.864c.013.498.076.992.251 1.434l-.167.838-.067.033A2.75 2.75 0 000 9.736V11c0 .24.086.438.156.567.075.137.169.261.259.366.18.21.404.413.605.58a10.368 10.368 0 00.792.597l.015.01.006.004.028.018.098.065a12.06 12.06 0 001.654.859C4.704 14.527 6.244 15 8 15c1.756 0 3.296-.472 4.387-.935.395-.167.734-.335 1.008-.482l1.415 1.024a.75.75 0 001.063-1.025.753.753 0 01-.188-.1L.865 2.76zM4.75 8c.297 0 .579-.022.844-.066l6.427 4.654c-.07.032-.144.064-.22.097-.972.412-2.307.815-3.801.815-1.494 0-2.83-.403-3.8-.815a10.594 10.594 0 01-1.2-.6v-4.26l.023-.116c.49.21 1.075.291 1.727.291z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCopilotErrorIcon.defaultProps = {\n  className: 'octicon octicon-copilot-error',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CopilotWarningIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.86 1.77c.05.053.097.107.14.164.043-.057.09-.111.14-.164.681-.731 1.737-.9 2.943-.765 1.23.136 2.145.527 2.724 1.26.566.716.693 1.614.693 2.485 0 .463-.035.929-.155 1.359a5.967 5.967 0 00-1.398-.616c.034-.195.053-.439.053-.743 0-.766-.123-1.242-.37-1.555-.233-.296-.693-.586-1.713-.7-1.044-.116-1.488.091-1.681.298-.204.218-.359.678-.242 1.614.06.479.172.86.332 1.158a6.014 6.014 0 00-2.92 2.144C5.926 7.904 5.372 8 4.75 8c-.652 0-1.237-.082-1.727-.291L3 7.824v4.261c.02.013.043.025.065.038a10.84 10.84 0 002.495 1.035c.21.629.522 1.21.916 1.726a11.91 11.91 0 01-2.863-.819 12.06 12.06 0 01-1.296-.641 8.815 8.815 0 01-.456-.281l-.028-.02-.006-.003-.015-.01a7.077 7.077 0 01-.235-.166c-.15-.108-.352-.26-.557-.43a5.19 5.19 0 01-.605-.58 2.167 2.167 0 01-.259-.367A1.19 1.19 0 010 11V9.736a2.75 2.75 0 011.52-2.46l.067-.033.167-.838C1.553 5.897 1.5 5.322 1.5 4.75c0-.87.127-1.77.693-2.485.579-.733 1.494-1.124 2.724-1.26 1.206-.134 2.262.034 2.944.765zM6.765 2.793c-.193-.207-.637-.414-1.681-.298-1.02.114-1.48.404-1.713.7-.247.313-.37.79-.37 1.555 0 .792.129 1.17.308 1.37.162.181.52.38 1.442.38.854 0 1.339-.236 1.638-.54.315-.323.527-.827.618-1.553.117-.936-.038-1.396-.242-1.614z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M8.498 14.81a4.5 4.5 0 105.504-7.121 4.5 4.5 0 00-5.504 7.122zM10.5 8.75a.75.75 0 011.5 0V11a.75.75 0 01-1.5 0V8.75zm.75 5.75a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCopilotWarningIcon.defaultProps = {\n  className: 'octicon octicon-copilot-warning',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CopyIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.024 3.75c0-.966.784-1.75 1.75-1.75H20.25c.966 0 1.75.784 1.75 1.75v11.498a1.75 1.75 0 01-1.75 1.75H8.774a1.75 1.75 0 01-1.75-1.75V3.75zm1.75-.25a.25.25 0 00-.25.25v11.498c0 .139.112.25.25.25H20.25a.25.25 0 00.25-.25V3.75a.25.25 0 00-.25-.25H8.774z\\\"></path><path d=\\\"M1.995 10.749a1.75 1.75 0 011.75-1.751H5.25a.75.75 0 110 1.5H3.745a.25.25 0 00-.25.25L3.5 20.25c0 .138.111.25.25.25h9.5a.25.25 0 00.25-.25v-1.51a.75.75 0 111.5 0v1.51A1.75 1.75 0 0113.25 22h-9.5A1.75 1.75 0 012 20.25l-.005-9.501z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCopyIcon.defaultProps = {\n  className: 'octicon octicon-copy',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CpuIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.5.75a.75.75 0 00-1.5 0V2H3.75A1.75 1.75 0 002 3.75V5H.75a.75.75 0 000 1.5H2v3H.75a.75.75 0 000 1.5H2v1.25c0 .966.784 1.75 1.75 1.75H5v1.25a.75.75 0 001.5 0V14h3v1.25a.75.75 0 001.5 0V14h1.25A1.75 1.75 0 0014 12.25V11h1.25a.75.75 0 000-1.5H14v-3h1.25a.75.75 0 000-1.5H14V3.75A1.75 1.75 0 0012.25 2H11V.75a.75.75 0 00-1.5 0V2h-3V.75zm5.75 11.75h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h8.5a.25.25 0 01.25.25v8.5a.25.25 0 01-.25.25zM5.75 5a.75.75 0 00-.75.75v4.5c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-4.5a.75.75 0 00-.75-.75h-4.5zm.75 4.5v-3h3v3h-3z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.75 8a.75.75 0 00-.75.75v6.5c0 .414.336.75.75.75h6.5a.75.75 0 00.75-.75v-6.5a.75.75 0 00-.75-.75h-6.5zm.75 6.5v-5h5v5h-5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M15.25 1a.75.75 0 01.75.75V4h2.25c.966 0 1.75.784 1.75 1.75V8h2.25a.75.75 0 010 1.5H20v5h2.25a.75.75 0 010 1.5H20v2.25A1.75 1.75 0 0118.25 20H16v2.25a.75.75 0 01-1.5 0V20h-5v2.25a.75.75 0 01-1.5 0V20H5.75A1.75 1.75 0 014 18.25V16H1.75a.75.75 0 010-1.5H4v-5H1.75a.75.75 0 010-1.5H4V5.75C4 4.784 4.784 4 5.75 4H8V1.75a.75.75 0 011.5 0V4h5V1.75a.75.75 0 01.75-.75zm3 17.5a.25.25 0 00.25-.25V5.75a.25.25 0 00-.25-.25H5.75a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h12.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCpuIcon.defaultProps = {\n  className: 'octicon octicon-cpu',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CreditCardIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M10.75 9a.75.75 0 000 1.5h1.5a.75.75 0 000-1.5h-1.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0114.25 14H1.75A1.75 1.75 0 010 12.25v-8.5zm14.5 0V5h-13V3.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25zm0 2.75h-13v5.75c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25V6.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M15.25 14a.75.75 0 000 1.5h3.5a.75.75 0 000-1.5h-3.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 3A1.75 1.75 0 000 4.75v14.5C0 20.216.784 21 1.75 21h20.5A1.75 1.75 0 0024 19.25V4.75A1.75 1.75 0 0022.25 3H1.75zM1.5 4.75a.25.25 0 01.25-.25h20.5a.25.25 0 01.25.25V8.5h-21V4.75zm0 5.25v9.25c0 .138.112.25.25.25h20.5a.25.25 0 00.25-.25V10h-21z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCreditCardIcon.defaultProps = {\n  className: 'octicon octicon-credit-card',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction CrossReferenceIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M16 1.25v4.146a.25.25 0 01-.427.177L14.03 4.03l-3.75 3.75a.75.75 0 11-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0111.604 1h4.146a.25.25 0 01.25.25zM2.75 3.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-2.5a.75.75 0 111.5 0v2.5A1.75 1.75 0 0113.25 13H9.06l-2.573 2.573A1.457 1.457 0 014 14.543V13H2.75A1.75 1.75 0 011 11.25v-7.5C1 2.784 1.784 2 2.75 2h5.5a.75.75 0 010 1.5h-5.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M16.5 2.25a.75.75 0 01.75-.75h5.5a.75.75 0 01.75.75v5.5a.75.75 0 01-1.5 0V4.06l-6.22 6.22a.75.75 0 11-1.06-1.06L20.94 3h-3.69a.75.75 0 01-.75-.75z\\\"></path><path d=\\\"M3.25 4a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h2.5a.75.75 0 01.75.75v3.19l3.72-3.72a.75.75 0 01.53-.22h10a.25.25 0 00.25-.25v-6a.75.75 0 011.5 0v6a1.75 1.75 0 01-1.75 1.75h-9.69l-3.573 3.573A1.457 1.457 0 015 21.043V18.5H3.25a1.75 1.75 0 01-1.75-1.75V4.25c0-.966.784-1.75 1.75-1.75h11a.75.75 0 010 1.5h-11z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nCrossReferenceIcon.defaultProps = {\n  className: 'octicon octicon-cross-reference',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DashIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 7.75A.75.75 0 012.75 7h10a.75.75 0 010 1.5h-10A.75.75 0 012 7.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.5 12.75a.75.75 0 01.75-.75h13.5a.75.75 0 010 1.5H5.25a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDashIcon.defaultProps = {\n  className: 'octicon octicon-dash',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DatabaseIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 3.5c0-.133.058-.318.282-.55.227-.237.592-.484 1.1-.708C4.899 1.795 6.354 1.5 8 1.5c1.647 0 3.102.295 4.117.742.51.224.874.47 1.101.707.224.233.282.418.282.551 0 .133-.058.318-.282.55-.227.237-.592.484-1.1.708C11.101 5.205 9.646 5.5 8 5.5c-1.647 0-3.102-.295-4.117-.742-.51-.224-.874-.47-1.101-.707-.224-.233-.282-.418-.282-.551zM1 3.5c0-.626.292-1.165.7-1.59.406-.422.956-.767 1.579-1.041C4.525.32 6.195 0 8 0c1.805 0 3.475.32 4.722.869.622.274 1.172.62 1.578 1.04.408.426.7.965.7 1.591v9c0 .626-.292 1.165-.7 1.59-.406.422-.956.767-1.579 1.041C11.476 15.68 9.806 16 8 16c-1.805 0-3.475-.32-4.721-.869-.623-.274-1.173-.62-1.579-1.04-.408-.426-.7-.965-.7-1.591v-9zM2.5 8V5.724c.241.15.503.286.779.407C4.525 6.68 6.195 7 8 7c1.805 0 3.475-.32 4.722-.869.275-.121.537-.257.778-.407V8c0 .133-.058.318-.282.55-.227.237-.592.484-1.1.708C11.101 9.705 9.646 10 8 10c-1.647 0-3.102-.295-4.117-.742-.51-.224-.874-.47-1.101-.707C2.558 8.318 2.5 8.133 2.5 8zm0 2.225V12.5c0 .133.058.318.282.55.227.237.592.484 1.1.708 1.016.447 2.471.742 4.118.742 1.647 0 3.102-.295 4.117-.742.51-.224.874-.47 1.101-.707.224-.233.282-.418.282-.551v-2.275c-.241.15-.503.285-.778.406-1.247.549-2.917.869-4.722.869-1.805 0-3.475-.32-4.721-.869a6.236 6.236 0 01-.779-.406z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 1.25c-2.487 0-4.774.402-6.466 1.079-.844.337-1.577.758-2.112 1.264C2.886 4.1 2.5 4.744 2.5 5.5v12.987l.026.013H2.5c0 .756.386 1.4.922 1.907.535.506 1.268.927 2.112 1.264 1.692.677 3.979 1.079 6.466 1.079s4.773-.402 6.466-1.079c.844-.337 1.577-.758 2.112-1.264.536-.507.922-1.151.922-1.907h-.026l.026-.013V5.5c0-.756-.386-1.4-.922-1.907-.535-.506-1.268-.927-2.112-1.264C16.773 1.652 14.487 1.25 12 1.25zM4 5.5c0-.21.104-.487.453-.817.35-.332.899-.666 1.638-.962C7.566 3.131 9.655 2.75 12 2.75c2.345 0 4.434.382 5.909.971.74.296 1.287.63 1.638.962.35.33.453.606.453.817 0 .21-.104.487-.453.817-.35.332-.899.666-1.638.962-1.475.59-3.564.971-5.909.971-2.345 0-4.434-.382-5.909-.971-.74-.296-1.287-.63-1.638-.962C4.103 5.987 4 5.711 4 5.5zM20 12V7.871a7.842 7.842 0 01-1.534.8C16.773 9.348 14.487 9.75 12 9.75s-4.774-.402-6.466-1.079A7.843 7.843 0 014 7.871V12c0 .21.104.487.453.817.35.332.899.666 1.638.961 1.475.59 3.564.972 5.909.972 2.345 0 4.434-.382 5.909-.972.74-.295 1.287-.629 1.638-.96.35-.33.453-.607.453-.818zM4 14.371c.443.305.963.572 1.534.8 1.692.677 3.979 1.079 6.466 1.079s4.773-.402 6.466-1.079a7.842 7.842 0 001.534-.8v4.116l.013.013H20c0 .21-.104.487-.453.817-.35.332-.899.666-1.638.962-1.475.59-3.564.971-5.909.971-2.345 0-4.434-.382-5.909-.971-.74-.296-1.287-.63-1.638-.962-.35-.33-.453-.606-.453-.817h-.013L4 18.487V14.37z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDatabaseIcon.defaultProps = {\n  className: 'octicon octicon-database',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DependabotIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M5.75 7.5a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5a.75.75 0 01.75-.75zm5.25.75a.75.75 0 00-1.5 0v1.5a.75.75 0 001.5 0v-1.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M6.25 0a.75.75 0 000 1.5H7.5v2H3.75A2.25 2.25 0 001.5 5.75V8H.75a.75.75 0 000 1.5h.75v2.75a2.25 2.25 0 002.25 2.25h8.5a2.25 2.25 0 002.25-2.25V9.5h.75a.75.75 0 000-1.5h-.75V5.75a2.25 2.25 0 00-2.25-2.25H9V.75A.75.75 0 008.25 0h-2zM3 5.75A.75.75 0 013.75 5h8.5a.75.75 0 01.75.75v6.5a.75.75 0 01-.75.75h-8.5a.75.75 0 01-.75-.75v-6.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M8.75 11a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5a.75.75 0 01.75-.75zm7.25.75a.75.75 0 00-1.5 0v3.5a.75.75 0 001.5 0v-3.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M9.813 1a.75.75 0 000 1.5H11.5V5H4.25A2.25 2.25 0 002 7.25v5.25H.75a.75.75 0 000 1.5H2v5.75A2.25 2.25 0 004.25 22h15.5A2.25 2.25 0 0022 19.75V14h1.25a.75.75 0 000-1.5H22V7.25A2.25 2.25 0 0019.75 5H13V1.75a.75.75 0 00-.75-.75H9.812zM3.5 7.25a.75.75 0 01.75-.75h15.5a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75H4.25a.75.75 0 01-.75-.75V7.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDependabotIcon.defaultProps = {\n  className: 'octicon octicon-dependabot',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DesktopDownloadIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M4.927 5.427l2.896 2.896a.25.25 0 00.354 0l2.896-2.896A.25.25 0 0010.896 5H8.75V.75a.75.75 0 10-1.5 0V5H5.104a.25.25 0 00-.177.427z\\\"></path><path d=\\\"M1.573 2.573a.25.25 0 00-.073.177v7.5a.25.25 0 00.25.25h12.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-3a.75.75 0 110-1.5h3A1.75 1.75 0 0116 2.75v7.5A1.75 1.75 0 0114.25 12h-3.727c.099 1.041.52 1.872 1.292 2.757A.75.75 0 0111.25 16h-6.5a.75.75 0 01-.565-1.243c.772-.885 1.192-1.716 1.292-2.757H1.75A1.75 1.75 0 010 10.25v-7.5A1.75 1.75 0 011.75 1h3a.75.75 0 010 1.5h-3a.25.25 0 00-.177.073zM6.982 12a5.72 5.72 0 01-.765 2.5h3.566a5.72 5.72 0 01-.765-2.5H6.982z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M11.25 9.331V.75a.75.75 0 011.5 0v8.58l1.949-2.11A.75.75 0 1115.8 8.237l-3.25 3.52a.75.75 0 01-1.102 0l-3.25-3.52A.75.75 0 119.3 7.22l1.949 2.111z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 3.75a.25.25 0 01.25-.25h5.5a.75.75 0 100-1.5h-5.5A1.75 1.75 0 001 3.75v11.5c0 .966.784 1.75 1.75 1.75h6.204c-.171 1.375-.805 2.652-1.77 3.757A.75.75 0 007.75 22h8.5a.75.75 0 00.565-1.243c-.964-1.105-1.598-2.382-1.769-3.757h6.204A1.75 1.75 0 0023 15.25V3.75A1.75 1.75 0 0021.25 2h-5.5a.75.75 0 000 1.5h5.5a.25.25 0 01.25.25v11.5a.25.25 0 01-.25.25H2.75a.25.25 0 01-.25-.25V3.75zM10.463 17c-.126 1.266-.564 2.445-1.223 3.5h5.52c-.66-1.055-1.098-2.234-1.223-3.5h-3.074z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDesktopDownloadIcon.defaultProps = {\n  className: 'octicon octicon-desktop-download',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DeviceCameraIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M15 3H7c0-.55-.45-1-1-1H2c-.55 0-1 .45-1 1-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM6 5H2V4h4v1zm4.5 7C8.56 12 7 10.44 7 8.5S8.56 5 10.5 5 14 6.56 14 8.5 12.44 12 10.5 12zM13 8.5c0 1.38-1.13 2.5-2.5 2.5S8 9.87 8 8.5 9.13 6 10.5 6 13 7.13 13 8.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDeviceCameraIcon.defaultProps = {\n  className: 'octicon octicon-device-camera',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DeviceCameraVideoIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M16 3.75a.75.75 0 00-1.136-.643L11 5.425V4.75A1.75 1.75 0 009.25 3h-7.5A1.75 1.75 0 000 4.75v6.5C0 12.216.784 13 1.75 13h7.5A1.75 1.75 0 0011 11.25v-.675l3.864 2.318A.75.75 0 0016 12.25v-8.5zm-5 5.075l3.5 2.1v-5.85l-3.5 2.1v1.65zM9.5 6.75v-2a.25.25 0 00-.25-.25h-7.5a.25.25 0 00-.25.25v6.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-4.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M24 5.25a.75.75 0 00-1.136-.643L16.5 8.425V6.25a1.75 1.75 0 00-1.75-1.75h-13A1.75 1.75 0 000 6.25v11C0 18.216.784 19 1.75 19h13a1.75 1.75 0 001.75-1.75v-2.175l6.364 3.818A.75.75 0 0024 18.25v-13zm-7.5 8.075l6 3.6V6.575l-6 3.6v3.15zM15 9.75v-3.5a.25.25 0 00-.25-.25h-13a.25.25 0 00-.25.25v11c0 .138.112.25.25.25h13a.25.25 0 00.25-.25v-7.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDeviceCameraVideoIcon.defaultProps = {\n  className: 'octicon octicon-device-camera-video',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DeviceDesktopIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 2.5h12.5a.25.25 0 01.25.25v7.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25v-7.5a.25.25 0 01.25-.25zM14.25 1H1.75A1.75 1.75 0 000 2.75v7.5C0 11.216.784 12 1.75 12h3.727c-.1 1.041-.52 1.872-1.292 2.757A.75.75 0 004.75 16h6.5a.75.75 0 00.565-1.243c-.772-.885-1.193-1.716-1.292-2.757h3.727A1.75 1.75 0 0016 10.25v-7.5A1.75 1.75 0 0014.25 1zM9.018 12H6.982a5.72 5.72 0 01-.765 2.5h3.566a5.72 5.72 0 01-.765-2.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.954 17H2.75A1.75 1.75 0 011 15.25V3.75C1 2.784 1.784 2 2.75 2h18.5c.966 0 1.75.784 1.75 1.75v11.5A1.75 1.75 0 0121.25 17h-6.204c.171 1.375.805 2.652 1.769 3.757A.75.75 0 0116.25 22h-8.5a.75.75 0 01-.565-1.243c.964-1.105 1.598-2.382 1.769-3.757zM21.5 3.75v11.5a.25.25 0 01-.25.25H2.75a.25.25 0 01-.25-.25V3.75a.25.25 0 01.25-.25h18.5a.25.25 0 01.25.25zM13.537 17c.125 1.266.564 2.445 1.223 3.5H9.24c.659-1.055 1.097-2.234 1.223-3.5h3.074z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDeviceDesktopIcon.defaultProps = {\n  className: 'octicon octicon-device-desktop',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DeviceMobileIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 0A1.75 1.75 0 002 1.75v12.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 14.25V1.75A1.75 1.75 0 0012.25 0h-8.5zM3.5 1.75a.25.25 0 01.25-.25h8.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25V1.75zM8 13a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M10.25 5.25A.75.75 0 0111 4.5h2A.75.75 0 0113 6h-2a.75.75 0 01-.75-.75zM12 19.5a1 1 0 100-2 1 1 0 000 2z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M4 2.75C4 1.784 4.784 1 5.75 1h12.5c.966 0 1.75.784 1.75 1.75v18.5A1.75 1.75 0 0118.25 23H5.75A1.75 1.75 0 014 21.25V2.75zm1.75-.25a.25.25 0 00-.25.25v18.5c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25V2.75a.25.25 0 00-.25-.25H5.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDeviceMobileIcon.defaultProps = {\n  className: 'octicon octicon-device-mobile',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DiamondIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M.527 9.237a1.75 1.75 0 010-2.474L6.777.512a1.75 1.75 0 012.475 0l6.251 6.25a1.751 1.751 0 010 2.475l-6.25 6.251a1.751 1.751 0 01-2.475 0L.527 9.238v-.001zm1.06-1.414a.25.25 0 000 .354l6.251 6.25a.25.25 0 00.354 0l6.25-6.25a.25.25 0 000-.354l-6.25-6.25a.25.25 0 00-.354 0l-6.25 6.25h-.001z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.527 13.237a1.75 1.75 0 010-2.474l9.272-9.273a1.75 1.75 0 012.475 0l9.272 9.273a1.75 1.75 0 010 2.474l-9.272 9.272a1.75 1.75 0 01-2.475 0l-9.272-9.272zm1.06-1.414a.25.25 0 000 .354l9.273 9.272a.25.25 0 00.353 0l9.272-9.272a.25.25 0 000-.354l-9.272-9.272a.25.25 0 00-.353 0l-9.273 9.272z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDiamondIcon.defaultProps = {\n  className: 'octicon octicon-diamond',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DiffIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.75 1.75a.75.75 0 00-1.5 0V5H4a.75.75 0 000 1.5h3.25v3.25a.75.75 0 001.5 0V6.5H12A.75.75 0 0012 5H8.75V1.75zM4 13a.75.75 0 000 1.5h8a.75.75 0 100-1.5H4z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.25 3.5a.75.75 0 01.75.75V8.5h4.25a.75.75 0 010 1.5H13v4.25a.75.75 0 01-1.5 0V10H7.25a.75.75 0 010-1.5h4.25V4.25a.75.75 0 01.75-.75zM6.562 19.25a.75.75 0 01.75-.75h9.938a.75.75 0 010 1.5H7.312a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDiffIcon.defaultProps = {\n  className: 'octicon octicon-diff',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DiffAddedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M13.25 2.5H2.75a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h10.5a.25.25 0 00.25-.25V2.75a.25.25 0 00-.25-.25zM2.75 1h10.5c.966 0 1.75.784 1.75 1.75v10.5A1.75 1.75 0 0113.25 15H2.75A1.75 1.75 0 011 13.25V2.75C1 1.784 1.784 1 2.75 1zM8 4a.75.75 0 01.75.75v2.5h2.5a.75.75 0 010 1.5h-2.5v2.5a.75.75 0 01-1.5 0v-2.5h-2.5a.75.75 0 010-1.5h2.5v-2.5A.75.75 0 018 4z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDiffAddedIcon.defaultProps = {\n  className: 'octicon octicon-diff-added',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DiffIgnoredIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.75 2.5h10.5a.25.25 0 01.25.25v10.5a.25.25 0 01-.25.25H2.75a.25.25 0 01-.25-.25V2.75a.25.25 0 01.25-.25zM13.25 1H2.75A1.75 1.75 0 001 2.75v10.5c0 .966.784 1.75 1.75 1.75h10.5A1.75 1.75 0 0015 13.25V2.75A1.75 1.75 0 0013.25 1zm-1.97 4.78a.75.75 0 00-1.06-1.06l-5.5 5.5a.75.75 0 101.06 1.06l5.5-5.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDiffIgnoredIcon.defaultProps = {\n  className: 'octicon octicon-diff-ignored',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DiffModifiedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.75 2.5h10.5a.25.25 0 01.25.25v10.5a.25.25 0 01-.25.25H2.75a.25.25 0 01-.25-.25V2.75a.25.25 0 01.25-.25zM13.25 1H2.75A1.75 1.75 0 001 2.75v10.5c0 .966.784 1.75 1.75 1.75h10.5A1.75 1.75 0 0015 13.25V2.75A1.75 1.75 0 0013.25 1zM8 10a2 2 0 100-4 2 2 0 000 4z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDiffModifiedIcon.defaultProps = {\n  className: 'octicon octicon-diff-modified',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DiffRemovedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.75 2.5h10.5a.25.25 0 01.25.25v10.5a.25.25 0 01-.25.25H2.75a.25.25 0 01-.25-.25V2.75a.25.25 0 01.25-.25zM13.25 1H2.75A1.75 1.75 0 001 2.75v10.5c0 .966.784 1.75 1.75 1.75h10.5A1.75 1.75 0 0015 13.25V2.75A1.75 1.75 0 0013.25 1zm-2 7.75a.75.75 0 000-1.5h-6.5a.75.75 0 000 1.5h6.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDiffRemovedIcon.defaultProps = {\n  className: 'octicon octicon-diff-removed',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DiffRenamedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.75 2.5h10.5a.25.25 0 01.25.25v10.5a.25.25 0 01-.25.25H2.75a.25.25 0 01-.25-.25V2.75a.25.25 0 01.25-.25zM13.25 1H2.75A1.75 1.75 0 001 2.75v10.5c0 .966.784 1.75 1.75 1.75h10.5A1.75 1.75 0 0015 13.25V2.75A1.75 1.75 0 0013.25 1zm-1.47 7.53a.75.75 0 000-1.06L8.53 4.22a.75.75 0 00-1.06 1.06l1.97 1.97H4.75a.75.75 0 000 1.5h4.69l-1.97 1.97a.75.75 0 101.06 1.06l3.25-3.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDiffRenamedIcon.defaultProps = {\n  className: 'octicon octicon-diff-renamed',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DotIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 5.5a2.5 2.5 0 100 5 2.5 2.5 0 000-5zM4 8a4 4 0 118 0 4 4 0 01-8 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 16.5a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0 1.5a6 6 0 100-12 6 6 0 000 12z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDotIcon.defaultProps = {\n  className: 'octicon octicon-dot',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DotFillIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 4a4 4 0 100 8 4 4 0 000-8z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M12 18a6 6 0 100-12 6 6 0 000 12z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDotFillIcon.defaultProps = {\n  className: 'octicon octicon-dot-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DownloadIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.47 10.78a.75.75 0 001.06 0l3.75-3.75a.75.75 0 00-1.06-1.06L8.75 8.44V1.75a.75.75 0 00-1.5 0v6.69L4.78 5.97a.75.75 0 00-1.06 1.06l3.75 3.75zM3.75 13a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M4.97 11.03a.75.75 0 111.06-1.06L11 14.94V2.75a.75.75 0 011.5 0v12.19l4.97-4.97a.75.75 0 111.06 1.06l-6.25 6.25a.75.75 0 01-1.06 0l-6.25-6.25zm-.22 9.47a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H4.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDownloadIcon.defaultProps = {\n  className: 'octicon octicon-download',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction DuplicateIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M10.5 3a.75.75 0 01.75.75v1h1a.75.75 0 010 1.5h-1v1a.75.75 0 01-1.5 0v-1h-1a.75.75 0 010-1.5h1v-1A.75.75 0 0110.5 3z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M6.75 0A1.75 1.75 0 005 1.75v7.5c0 .966.784 1.75 1.75 1.75h7.5A1.75 1.75 0 0016 9.25v-7.5A1.75 1.75 0 0014.25 0h-7.5zM6.5 1.75a.25.25 0 01.25-.25h7.5a.25.25 0 01.25.25v7.5a.25.25 0 01-.25.25h-7.5a.25.25 0 01-.25-.25v-7.5z\\\"></path><path d=\\\"M1.75 5A1.75 1.75 0 000 6.75v7.5C0 15.216.784 16 1.75 16h7.5A1.75 1.75 0 0011 14.25v-1.5a.75.75 0 00-1.5 0v1.5a.25.25 0 01-.25.25h-7.5a.25.25 0 01-.25-.25v-7.5a.25.25 0 01.25-.25h1.5a.75.75 0 000-1.5h-1.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M14.513 6a.75.75 0 01.75.75v2h1.987a.75.75 0 010 1.5h-1.987v2a.75.75 0 11-1.5 0v-2H11.75a.75.75 0 010-1.5h2.013v-2a.75.75 0 01.75-.75z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M7.024 3.75c0-.966.784-1.75 1.75-1.75H20.25c.966 0 1.75.784 1.75 1.75v11.498a1.75 1.75 0 01-1.75 1.75H8.774a1.75 1.75 0 01-1.75-1.75V3.75zm1.75-.25a.25.25 0 00-.25.25v11.498c0 .139.112.25.25.25H20.25a.25.25 0 00.25-.25V3.75a.25.25 0 00-.25-.25H8.774z\\\"></path><path d=\\\"M1.995 10.749a1.75 1.75 0 011.75-1.751H5.25a.75.75 0 110 1.5H3.745a.25.25 0 00-.25.25L3.5 20.25c0 .138.111.25.25.25h9.5a.25.25 0 00.25-.25v-1.51a.75.75 0 111.5 0v1.51A1.75 1.75 0 0113.25 22h-9.5A1.75 1.75 0 012 20.25l-.005-9.501z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nDuplicateIcon.defaultProps = {\n  className: 'octicon octicon-duplicate',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction EllipsisIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 5.75C0 4.784.784 4 1.75 4h12.5c.966 0 1.75.784 1.75 1.75v4.5A1.75 1.75 0 0114.25 12H1.75A1.75 1.75 0 010 10.25v-4.5zM4 7a1 1 0 100 2 1 1 0 000-2zm3 1a1 1 0 112 0 1 1 0 01-2 0zm5-1a1 1 0 100 2 1 1 0 000-2z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nEllipsisIcon.defaultProps = {\n  className: 'octicon octicon-ellipsis',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction EyeIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M15.5 12a3.5 3.5 0 11-7 0 3.5 3.5 0 017 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 3.5c-3.432 0-6.125 1.534-8.054 3.24C2.02 8.445.814 10.352.33 11.202a1.6 1.6 0 000 1.598c.484.85 1.69 2.758 3.616 4.46C5.876 18.966 8.568 20.5 12 20.5c3.432 0 6.125-1.534 8.054-3.24 1.926-1.704 3.132-3.611 3.616-4.461a1.6 1.6 0 000-1.598c-.484-.85-1.69-2.757-3.616-4.46C18.124 5.034 15.432 3.5 12 3.5zM1.633 11.945c.441-.774 1.551-2.528 3.307-4.08C6.69 6.314 9.045 5 12 5c2.955 0 5.309 1.315 7.06 2.864 1.756 1.553 2.866 3.307 3.307 4.08a.111.111 0 01.017.056.111.111 0 01-.017.056c-.441.774-1.551 2.527-3.307 4.08C17.31 17.685 14.955 19 12 19c-2.955 0-5.309-1.315-7.06-2.864-1.756-1.553-2.866-3.306-3.307-4.08A.11.11 0 011.616 12a.11.11 0 01.017-.055z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nEyeIcon.defaultProps = {\n  className: 'octicon octicon-eye',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction EyeClosedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M.143 2.31a.75.75 0 011.047-.167l14.5 10.5a.75.75 0 11-.88 1.214l-2.248-1.628C11.346 13.19 9.792 14 8 14c-1.981 0-3.67-.992-4.933-2.078C1.797 10.832.88 9.577.43 8.9a1.618 1.618 0 010-1.797c.353-.533.995-1.42 1.868-2.305L.31 3.357A.75.75 0 01.143 2.31zm3.386 3.378a14.21 14.21 0 00-1.85 2.244.12.12 0 00-.022.068c0 .021.006.045.022.068.412.621 1.242 1.75 2.366 2.717C5.175 11.758 6.527 12.5 8 12.5c1.195 0 2.31-.488 3.29-1.191L9.063 9.695A2 2 0 016.058 7.52l-2.53-1.832zM8 3.5c-.516 0-1.017.09-1.499.251a.75.75 0 11-.473-1.423A6.23 6.23 0 018 2c1.981 0 3.67.992 4.933 2.078 1.27 1.091 2.187 2.345 2.637 3.023a1.619 1.619 0 010 1.798c-.11.166-.248.365-.41.587a.75.75 0 11-1.21-.887c.148-.201.272-.382.371-.53a.119.119 0 000-.137c-.412-.621-1.242-1.75-2.366-2.717C10.825 4.242 9.473 3.5 8 3.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M8.052 5.837A9.715 9.715 0 0112 5c2.955 0 5.309 1.315 7.06 2.864 1.756 1.553 2.866 3.307 3.307 4.08a.11.11 0 01.016.055.122.122 0 01-.017.06 16.766 16.766 0 01-1.53 2.218.75.75 0 101.163.946 18.253 18.253 0 001.67-2.42 1.607 1.607 0 00.001-1.602c-.485-.85-1.69-2.757-3.616-4.46C18.124 5.034 15.432 3.5 12 3.5c-1.695 0-3.215.374-4.552.963a.75.75 0 00.604 1.373z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M19.166 17.987C17.328 19.38 14.933 20.5 12 20.5c-3.432 0-6.125-1.534-8.054-3.24C2.02 15.556.814 13.648.33 12.798a1.606 1.606 0 01.001-1.6A18.305 18.305 0 013.648 7.01L1.317 5.362a.75.75 0 11.866-1.224l20.5 14.5a.75.75 0 11-.866 1.224l-2.651-1.875zM4.902 7.898c-1.73 1.541-2.828 3.273-3.268 4.044a.118.118 0 00-.017.059c0 .015.003.034.016.055.441.774 1.551 2.527 3.307 4.08C6.69 17.685 9.045 19 12 19c2.334 0 4.29-.82 5.874-1.927l-3.516-2.487a3.5 3.5 0 01-5.583-3.949L4.902 7.899z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nEyeClosedIcon.defaultProps = {\n  className: 'octicon octicon-eye-closed',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FeedDiscussionIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zM4 5a1 1 0 011-1h6a1 1 0 011 1v5a1 1 0 01-1 1H8.707l-1.853 1.854A.5.5 0 016 12.5V11H5a1 1 0 01-1-1V5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFeedDiscussionIcon.defaultProps = {\n  className: 'octicon octicon-feed-discussion',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FeedForkedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zM6 6.928a1.75 1.75 0 10-1 0V7.5A1.5 1.5 0 006.5 9h1v1.072a1.75 1.75 0 101 0V9h1A1.5 1.5 0 0011 7.5v-.572a1.75 1.75 0 10-1 0V7.5a.5.5 0 01-.5.5h-3a.5.5 0 01-.5-.5v-.572z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFeedForkedIcon.defaultProps = {\n  className: 'octicon octicon-feed-forked',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FeedHeartIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zm2.33-11.5c-1.22 0-1.83.5-2.323 1.136C7.513 5 6.903 4.5 5.682 4.5c-1.028 0-2.169.784-2.169 2.5 0 1.499 1.493 3.433 3.246 4.517.52.321.89.479 1.248.484.357-.005.728-.163 1.247-.484C11.007 10.433 12.5 8.5 12.5 7c0-1.716-1.14-2.5-2.17-2.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFeedHeartIcon.defaultProps = {\n  className: 'octicon octicon-feed-heart',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FeedMergedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zm.25-11.25a1.75 1.75 0 01-1.207 1.664A2 2 0 009 8h.571a1.75 1.75 0 110 1H9a2.99 2.99 0 01-2-.764v1.336a1.75 1.75 0 11-1 0V6.428A1.75 1.75 0 118.25 4.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFeedMergedIcon.defaultProps = {\n  className: 'octicon octicon-feed-merged',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FeedPersonIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zm.847-8.145a2.502 2.502 0 10-1.694 0C5.471 8.261 4 9.775 4 11c0 .395.145.995 1 .995h6c.855 0 1-.6 1-.995 0-1.224-1.47-2.74-3.153-3.145z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFeedPersonIcon.defaultProps = {\n  className: 'octicon octicon-feed-person',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FeedRepoIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zM5.5 4A1.5 1.5 0 004 5.5v5c0 .828.5 1.5 1 1.5v-1a1 1 0 011-1h5v1h-1v1h1.5a.5.5 0 00.5-.5v-7a.5.5 0 00-.5-.5h-6zm.5 7.25a.25.25 0 01.25-.25H9v2.764a.25.25 0 01-.426.178l-.898-.888a.25.25 0 00-.352 0l-.898.888A.25.25 0 016 13.764V11.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFeedRepoIcon.defaultProps = {\n  className: 'octicon octicon-feed-repo',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FeedRocketIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zm3.031-12a4.38 4.38 0 00-3.097 1.283l-.23.229c-.156.157-.308.32-.452.49H5.65a.876.876 0 00-.746.417l-.856 1.388a.375.375 0 00.21.556l1.552.477 1.35 1.35.478 1.553a.375.375 0 00.555.21l1.389-.855a.876.876 0 00.416-.746V8.747c.17-.144.333-.295.49-.452l.23-.23A4.38 4.38 0 0012 4.969v-.093A.876.876 0 0011.124 4h-.093zm-5.107 7.144a.81.81 0 01-.188.263c-.394.394-1.258.563-1.62.619a.124.124 0 01-.143-.143c.056-.362.225-1.226.62-1.62a.808.808 0 011.33.881z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFeedRocketIcon.defaultProps = {\n  className: 'octicon octicon-feed-rocket',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FeedStarIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zm.252-12.932a.478.478 0 00-.682.195l-1.2 2.432-2.684.39a.478.478 0 00-.266.816l1.944 1.892-.46 2.674a.478.478 0 00.694.504L8 10.709l2.4 1.261a.478.478 0 00.694-.504l-.458-2.673L12.578 6.9a.479.479 0 00-.265-.815l-2.685-.39-1.2-2.432a.478.478 0 00-.176-.195z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFeedStarIcon.defaultProps = {\n  className: 'octicon octicon-feed-star',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FeedTagIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M7.22 6.5a.72.72 0 11-1.44 0 .72.72 0 011.44 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zM4 8.379V5a1 1 0 011-1h3.379a1.5 1.5 0 011.06.44l3.213 3.211a1.2 1.2 0 010 1.698l-3.303 3.303a1.2 1.2 0 01-1.698 0L4.44 9.439A1.5 1.5 0 014 8.38z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFeedTagIcon.defaultProps = {\n  className: 'octicon octicon-feed-tag',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FeedTrophyIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M11 5h1v1.146a1 1 0 01-.629.928L11 7.223V5zM5 7.223l-.371-.149A1 1 0 014 6.146V5h1v2.223z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M8 16A8 8 0 108 0a8 8 0 000 16zM3 5a1 1 0 011-1h8a1 1 0 011 1v1.146a2 2 0 01-1.257 1.857l-.865.346a3.005 3.005 0 01-2.294 2.094C8.78 11.405 9.342 12 10.5 12a.5.5 0 010 1h-5a.5.5 0 010-1h.002c1.156 0 1.718-.596 1.914-1.557A3.005 3.005 0 015.122 8.35l-.865-.346A2 2 0 013 6.146V5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFeedTrophyIcon.defaultProps = {\n  className: 'octicon octicon-feed-trophy',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 1.5a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 00.25-.25V6h-2.75A1.75 1.75 0 019 4.25V1.5H3.75zm6.75.062V4.25c0 .138.112.25.25.25h2.688a.252.252 0 00-.011-.013l-2.914-2.914a.272.272 0 00-.013-.011zM2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0113.25 16h-9.5A1.75 1.75 0 012 14.25V1.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5 2.5a.5.5 0 00-.5.5v18a.5.5 0 00.5.5h14a.5.5 0 00.5-.5V8.5h-4a2 2 0 01-2-2v-4H5zm10 0v4a.5.5 0 00.5.5h4a.5.5 0 00-.146-.336l-4.018-4.018A.5.5 0 0015 2.5zM3 3a2 2 0 012-2h9.982a2 2 0 011.414.586l4.018 4.018A2 2 0 0121 7.018V21a2 2 0 01-2 2H5a2 2 0 01-2-2V3z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileIcon.defaultProps = {\n  className: 'octicon octicon-file',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileAddedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 1.5a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 00.25-.25V4.664a.25.25 0 00-.073-.177l-2.914-2.914a.25.25 0 00-.177-.073H3.75zM2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0113.25 16h-9.5A1.75 1.75 0 012 14.25V1.75zm6.23 3.508a.75.75 0 01.755.745l.01 1.497h1.497a.75.75 0 010 1.5H9v1.507a.75.75 0 01-1.5 0V9.005l-1.502.01a.75.75 0 11-.01-1.5l1.507-.01-.01-1.492a.75.75 0 01.745-.755z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileAddedIcon.defaultProps = {\n  className: 'octicon octicon-file-added',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileBadgeIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M2.75 1.5a.25.25 0 00-.25.25v11.5c0 .138.112.25.25.25h3.5a.75.75 0 010 1.5h-3.5A1.75 1.75 0 011 13.25V1.75C1 .784 1.784 0 2.75 0h8a1.75 1.75 0 011.508.862.75.75 0 11-1.289.768.25.25 0 00-.219-.13h-8z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M8 7a4 4 0 116.49 3.13l.995 4.973a.75.75 0 01-.991.852l-2.409-.876a.25.25 0 00-.17 0l-2.409.876a.75.75 0 01-.991-.852l.994-4.973A3.993 3.993 0 018 7zm4-2.5a2.5 2.5 0 100 5 2.5 2.5 0 000-5zm0 6.5a4 4 0 001.104-.154l.649 3.243-1.155-.42c-.386-.14-.81-.14-1.196 0l-1.155.42.649-3.243A4 4 0 0012 11z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileBadgeIcon.defaultProps = {\n  className: 'octicon octicon-file-badge',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileBinaryIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4 1.75C4 .784 4.784 0 5.75 0h5.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v8.586A1.75 1.75 0 0114.25 15h-9a.75.75 0 010-1.5h9a.25.25 0 00.25-.25V6h-2.75A1.75 1.75 0 0110 4.25V1.5H5.75a.25.25 0 00-.25.25v2a.75.75 0 01-1.5 0v-2zm7.5-.188V4.25c0 .138.112.25.25.25h2.688a.252.252 0 00-.011-.013l-2.914-2.914a.272.272 0 00-.013-.011zM0 7.75C0 6.784.784 6 1.75 6h1.5C4.216 6 5 6.784 5 7.75v2.5A1.75 1.75 0 013.25 12h-1.5A1.75 1.75 0 010 10.25v-2.5zm1.75-.25a.25.25 0 00-.25.25v2.5c0 .138.112.25.25.25h1.5a.25.25 0 00.25-.25v-2.5a.25.25 0 00-.25-.25h-1.5zm5-1.5a.75.75 0 000 1.5h.75v3h-.75a.75.75 0 000 1.5h3a.75.75 0 000-1.5H9V6.75A.75.75 0 008.25 6h-1.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3 3a2 2 0 012-2h9.982a2 2 0 011.414.586l4.018 4.018A2 2 0 0121 7.018V21a2 2 0 01-2 2H4.75a.75.75 0 010-1.5H19a.5.5 0 00.5-.5V8.5h-4a2 2 0 01-2-2v-4H5a.5.5 0 00-.5.5v6.25a.75.75 0 01-1.5 0V3zm12-.5v4a.5.5 0 00.5.5h4a.5.5 0 00-.146-.336l-4.018-4.018A.5.5 0 0015 2.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M0 13.75C0 12.784.784 12 1.75 12h3c.966 0 1.75.784 1.75 1.75v4a1.75 1.75 0 01-1.75 1.75h-3A1.75 1.75 0 010 17.75v-4zm1.75-.25a.25.25 0 00-.25.25v4c0 .138.112.25.25.25h3a.25.25 0 00.25-.25v-4a.25.25 0 00-.25-.25h-3z\\\"></path><path d=\\\"M9 12a.75.75 0 000 1.5h1.5V18H9a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5H12v-5.25a.75.75 0 00-.75-.75H9z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileBinaryIcon.defaultProps = {\n  className: 'octicon octicon-file-binary',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileCodeIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4 1.75C4 .784 4.784 0 5.75 0h5.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v8.586A1.75 1.75 0 0114.25 15h-9a.75.75 0 010-1.5h9a.25.25 0 00.25-.25V6h-2.75A1.75 1.75 0 0110 4.25V1.5H5.75a.25.25 0 00-.25.25v2.5a.75.75 0 01-1.5 0v-2.5zm7.5-.188V4.25c0 .138.112.25.25.25h2.688a.252.252 0 00-.011-.013l-2.914-2.914a.272.272 0 00-.013-.011zM5.72 6.72a.75.75 0 000 1.06l1.47 1.47-1.47 1.47a.75.75 0 101.06 1.06l2-2a.75.75 0 000-1.06l-2-2a.75.75 0 00-1.06 0zM3.28 7.78a.75.75 0 00-1.06-1.06l-2 2a.75.75 0 000 1.06l2 2a.75.75 0 001.06-1.06L1.81 9.25l1.47-1.47z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3 3a2 2 0 012-2h9.982a2 2 0 011.414.586l4.018 4.018A2 2 0 0121 7.018V21a2 2 0 01-2 2H4.75a.75.75 0 010-1.5H19a.5.5 0 00.5-.5V8.5h-4a2 2 0 01-2-2v-4H5a.5.5 0 00-.5.5v6.25a.75.75 0 01-1.5 0V3zm12-.5v4a.5.5 0 00.5.5h4a.5.5 0 00-.146-.336l-4.018-4.018A.5.5 0 0015 2.5z\\\"></path><path d=\\\"M4.53 12.24a.75.75 0 01-.039 1.06l-2.639 2.45 2.64 2.45a.75.75 0 11-1.022 1.1l-3.23-3a.75.75 0 010-1.1l3.23-3a.75.75 0 011.06.04zm3.979 1.06a.75.75 0 111.02-1.1l3.231 3a.75.75 0 010 1.1l-3.23 3a.75.75 0 11-1.021-1.1l2.639-2.45-2.64-2.45z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileCodeIcon.defaultProps = {\n  className: 'octicon octicon-file-code',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileDiffIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.75 1.5a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h10.5a.25.25 0 00.25-.25V4.664a.25.25 0 00-.073-.177l-2.914-2.914a.25.25 0 00-.177-.073H2.75zM1 1.75C1 .784 1.784 0 2.75 0h7.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0113.25 16H2.75A1.75 1.75 0 011 14.25V1.75zm7 1.5a.75.75 0 01.75.75v1.5h1.5a.75.75 0 010 1.5h-1.5v1.5a.75.75 0 01-1.5 0V7h-1.5a.75.75 0 010-1.5h1.5V4A.75.75 0 018 3.25zm-3 8a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M12.5 6.75a.75.75 0 00-1.5 0V9H8.75a.75.75 0 000 1.5H11v2.25a.75.75 0 001.5 0V10.5h2.25a.75.75 0 000-1.5H12.5V6.75zM8.75 16a.75.75 0 000 1.5h6a.75.75 0 000-1.5h-6z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M5 1a2 2 0 00-2 2v18a2 2 0 002 2h14a2 2 0 002-2V7.018a2 2 0 00-.586-1.414l-4.018-4.018A2 2 0 0014.982 1H5zm-.5 2a.5.5 0 01.5-.5h9.982a.5.5 0 01.354.146l4.018 4.018a.5.5 0 01.146.354V21a.5.5 0 01-.5.5H5a.5.5 0 01-.5-.5V3z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileDiffIcon.defaultProps = {\n  className: 'octicon octicon-file-diff',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileDirectoryIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-8.5a.25.25 0 00-.25-.25H7.5c-.55 0-1.07-.26-1.4-.7l-.9-1.2a.25.25 0 00-.2-.1H1.75zM0 2.75C0 1.784.784 1 1.75 1H5c.55 0 1.07.26 1.4.7l.9 1.2a.25.25 0 00.2.1h6.75c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0114.25 15H1.75A1.75 1.75 0 010 13.25V2.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 4.5a.25.25 0 00-.25.25v14.5c0 .138.112.25.25.25h16.5a.25.25 0 00.25-.25V7.687a.25.25 0 00-.25-.25h-8.471a1.75 1.75 0 01-1.447-.765L8.928 4.61a.25.25 0 00-.208-.11H3.75zM2 4.75C2 3.784 2.784 3 3.75 3h4.971c.58 0 1.12.286 1.447.765l1.404 2.063a.25.25 0 00.207.11h8.471c.966 0 1.75.783 1.75 1.75V19.25A1.75 1.75 0 0120.25 21H3.75A1.75 1.75 0 012 19.25V4.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileDirectoryIcon.defaultProps = {\n  className: 'octicon octicon-file-directory',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileDirectoryFillIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M1.75 1A1.75 1.75 0 000 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0016 13.25v-8.5A1.75 1.75 0 0014.25 3H7.5a.25.25 0 01-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 4.75C2 3.784 2.784 3 3.75 3h4.971c.58 0 1.12.286 1.447.765l1.404 2.063a.25.25 0 00.207.11h8.471c.966 0 1.75.783 1.75 1.75V19.25A1.75 1.75 0 0120.25 21H3.75A1.75 1.75 0 012 19.25V4.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileDirectoryFillIcon.defaultProps = {\n  className: 'octicon octicon-file-directory-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileDirectoryOpenFillIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M.513 1.513A1.75 1.75 0 011.75 1h3.5c.55 0 1.07.26 1.4.7l.9 1.2a.25.25 0 00.2.1H13a1 1 0 011 1v.5H2.75a.75.75 0 000 1.5h11.978a1 1 0 01.994 1.117L15 13.25A1.75 1.75 0 0113.25 15H1.75A1.75 1.75 0 010 13.25V2.75c0-.464.184-.91.513-1.237z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileDirectoryOpenFillIcon.defaultProps = {\n  className: 'octicon octicon-file-directory-open-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileMediaIcon(props) {\n  var svgDataByHeight = { \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.25 4a.25.25 0 00-.25.25v15.5c0 .138.112.25.25.25h3.178L14 10.977a1.75 1.75 0 012.506-.032L22 16.44V4.25a.25.25 0 00-.25-.25H2.25zm3.496 17.5H21.75a1.75 1.75 0 001.75-1.75V4.25a1.75 1.75 0 00-1.75-1.75H2.25A1.75 1.75 0 00.5 4.25v15.5c0 .966.784 1.75 1.75 1.75h3.496zM22 19.75v-1.19l-6.555-6.554a.25.25 0 00-.358.004L7.497 20H21.75a.25.25 0 00.25-.25zM9 9.25a1.75 1.75 0 11-3.5 0 1.75 1.75 0 013.5 0zm1.5 0a3.25 3.25 0 11-6.5 0 3.25 3.25 0 016.5 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileMediaIcon.defaultProps = {\n  className: 'octicon octicon-file-media',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileMovedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0113.25 16h-3.5a.75.75 0 010-1.5h3.5a.25.25 0 00.25-.25V4.664a.25.25 0 00-.073-.177l-2.914-2.914a.25.25 0 00-.177-.073H3.75a.25.25 0 00-.25.25v6.5a.75.75 0 01-1.5 0v-6.5z\\\"></path><path d=\\\"M5.427 15.573l3.146-3.146a.25.25 0 000-.354L5.427 8.927A.25.25 0 005 9.104V11.5H.75a.75.75 0 000 1.5H5v2.396c0 .223.27.335.427.177z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileMovedIcon.defaultProps = {\n  className: 'octicon octicon-file-moved',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileRemovedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 1.5a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 00.25-.25V4.664a.25.25 0 00-.073-.177l-2.914-2.914a.25.25 0 00-.177-.073H3.75zM2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0113.25 16h-9.5A1.75 1.75 0 012 14.25V1.75zM8.25 7.5h2.242a.75.75 0 010 1.5h-2.24l-2.254.015a.75.75 0 01-.01-1.5L8.25 7.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileRemovedIcon.defaultProps = {\n  className: 'octicon octicon-file-removed',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileSubmoduleIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 2.75C0 1.784.784 1 1.75 1H5c.55 0 1.07.26 1.4.7l.9 1.2a.25.25 0 00.2.1h6.75c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0114.25 15H1.75A1.75 1.75 0 010 13.25V2.75zm9.42 9.36l2.883-2.677a.25.25 0 000-.366L9.42 6.39a.25.25 0 00-.42.183V8.5H4.75a.75.75 0 100 1.5H9v1.927c0 .218.26.331.42.183z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 4.75C2 3.784 2.784 3 3.75 3h4.965a1.75 1.75 0 011.456.78l1.406 2.109a.25.25 0 00.208.111h8.465c.966 0 1.75.784 1.75 1.75v11.5A1.75 1.75 0 0120.25 21H3.75A1.75 1.75 0 012 19.25V4.75zm12.78 4.97a.75.75 0 10-1.06 1.06l1.72 1.72H6.75a.75.75 0 000 1.5h8.69l-1.72 1.72a.75.75 0 101.06 1.06l3-3a.75.75 0 000-1.06l-3-3z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileSubmoduleIcon.defaultProps = {\n  className: 'octicon octicon-file-submodule',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileSymlinkFileIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 1.75C2 .784 2.784 0 3.75 0h5.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v8.586A1.75 1.75 0 0112.25 15h-7a.75.75 0 010-1.5h7a.25.25 0 00.25-.25V6H9.75A1.75 1.75 0 018 4.25V1.5H3.75a.25.25 0 00-.25.25V4.5a.75.75 0 01-1.5 0V1.75zm7.5-.188V4.25c0 .138.112.25.25.25h2.688a.252.252 0 00-.011-.013L9.513 1.573a.248.248 0 00-.013-.011zm-8 10.675a2.25 2.25 0 012.262-2.25L4 9.99v1.938c0 .218.26.331.42.183l2.883-2.677a.25.25 0 000-.366L4.42 6.39a.25.25 0 00-.42.183V8.49l-.23-.001A3.75 3.75 0 000 12.238v1.012a.75.75 0 001.5 0v-1.013z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3 3a2 2 0 012-2h9.982a2 2 0 011.414.586l4.018 4.018A2 2 0 0121 7.018V21a2 2 0 01-2 2H4.75a.75.75 0 010-1.5H19a.5.5 0 00.5-.5V8.5h-4a2 2 0 01-2-2v-4H5a.5.5 0 00-.5.5v6.25a.75.75 0 01-1.5 0V3zm12-.5v4a.5.5 0 00.5.5h4a.5.5 0 00-.146-.336l-4.018-4.018A.5.5 0 0015 2.5zm-5.692 12l-2.104-2.236a.75.75 0 111.092-1.028l3.294 3.5a.75.75 0 010 1.028l-3.294 3.5a.75.75 0 11-1.092-1.028L9.308 16H4.09a2.59 2.59 0 00-2.59 2.59v3.16a.75.75 0 01-1.5 0v-3.16a4.09 4.09 0 014.09-4.09h5.218z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileSymlinkFileIcon.defaultProps = {\n  className: 'octicon octicon-file-symlink-file',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FileZipIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.5 1.75a.25.25 0 01.25-.25h3a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h2.086a.25.25 0 01.177.073l2.914 2.914a.25.25 0 01.073.177v8.586a.25.25 0 01-.25.25h-.5a.75.75 0 000 1.5h.5A1.75 1.75 0 0014 13.25V4.664c0-.464-.184-.909-.513-1.237L10.573.513A1.75 1.75 0 009.336 0H3.75A1.75 1.75 0 002 1.75v11.5c0 .649.353 1.214.874 1.515a.75.75 0 10.752-1.298.25.25 0 01-.126-.217V1.75zM8.75 3a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM6 5.25a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5A.75.75 0 016 5.25zm2 1.5A.75.75 0 018.75 6h.5a.75.75 0 010 1.5h-.5A.75.75 0 018 6.75zm-1.25.75a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM8 9.75A.75.75 0 018.75 9h.5a.75.75 0 010 1.5h-.5A.75.75 0 018 9.75zm-.75.75a1.75 1.75 0 00-1.75 1.75v3c0 .414.336.75.75.75h2.5a.75.75 0 00.75-.75v-3a1.75 1.75 0 00-1.75-1.75h-.5zM7 12.25a.25.25 0 01.25-.25h.5a.25.25 0 01.25.25v2.25H7v-2.25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M5 2.5a.5.5 0 00-.5.5v18a.5.5 0 00.5.5h1.75a.75.75 0 010 1.5H5a2 2 0 01-2-2V3a2 2 0 012-2h9.982a2 2 0 011.414.586l4.018 4.018A2 2 0 0121 7.018V21a2 2 0 01-2 2h-2.75a.75.75 0 010-1.5H19a.5.5 0 00.5-.5V7.018a.5.5 0 00-.146-.354l-4.018-4.018a.5.5 0 00-.354-.146H5z\\\"></path><path d=\\\"M11.5 15.75a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm.75-3.75a.75.75 0 000 1.5h1a.75.75 0 000-1.5h-1zm-.75-2.25a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zM12.25 6a.75.75 0 000 1.5h1a.75.75 0 000-1.5h-1zm-.75-2.25a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zM9.75 13.5a.75.75 0 000 1.5h1a.75.75 0 000-1.5h-1zM9 11.25a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm.75-3.75a.75.75 0 000 1.5h1a.75.75 0 000-1.5h-1zM9 5.25a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1A.75.75 0 019 5.25z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M11 17a2 2 0 00-2 2v4.25c0 .414.336.75.75.75h3.5a.75.75 0 00.75-.75V19a2 2 0 00-2-2h-1zm-.5 2a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v3.5h-2V19z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFileZipIcon.defaultProps = {\n  className: 'octicon octicon-file-zip',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FilterIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M.75 3a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H.75zM3 7.75A.75.75 0 013.75 7h8.5a.75.75 0 010 1.5h-8.5A.75.75 0 013 7.75zm3 4a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M2.75 6a.75.75 0 000 1.5h18.5a.75.75 0 000-1.5H2.75zM6 11.75a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75a.75.75 0 01-.75-.75zm4 4.938a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFilterIcon.defaultProps = {\n  className: 'octicon octicon-filter',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FlameIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.998 14.5c2.832 0 5-1.98 5-4.5 0-1.463-.68-2.19-1.879-3.383l-.036-.037c-1.013-1.008-2.3-2.29-2.834-4.434-.322.256-.63.579-.864.953-.432.696-.621 1.58-.046 2.73.473.947.67 2.284-.278 3.232-.61.61-1.545.84-2.403.633a2.788 2.788 0 01-1.436-.874A3.21 3.21 0 003 10c0 2.53 2.164 4.5 4.998 4.5zM9.533.753C9.496.34 9.16.009 8.77.146 7.035.75 4.34 3.187 5.997 6.5c.344.689.285 1.218.003 1.5-.419.419-1.54.487-2.04-.832-.173-.454-.659-.762-1.035-.454C2.036 7.44 1.5 8.702 1.5 10c0 3.512 2.998 6 6.498 6s6.5-2.5 6.5-6c0-2.137-1.128-3.26-2.312-4.438-1.19-1.184-2.436-2.425-2.653-4.81z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.185 21.5c4.059 0 7.065-2.84 7.065-6.75 0-2.337-1.093-3.489-2.678-5.158l-.021-.023c-1.44-1.517-3.139-3.351-3.649-6.557a6.14 6.14 0 00-1.911 1.76c-.787 1.144-1.147 2.633-.216 4.495.603 1.205.777 2.74-.277 3.794-.657.657-1.762 1.1-2.956.586-.752-.324-1.353-.955-1.838-1.79-.567.706-.954 1.74-.954 2.893 0 3.847 3.288 6.75 7.435 6.75zm2.08-19.873c-.017-.345-.296-.625-.632-.543-2.337.575-6.605 4.042-4.2 8.854.474.946.392 1.675.004 2.062-.64.64-1.874.684-2.875-1.815-.131-.327-.498-.509-.803-.334-1.547.888-2.509 2.86-2.509 4.899 0 4.829 4.122 8.25 8.935 8.25 4.812 0 8.565-3.438 8.565-8.25 0-2.939-1.466-4.482-3.006-6.102-1.61-1.694-3.479-3.476-3.479-7.021z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFlameIcon.defaultProps = {\n  className: 'octicon octicon-flame',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FoldIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M10.896 2H8.75V.75a.75.75 0 00-1.5 0V2H5.104a.25.25 0 00-.177.427l2.896 2.896a.25.25 0 00.354 0l2.896-2.896A.25.25 0 0010.896 2zM8.75 15.25a.75.75 0 01-1.5 0V14H5.104a.25.25 0 01-.177-.427l2.896-2.896a.25.25 0 01.354 0l2.896 2.896a.25.25 0 01-.177.427H8.75v1.25zm-6.5-6.5a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5zM6 8a.75.75 0 01-.75.75h-.5a.75.75 0 010-1.5h.5A.75.75 0 016 8zm2.25.75a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5zM12 8a.75.75 0 01-.75.75h-.5a.75.75 0 010-1.5h.5A.75.75 0 0112 8zm2.25.75a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 15a.75.75 0 01.53.22l3.25 3.25a.75.75 0 11-1.06 1.06L12 16.81l-2.72 2.72a.75.75 0 01-1.06-1.06l3.25-3.25A.75.75 0 0112 15z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 15.75a.75.75 0 01.75.75v5.75a.75.75 0 01-1.5 0V16.5a.75.75 0 01.75-.75zm.53-6.97a.75.75 0 01-1.06 0L8.22 5.53a.75.75 0 011.06-1.06L12 7.19l2.72-2.72a.75.75 0 111.06 1.06l-3.25 3.25z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 8.5a.75.75 0 01-.75-.75v-6a.75.75 0 011.5 0v6a.75.75 0 01-.75.75zM10.75 12a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm-8 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm12 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm-8 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm12 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFoldIcon.defaultProps = {\n  className: 'octicon octicon-fold',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FoldDownIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M8.177 14.323l2.896-2.896a.25.25 0 00-.177-.427H8.75V7.764a.75.75 0 10-1.5 0V11H5.104a.25.25 0 00-.177.427l2.896 2.896a.25.25 0 00.354 0zM2.25 5a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5zM6 4.25a.75.75 0 01-.75.75h-.5a.75.75 0 010-1.5h.5a.75.75 0 01.75.75zM8.25 5a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5zM12 4.25a.75.75 0 01-.75.75h-.5a.75.75 0 010-1.5h.5a.75.75 0 01.75.75zm2.25.75a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 19a.75.75 0 01-.53-.22l-3.25-3.25a.75.75 0 111.06-1.06L12 17.19l2.72-2.72a.75.75 0 111.06 1.06l-3.25 3.25A.75.75 0 0112 19z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 18a.75.75 0 01-.75-.75v-7.5a.75.75 0 011.5 0v7.5A.75.75 0 0112 18zM10.75 6a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm-8 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1A.75.75 0 012.75 6zm12 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm-8 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1A.75.75 0 016.75 6zm12 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFoldDownIcon.defaultProps = {\n  className: 'octicon octicon-fold-down',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction FoldUpIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M7.823 1.677L4.927 4.573A.25.25 0 005.104 5H7.25v3.236a.75.75 0 101.5 0V5h2.146a.25.25 0 00.177-.427L8.177 1.677a.25.25 0 00-.354 0zM13.75 11a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zm-3.75.75a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75zM7.75 11a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM4 11.75a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75zM1.75 11a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.47 5.22a.75.75 0 011.06 0l3.25 3.25a.75.75 0 01-1.06 1.06L12 6.81 9.28 9.53a.75.75 0 01-1.06-1.06l3.25-3.25z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 5.5a.75.75 0 01.75.75v8a.75.75 0 01-1.5 0v-8A.75.75 0 0112 5.5zM10.75 18a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm-8 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm12 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm-8 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm12 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nFoldUpIcon.defaultProps = {\n  className: 'octicon octicon-fold-up',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GearIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.429 1.525a6.593 6.593 0 011.142 0c.036.003.108.036.137.146l.289 1.105c.147.56.55.967.997 1.189.174.086.341.183.501.29.417.278.97.423 1.53.27l1.102-.303c.11-.03.175.016.195.046.219.31.41.641.573.989.014.031.022.11-.059.19l-.815.806c-.411.406-.562.957-.53 1.456a4.588 4.588 0 010 .582c-.032.499.119 1.05.53 1.456l.815.806c.08.08.073.159.059.19a6.494 6.494 0 01-.573.99c-.02.029-.086.074-.195.045l-1.103-.303c-.559-.153-1.112-.008-1.529.27-.16.107-.327.204-.5.29-.449.222-.851.628-.998 1.189l-.289 1.105c-.029.11-.101.143-.137.146a6.613 6.613 0 01-1.142 0c-.036-.003-.108-.037-.137-.146l-.289-1.105c-.147-.56-.55-.967-.997-1.189a4.502 4.502 0 01-.501-.29c-.417-.278-.97-.423-1.53-.27l-1.102.303c-.11.03-.175-.016-.195-.046a6.492 6.492 0 01-.573-.989c-.014-.031-.022-.11.059-.19l.815-.806c.411-.406.562-.957.53-1.456a4.587 4.587 0 010-.582c.032-.499-.119-1.05-.53-1.456l-.815-.806c-.08-.08-.073-.159-.059-.19a6.44 6.44 0 01.573-.99c.02-.029.086-.075.195-.045l1.103.303c.559.153 1.112.008 1.529-.27.16-.107.327-.204.5-.29.449-.222.851-.628.998-1.189l.289-1.105c.029-.11.101-.143.137-.146zM8 0c-.236 0-.47.01-.701.03-.743.065-1.29.615-1.458 1.261l-.29 1.106c-.017.066-.078.158-.211.224a5.994 5.994 0 00-.668.386c-.123.082-.233.09-.3.071L3.27 2.776c-.644-.177-1.392.02-1.82.63a7.977 7.977 0 00-.704 1.217c-.315.675-.111 1.422.363 1.891l.815.806c.05.048.098.147.088.294a6.084 6.084 0 000 .772c.01.147-.038.246-.088.294l-.815.806c-.474.469-.678 1.216-.363 1.891.2.428.436.835.704 1.218.428.609 1.176.806 1.82.63l1.103-.303c.066-.019.176-.011.299.071.213.143.436.272.668.386.133.066.194.158.212.224l.289 1.106c.169.646.715 1.196 1.458 1.26a8.094 8.094 0 001.402 0c.743-.064 1.29-.614 1.458-1.26l.29-1.106c.017-.066.078-.158.211-.224a5.98 5.98 0 00.668-.386c.123-.082.233-.09.3-.071l1.102.302c.644.177 1.392-.02 1.82-.63.268-.382.505-.789.704-1.217.315-.675.111-1.422-.364-1.891l-.814-.806c-.05-.048-.098-.147-.088-.294a6.1 6.1 0 000-.772c-.01-.147.039-.246.088-.294l.814-.806c.475-.469.679-1.216.364-1.891a7.992 7.992 0 00-.704-1.218c-.428-.609-1.176-.806-1.82-.63l-1.103.303c-.066.019-.176.011-.299-.071a5.991 5.991 0 00-.668-.386c-.133-.066-.194-.158-.212-.224L10.16 1.29C9.99.645 9.444.095 8.701.031A8.094 8.094 0 008 0zm1.5 8a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM11 8a3 3 0 11-6 0 3 3 0 016 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M16 12a4 4 0 11-8 0 4 4 0 018 0zm-1.5 0a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1c-.268 0-.534.01-.797.028-.763.055-1.345.617-1.512 1.304l-.352 1.45c-.02.078-.09.172-.225.22a8.45 8.45 0 00-.728.303c-.13.06-.246.044-.315.002l-1.274-.776c-.604-.368-1.412-.354-1.99.147-.403.348-.78.726-1.129 1.128-.5.579-.515 1.387-.147 1.99l.776 1.275c.042.069.059.185-.002.315-.112.237-.213.48-.302.728-.05.135-.143.206-.221.225l-1.45.352c-.687.167-1.249.749-1.304 1.512a11.149 11.149 0 000 1.594c.055.763.617 1.345 1.304 1.512l1.45.352c.078.02.172.09.22.225.09.248.191.491.303.729.06.129.044.245.002.314l-.776 1.274c-.368.604-.354 1.412.147 1.99.348.403.726.78 1.128 1.129.579.5 1.387.515 1.99.147l1.275-.776c.069-.042.185-.059.315.002.237.112.48.213.728.302.135.05.206.143.225.221l.352 1.45c.167.687.749 1.249 1.512 1.303a11.125 11.125 0 001.594 0c.763-.054 1.345-.616 1.512-1.303l.352-1.45c.02-.078.09-.172.225-.22.248-.09.491-.191.729-.303.129-.06.245-.044.314-.002l1.274.776c.604.368 1.412.354 1.99-.147.403-.348.78-.726 1.129-1.128.5-.579.515-1.387.147-1.99l-.776-1.275c-.042-.069-.059-.185.002-.315.112-.237.213-.48.302-.728.05-.135.143-.206.221-.225l1.45-.352c.687-.167 1.249-.749 1.303-1.512a11.125 11.125 0 000-1.594c-.054-.763-.616-1.345-1.303-1.512l-1.45-.352c-.078-.02-.172-.09-.22-.225a8.469 8.469 0 00-.303-.728c-.06-.13-.044-.246-.002-.315l.776-1.274c.368-.604.354-1.412-.147-1.99-.348-.403-.726-.78-1.128-1.129-.579-.5-1.387-.515-1.99-.147l-1.275.776c-.069.042-.185.059-.315-.002a8.465 8.465 0 00-.728-.302c-.135-.05-.206-.143-.225-.221l-.352-1.45c-.167-.687-.749-1.249-1.512-1.304A11.149 11.149 0 0012 1zm-.69 1.525a9.648 9.648 0 011.38 0c.055.004.135.05.162.16l.351 1.45c.153.628.626 1.08 1.173 1.278.205.074.405.157.6.249a1.832 1.832 0 001.733-.074l1.275-.776c.097-.06.186-.036.228 0 .348.302.674.628.976.976.036.042.06.13 0 .228l-.776 1.274a1.832 1.832 0 00-.074 1.734c.092.195.175.395.248.6.198.547.652 1.02 1.278 1.172l1.45.353c.111.026.157.106.161.161a9.653 9.653 0 010 1.38c-.004.055-.05.135-.16.162l-1.45.351a1.833 1.833 0 00-1.278 1.173 6.926 6.926 0 01-.25.6 1.832 1.832 0 00.075 1.733l.776 1.275c.06.097.036.186 0 .228a9.555 9.555 0 01-.976.976c-.042.036-.13.06-.228 0l-1.275-.776a1.832 1.832 0 00-1.733-.074 6.926 6.926 0 01-.6.248 1.833 1.833 0 00-1.172 1.278l-.353 1.45c-.026.111-.106.157-.161.161a9.653 9.653 0 01-1.38 0c-.055-.004-.135-.05-.162-.16l-.351-1.45a1.833 1.833 0 00-1.173-1.278 6.928 6.928 0 01-.6-.25 1.832 1.832 0 00-1.734.075l-1.274.776c-.097.06-.186.036-.228 0a9.56 9.56 0 01-.976-.976c-.036-.042-.06-.13 0-.228l.776-1.275a1.832 1.832 0 00.074-1.733 6.948 6.948 0 01-.249-.6 1.833 1.833 0 00-1.277-1.172l-1.45-.353c-.111-.026-.157-.106-.161-.161a9.648 9.648 0 010-1.38c.004-.055.05-.135.16-.162l1.45-.351a1.833 1.833 0 001.278-1.173 6.95 6.95 0 01.249-.6 1.832 1.832 0 00-.074-1.734l-.776-1.274c-.06-.097-.036-.186 0-.228.302-.348.628-.674.976-.976.042-.036.13-.06.228 0l1.274.776a1.832 1.832 0 001.734.074 6.95 6.95 0 01.6-.249 1.833 1.833 0 001.172-1.277l.353-1.45c.026-.111.106-.157.161-.161z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGearIcon.defaultProps = {\n  className: 'octicon octicon-gear',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GiftIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 1.5a1.25 1.25 0 100 2.5h2.309c-.233-.818-.542-1.401-.878-1.793-.43-.502-.915-.707-1.431-.707zM2 2.75c0 .45.108.875.3 1.25h-.55A1.75 1.75 0 000 5.75v2c0 .698.409 1.3 1 1.582v4.918c0 .966.784 1.75 1.75 1.75h10.5A1.75 1.75 0 0015 14.25V9.332c.591-.281 1-.884 1-1.582v-2A1.75 1.75 0 0014.25 4h-.55a2.75 2.75 0 00-2.45-4c-.984 0-1.874.42-2.57 1.23A5.086 5.086 0 008 2.274a5.086 5.086 0 00-.68-1.042C6.623.42 5.733 0 4.75 0A2.75 2.75 0 002 2.75zM8.941 4h2.309a1.25 1.25 0 100-2.5c-.516 0-1 .205-1.43.707-.337.392-.646.975-.879 1.793zm-1.84 1.5H1.75a.25.25 0 00-.25.25v2c0 .138.112.25.25.25h5.5V5.5h-.149zm1.649 0V8h5.5a.25.25 0 00.25-.25v-2a.25.25 0 00-.25-.25h-5.5zm0 4h4.75v4.75a.25.25 0 01-.25.25h-4.5v-5zm-1.5 0v5h-4.5a.25.25 0 01-.25-.25V9.5h4.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 3.75c0 .844.279 1.623.75 2.25H2.75A1.75 1.75 0 001 7.75v2.5c0 .698.409 1.3 1 1.582v8.418c0 .966.784 1.75 1.75 1.75h16.5A1.75 1.75 0 0022 20.25v-8.418c.591-.281 1-.884 1-1.582v-2.5A1.75 1.75 0 0021.25 6H19.5a3.75 3.75 0 00-3-6c-1.456 0-3.436.901-4.5 3.11C10.936.901 8.955 0 7.5 0a3.75 3.75 0 00-3.75 3.75zM11.22 6c-.287-3.493-2.57-4.5-3.72-4.5a2.25 2.25 0 000 4.5h3.72zm9.28 6v8.25a.25.25 0 01-.25.25h-7.5V12h7.75zm-9.25 8.5V12H3.5v8.25c0 .138.112.25.25.25h7.5zm10-10a.25.25 0 00.25-.25v-2.5a.25.25 0 00-.25-.25h-8.5v3h8.5zm-18.5 0h8.5v-3h-8.5a.25.25 0 00-.25.25v2.5c0 .138.112.25.25.25zm16-6.75A2.25 2.25 0 0116.5 6h-3.72c.287-3.493 2.57-4.5 3.72-4.5a2.25 2.25 0 012.25 2.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGiftIcon.defaultProps = {\n  className: 'octicon octicon-gift',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GitBranchIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122V6A2.5 2.5 0 0110 8.5H6a1 1 0 00-1 1v1.128a2.251 2.251 0 11-1.5 0V5.372a2.25 2.25 0 111.5 0v1.836A2.492 2.492 0 016 7h4a1 1 0 001-1v-.628A2.25 2.25 0 019.5 3.25zM4.25 12a.75.75 0 100 1.5.75.75 0 000-1.5zM3.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.75 21a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 19.25a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM5.75 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM18.25 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM15 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M5.75 16.75A.75.75 0 006.5 16V8A.75.75 0 005 8v8c0 .414.336.75.75.75z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M17.5 8.75v-1H19v1a3.75 3.75 0 01-3.75 3.75h-7a1.75 1.75 0 00-1.75 1.75H5A3.25 3.25 0 018.25 11h7a2.25 2.25 0 002.25-2.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGitBranchIcon.defaultProps = {\n  className: 'octicon octicon-git-branch',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GitCommitIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M15.5 11.75a3.5 3.5 0 11-7 0 3.5 3.5 0 017 0zm1.444-.75a5.001 5.001 0 00-9.888 0H2.75a.75.75 0 100 1.5h4.306a5.001 5.001 0 009.888 0h4.306a.75.75 0 100-1.5h-4.306z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGitCommitIcon.defaultProps = {\n  className: 'octicon octicon-git-commit',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GitCompareIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M9.573.677L7.177 3.073a.25.25 0 000 .354l2.396 2.396A.25.25 0 0010 5.646V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5h-1V.854a.25.25 0 00-.427-.177zM6 12v-1.646a.25.25 0 01.427-.177l2.396 2.396a.25.25 0 010 .354l-2.396 2.396A.25.25 0 016 15.146V13.5H5A2.5 2.5 0 012.5 11V5.372a2.25 2.25 0 111.5 0V11a1 1 0 001 1h1zm6.75 0a.75.75 0 100 1.5.75.75 0 000-1.5zM4 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M19.75 17.5a1.75 1.75 0 100 3.5 1.75 1.75 0 000-3.5zm-3.25 1.75a3.25 3.25 0 116.5 0 3.25 3.25 0 01-6.5 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M13.905 1.72a.75.75 0 010 1.06L12.685 4h4.065a3.75 3.75 0 013.75 3.75v8.75a.75.75 0 01-1.5 0V7.75a2.25 2.25 0 00-2.25-2.25h-4.064l1.22 1.22a.75.75 0 01-1.061 1.06l-2.5-2.5a.75.75 0 010-1.06l2.5-2.5a.75.75 0 011.06 0zM4.25 6.5a1.75 1.75 0 100-3.5 1.75 1.75 0 000 3.5zM7.5 4.75a3.25 3.25 0 11-6.5 0 3.25 3.25 0 016.5 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M10.095 22.28a.75.75 0 010-1.06l1.22-1.22H7.25a3.75 3.75 0 01-3.75-3.75V7.5a.75.75 0 011.5 0v8.75a2.25 2.25 0 002.25 2.25h4.064l-1.22-1.22a.75.75 0 111.061-1.06l2.5 2.5a.75.75 0 010 1.06l-2.5 2.5a.75.75 0 01-1.06 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGitCompareIcon.defaultProps = {\n  className: 'octicon octicon-git-compare',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GitMergeIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5 3.254V3.25v.005a.75.75 0 110-.005v.004zm.45 1.9a2.25 2.25 0 10-1.95.218v5.256a2.25 2.25 0 101.5 0V7.123A5.735 5.735 0 009.25 9h1.378a2.251 2.251 0 100-1.5H9.25a4.25 4.25 0 01-3.8-2.346zM12.75 9a.75.75 0 100-1.5.75.75 0 000 1.5zm-8.5 4.5a.75.75 0 100-1.5.75.75 0 000 1.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.75 21a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 19.25a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM5.75 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM18.25 15a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM15 13.25a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M6.5 7.25c0 2.9 2.35 5.25 5.25 5.25h4.5V14h-4.5A6.75 6.75 0 015 7.25h1.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M5.75 16.75A.75.75 0 006.5 16V8A.75.75 0 005 8v8c0 .414.336.75.75.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGitMergeIcon.defaultProps = {\n  className: 'octicon octicon-git-merge',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GitMergeQueueIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M3.75 4.5a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M3 7.75a.75.75 0 011.5 0v2.878a2.251 2.251 0 11-1.5 0V7.75zm.75 5.75a.75.75 0 100-1.5.75.75 0 000 1.5z\\\"></path><path d=\\\"M8.75 5.75a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M14.5 8.25a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-1.5 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGitMergeQueueIcon.defaultProps = {\n  className: 'octicon octicon-git-merge-queue',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GitPullRequestIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 3a1.75 1.75 0 100 3.5 1.75 1.75 0 000-3.5zM1.5 4.75a3.25 3.25 0 116.5 0 3.25 3.25 0 01-6.5 0zM4.75 17.5a1.75 1.75 0 100 3.5 1.75 1.75 0 000-3.5zM1.5 19.25a3.25 3.25 0 116.5 0 3.25 3.25 0 01-6.5 0zm17.75-1.75a1.75 1.75 0 100 3.5 1.75 1.75 0 000-3.5zM16 19.25a3.25 3.25 0 116.5 0 3.25 3.25 0 01-6.5 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 7.25A.75.75 0 015.5 8v8A.75.75 0 014 16V8a.75.75 0 01.75-.75zm8.655-5.53a.75.75 0 010 1.06L12.185 4h4.065A3.75 3.75 0 0120 7.75v8.75a.75.75 0 01-1.5 0V7.75a2.25 2.25 0 00-2.25-2.25h-4.064l1.22 1.22a.75.75 0 01-1.061 1.06l-2.5-2.5a.75.75 0 010-1.06l2.5-2.5a.75.75 0 011.06 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGitPullRequestIcon.defaultProps = {\n  className: 'octicon octicon-git-pull-request',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GitPullRequestClosedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.72 1.227a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 111.06 1.061l-.97.97.97.97a.75.75 0 01-1.06 1.06l-.97-.97-.97.97a.75.75 0 11-1.06-1.06l.97-.97-.97-.97a.75.75 0 010-1.06zM12.75 6.5a.75.75 0 00-.75.75v3.378a2.251 2.251 0 101.5 0V7.25a.75.75 0 00-.75-.75zm0 5.5a.75.75 0 100 1.5.75.75 0 000-1.5zM2.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.25 1a2.25 2.25 0 00-.75 4.372v5.256a2.251 2.251 0 101.5 0V5.372A2.25 2.25 0 003.25 1zm0 11a.75.75 0 100 1.5.75.75 0 000-1.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M22.266 2.711a.75.75 0 10-1.061-1.06l-1.983 1.983-1.984-1.983a.75.75 0 10-1.06 1.06l1.983 1.983-1.983 1.984a.75.75 0 001.06 1.06l1.984-1.983 1.983 1.983a.75.75 0 001.06-1.06l-1.983-1.984 1.984-1.983z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 1.5a3.25 3.25 0 00-.745 6.414A.758.758 0 004 8v8a.81.81 0 00.005.086A3.251 3.251 0 004.75 22.5a3.25 3.25 0 00.745-6.414A.758.758 0 005.5 16V8a.758.758 0 00-.005-.086A3.251 3.251 0 004.75 1.5zM3 4.75a1.75 1.75 0 113.5 0 1.75 1.75 0 01-3.5 0zm0 14.5a1.75 1.75 0 113.5 0 1.75 1.75 0 01-3.5 0zm13 0a3.251 3.251 0 012.5-3.163V9.625a.75.75 0 011.5 0v6.462a3.251 3.251 0 01-.75 6.413A3.25 3.25 0 0116 19.25zm3.25-1.75a1.75 1.75 0 100 3.5 1.75 1.75 0 000-3.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGitPullRequestClosedIcon.defaultProps = {\n  className: 'octicon octicon-git-pull-request-closed',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GitPullRequestDraftIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.25 1a2.25 2.25 0 00-.75 4.372v5.256a2.251 2.251 0 101.5 0V5.372A2.25 2.25 0 003.25 1zm0 11a.75.75 0 100 1.5.75.75 0 000-1.5zm9.5 3a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5zm0-3a.75.75 0 100 1.5.75.75 0 000-1.5z\\\"></path><path d=\\\"M14 7.5a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zm0-4.25a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 1.5a3.25 3.25 0 00-.745 6.414A.758.758 0 004 8v8a.81.81 0 00.005.086A3.251 3.251 0 004.75 22.5a3.25 3.25 0 00.745-6.414A.757.757 0 005.5 16V8a.758.758 0 00-.005-.086A3.251 3.251 0 004.75 1.5zM3 4.75a1.75 1.75 0 113.5 0 1.75 1.75 0 01-3.5 0zm0 14.5a1.75 1.75 0 113.5 0 1.75 1.75 0 01-3.5 0zm13 0a3.25 3.25 0 116.5 0 3.25 3.25 0 01-6.5 0zm3.25-1.75a1.75 1.75 0 100 3.5 1.75 1.75 0 000-3.5z\\\"></path><path d=\\\"M19.25 6a1.75 1.75 0 100-3.5 1.75 1.75 0 000 3.5zM21 11.25a1.75 1.75 0 11-3.5 0 1.75 1.75 0 013.5 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGitPullRequestDraftIcon.defaultProps = {\n  className: 'octicon octicon-git-pull-request-draft',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GlobeIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.543 7.25h2.733c.144-2.074.866-3.756 1.58-4.948.12-.197.237-.381.353-.552a6.506 6.506 0 00-4.666 5.5zm2.733 1.5H1.543a6.506 6.506 0 004.666 5.5 11.13 11.13 0 01-.352-.552c-.715-1.192-1.437-2.874-1.581-4.948zm1.504 0h4.44a9.637 9.637 0 01-1.363 4.177c-.306.51-.612.919-.857 1.215a9.978 9.978 0 01-.857-1.215A9.637 9.637 0 015.78 8.75zm4.44-1.5H5.78a9.637 9.637 0 011.363-4.177c.306-.51.612-.919.857-1.215.245.296.55.705.857 1.215A9.638 9.638 0 0110.22 7.25zm1.504 1.5c-.144 2.074-.866 3.756-1.58 4.948-.12.197-.237.381-.353.552a6.506 6.506 0 004.666-5.5h-2.733zm2.733-1.5h-2.733c-.144-2.074-.866-3.756-1.58-4.948a11.738 11.738 0 00-.353-.552 6.506 6.506 0 014.666 5.5zM8 0a8 8 0 100 16A8 8 0 008 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.513 11.5h4.745c.1-3.037 1.1-5.49 2.093-7.204.39-.672.78-1.233 1.119-1.673C6.11 3.329 2.746 7 2.513 11.5zm4.77 1.5H2.552a9.505 9.505 0 007.918 8.377 15.698 15.698 0 01-1.119-1.673C8.413 18.085 7.47 15.807 7.283 13zm1.504 0h6.426c-.183 2.48-1.02 4.5-1.862 5.951-.476.82-.95 1.455-1.304 1.88L12 20.89l-.047-.057a13.888 13.888 0 01-1.304-1.88C9.807 17.5 8.969 15.478 8.787 13zm6.454-1.5H8.759c.1-2.708.992-4.904 1.89-6.451.476-.82.95-1.455 1.304-1.88L12 3.11l.047.057c.353.426.828 1.06 1.304 1.88.898 1.548 1.79 3.744 1.89 6.452zm1.476 1.5c-.186 2.807-1.13 5.085-2.068 6.704-.39.672-.78 1.233-1.118 1.673A9.505 9.505 0 0021.447 13h-4.731zm4.77-1.5h-4.745c-.1-3.037-1.1-5.49-2.093-7.204-.39-.672-.78-1.233-1.119-1.673 4.36.706 7.724 4.377 7.957 8.877z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGlobeIcon.defaultProps = {\n  className: 'octicon octicon-globe',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GrabberIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10 13a1 1 0 100-2 1 1 0 000 2zm-4 0a1 1 0 100-2 1 1 0 000 2zm1-5a1 1 0 11-2 0 1 1 0 012 0zm3 1a1 1 0 100-2 1 1 0 000 2zm1-5a1 1 0 11-2 0 1 1 0 012 0zM6 5a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M15 18a1 1 0 100-2 1 1 0 000 2zm1-6a1 1 0 11-2 0 1 1 0 012 0zm-7 6a1 1 0 100-2 1 1 0 000 2zm0-5a1 1 0 100-2 1 1 0 000 2zm7-6a1 1 0 11-2 0 1 1 0 012 0zM9 8a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGrabberIcon.defaultProps = {\n  className: 'octicon octicon-grabber',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction GraphIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 1.75a.75.75 0 00-1.5 0v12.5c0 .414.336.75.75.75h14.5a.75.75 0 000-1.5H1.5V1.75zm14.28 2.53a.75.75 0 00-1.06-1.06L10 7.94 7.53 5.47a.75.75 0 00-1.06 0L3.22 8.72a.75.75 0 001.06 1.06L7 7.06l2.47 2.47a.75.75 0 001.06 0l5.25-5.25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M2.5 2.75a.75.75 0 00-1.5 0v18.5c0 .414.336.75.75.75H20a.75.75 0 000-1.5H2.5V2.75z\\\"></path><path d=\\\"M22.28 7.78a.75.75 0 00-1.06-1.06l-5.72 5.72-3.72-3.72a.75.75 0 00-1.06 0l-6 6a.75.75 0 101.06 1.06l5.47-5.47 3.72 3.72a.75.75 0 001.06 0l6.25-6.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nGraphIcon.defaultProps = {\n  className: 'octicon octicon-graph',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction HashIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.368 1.01a.75.75 0 01.623.859L6.57 4.5h3.98l.46-2.868a.75.75 0 011.48.237L12.07 4.5h2.18a.75.75 0 010 1.5h-2.42l-.64 4h2.56a.75.75 0 010 1.5h-2.8l-.46 2.869a.75.75 0 01-1.48-.237l.42-2.632H5.45l-.46 2.869a.75.75 0 01-1.48-.237l.42-2.632H1.75a.75.75 0 010-1.5h2.42l.64-4H2.25a.75.75 0 010-1.5h2.8l.46-2.868a.75.75 0 01.858-.622zM9.67 10l.64-4H6.33l-.64 4h3.98z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M9.618 1.76a.75.75 0 01.623.859L9.46 7.5h6.48l.82-5.118a.75.75 0 011.48.237L17.46 7.5h3.79a.75.75 0 010 1.5h-4.03l-.96 6h3.99a.75.75 0 110 1.5h-4.23l-.78 4.869a.75.75 0 01-1.48-.237l.74-4.632H8.02l-.78 4.869a.75.75 0 01-1.48-.237L6.5 16.5H2.745a.75.75 0 010-1.5H6.74l.96-6H3.75a.75.75 0 010-1.5h4.19l.82-5.118a.75.75 0 01.858-.622zM14.741 15l.96-6H9.22l-.96 6h6.48z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nHashIcon.defaultProps = {\n  className: 'octicon octicon-hash',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction HeadingIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 2a.75.75 0 01.75.75V7h7V2.75a.75.75 0 011.5 0v10.5a.75.75 0 01-1.5 0V8.5h-7v4.75a.75.75 0 01-1.5 0V2.75A.75.75 0 013.75 2z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.25 4a.75.75 0 01.75.75V11h10V4.75a.75.75 0 011.5 0v14.5a.75.75 0 01-1.5 0V12.5H7v6.75a.75.75 0 01-1.5 0V4.75A.75.75 0 016.25 4z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nHeadingIcon.defaultProps = {\n  className: 'octicon octicon-heading',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction HeartIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.25 2.5c-1.336 0-2.75 1.164-2.75 3 0 2.15 1.58 4.144 3.365 5.682A20.565 20.565 0 008 13.393a20.561 20.561 0 003.135-2.211C12.92 9.644 14.5 7.65 14.5 5.5c0-1.836-1.414-3-2.75-3-1.373 0-2.609.986-3.029 2.456a.75.75 0 01-1.442 0C6.859 3.486 5.623 2.5 4.25 2.5zM8 14.25l-.345.666-.002-.001-.006-.003-.018-.01a7.643 7.643 0 01-.31-.17 22.075 22.075 0 01-3.434-2.414C2.045 10.731 0 8.35 0 5.5 0 2.836 2.086 1 4.25 1 5.797 1 7.153 1.802 8 3.02 8.847 1.802 10.203 1 11.75 1 13.914 1 16 2.836 16 5.5c0 2.85-2.045 5.231-3.885 6.818a22.08 22.08 0 01-3.744 2.584l-.018.01-.006.003h-.002L8 14.25zm0 0l.345.666a.752.752 0 01-.69 0L8 14.25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.736 4C4.657 4 2.5 5.88 2.5 8.514c0 3.107 2.324 5.96 4.861 8.12a29.66 29.66 0 004.566 3.175l.073.041.073-.04c.271-.153.661-.38 1.13-.674.94-.588 2.19-1.441 3.436-2.502 2.537-2.16 4.861-5.013 4.861-8.12C21.5 5.88 19.343 4 17.264 4c-2.106 0-3.801 1.389-4.553 3.643a.75.75 0 01-1.422 0C10.537 5.389 8.841 4 6.736 4zM12 20.703l.343.667a.75.75 0 01-.686 0l.343-.667zM1 8.513C1 5.053 3.829 2.5 6.736 2.5 9.03 2.5 10.881 3.726 12 5.605 13.12 3.726 14.97 2.5 17.264 2.5 20.17 2.5 23 5.052 23 8.514c0 3.818-2.801 7.06-5.389 9.262a31.146 31.146 0 01-5.233 3.576l-.025.013-.007.003-.002.001-.344-.666-.343.667-.003-.002-.007-.003-.025-.013A29.308 29.308 0 0110 20.408a31.147 31.147 0 01-3.611-2.632C3.8 15.573 1 12.332 1 8.514z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nHeartIcon.defaultProps = {\n  className: 'octicon octicon-heart',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction HeartFillIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.655 14.916L8 14.25l.345.666a.752.752 0 01-.69 0zm0 0L8 14.25l.345.666.002-.001.006-.003.018-.01a7.643 7.643 0 00.31-.17 22.08 22.08 0 003.433-2.414C13.956 10.731 16 8.35 16 5.5 16 2.836 13.914 1 11.75 1 10.203 1 8.847 1.802 8 3.02 7.153 1.802 5.797 1 4.25 1 2.086 1 0 2.836 0 5.5c0 2.85 2.045 5.231 3.885 6.818a22.075 22.075 0 003.744 2.584l.018.01.006.003h.002z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M14 20.408c-.492.308-.903.546-1.192.709-.153.086-.308.17-.463.252h-.002a.75.75 0 01-.686 0 16.709 16.709 0 01-.465-.252 31.147 31.147 0 01-4.803-3.34C3.8 15.572 1 12.331 1 8.513 1 5.052 3.829 2.5 6.736 2.5 9.03 2.5 10.881 3.726 12 5.605 13.12 3.726 14.97 2.5 17.264 2.5 20.17 2.5 23 5.052 23 8.514c0 3.818-2.801 7.06-5.389 9.262A31.146 31.146 0 0114 20.408z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nHeartFillIcon.defaultProps = {\n  className: 'octicon octicon-heart-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction HistoryIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.643 3.143L.427 1.927A.25.25 0 000 2.104V5.75c0 .138.112.25.25.25h3.646a.25.25 0 00.177-.427L2.715 4.215a6.5 6.5 0 11-1.18 4.458.75.75 0 10-1.493.154 8.001 8.001 0 101.6-5.684zM7.75 4a.75.75 0 01.75.75v2.992l2.028.812a.75.75 0 01-.557 1.392l-2.5-1A.75.75 0 017 8.25v-3.5A.75.75 0 017.75 4z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M11.998 2.5A9.503 9.503 0 003.378 8H5.75a.75.75 0 010 1.5H2a1 1 0 01-1-1V4.75a.75.75 0 011.5 0v1.697A10.997 10.997 0 0111.998 1C18.074 1 23 5.925 23 12s-4.926 11-11.002 11C6.014 23 1.146 18.223 1 12.275a.75.75 0 011.5-.037 9.5 9.5 0 009.498 9.262c5.248 0 9.502-4.253 9.502-9.5s-4.254-9.5-9.502-9.5z\\\"></path><path d=\\\"M12.5 7.25a.75.75 0 00-1.5 0v5.5c0 .27.144.518.378.651l3.5 2a.75.75 0 00.744-1.302L12.5 12.315V7.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nHistoryIcon.defaultProps = {\n  className: 'octicon octicon-history',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction HomeIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.156 1.835a.25.25 0 00-.312 0l-5.25 4.2a.25.25 0 00-.094.196v7.019c0 .138.112.25.25.25H5.5V8.25a.75.75 0 01.75-.75h3.5a.75.75 0 01.75.75v5.25h2.75a.25.25 0 00.25-.25V6.23a.25.25 0 00-.094-.195l-5.25-4.2zM6.906.664a1.75 1.75 0 012.187 0l5.25 4.2c.415.332.657.835.657 1.367v7.019A1.75 1.75 0 0113.25 15h-3.5a.75.75 0 01-.75-.75V9H7v5.25a.75.75 0 01-.75.75h-3.5A1.75 1.75 0 011 13.25V6.23c0-.531.242-1.034.657-1.366l5.25-4.2h-.001z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.03 2.59a1.5 1.5 0 011.94 0l7.5 6.363a1.5 1.5 0 01.53 1.144V19.5a1.5 1.5 0 01-1.5 1.5h-5.75a.75.75 0 01-.75-.75V14h-2v6.25a.75.75 0 01-.75.75H4.5A1.5 1.5 0 013 19.5v-9.403c0-.44.194-.859.53-1.144l7.5-6.363zM12 3.734l-7.5 6.363V19.5h5v-6.25a.75.75 0 01.75-.75h3.5a.75.75 0 01.75.75v6.25h5v-9.403L12 3.734z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nHomeIcon.defaultProps = {\n  className: 'octicon octicon-home',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction HomeFillIcon(props) {\n  var svgDataByHeight = { \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M12.97 2.59a1.5 1.5 0 00-1.94 0l-7.5 6.363A1.5 1.5 0 003 10.097V19.5A1.5 1.5 0 004.5 21h4.75a.75.75 0 00.75-.75V14h4v6.25c0 .414.336.75.75.75h4.75a1.5 1.5 0 001.5-1.5v-9.403a1.5 1.5 0 00-.53-1.144l-7.5-6.363z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nHomeFillIcon.defaultProps = {\n  className: 'octicon octicon-home-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction HorizontalRuleIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 7.75A.75.75 0 01.75 7h14.5a.75.75 0 010 1.5H.75A.75.75 0 010 7.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 12.75a.75.75 0 01.75-.75h18.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nHorizontalRuleIcon.defaultProps = {\n  className: 'octicon octicon-horizontal-rule',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction HourglassIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.75 1a.75.75 0 000 1.5h.75v1.25a4.75 4.75 0 001.9 3.8l.333.25c.134.1.134.3 0 .4l-.333.25a4.75 4.75 0 00-1.9 3.8v1.25h-.75a.75.75 0 000 1.5h10.5a.75.75 0 000-1.5h-.75v-1.25a4.75 4.75 0 00-1.9-3.8l-.333-.25a.25.25 0 010-.4l.333-.25a4.75 4.75 0 001.9-3.8V2.5h.75a.75.75 0 000-1.5H2.75zM11 2.5H5v1.25a3.25 3.25 0 001.3 2.6l.333.25c.934.7.934 2.1 0 2.8l-.333.25a3.25 3.25 0 00-1.3 2.6v1.25h6v-1.25a3.25 3.25 0 00-1.3-2.6l-.333-.25a1.75 1.75 0 010-2.8l.333-.25a3.25 3.25 0 001.3-2.6V2.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 2a.75.75 0 000 1.5h.75v2.982a4.75 4.75 0 002.215 4.017l2.044 1.29a.25.25 0 010 .422l-2.044 1.29A4.75 4.75 0 005.5 17.518V20.5h-.75a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5h-.75v-2.982a4.75 4.75 0 00-2.215-4.017l-2.044-1.29a.25.25 0 010-.422l2.044-1.29A4.75 4.75 0 0018.5 6.482V3.5h.75a.75.75 0 000-1.5H4.75zM17 3.5H7v2.982A3.25 3.25 0 008.516 9.23l2.044 1.29a1.75 1.75 0 010 2.96l-2.044 1.29A3.25 3.25 0 007 17.518V20.5h10v-2.982a3.25 3.25 0 00-1.516-2.748l-2.044-1.29a1.75 1.75 0 010-2.96l2.044-1.29A3.25 3.25 0 0017 6.482V3.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nHourglassIcon.defaultProps = {\n  className: 'octicon octicon-hourglass',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction HubotIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 8a8 8 0 1116 0v5.25a.75.75 0 01-1.5 0V8a6.5 6.5 0 10-13 0v5.25a.75.75 0 01-1.5 0V8zm5.5 4.25a.75.75 0 01.75-.75h3.5a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75zM3 6.75C3 5.784 3.784 5 4.75 5h6.5c.966 0 1.75.784 1.75 1.75v1.5A1.75 1.75 0 0111.25 10h-6.5A1.75 1.75 0 013 8.25v-1.5zm1.47-.53a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 111.06 1.06l-1.5 1.5a.75.75 0 01-1.06 0L8 7.81l-.97.97a.75.75 0 01-1.06 0l-1.5-1.5a.75.75 0 010-1.06z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M0 13C0 6.373 5.373 1 12 1s12 5.373 12 12v8.657a.75.75 0 01-1.5 0V13c0-5.799-4.701-10.5-10.5-10.5S1.5 7.201 1.5 13v8.657a.75.75 0 01-1.5 0V13z\\\"></path><path d=\\\"M8 19.75a.75.75 0 01.75-.75h6.5a.75.75 0 010 1.5h-6.5a.75.75 0 01-.75-.75z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M5.25 9.5a1.75 1.75 0 00-1.75 1.75v3.5c0 .966.784 1.75 1.75 1.75h13.5a1.75 1.75 0 001.75-1.75v-3.5a1.75 1.75 0 00-1.75-1.75H5.25zm.22 1.47a.75.75 0 011.06 0L9 13.44l2.47-2.47a.75.75 0 011.06 0L15 13.44l2.47-2.47a.75.75 0 111.06 1.06l-3 3a.75.75 0 01-1.06 0L12 12.56l-2.47 2.47a.75.75 0 01-1.06 0l-3-3a.75.75 0 010-1.06z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nHubotIcon.defaultProps = {\n  className: 'octicon octicon-hubot',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction IdBadgeIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M3 7.5a.5.5 0 01.5-.5h2a.5.5 0 01.5.5v3a.5.5 0 01-.5.5h-2a.5.5 0 01-.5-.5v-3zm10 .25a.75.75 0 01-.75.75h-4.5a.75.75 0 010-1.5h4.5a.75.75 0 01.75.75zM10.25 11a.75.75 0 000-1.5h-2.5a.75.75 0 000 1.5h2.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M7.25 0A1.75 1.75 0 005.5 1.75V3H1.75A1.75 1.75 0 000 4.75v8.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0016 13.25v-8.5A1.75 1.75 0 0014.25 3H10.5V1.75A1.75 1.75 0 008.75 0h-1.5zm3.232 4.5A1.75 1.75 0 018.75 6h-1.5a1.75 1.75 0 01-1.732-1.5H1.75a.25.25 0 00-.25.25v8.5c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-8.5a.25.25 0 00-.25-.25h-3.768zM7 1.75a.25.25 0 01.25-.25h1.5a.25.25 0 01.25.25v2.5a.25.25 0 01-.25.25h-1.5A.25.25 0 017 4.25v-2.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nIdBadgeIcon.defaultProps = {\n  className: 'octicon octicon-id-badge',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ImageIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h.94a.76.76 0 01.03-.03l6.077-6.078a1.75 1.75 0 012.412-.06L14.5 10.31V2.75a.25.25 0 00-.25-.25H1.75zm12.5 11H4.81l5.048-5.047a.25.25 0 01.344-.009l4.298 3.889v.917a.25.25 0 01-.25.25zm1.75-.25V2.75A1.75 1.75 0 0014.25 1H1.75A1.75 1.75 0 000 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0016 13.25zM5.5 6a.5.5 0 11-1 0 .5.5 0 011 0zM7 6a2 2 0 11-4 0 2 2 0 014 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M19.25 4.5H4.75a.25.25 0 00-.25.25v14.5c0 .138.112.25.25.25h.19l9.823-9.823a1.75 1.75 0 012.475 0l2.262 2.262V4.75a.25.25 0 00-.25-.25zm.25 9.56l-3.323-3.323a.25.25 0 00-.354 0L7.061 19.5H19.25a.25.25 0 00.25-.25v-5.19zM4.75 3A1.75 1.75 0 003 4.75v14.5c0 .966.784 1.75 1.75 1.75h14.5A1.75 1.75 0 0021 19.25V4.75A1.75 1.75 0 0019.25 3H4.75zM8.5 9.5a1 1 0 100-2 1 1 0 000 2zm0 1.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nImageIcon.defaultProps = {\n  className: 'octicon octicon-image',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction InboxIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.8 2.06A1.75 1.75 0 014.41 1h7.18c.7 0 1.333.417 1.61 1.06l2.74 6.395a.75.75 0 01.06.295v4.5A1.75 1.75 0 0114.25 15H1.75A1.75 1.75 0 010 13.25v-4.5a.75.75 0 01.06-.295L2.8 2.06zm1.61.44a.25.25 0 00-.23.152L1.887 8H4.75a.75.75 0 01.6.3L6.625 10h2.75l1.275-1.7a.75.75 0 01.6-.3h2.863L11.82 2.652a.25.25 0 00-.23-.152H4.41zm10.09 7h-2.875l-1.275 1.7a.75.75 0 01-.6.3h-3.5a.75.75 0 01-.6-.3L4.375 9.5H1.5v3.75c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25V9.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.801 3.57A1.75 1.75 0 016.414 2.5h11.174c.702 0 1.337.42 1.611 1.067l3.741 8.828c.04.092.06.192.06.293v7.562A1.75 1.75 0 0121.25 22H2.75A1.75 1.75 0 011 20.25v-7.5c0-.1.02-.199.059-.291L4.8 3.571zM6.414 4a.25.25 0 00-.23.153L2.88 12H8a.75.75 0 01.648.372L10.18 15h3.638l1.533-2.628a.75.75 0 01.64-.372l5.13-.051-3.304-7.797a.25.25 0 00-.23-.152H6.414zM21.5 13.445l-5.067.05-1.535 2.633a.75.75 0 01-.648.372h-4.5a.75.75 0 01-.648-.372L7.57 13.5H2.5v6.75c0 .138.112.25.25.25h18.5a.25.25 0 00.25-.25v-6.805z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nInboxIcon.defaultProps = {\n  className: 'octicon octicon-inbox',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction InfinityIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.5 6c-1.086 0-2 .914-2 2 0 1.086.914 2 2 2 .525 0 1.122-.244 1.825-.727.51-.35 1.025-.79 1.561-1.273-.536-.483-1.052-.922-1.56-1.273C4.621 6.244 4.025 6 3.5 6zm4.5.984c-.59-.533-1.204-1.066-1.825-1.493-.797-.548-1.7-.991-2.675-.991C1.586 4.5 0 6.086 0 8s1.586 3.5 3.5 3.5c.975 0 1.878-.444 2.675-.991.621-.427 1.235-.96 1.825-1.493.59.533 1.204 1.066 1.825 1.493.797.547 1.7.991 2.675.991 1.914 0 3.5-1.586 3.5-3.5s-1.586-3.5-3.5-3.5c-.975 0-1.878.443-2.675.991-.621.427-1.235.96-1.825 1.493zM9.114 8c.536.483 1.052.922 1.56 1.273.704.483 1.3.727 1.826.727 1.086 0 2-.914 2-2 0-1.086-.914-2-2-2-.525 0-1.122.244-1.825.727-.51.35-1.025.79-1.561 1.273z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.25 8.5c-2.032 0-3.75 1.895-3.75 3.75S3.218 16 5.25 16c1.017 0 2.014-.457 3.062-1.253.89-.678 1.758-1.554 2.655-2.497-.897-.943-1.765-1.82-2.655-2.497C7.264 8.957 6.267 8.5 5.25 8.5zM12 11.16c-.887-.933-1.813-1.865-2.78-2.6C8.048 7.667 6.733 7 5.25 7 2.343 7 0 9.615 0 12.25s2.343 5.25 5.25 5.25c1.483 0 2.798-.668 3.97-1.56.967-.735 1.893-1.667 2.78-2.6.887.933 1.813 1.865 2.78 2.6 1.172.892 2.487 1.56 3.97 1.56 2.907 0 5.25-2.615 5.25-5.25S21.657 7 18.75 7c-1.483 0-2.798.668-3.97 1.56-.967.735-1.893 1.667-2.78 2.6zm1.033 1.09c.897.943 1.765 1.82 2.655 2.497C16.736 15.543 17.733 16 18.75 16c2.032 0 3.75-1.895 3.75-3.75S20.782 8.5 18.75 8.5c-1.017 0-2.014.457-3.062 1.253-.89.678-1.758 1.554-2.655 2.497z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nInfinityIcon.defaultProps = {\n  className: 'octicon octicon-infinity',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction InfoIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M13 7.5a1 1 0 11-2 0 1 1 0 012 0zm-3 3.75a.75.75 0 01.75-.75h1.5a.75.75 0 01.75.75v4.25h.75a.75.75 0 010 1.5h-3a.75.75 0 010-1.5h.75V12h-.75a.75.75 0 01-.75-.75z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nInfoIcon.defaultProps = {\n  className: 'octicon octicon-info',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction IssueClosedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M11.28 6.78a.75.75 0 00-1.06-1.06L7.25 8.69 5.78 7.22a.75.75 0 00-1.06 1.06l2 2a.75.75 0 001.06 0l3.5-3.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M16 8A8 8 0 110 8a8 8 0 0116 0zm-1.5 0a6.5 6.5 0 11-13 0 6.5 6.5 0 0113 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M17.28 9.28a.75.75 0 00-1.06-1.06l-5.97 5.97-2.47-2.47a.75.75 0 00-1.06 1.06l3 3a.75.75 0 001.06 0l6.5-6.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nIssueClosedIcon.defaultProps = {\n  className: 'octicon octicon-issue-closed',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction IssueDraftIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.749.097a8.054 8.054 0 012.502 0 .75.75 0 11-.233 1.482 6.554 6.554 0 00-2.036 0A.75.75 0 016.749.097zM4.345 1.693A.75.75 0 014.18 2.74a6.542 6.542 0 00-1.44 1.44.75.75 0 01-1.212-.883 8.042 8.042 0 011.769-1.77.75.75 0 011.048.166zm7.31 0a.75.75 0 011.048-.165 8.04 8.04 0 011.77 1.769.75.75 0 11-1.214.883 6.542 6.542 0 00-1.439-1.44.75.75 0 01-.165-1.047zM.955 6.125a.75.75 0 01.624.857 6.554 6.554 0 000 2.036.75.75 0 01-1.482.233 8.054 8.054 0 010-2.502.75.75 0 01.858-.624zm14.09 0a.75.75 0 01.858.624 8.057 8.057 0 010 2.502.75.75 0 01-1.482-.233 6.55 6.55 0 000-2.036.75.75 0 01.624-.857zm-13.352 5.53a.75.75 0 011.048.165 6.542 6.542 0 001.439 1.44.75.75 0 01-.883 1.212 8.04 8.04 0 01-1.77-1.769.75.75 0 01.166-1.048zm12.614 0a.75.75 0 01.165 1.048 8.038 8.038 0 01-1.769 1.77.75.75 0 11-.883-1.214 6.543 6.543 0 001.44-1.439.75.75 0 011.047-.165zm-8.182 3.39a.75.75 0 01.857-.624 6.55 6.55 0 002.036 0 .75.75 0 01.233 1.482 8.057 8.057 0 01-2.502 0 .75.75 0 01-.624-.858z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.157 1.154a11.07 11.07 0 013.686 0 .75.75 0 01-.25 1.479 9.568 9.568 0 00-3.186 0 .75.75 0 01-.25-1.48zM6.68 3.205a.75.75 0 01-.177 1.046A9.558 9.558 0 004.25 6.503a.75.75 0 01-1.223-.87 11.058 11.058 0 012.606-2.605.75.75 0 011.046.177zm10.64 0a.75.75 0 011.046-.177 11.058 11.058 0 012.605 2.606.75.75 0 11-1.222.869 9.558 9.558 0 00-2.252-2.252.75.75 0 01-.177-1.046zM2.018 9.543a.75.75 0 01.615.864 9.568 9.568 0 000 3.186.75.75 0 01-1.48.25 11.07 11.07 0 010-3.686.75.75 0 01.865-.614zm19.964 0a.75.75 0 01.864.614 11.066 11.066 0 010 3.686.75.75 0 01-1.479-.25 9.56 9.56 0 000-3.186.75.75 0 01.615-.864zM3.205 17.32a.75.75 0 011.046.177 9.558 9.558 0 002.252 2.252.75.75 0 11-.87 1.223 11.058 11.058 0 01-2.605-2.606.75.75 0 01.177-1.046zm17.59 0a.75.75 0 01.176 1.046 11.057 11.057 0 01-2.605 2.605.75.75 0 11-.869-1.222 9.558 9.558 0 002.252-2.252.75.75 0 011.046-.177zM9.543 21.982a.75.75 0 01.864-.615 9.56 9.56 0 003.186 0 .75.75 0 01.25 1.48 11.066 11.066 0 01-3.686 0 .75.75 0 01-.614-.865z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nIssueDraftIcon.defaultProps = {\n  className: 'octicon octicon-issue-draft',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction IssueOpenedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M8 9.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M8 0a8 8 0 100 16A8 8 0 008 0zM1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0zM12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zm0 13a2 2 0 100-4 2 2 0 000 4z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nIssueOpenedIcon.defaultProps = {\n  className: 'octicon octicon-issue-opened',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction IssueReopenedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M5.029 2.217a6.5 6.5 0 019.437 5.11.75.75 0 101.492-.154 8 8 0 00-14.315-4.03L.427 1.927A.25.25 0 000 2.104V5.75A.25.25 0 00.25 6h3.646a.25.25 0 00.177-.427L2.715 4.215a6.491 6.491 0 012.314-1.998zM1.262 8.169a.75.75 0 00-1.22.658 8.001 8.001 0 0014.315 4.03l1.216 1.216a.25.25 0 00.427-.177V10.25a.25.25 0 00-.25-.25h-3.646a.25.25 0 00-.177.427l1.358 1.358a6.501 6.501 0 01-11.751-3.11.75.75 0 00-.272-.506z\\\"></path><path d=\\\"M9.06 9.06a1.5 1.5 0 11-2.12-2.12 1.5 1.5 0 012.12 2.12z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M3.38 8A9.502 9.502 0 0112 2.5a9.502 9.502 0 019.215 7.182.75.75 0 101.456-.364C21.473 4.539 17.15 1 12 1a10.995 10.995 0 00-9.5 5.452V4.75a.75.75 0 00-1.5 0V8.5a1 1 0 001 1h3.75a.75.75 0 000-1.5H3.38zm-.595 6.318a.75.75 0 00-1.455.364C2.527 19.461 6.85 23 12 23c4.052 0 7.592-2.191 9.5-5.451v1.701a.75.75 0 001.5 0V15.5a1 1 0 00-1-1h-3.75a.75.75 0 000 1.5h2.37A9.502 9.502 0 0112 21.5c-4.446 0-8.181-3.055-9.215-7.182z\\\"></path><path d=\\\"M13.414 13.414a2 2 0 11-2.828-2.828 2 2 0 012.828 2.828z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nIssueReopenedIcon.defaultProps = {\n  className: 'octicon octicon-issue-reopened',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ItalicIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6 2.75A.75.75 0 016.75 2h6.5a.75.75 0 010 1.5h-2.505l-3.858 9H9.25a.75.75 0 010 1.5h-6.5a.75.75 0 010-1.5h2.505l3.858-9H6.75A.75.75 0 016 2.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10 4.75a.75.75 0 01.75-.75h8.5a.75.75 0 010 1.5h-3.514l-5.828 13h3.342a.75.75 0 010 1.5h-8.5a.75.75 0 010-1.5h3.514l5.828-13H10.75a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nItalicIcon.defaultProps = {\n  className: 'octicon octicon-italic',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction IterationsIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M2.5 7.25a4.75 4.75 0 019.5 0 .75.75 0 001.5 0 6.25 6.25 0 10-6.25 6.25H12v2.146c0 .223.27.335.427.177l2.896-2.896a.25.25 0 000-.354l-2.896-2.896a.25.25 0 00-.427.177V12H7.25A4.75 4.75 0 012.5 7.25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M2.5 10.5a8 8 0 1116 0 .75.75 0 001.5 0 9.5 9.5 0 10-9.5 9.5h10.94l-2.72 2.72a.75.75 0 101.06 1.06l3.735-3.735c.44-.439.44-1.151 0-1.59L19.78 14.72a.75.75 0 00-1.06 1.06l2.72 2.72H10.5a8 8 0 01-8-8z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nIterationsIcon.defaultProps = {\n  className: 'octicon octicon-iterations',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction KebabHorizontalIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6 12a2 2 0 11-4 0 2 2 0 014 0zm8 0a2 2 0 11-4 0 2 2 0 014 0zm6 2a2 2 0 100-4 2 2 0 000 4z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nKebabHorizontalIcon.defaultProps = {\n  className: 'octicon octicon-kebab-horizontal',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction KeyIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.5 5.5a4 4 0 112.731 3.795.75.75 0 00-.768.18L7.44 10.5H6.25a.75.75 0 00-.75.75v1.19l-.06.06H4.25a.75.75 0 00-.75.75v1.19l-.06.06H1.75a.25.25 0 01-.25-.25v-1.69l5.024-5.023a.75.75 0 00.181-.768A3.995 3.995 0 016.5 5.5zm4-5.5a5.5 5.5 0 00-5.348 6.788L.22 11.72a.75.75 0 00-.22.53v2C0 15.216.784 16 1.75 16h2a.75.75 0 00.53-.22l.5-.5a.75.75 0 00.22-.53V14h.75a.75.75 0 00.53-.22l.5-.5a.75.75 0 00.22-.53V12h.75a.75.75 0 00.53-.22l.932-.932A5.5 5.5 0 1010.5 0zm.5 6a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M16.75 8.5a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M15.75 0a8.25 8.25 0 00-7.851 10.79L.513 18.178A1.75 1.75 0 000 19.414v2.836C0 23.217.784 24 1.75 24h1.5A1.75 1.75 0 005 22.25v-1a.25.25 0 01.25-.25h2.735a.75.75 0 00.545-.22l.214-.213A.875.875 0 009 19.948V18.5a.25.25 0 01.25-.25h1.086c.464 0 .91-.184 1.237-.513l1.636-1.636A8.25 8.25 0 1015.75 0zM9 8.25a6.75 6.75 0 114.288 6.287.75.75 0 00-.804.168l-1.971 1.972a.25.25 0 01-.177.073H9.25A1.75 1.75 0 007.5 18.5v1H5.25a1.75 1.75 0 00-1.75 1.75v1a.25.25 0 01-.25.25h-1.5a.25.25 0 01-.25-.25v-2.836a.25.25 0 01.073-.177l7.722-7.721a.75.75 0 00.168-.804A6.73 6.73 0 019 8.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nKeyIcon.defaultProps = {\n  className: 'octicon octicon-key',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction KeyAsteriskIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 2.75A2.75 2.75 0 012.75 0h10.5A2.75 2.75 0 0116 2.75v10.5A2.75 2.75 0 0113.25 16H2.75A2.75 2.75 0 010 13.25V2.75zM2.75 1.5c-.69 0-1.25.56-1.25 1.25v10.5c0 .69.56 1.25 1.25 1.25h10.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25H2.75z\\\"></path><path d=\\\"M8 4a.75.75 0 01.75.75V6.7l1.69-.975a.75.75 0 01.75 1.3L9.5 8l1.69.976a.75.75 0 01-.75 1.298L8.75 9.3v1.951a.75.75 0 01-1.5 0V9.299l-1.69.976a.75.75 0 01-.75-1.3L6.5 8l-1.69-.975a.75.75 0 01.75-1.3l1.69.976V4.75A.75.75 0 018 4z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nKeyAsteriskIcon.defaultProps = {\n  className: 'octicon octicon-key-asterisk',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction LawIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.75.75a.75.75 0 00-1.5 0V2h-.984c-.305 0-.604.08-.869.23l-1.288.737A.25.25 0 013.984 3H1.75a.75.75 0 000 1.5h.428L.066 9.192a.75.75 0 00.154.838l.53-.53-.53.53v.001l.002.002.002.002.006.006.016.015.045.04a3.514 3.514 0 00.686.45A4.492 4.492 0 003 11c.88 0 1.556-.22 2.023-.454a3.515 3.515 0 00.686-.45l.045-.04.016-.015.006-.006.002-.002.001-.002L5.25 9.5l.53.53a.75.75 0 00.154-.838L3.822 4.5h.162c.305 0 .604-.08.869-.23l1.289-.737a.25.25 0 01.124-.033h.984V13h-2.5a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-2.5V3.5h.984a.25.25 0 01.124.033l1.29.736c.264.152.563.231.868.231h.162l-2.112 4.692a.75.75 0 00.154.838l.53-.53-.53.53v.001l.002.002.002.002.006.006.016.015.045.04a3.517 3.517 0 00.686.45A4.492 4.492 0 0013 11c.88 0 1.556-.22 2.023-.454a3.512 3.512 0 00.686-.45l.045-.04.01-.01.006-.005.006-.006.002-.002.001-.002-.529-.531.53.53a.75.75 0 00.154-.838L13.823 4.5h.427a.75.75 0 000-1.5h-2.234a.25.25 0 01-.124-.033l-1.29-.736A1.75 1.75 0 009.735 2H8.75V.75zM1.695 9.227c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327l-1.305 2.9zm10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327l-1.305 2.9z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.75 2.75a.75.75 0 00-1.5 0V4.5H9.276a1.75 1.75 0 00-.985.303L6.596 5.957A.25.25 0 016.455 6H2.353a.75.75 0 100 1.5H3.93L.563 15.18a.762.762 0 00.21.88c.08.064.161.125.309.221.186.121.452.278.792.433.68.311 1.662.62 2.876.62a6.919 6.919 0 002.876-.62c.34-.155.606-.312.792-.433.15-.097.23-.158.31-.223a.75.75 0 00.209-.878L5.569 7.5h.886c.351 0 .694-.106.984-.303l1.696-1.154A.25.25 0 019.275 6h1.975v14.5H6.763a.75.75 0 000 1.5h10.474a.75.75 0 000-1.5H12.75V6h1.974c.05 0 .1.015.14.043l1.697 1.154c.29.197.633.303.984.303h.886l-3.368 7.68a.75.75 0 00.23.896c.012.009 0 0 .002 0a3.154 3.154 0 00.31.206c.185.112.45.256.79.4a7.343 7.343 0 002.855.568 7.343 7.343 0 002.856-.569c.338-.143.604-.287.79-.399a3.5 3.5 0 00.31-.206.75.75 0 00.23-.896L20.07 7.5h1.578a.75.75 0 000-1.5h-4.102a.25.25 0 01-.14-.043l-1.697-1.154a1.75 1.75 0 00-.984-.303H12.75V2.75zM2.193 15.198a5.418 5.418 0 002.557.635 5.418 5.418 0 002.557-.635L4.75 9.368l-2.557 5.83zm14.51-.024c.082.04.174.083.275.126.53.223 1.305.45 2.272.45a5.846 5.846 0 002.547-.576L19.25 9.367l-2.547 5.807z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nLawIcon.defaultProps = {\n  className: 'octicon octicon-law',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction LightBulbIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 01-1.484.211c-.04-.282-.163-.547-.37-.847a8.695 8.695 0 00-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.75.75 0 01-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75zM6 15.25a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75zM5.75 12a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 2.5c-3.81 0-6.5 2.743-6.5 6.119 0 1.536.632 2.572 1.425 3.56.172.215.347.422.527.635l.096.112c.21.25.427.508.63.774.404.531.783 1.128.995 1.834a.75.75 0 01-1.436.432c-.138-.46-.397-.89-.753-1.357a18.354 18.354 0 00-.582-.714l-.092-.11c-.18-.212-.37-.436-.555-.667C4.87 12.016 4 10.651 4 8.618 4 4.363 7.415 1 12 1s8 3.362 8 7.619c0 2.032-.87 3.397-1.755 4.5-.185.23-.375.454-.555.667l-.092.109c-.21.248-.405.481-.582.714-.356.467-.615.898-.753 1.357a.75.75 0 01-1.437-.432c.213-.706.592-1.303.997-1.834.202-.266.419-.524.63-.774l.095-.112c.18-.213.355-.42.527-.634.793-.99 1.425-2.025 1.425-3.561C18.5 5.243 15.81 2.5 12 2.5zM9.5 21.75a.75.75 0 01.75-.75h3.5a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75zM8.75 18a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nLightBulbIcon.defaultProps = {\n  className: 'octicon octicon-light-bulb',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction LinkIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M14.78 3.653a3.936 3.936 0 115.567 5.567l-3.627 3.627a3.936 3.936 0 01-5.88-.353.75.75 0 00-1.18.928 5.436 5.436 0 008.12.486l3.628-3.628a5.436 5.436 0 10-7.688-7.688l-3 3a.75.75 0 001.06 1.061l3-3z\\\"></path><path d=\\\"M7.28 11.153a3.936 3.936 0 015.88.353.75.75 0 001.18-.928 5.436 5.436 0 00-8.12-.486L2.592 13.72a5.436 5.436 0 107.688 7.688l3-3a.75.75 0 10-1.06-1.06l-3 3a3.936 3.936 0 01-5.567-5.568l3.627-3.627z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nLinkIcon.defaultProps = {\n  className: 'octicon octicon-link',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction LinkExternalIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M15.5 2.25a.75.75 0 01.75-.75h5.5a.75.75 0 01.75.75v5.5a.75.75 0 01-1.5 0V4.06l-6.22 6.22a.75.75 0 11-1.06-1.06L19.94 3h-3.69a.75.75 0 01-.75-.75z\\\"></path><path d=\\\"M2.5 4.25c0-.966.784-1.75 1.75-1.75h8.5a.75.75 0 010 1.5h-8.5a.25.25 0 00-.25.25v15.5c0 .138.112.25.25.25h15.5a.25.25 0 00.25-.25v-8.5a.75.75 0 011.5 0v8.5a1.75 1.75 0 01-1.75 1.75H4.25a1.75 1.75 0 01-1.75-1.75V4.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nLinkExternalIcon.defaultProps = {\n  className: 'octicon octicon-link-external',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ListOrderedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.003 2.5a.5.5 0 00-.723-.447l-1.003.5a.5.5 0 00.446.895l.28-.14V6H.5a.5.5 0 000 1h2.006a.5.5 0 100-1h-.503V2.5zM5 3.25a.75.75 0 01.75-.75h8.5a.75.75 0 010 1.5h-8.5A.75.75 0 015 3.25zm0 5a.75.75 0 01.75-.75h8.5a.75.75 0 010 1.5h-8.5A.75.75 0 015 8.25zm0 5a.75.75 0 01.75-.75h8.5a.75.75 0 010 1.5h-8.5a.75.75 0 01-.75-.75zM.924 10.32l.003-.004a.851.851 0 01.144-.153A.66.66 0 011.5 10c.195 0 .306.068.374.146a.57.57 0 01.128.376c0 .453-.269.682-.8 1.078l-.035.025C.692 11.98 0 12.495 0 13.5a.5.5 0 00.5.5h2.003a.5.5 0 000-1H1.146c.132-.197.351-.372.654-.597l.047-.035c.47-.35 1.156-.858 1.156-1.845 0-.365-.118-.744-.377-1.038-.268-.303-.658-.484-1.126-.484-.48 0-.84.202-1.068.392a1.858 1.858 0 00-.348.384l-.007.011-.002.004-.001.002-.001.001a.5.5 0 00.851.525zM.5 10.055l-.427-.26.427.26z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M3.604 3.089A.75.75 0 014 3.75V8.5h.75a.75.75 0 010 1.5h-3a.75.75 0 110-1.5h.75V5.151l-.334.223a.75.75 0 01-.832-1.248l1.5-1a.75.75 0 01.77-.037zM8.75 5.5a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zm0 6a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zm0 6a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zM5.5 15.75c0-.704-.271-1.286-.72-1.686a2.302 2.302 0 00-1.53-.564c-.535 0-1.094.178-1.53.565-.449.399-.72.982-.72 1.685a.75.75 0 001.5 0c0-.296.104-.464.217-.564A.805.805 0 013.25 15c.215 0 .406.072.533.185.113.101.217.268.217.565 0 .332-.069.48-.21.657-.092.113-.216.24-.403.419l-.147.14c-.152.144-.33.313-.52.504l-1.5 1.5a.75.75 0 00-.22.53v.25c0 .414.336.75.75.75H5A.75.75 0 005 19H3.31l.47-.47c.176-.176.333-.324.48-.465l.165-.156a5.98 5.98 0 00.536-.566c.358-.447.539-.925.539-1.593z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nListOrderedIcon.defaultProps = {\n  className: 'octicon octicon-list-ordered',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ListUnorderedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 4a1 1 0 100-2 1 1 0 000 2zm3.75-1.5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zM3 8a1 1 0 11-2 0 1 1 0 012 0zm-1 6a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4 7a1 1 0 100-2 1 1 0 000 2zm4.75-1.5a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zm0 6a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zm0 6a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zM5 12a1 1 0 11-2 0 1 1 0 012 0zm-1 7a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nListUnorderedIcon.defaultProps = {\n  className: 'octicon octicon-list-unordered',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction LocationIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.536 3.464a5 5 0 010 7.072L8 14.07l-3.536-3.535a5 5 0 117.072-7.072v.001zm1.06 8.132a6.5 6.5 0 10-9.192 0l3.535 3.536a1.5 1.5 0 002.122 0l3.535-3.536zM8 9a2 2 0 100-4 2 2 0 000 4z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M12 13.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M19.071 3.429C15.166-.476 8.834-.476 4.93 3.429c-3.905 3.905-3.905 10.237 0 14.142l.028.028 5.375 5.375a2.359 2.359 0 003.336 0l5.403-5.403c3.905-3.905 3.905-10.237 0-14.142zM5.99 4.489A8.5 8.5 0 0118.01 16.51l-5.403 5.404a.859.859 0 01-1.214 0l-5.378-5.378-.002-.002-.023-.024a8.5 8.5 0 010-12.02z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nLocationIcon.defaultProps = {\n  className: 'octicon octicon-location',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction LockIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4 4v2h-.25A1.75 1.75 0 002 7.75v5.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-5.5A1.75 1.75 0 0012.25 6H12V4a4 4 0 10-8 0zm6.5 2V4a2.5 2.5 0 00-5 0v2h5zM12 7.5h.25a.25.25 0 01.25.25v5.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-5.5a.25.25 0 01.25-.25H12z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6 9V7.25C6 3.845 8.503 1 12 1s6 2.845 6 6.25V9h.5a2.5 2.5 0 012.5 2.5v8a2.5 2.5 0 01-2.5 2.5h-13A2.5 2.5 0 013 19.5v-8A2.5 2.5 0 015.5 9H6zm1.5-1.75C7.5 4.58 9.422 2.5 12 2.5c2.578 0 4.5 2.08 4.5 4.75V9h-9V7.25zm-3 4.25a1 1 0 011-1h13a1 1 0 011 1v8a1 1 0 01-1 1h-13a1 1 0 01-1-1v-8z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nLockIcon.defaultProps = {\n  className: 'octicon octicon-lock',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction LogIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M5 8.25a.75.75 0 01.75-.75h4a.75.75 0 010 1.5h-4A.75.75 0 015 8.25zM4 10.5A.75.75 0 004 12h4a.75.75 0 000-1.5H4z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M13-.005H3a3 3 0 00-3 3c0 .676.224 1.254.603 1.722.526.65 1.331.783 1.907.783h1.177c-.364.662-.814 1.339-1.287 2.048-.205.309-.414.624-.623.946C.891 9.865 0 11.418 0 13a3 3 0 003 3h10a3 3 0 001.667-5.494.75.75 0 00-.834 1.246A1.5 1.5 0 1111.5 13c0-.642.225-1.347.623-2.136.397-.787.933-1.593 1.501-2.446l.011-.017c.554-.83 1.139-1.709 1.582-2.588.445-.885.783-1.836.783-2.818 0-1.672-1.346-3-3-3zm-10 1.5a1.5 1.5 0 00-1.5 1.5c0 .321.1.569.27.778.097.12.325.227.74.227h7.674A2.737 2.737 0 0110 2.995c0-.546.146-1.059.401-1.5H3zm10 0c.831 0 1.5.662 1.5 1.5 0 .646-.225 1.353-.623 2.143-.398.79-.933 1.595-1.501 2.448l-.017.026c-.552.828-1.134 1.702-1.575 2.576C10.338 11.072 10 12.021 10 13c0 .546.146 1.059.401 1.5H3A1.5 1.5 0 011.5 13c0-1.084.63-2.289 1.537-3.692.177-.274.366-.556.558-.845.632-.948 1.306-1.96 1.773-2.963h6.382a.75.75 0 00.417-1.373c-.444-.298-.667-.656-.667-1.132a1.5 1.5 0 011.5-1.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nLogIcon.defaultProps = {\n  className: 'octicon octicon-log',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction LogoGistIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 25, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.7 8.73h2.45v4.02c-.55.27-1.64.34-2.53.34-2.56 0-3.47-2.2-3.47-5.05 0-2.85.91-5.06 3.48-5.06 1.28 0 2.06.23 3.28.73V2.66C7.27 2.33 6.25 2 4.63 2 1.13 2 0 4.69 0 8.03c0 3.34 1.11 6.03 4.63 6.03 1.64 0 2.81-.27 3.59-.64V7.73H4.7v1zm6.39 3.72V6.06h-1.05v6.28c0 1.25.58 1.72 1.72 1.72v-.89c-.48 0-.67-.16-.67-.7v-.02zm.25-8.72c0-.44-.33-.78-.78-.78s-.77.34-.77.78.33.78.77.78.78-.34.78-.78zm4.34 5.69c-1.5-.13-1.78-.48-1.78-1.17 0-.77.33-1.34 1.88-1.34 1.05 0 1.66.16 2.27.36v-.94c-.69-.3-1.52-.39-2.25-.39-2.2 0-2.92 1.2-2.92 2.31 0 1.08.47 1.88 2.73 2.08 1.55.13 1.77.63 1.77 1.34 0 .73-.44 1.42-2.06 1.42-1.11 0-1.86-.19-2.33-.36v.94c.5.2 1.58.39 2.33.39 2.38 0 3.14-1.2 3.14-2.41 0-1.28-.53-2.03-2.75-2.23h-.03zm8.58-2.47v-.86h-2.42v-2.5l-1.08.31v2.11l-1.56.44v.48h1.56v5c0 1.53 1.19 2.13 2.5 2.13.19 0 .52-.02.69-.05v-.89c-.19.03-.41.03-.61.03-.97 0-1.5-.39-1.5-1.34V6.94h2.42v.02-.01z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nLogoGistIcon.defaultProps = {\n  className: 'octicon octicon-logo-gist',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction LogoGithubIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 45, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M18.53 12.03h-.02c.009 0 .015.01.024.011h.006l-.01-.01zm.004.011c-.093.001-.327.05-.574.05-.78 0-1.05-.36-1.05-.83V8.13h1.59c.09 0 .16-.08.16-.19v-1.7c0-.09-.08-.17-.16-.17h-1.59V3.96c0-.08-.05-.13-.14-.13h-2.16c-.09 0-.14.05-.14.13v2.17s-1.09.27-1.16.28c-.08.02-.13.09-.13.17v1.36c0 .11.08.19.17.19h1.11v3.28c0 2.44 1.7 2.69 2.86 2.69.53 0 1.17-.17 1.27-.22.06-.02.09-.09.09-.16v-1.5a.177.177 0 00-.146-.18zM42.23 9.84c0-1.81-.73-2.05-1.5-1.97-.6.04-1.08.34-1.08.34v3.52s.49.34 1.22.36c1.03.03 1.36-.34 1.36-2.25zm2.43-.16c0 3.43-1.11 4.41-3.05 4.41-1.64 0-2.52-.83-2.52-.83s-.04.46-.09.52c-.03.06-.08.08-.14.08h-1.48c-.1 0-.19-.08-.19-.17l.02-11.11c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v3.77s.82-.53 2.02-.53l-.01-.02c1.2 0 2.97.45 2.97 3.88zm-8.72-3.61h-2.1c-.11 0-.17.08-.17.19v5.44s-.55.39-1.3.39-.97-.34-.97-1.09V6.25c0-.09-.08-.17-.17-.17h-2.14c-.09 0-.17.08-.17.17v5.11c0 2.2 1.23 2.75 2.92 2.75 1.39 0 2.52-.77 2.52-.77s.05.39.08.45c.02.05.09.09.16.09h1.34c.11 0 .17-.08.17-.17l.02-7.47c0-.09-.08-.17-.19-.17zm-23.7-.01h-2.13c-.09 0-.17.09-.17.2v7.34c0 .2.13.27.3.27h1.92c.2 0 .25-.09.25-.27V6.23c0-.09-.08-.17-.17-.17zm-1.05-3.38c-.77 0-1.38.61-1.38 1.38 0 .77.61 1.38 1.38 1.38.75 0 1.36-.61 1.36-1.38 0-.77-.61-1.38-1.36-1.38zm16.49-.25h-2.11c-.09 0-.17.08-.17.17v4.09h-3.31V2.6c0-.09-.08-.17-.17-.17h-2.13c-.09 0-.17.08-.17.17v11.11c0 .09.09.17.17.17h2.13c.09 0 .17-.08.17-.17V8.96h3.31l-.02 4.75c0 .09.08.17.17.17h2.13c.09 0 .17-.08.17-.17V2.6c0-.09-.08-.17-.17-.17zM8.81 7.35v5.74c0 .04-.01.11-.06.13 0 0-1.25.89-3.31.89-2.49 0-5.44-.78-5.44-5.92S2.58 1.99 5.1 2c2.18 0 3.06.49 3.2.58.04.05.06.09.06.14L7.94 4.5c0 .09-.09.2-.2.17-.36-.11-.9-.33-2.17-.33-1.47 0-3.05.42-3.05 3.73s1.5 3.7 2.58 3.7c.92 0 1.25-.11 1.25-.11v-2.3H4.88c-.11 0-.19-.08-.19-.17V7.35c0-.09.08-.17.19-.17h3.74c.11 0 .19.08.19.17z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nLogoGithubIcon.defaultProps = {\n  className: 'octicon octicon-logo-github',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MailIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 2A1.75 1.75 0 000 3.75v.736a.75.75 0 000 .027v7.737C0 13.216.784 14 1.75 14h12.5A1.75 1.75 0 0016 12.25v-8.5A1.75 1.75 0 0014.25 2H1.75zM14.5 4.07v-.32a.25.25 0 00-.25-.25H1.75a.25.25 0 00-.25.25v.32L8 7.88l6.5-3.81zm-13 1.74v6.441c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25V5.809L8.38 9.397a.75.75 0 01-.76 0L1.5 5.809z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 3A1.75 1.75 0 000 4.75v14c0 .966.784 1.75 1.75 1.75h20.5A1.75 1.75 0 0024 18.75v-14A1.75 1.75 0 0022.25 3H1.75zM1.5 4.75a.25.25 0 01.25-.25h20.5a.25.25 0 01.25.25v.852l-10.36 7a.25.25 0 01-.28 0l-10.36-7V4.75zm0 2.662V18.75c0 .138.112.25.25.25h20.5a.25.25 0 00.25-.25V7.412l-9.52 6.433c-.592.4-1.368.4-1.96 0L1.5 7.412z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMailIcon.defaultProps = {\n  className: 'octicon octicon-mail',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MarkGithubIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMarkGithubIcon.defaultProps = {\n  className: 'octicon octicon-mark-github',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MarkdownIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMarkdownIcon.defaultProps = {\n  className: 'octicon octicon-markdown',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MegaphoneIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M3.25 9a.75.75 0 01.75.75c0 2.142.456 3.828.733 4.653a.121.121 0 00.05.064.207.207 0 00.117.033h1.31c.085 0 .18-.042.258-.152a.448.448 0 00.075-.366A16.74 16.74 0 016 9.75a.75.75 0 011.5 0c0 1.588.25 2.926.494 3.85.293 1.113-.504 2.4-1.783 2.4H4.9c-.686 0-1.35-.41-1.589-1.12A16.42 16.42 0 012.5 9.75.75.75 0 013.25 9z\\\"></path><path d=\\\"M0 6a4 4 0 014-4h2.75a.75.75 0 01.75.75v6.5a.75.75 0 01-.75.75H4a4 4 0 01-4-4zm4-2.5a2.5 2.5 0 000 5h2v-5H4z\\\"></path><path d=\\\"M15.59.082A.75.75 0 0116 .75v10.5a.75.75 0 01-1.189.608l-.002-.001h.001l-.014-.01a5.829 5.829 0 00-.422-.25 10.58 10.58 0 00-1.469-.64C11.576 10.484 9.536 10 6.75 10a.75.75 0 110-1.5c2.964 0 5.174.516 6.658 1.043.423.151.787.302 1.092.443V2.014c-.305.14-.669.292-1.092.443C11.924 2.984 9.713 3.5 6.75 3.5a.75.75 0 110-1.5c2.786 0 4.826-.484 6.155-.957.665-.236 1.154-.47 1.47-.64a5.82 5.82 0 00.421-.25l.014-.01a.75.75 0 01.78-.061zm-.78.06zm.44 11.108l-.44.607.44-.607z\\\"></path></g>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M22 1.75a.75.75 0 00-1.161-.627c-.047.03-.094.057-.142.085a9.15 9.15 0 01-.49.262c-.441.22-1.11.519-2.002.82-1.78.6-4.45 1.21-7.955 1.21H6.5A5.5 5.5 0 005 14.293v.457c0 3.061.684 5.505 1.061 6.621.24.709.904 1.129 1.6 1.129h2.013c1.294 0 2.1-1.322 1.732-2.453-.412-1.268-.906-3.268-.906-5.547 0-.03-.002-.06-.005-.088 3.382.028 5.965.644 7.703 1.251.89.312 1.559.62 2 .849.084.043.171.096.261.15.357.214.757.455 1.142.25A.75.75 0 0022 16.25V1.75zM10.5 12.912c3.564.029 6.313.678 8.193 1.335.737.258 1.34.517 1.807.74V2.993c-.467.216-1.073.467-1.815.718-1.878.634-4.624 1.26-8.185 1.288v7.913zm-4 1.838v-.25H9c0 2.486.537 4.648.98 6.01a.398.398 0 01-.057.343c-.07.104-.162.147-.249.147H7.661c-.105 0-.161-.058-.179-.109-.344-1.018-.982-3.294-.982-6.141zM6.5 5H9v8H6.5a4 4 0 010-8z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMegaphoneIcon.defaultProps = {\n  className: 'octicon octicon-megaphone',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MentionIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 2.37a6.5 6.5 0 006.5 11.26.75.75 0 01.75 1.298 8 8 0 113.994-7.273.754.754 0 01.006.095v1.5a2.75 2.75 0 01-5.072 1.475A4 4 0 1112 8v1.25a1.25 1.25 0 002.5 0V7.867a6.5 6.5 0 00-9.75-5.496V2.37zM10.5 8a2.5 2.5 0 10-5 0 2.5 2.5 0 005 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M20.226 7.25a9.498 9.498 0 10-3.477 12.976.75.75 0 01.75 1.299c-5.26 3.037-11.987 1.235-15.024-4.026C-.562 12.24 1.24 5.512 6.501 2.475 11.76-.562 18.488 1.24 21.525 6.501a10.956 10.956 0 011.455 4.826c.013.056.02.113.02.173v2.25a3.5 3.5 0 01-6.623 1.581 5.5 5.5 0 111.112-3.682.76.76 0 01.011.129v1.972a2 2 0 104 0v-1.766a9.452 9.452 0 00-1.274-4.733zM16 12a4 4 0 10-8 0 4 4 0 008 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMentionIcon.defaultProps = {\n  className: 'octicon octicon-mention',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MeterIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 1.5a6.5 6.5 0 106.016 4.035.75.75 0 011.388-.57 8 8 0 11-4.37-4.37.75.75 0 01-.569 1.389A6.479 6.479 0 008 1.5zm6.28.22a.75.75 0 010 1.06l-4.063 4.064a2.5 2.5 0 11-1.06-1.06L13.22 1.72a.75.75 0 011.06 0zM7 8a1 1 0 112 0 1 1 0 01-2 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMeterIcon.defaultProps = {\n  className: 'octicon octicon-meter',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MilestoneIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.75 0a.75.75 0 01.75.75V3h3.634c.414 0 .814.147 1.13.414l2.07 1.75a1.75 1.75 0 010 2.672l-2.07 1.75a1.75 1.75 0 01-1.13.414H8.5v5.25a.75.75 0 11-1.5 0V10H2.75A1.75 1.75 0 011 8.25v-3.5C1 3.784 1.784 3 2.75 3H7V.75A.75.75 0 017.75 0zm0 8.5h4.384a.25.25 0 00.161-.06l2.07-1.75a.25.25 0 000-.38l-2.07-1.75a.25.25 0 00-.161-.06H2.75a.25.25 0 00-.25.25v3.5c0 .138.112.25.25.25h5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.75 1a.75.75 0 01.75.75V4h6.532c.42 0 .826.15 1.143.425l3.187 2.75a1.75 1.75 0 010 2.65l-3.187 2.75a1.75 1.75 0 01-1.143.425H12.5v9.25a.75.75 0 01-1.5 0V13H3.75A1.75 1.75 0 012 11.25v-5.5C2 4.783 2.784 4 3.75 4H11V1.75a.75.75 0 01.75-.75zm0 4.5h7.282a.25.25 0 01.163.06l3.188 2.75a.25.25 0 010 .38l-3.188 2.75a.25.25 0 01-.163.06H3.75a.25.25 0 01-.25-.25v-5.5a.25.25 0 01.25-.25h8z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMilestoneIcon.defaultProps = {\n  className: 'octicon octicon-milestone',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MirrorIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.75 1.75a.75.75 0 00-1.5 0v.5a.75.75 0 001.5 0v-.5zM8 4a.75.75 0 01.75.75v.5a.75.75 0 01-1.5 0v-.5A.75.75 0 018 4zm.75 3.75a.75.75 0 00-1.5 0v.5a.75.75 0 001.5 0v-.5zM8 10a.75.75 0 01.75.75v.5a.75.75 0 01-1.5 0v-.5A.75.75 0 018 10zm0 3a.75.75 0 01.75.75v.5a.75.75 0 01-1.5 0v-.5A.75.75 0 018 13zm7.547-9.939A.75.75 0 0116 3.75v8.5a.75.75 0 01-1.265.545l-4.5-4.25a.75.75 0 010-1.09l4.5-4.25a.75.75 0 01.812-.144zM11.842 8l2.658 2.51V5.49L11.842 8zM0 12.25a.75.75 0 001.265.545l4.5-4.25a.75.75 0 000-1.09l-4.5-4.25A.75.75 0 000 3.75v8.5zm1.5-6.76L4.158 8 1.5 10.51V5.49z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 10.75a.75.75 0 01.75.75v1a.75.75 0 01-1.5 0v-1a.75.75 0 01.75-.75zm0 4a.75.75 0 01.75.75v1a.75.75 0 01-1.5 0v-1a.75.75 0 01.75-.75zm0 4a.75.75 0 01.75.75v1a.75.75 0 01-1.5 0v-1a.75.75 0 01.75-.75zm0-12a.75.75 0 01.75.75v1a.75.75 0 01-1.5 0v-1a.75.75 0 01.75-.75zm0-4a.75.75 0 01.75.75v1a.75.75 0 01-1.5 0v-1a.75.75 0 01.75-.75zm9.553 3.314A.75.75 0 0122 6.75v10.5a.75.75 0 01-1.256.554l-5.75-5.25a.75.75 0 010-1.108l5.75-5.25a.75.75 0 01.809-.132zM16.613 12l3.887 3.55v-7.1L16.612 12zM2.447 17.936A.75.75 0 012 17.25V6.75a.75.75 0 011.256-.554l5.75 5.25a.75.75 0 010 1.108l-5.75 5.25a.75.75 0 01-.809.132zM7.387 12L3.5 8.45v7.1L7.388 12z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMirrorIcon.defaultProps = {\n  className: 'octicon octicon-mirror',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MoonIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M9.598 1.591a.75.75 0 01.785-.175 7 7 0 11-8.967 8.967.75.75 0 01.961-.96 5.5 5.5 0 007.046-7.046.75.75 0 01.175-.786zm1.616 1.945a7 7 0 01-7.678 7.678 5.5 5.5 0 107.678-7.678z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M16.5 6c0 5.799-4.701 10.5-10.5 10.5-.426 0-.847-.026-1.26-.075A8.5 8.5 0 1016.425 4.74c.05.413.075.833.075 1.259zm-1.732-2.04A9.08 9.08 0 0114.999 6a9 9 0 01-11.04 8.768l-.004-.002a9.367 9.367 0 01-.78-.218c-.393-.13-.8.21-.67.602a9.938 9.938 0 00.329.855l.004.01A10.002 10.002 0 0012 22a10.002 10.002 0 004.015-19.16l-.01-.005a9.745 9.745 0 00-.855-.328c-.392-.13-.732.276-.602.67a8.934 8.934 0 01.218.779l.002.005z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMoonIcon.defaultProps = {\n  className: 'octicon octicon-moon',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MortarBoardIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.693 1.066a.75.75 0 01.614 0l7.25 3.25a.75.75 0 010 1.368L13 6.831v2.794c0 1.024-.81 1.749-1.66 2.173-.893.447-2.075.702-3.34.702-.278 0-.55-.012-.816-.036a.75.75 0 01.133-1.494c.22.02.45.03.683.03 1.082 0 2.025-.221 2.67-.543.69-.345.83-.682.83-.832V7.503L8.307 8.934a.75.75 0 01-.614 0L4 7.28v1.663c.296.105.575.275.812.512.438.438.688 1.059.688 1.796v3a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75v-3c0-.737.25-1.358.688-1.796.237-.237.516-.407.812-.512V6.606L.443 5.684a.75.75 0 010-1.368l7.25-3.25zM2.583 5L8 7.428 13.416 5 8 2.572 2.583 5zM2.5 11.25c0-.388.125-.611.25-.735a.704.704 0 01.5-.203c.19 0 .37.071.5.203.125.124.25.347.25.735v2.25H2.5v-2.25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.292 2.06a.75.75 0 00-.584 0L.458 6.81a.75.75 0 000 1.38L4.25 9.793v3.803a2.901 2.901 0 00-1.327.757c-.579.58-.923 1.41-.923 2.43v4.5c0 .248.128.486.335.624.06.04.117.073.22.124.124.062.297.138.52.213.448.149 1.09.288 1.925.288s1.477-.14 1.925-.288c.223-.075.396-.15.52-.213a2.11 2.11 0 00.21-.117A.762.762 0 008 21.28v-4.5c0-1.018-.344-1.85-.923-2.428a2.9 2.9 0 00-1.327-.758v-3.17l5.958 2.516a.75.75 0 00.584 0l5.208-2.2v4.003a2.552 2.552 0 01-.079.085 4.057 4.057 0 01-.849.65c-.826.488-2.255 1.021-4.572 1.021-.612 0-1.162-.037-1.654-.1a.75.75 0 00-.192 1.487c.56.072 1.173.113 1.846.113 2.558 0 4.254-.592 5.334-1.23.538-.316.914-.64 1.163-.896a2.84 2.84 0 00.392-.482h.001A.75.75 0 0019 15v-4.892l4.542-1.917a.75.75 0 000-1.382l-11.25-4.75zM5 15c-.377 0-.745.141-1.017.413-.265.265-.483.7-.483 1.368v4.022c.299.105.797.228 1.5.228s1.201-.123 1.5-.228V16.78c0-.669-.218-1.103-.483-1.368A1.431 1.431 0 005 15zm7-3.564L2.678 7.5 12 3.564 21.322 7.5 12 11.436z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMortarBoardIcon.defaultProps = {\n  className: 'octicon octicon-mortar-board',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MultiSelectIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 2.5a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5zm4 5a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5h-7.5zm0 5a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5h-7.5zM3 8a1 1 0 11-2 0 1 1 0 012 0zm-1 6a1 1 0 100-2 1 1 0 000 2z\\\"></path><path d=\\\"M13.314 4.918L11.07 2.417A.25.25 0 0111.256 2h4.488a.25.25 0 01.186.417l-2.244 2.5a.25.25 0 01-.372 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 5.5a.75.75 0 000 1.5h10a.75.75 0 000-1.5h-10zm5 6a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zm0 6a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zM5 12a1 1 0 11-2 0 1 1 0 012 0zm-1 7a1 1 0 100-2 1 1 0 000 2z\\\"></path><path d=\\\"M19.309 7.918l-2.245-2.501A.25.25 0 0117.25 5h4.49a.25.25 0 01.185.417l-2.244 2.5a.25.25 0 01-.372 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMultiSelectIcon.defaultProps = {\n  className: 'octicon octicon-multi-select',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction MuteIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 2.75a.75.75 0 00-1.238-.57L3.472 5H1.75A1.75 1.75 0 000 6.75v2.5C0 10.216.784 11 1.75 11h1.723l3.289 2.82A.75.75 0 008 13.25V2.75zM4.238 6.32L6.5 4.38v7.24L4.238 9.68a.75.75 0 00-.488-.18h-2a.25.25 0 01-.25-.25v-2.5a.25.25 0 01.25-.25h2a.75.75 0 00.488-.18zm7.042-1.1a.75.75 0 10-1.06 1.06L11.94 8l-1.72 1.72a.75.75 0 101.06 1.06L13 9.06l1.72 1.72a.75.75 0 101.06-1.06L14.06 8l1.72-1.72a.75.75 0 00-1.06-1.06L13 6.94l-1.72-1.72z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 3.75a.75.75 0 00-1.255-.555L5.46 8H2.75A1.75 1.75 0 001 9.75v4.5c0 .966.784 1.75 1.75 1.75h2.71l5.285 4.805A.75.75 0 0012 20.25V3.75zM6.255 9.305l4.245-3.86v13.11l-4.245-3.86a.75.75 0 00-.505-.195h-3a.25.25 0 01-.25-.25v-4.5a.25.25 0 01.25-.25h3a.75.75 0 00.505-.195z\\\"></path><path d=\\\"M16.28 8.22a.75.75 0 10-1.06 1.06L17.94 12l-2.72 2.72a.75.75 0 101.06 1.06L19 13.06l2.72 2.72a.75.75 0 101.06-1.06L20.06 12l2.72-2.72a.75.75 0 00-1.06-1.06L19 10.94l-2.72-2.72z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nMuteIcon.defaultProps = {\n  className: 'octicon octicon-mute',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction NoEntryIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M4.25 7.25a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5h-7.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M16 8A8 8 0 110 8a8 8 0 0116 0zm-1.5 0a6.5 6.5 0 11-13 0 6.5 6.5 0 0113 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0zM12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zm6.25 11.75a.75.75 0 000-1.5H5.75a.75.75 0 000 1.5h12.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nNoEntryIcon.defaultProps = {\n  className: 'octicon octicon-no-entry',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction NoEntryFillIcon(props) {\n  var svgDataByHeight = { \"12\": { \"width\": 12, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6 0a6 6 0 100 12A6 6 0 006 0zm3 5H3v2h6V5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nNoEntryFillIcon.defaultProps = {\n  className: 'octicon octicon-no-entry-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction NorthStarIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M8.5.75a.75.75 0 00-1.5 0v5.19L4.391 3.33a.75.75 0 10-1.06 1.061L5.939 7H.75a.75.75 0 000 1.5h5.19l-2.61 2.609a.75.75 0 101.061 1.06L7 9.561v5.189a.75.75 0 001.5 0V9.56l2.609 2.61a.75.75 0 101.06-1.061L9.561 8.5h5.189a.75.75 0 000-1.5H9.56l2.61-2.609a.75.75 0 00-1.061-1.06L8.5 5.939V.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M12.5 1.25a.75.75 0 00-1.5 0v8.69L6.447 5.385a.75.75 0 10-1.061 1.06L9.94 11H1.25a.75.75 0 000 1.5h8.69l-4.554 4.553a.75.75 0 001.06 1.061L11 13.561v8.689a.75.75 0 001.5 0v-8.69l4.553 4.554a.75.75 0 001.061-1.06L13.561 12.5h8.689a.75.75 0 000-1.5h-8.69l4.554-4.553a.75.75 0 10-1.06-1.061L12.5 9.939V1.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nNorthStarIcon.defaultProps = {\n  className: 'octicon octicon-north-star',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction NoteIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0114.25 14H1.75A1.75 1.75 0 010 12.25v-8.5zm1.75-.25a.25.25 0 00-.25.25v8.5c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-8.5a.25.25 0 00-.25-.25H1.75zM3.5 6.25a.75.75 0 01.75-.75h7a.75.75 0 010 1.5h-7a.75.75 0 01-.75-.75zm.75 2.25a.75.75 0 000 1.5h4a.75.75 0 000-1.5h-4z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 4.75C0 3.784.784 3 1.75 3h20.5c.966 0 1.75.784 1.75 1.75v14.5A1.75 1.75 0 0122.25 21H1.75A1.75 1.75 0 010 19.25V4.75zm1.75-.25a.25.25 0 00-.25.25v14.5c0 .138.112.25.25.25h20.5a.25.25 0 00.25-.25V4.75a.25.25 0 00-.25-.25H1.75z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M5 8.75A.75.75 0 015.75 8h11.5a.75.75 0 010 1.5H5.75A.75.75 0 015 8.75zm0 4a.75.75 0 01.75-.75h5.5a.75.75 0 010 1.5h-5.5a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nNoteIcon.defaultProps = {\n  className: 'octicon octicon-note',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction NumberIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.604.089A.75.75 0 016 .75v4.77h.711a.75.75 0 110 1.5H3.759a.75.75 0 110-1.5H4.5V2.15l-.334.223a.75.75 0 01-.832-1.248l1.5-1a.75.75 0 01.77-.037zM9 4.75A.75.75 0 019.75 4h4a.75.75 0 01.53 1.28l-1.89 1.892c.312.076.604.18.867.319.742.391 1.244 1.063 1.244 2.005 0 .653-.231 1.208-.629 1.627-.386.408-.894.653-1.408.777-1.01.243-2.225.063-3.124-.527a.75.75 0 01.822-1.254c.534.35 1.32.474 1.951.322.306-.073.53-.201.67-.349.129-.136.218-.32.218-.596 0-.308-.123-.509-.444-.678-.373-.197-.98-.318-1.806-.318a.75.75 0 01-.53-1.28l1.72-1.72H9.75A.75.75 0 019 4.75zm-3.587 5.763c-.35-.05-.77.113-.983.572a.75.75 0 11-1.36-.632c.508-1.094 1.589-1.565 2.558-1.425 1 .145 1.872.945 1.872 2.222 0 1.433-1.088 2.192-1.79 2.681-.308.216-.571.397-.772.573H7a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75c0-.69.3-1.211.67-1.61.348-.372.8-.676 1.15-.92.8-.56 1.18-.904 1.18-1.474 0-.473-.267-.69-.587-.737z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.114 2.094a.75.75 0 01.386.656V9h1.252a.75.75 0 110 1.5H5.75a.75.75 0 010-1.5H7V4.103l-.853.533a.75.75 0 01-.795-1.272l2-1.25a.75.75 0 01.762-.02zm4.889 5.66a.75.75 0 01.75-.75h5.232a.75.75 0 01.53 1.28l-2.776 2.777c.55.097 1.057.253 1.492.483.905.477 1.504 1.284 1.504 2.418 0 .966-.471 1.75-1.172 2.27-.687.511-1.587.77-2.521.77-1.367 0-2.274-.528-2.667-.756a.75.75 0 01.755-1.297c.331.193.953.553 1.912.553.673 0 1.243-.188 1.627-.473.37-.275.566-.635.566-1.067 0-.5-.219-.836-.703-1.091-.538-.284-1.375-.443-2.471-.443a.75.75 0 01-.53-1.28l2.643-2.644h-3.421a.75.75 0 01-.75-.75zM7.88 15.215a1.4 1.4 0 00-1.446.83.75.75 0 01-1.37-.61 2.9 2.9 0 012.986-1.71 2.565 2.565 0 011.557.743c.434.446.685 1.058.685 1.778 0 1.641-1.254 2.437-2.12 2.986-.538.341-1.18.694-1.495 1.273H9.75a.75.75 0 010 1.5h-4a.75.75 0 01-.75-.75c0-1.799 1.337-2.63 2.243-3.21 1.032-.659 1.55-1.031 1.55-1.8 0-.355-.116-.584-.26-.732a1.068 1.068 0 00-.652-.298z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nNumberIcon.defaultProps = {\n  className: 'octicon octicon-number',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction OrganizationIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 14.25c0 .138.112.25.25.25H4v-1.25a.75.75 0 01.75-.75h2.5a.75.75 0 01.75.75v1.25h2.25a.25.25 0 00.25-.25V1.75a.25.25 0 00-.25-.25h-8.5a.25.25 0 00-.25.25v12.5zM1.75 16A1.75 1.75 0 010 14.25V1.75C0 .784.784 0 1.75 0h8.5C11.216 0 12 .784 12 1.75v12.5c0 .085-.006.168-.018.25h2.268a.25.25 0 00.25-.25V8.285a.25.25 0 00-.111-.208l-1.055-.703a.75.75 0 11.832-1.248l1.055.703c.487.325.779.871.779 1.456v5.965A1.75 1.75 0 0114.25 16h-3.5a.75.75 0 01-.197-.026c-.099.017-.2.026-.303.026h-3a.75.75 0 01-.75-.75V14h-1v1.25a.75.75 0 01-.75.75h-3zM3 3.75A.75.75 0 013.75 3h.5a.75.75 0 010 1.5h-.5A.75.75 0 013 3.75zM3.75 6a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM3 9.75A.75.75 0 013.75 9h.5a.75.75 0 010 1.5h-.5A.75.75 0 013 9.75zM7.75 9a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM7 6.75A.75.75 0 017.75 6h.5a.75.75 0 010 1.5h-.5A.75.75 0 017 6.75zM7.75 3a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M6.25 12a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM5.5 9.25a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75zM6.25 5a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM9 12.75a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75zm.75-4.25a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM9 5.75A.75.75 0 019.75 5h.5a.75.75 0 010 1.5h-.5A.75.75 0 019 5.75zM13.25 12a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zm-.75-2.75a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75zM13.25 5a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M2 20a2 2 0 002 2h3.75a.75.75 0 00.75-.75V19h3v2.25c0 .414.336.75.75.75H16c.092 0 .183-.006.272-.018a.753.753 0 00.166.018H20a2 2 0 002-2v-8a2 2 0 00-.8-1.6l-.5-.375a.75.75 0 00-.9 1.2l.5.375a.5.5 0 01.2.4v8a.5.5 0 01-.5.5h-2.063c.041-.16.063-.327.063-.5V3a2 2 0 00-2-2H4a2 2 0 00-2 2v17zm2 .5a.5.5 0 01-.5-.5V3a.5.5 0 01.5-.5h12a.5.5 0 01.5.5v17a.5.5 0 01-.5.5h-3v-2.25a.75.75 0 00-.75-.75h-4.5a.75.75 0 00-.75.75v2.25H4z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nOrganizationIcon.defaultProps = {\n  className: 'octicon octicon-organization',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PackageIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.878.392a1.75 1.75 0 00-1.756 0l-5.25 3.045A1.75 1.75 0 001 4.951v6.098c0 .624.332 1.2.872 1.514l5.25 3.045a1.75 1.75 0 001.756 0l5.25-3.045c.54-.313.872-.89.872-1.514V4.951c0-.624-.332-1.2-.872-1.514L8.878.392zM7.875 1.69a.25.25 0 01.25 0l4.63 2.685L8 7.133 3.245 4.375l4.63-2.685zM2.5 5.677v5.372c0 .09.047.171.125.216l4.625 2.683V8.432L2.5 5.677zm6.25 8.271l4.625-2.683a.25.25 0 00.125-.216V5.677L8.75 8.432v5.516z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.876.64a1.75 1.75 0 00-1.75 0l-8.25 4.762a1.75 1.75 0 00-.875 1.515v9.525c0 .625.334 1.203.875 1.515l8.25 4.763a1.75 1.75 0 001.75 0l8.25-4.762a1.75 1.75 0 00.875-1.516V6.917a1.75 1.75 0 00-.875-1.515L12.876.639zm-1 1.298a.25.25 0 01.25 0l7.625 4.402-7.75 4.474-7.75-4.474 7.625-4.402zM3.501 7.64v8.803c0 .09.048.172.125.216l7.625 4.402v-8.947L3.501 7.64zm9.25 13.421l7.625-4.402a.25.25 0 00.125-.216V7.639l-7.75 4.474v8.947z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPackageIcon.defaultProps = {\n  className: 'octicon octicon-package',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PackageDependenciesIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.122.392a1.75 1.75 0 011.756 0l5.25 3.045c.54.313.872.89.872 1.514V7.25a.75.75 0 01-1.5 0V5.677L7.75 8.432v6.384a1 1 0 01-1.502.865L.872 12.563A1.75 1.75 0 010 11.049V4.951c0-.624.332-1.2.872-1.514L6.122.392zM7.125 1.69l4.63 2.685L7 7.133 2.245 4.375l4.63-2.685a.25.25 0 01.25 0zM1.5 11.049V5.677l4.75 2.755v5.516l-4.625-2.683a.25.25 0 01-.125-.216zm11.672-.282a.75.75 0 10-1.087-1.034l-2.378 2.5a.75.75 0 000 1.034l2.378 2.5a.75.75 0 101.087-1.034L11.999 13.5h3.251a.75.75 0 000-1.5h-3.251l1.173-1.233z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M9.126.64a1.75 1.75 0 011.75 0l8.25 4.762c.103.06.199.128.286.206a.748.748 0 01.554.96c.023.113.035.23.035.35v3.332a.75.75 0 01-1.5 0V7.64l-7.75 4.474V22.36a.75.75 0 01-1.125.65l-8.75-5.052a1.75 1.75 0 01-.875-1.515V6.917c0-.119.012-.236.035-.35a.748.748 0 01.554-.96 1.75 1.75 0 01.286-.205L9.126.639zM1.501 7.638v8.803c0 .09.048.172.125.216l7.625 4.402v-8.947l-7.75-4.474zm8.5 3.175L2.251 6.34l7.625-4.402a.25.25 0 01.25 0l7.625 4.402-7.75 4.474z\\\"></path><path d=\\\"M16.617 17.5l2.895-2.702a.75.75 0 00-1.024-1.096l-4.285 4a.75.75 0 000 1.096l4.285 4a.75.75 0 101.024-1.096L16.617 19h6.633a.75.75 0 000-1.5h-6.633z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPackageDependenciesIcon.defaultProps = {\n  className: 'octicon octicon-package-dependencies',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PackageDependentsIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.122.392a1.75 1.75 0 011.756 0l5.25 3.045c.54.313.872.89.872 1.514V7.25a.75.75 0 01-1.5 0V5.677L7.75 8.432v6.384a1 1 0 01-1.502.865L.872 12.563A1.75 1.75 0 010 11.049V4.951c0-.624.332-1.2.872-1.514L6.122.392zM7.125 1.69l4.63 2.685L7 7.133 2.245 4.375l4.63-2.685a.25.25 0 01.25 0zM1.5 11.049V5.677l4.75 2.755v5.516l-4.625-2.683a.25.25 0 01-.125-.216zm10.828 3.684a.75.75 0 101.087 1.034l2.378-2.5a.75.75 0 000-1.034l-2.378-2.5a.75.75 0 00-1.087 1.034L13.501 12H10.25a.75.75 0 000 1.5h3.251l-1.173 1.233z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M9.126.64a1.75 1.75 0 011.75 0l8.25 4.762c.103.06.199.128.286.206a.748.748 0 01.554.96c.023.113.035.23.035.35v3.332a.75.75 0 01-1.5 0V7.64l-7.75 4.474V22.36a.75.75 0 01-1.125.65l-8.75-5.052a1.75 1.75 0 01-.875-1.515V6.917c0-.119.012-.236.035-.35a.748.748 0 01.554-.96 1.75 1.75 0 01.286-.205L9.126.639zM1.501 7.638v8.803c0 .09.048.172.125.216l7.625 4.402v-8.947l-7.75-4.474zm8.5 3.175L2.251 6.34l7.625-4.402a.25.25 0 01.25 0l7.625 4.402-7.75 4.474z\\\"></path><path d=\\\"M21.347 17.5l-2.894-2.702a.75.75 0 111.023-1.096l4.286 4a.75.75 0 010 1.096l-4.286 4a.75.75 0 11-1.023-1.096L21.347 19h-6.633a.75.75 0 010-1.5h6.633z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPackageDependentsIcon.defaultProps = {\n  className: 'octicon octicon-package-dependents',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PaintbrushIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.134 1.535C9.722 2.562 8.16 4.057 6.889 5.312 5.8 6.387 5.041 7.401 4.575 8.294a3.745 3.745 0 00-3.227 1.054c-.43.431-.69 1.066-.86 1.657a11.982 11.982 0 00-.358 1.914A21.263 21.263 0 000 15.203v.054l.75-.007-.007.75h.054a14.404 14.404 0 00.654-.012 21.243 21.243 0 001.63-.118c.62-.07 1.3-.18 1.914-.357.592-.17 1.226-.43 1.657-.861a3.745 3.745 0 001.055-3.217c.908-.461 1.942-1.216 3.04-2.3 1.279-1.262 2.764-2.825 3.775-4.249.501-.706.923-1.428 1.125-2.096.2-.659.235-1.469-.368-2.07-.606-.607-1.42-.55-2.069-.34-.66.213-1.376.646-2.076 1.155zm-3.95 8.48a3.76 3.76 0 00-1.19-1.192 9.758 9.758 0 011.161-1.607l1.658 1.658a9.853 9.853 0 01-1.63 1.142zM.742 16l.007-.75-.75.008A.75.75 0 00.743 16zM12.016 2.749c-1.224.89-2.605 2.189-3.822 3.384l1.718 1.718c1.21-1.205 2.51-2.597 3.387-3.833.47-.662.78-1.227.912-1.662.134-.444.032-.551.009-.575h-.001V1.78c-.014-.014-.112-.113-.548.027-.432.14-.995.462-1.655.942zM1.62 13.089a19.56 19.56 0 00-.104 1.395 19.55 19.55 0 001.396-.104 10.528 10.528 0 001.668-.309c.526-.151.856-.325 1.011-.48a2.25 2.25 0 00-3.182-3.182c-.155.155-.329.485-.48 1.01a10.515 10.515 0 00-.309 1.67z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPaintbrushIcon.defaultProps = {\n  className: 'octicon octicon-paintbrush',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PaperAirplaneIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.592 2.712L2.38 7.25h4.87a.75.75 0 110 1.5H2.38l-.788 4.538L13.929 8 1.592 2.712zM.989 8L.064 2.68a1.341 1.341 0 011.85-1.462l13.402 5.744a1.13 1.13 0 010 2.076L1.913 14.782a1.341 1.341 0 01-1.85-1.463L.99 8z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.513 1.96a1.374 1.374 0 011.499-.21l19.335 9.215a1.146 1.146 0 010 2.07L3.012 22.25a1.374 1.374 0 01-1.947-1.46L2.49 12 1.065 3.21a1.374 1.374 0 01.448-1.25zm2.375 10.79l-1.304 8.042L21.031 12 2.584 3.208l1.304 8.042h7.362a.75.75 0 010 1.5H3.888z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPaperAirplaneIcon.defaultProps = {\n  className: 'octicon octicon-paper-airplane',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PaperclipIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.212 3.02a1.75 1.75 0 00-2.478.003l-5.83 5.83a3.007 3.007 0 00-.88 2.127c0 .795.315 1.551.88 2.116.567.567 1.333.89 2.126.89.79 0 1.548-.321 2.116-.89l5.48-5.48a.75.75 0 011.061 1.06l-5.48 5.48a4.494 4.494 0 01-3.177 1.33c-1.2 0-2.345-.487-3.187-1.33a4.485 4.485 0 01-1.32-3.177c0-1.195.475-2.341 1.32-3.186l5.83-5.83a3.25 3.25 0 015.553 2.297c0 .863-.343 1.691-.953 2.301L7.439 12.39a2.01 2.01 0 01-1.416.593 2 2 0 01-1.412-.593 1.991 1.991 0 010-2.828l5.48-5.48a.75.75 0 011.06 1.06l-5.48 5.48a.491.491 0 000 .707.5.5 0 00.352.154.509.509 0 00.356-.154l5.833-5.827a1.755 1.755 0 000-2.481z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M19.187 3.588a2.75 2.75 0 00-3.889 0L5.575 13.31a4.5 4.5 0 106.364 6.364l8.662-8.662a.75.75 0 011.061 1.06L13 20.735a6 6 0 01-8.485-8.485l9.723-9.723a4.25 4.25 0 116.01 6.01l-9.193 9.193a2.638 2.638 0 01-1.858.779 2.626 2.626 0 01-1.854-.779c-.196-.196-.338-.47-.43-.726a2.825 2.825 0 01-.168-.946c0-.7.284-1.373.775-1.864l8.132-8.131a.75.75 0 111.06 1.06l-8.131 8.132a1.144 1.144 0 00-.336.803 1.326 1.326 0 00.146.587c.01.018.018.028.02.032.22.215.501.332.786.332.29 0 .58-.121.798-.34l9.192-9.192a2.75 2.75 0 000-3.89z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPaperclipIcon.defaultProps = {\n  className: 'octicon octicon-paperclip',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PasteIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.962 2.513a.75.75 0 01-.475.949l-.816.272a.25.25 0 00-.171.237V21.25c0 .138.112.25.25.25h14.5a.25.25 0 00.25-.25V3.97a.25.25 0 00-.17-.236l-.817-.272a.75.75 0 01.474-1.424l.816.273A1.75 1.75 0 0121 3.97v17.28A1.75 1.75 0 0119.25 23H4.75A1.75 1.75 0 013 21.25V3.97a1.75 1.75 0 011.197-1.66l.816-.272a.75.75 0 01.949.475z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M7 1.75C7 .784 7.784 0 8.75 0h6.5C16.216 0 17 .784 17 1.75v1.5A1.75 1.75 0 0115.25 5h-6.5A1.75 1.75 0 017 3.25v-1.5zm1.75-.25a.25.25 0 00-.25.25v1.5c0 .138.112.25.25.25h6.5a.25.25 0 00.25-.25v-1.5a.25.25 0 00-.25-.25h-6.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPasteIcon.defaultProps = {\n  className: 'octicon octicon-paste',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PencilIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.013 1.427a1.75 1.75 0 012.474 0l1.086 1.086a1.75 1.75 0 010 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 01-.927-.928l.929-3.25a1.75 1.75 0 01.445-.758l8.61-8.61zm1.414 1.06a.25.25 0 00-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 000-.354l-1.086-1.086zM11.189 6.25L9.75 4.81l-6.286 6.287a.25.25 0 00-.064.108l-.558 1.953 1.953-.558a.249.249 0 00.108-.064l6.286-6.286z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M17.263 2.177a1.75 1.75 0 012.474 0l2.586 2.586a1.75 1.75 0 010 2.474L19.53 10.03l-.012.013L8.69 20.378a1.75 1.75 0 01-.699.409l-5.523 1.68a.75.75 0 01-.935-.935l1.673-5.5a1.75 1.75 0 01.466-.756L14.476 4.963l2.787-2.786zm-2.275 4.371l-10.28 9.813a.25.25 0 00-.067.108l-1.264 4.154 4.177-1.271a.25.25 0 00.1-.059l10.273-9.806-2.94-2.939zM19 8.44l2.263-2.262a.25.25 0 000-.354l-2.586-2.586a.25.25 0 00-.354 0L16.061 5.5 19 8.44z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPencilIcon.defaultProps = {\n  className: 'octicon octicon-pencil',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PeopleIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.5 3.5a2 2 0 100 4 2 2 0 000-4zM2 5.5a3.5 3.5 0 115.898 2.549 5.507 5.507 0 013.034 4.084.75.75 0 11-1.482.235 4.001 4.001 0 00-7.9 0 .75.75 0 01-1.482-.236A5.507 5.507 0 013.102 8.05 3.49 3.49 0 012 5.5zM11 4a.75.75 0 100 1.5 1.5 1.5 0 01.666 2.844.75.75 0 00-.416.672v.352a.75.75 0 00.574.73c1.2.289 2.162 1.2 2.522 2.372a.75.75 0 101.434-.44 5.01 5.01 0 00-2.56-3.012A3 3 0 0011 4z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.5 8a5.5 5.5 0 118.596 4.547 9.005 9.005 0 015.9 8.18.75.75 0 01-1.5.045 7.5 7.5 0 00-14.993 0 .75.75 0 01-1.499-.044 9.005 9.005 0 015.9-8.181A5.494 5.494 0 013.5 8zM9 4a4 4 0 100 8 4 4 0 000-8z\\\"></path><path d=\\\"M17.29 8c-.148 0-.292.01-.434.03a.75.75 0 11-.212-1.484 4.53 4.53 0 013.38 8.097 6.69 6.69 0 013.956 6.107.75.75 0 01-1.5 0 5.193 5.193 0 00-3.696-4.972l-.534-.16v-1.676l.41-.209A3.03 3.03 0 0017.29 8z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPeopleIcon.defaultProps = {\n  className: 'octicon octicon-people',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PersonIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.5 5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm.061 3.073a4 4 0 10-5.123 0 6.004 6.004 0 00-3.431 5.142.75.75 0 001.498.07 4.5 4.5 0 018.99 0 .75.75 0 101.498-.07 6.005 6.005 0 00-3.432-5.142z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 2.5a5.5 5.5 0 00-3.096 10.047 9.005 9.005 0 00-5.9 8.18.75.75 0 001.5.045 7.5 7.5 0 0114.993 0 .75.75 0 101.499-.044 9.005 9.005 0 00-5.9-8.181A5.5 5.5 0 0012 2.5zM8 8a4 4 0 118 0 4 4 0 01-8 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPersonIcon.defaultProps = {\n  className: 'octicon octicon-person',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PersonAddIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M13.25 0a.75.75 0 01.75.75V2h1.25a.75.75 0 010 1.5H14v1.25a.75.75 0 01-1.5 0V3.5h-1.25a.75.75 0 010-1.5h1.25V.75a.75.75 0 01.75-.75zM5.5 4a2 2 0 100 4 2 2 0 000-4zm2.4 4.548a3.5 3.5 0 10-4.799 0 5.527 5.527 0 00-3.1 4.66.75.75 0 101.498.085A4.01 4.01 0 015.5 9.5a4.01 4.01 0 014.001 3.793.75.75 0 101.498-.086 5.527 5.527 0 00-3.1-4.659z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M19.25 1a.75.75 0 01.75.75V4h2.25a.75.75 0 010 1.5H20v2.25a.75.75 0 01-1.5 0V5.5h-2.25a.75.75 0 010-1.5h2.25V1.75a.75.75 0 01.75-.75zM9 6a3.5 3.5 0 100 7 3.5 3.5 0 000-7zM4 9.5a5 5 0 117.916 4.062 7.973 7.973 0 015.018 7.166.75.75 0 11-1.499.044 6.469 6.469 0 00-12.932 0 .75.75 0 01-1.499-.044 7.973 7.973 0 015.059-7.181A4.993 4.993 0 014 9.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPersonAddIcon.defaultProps = {\n  className: 'octicon octicon-person-add',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PersonFillIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M4.243 4.757a3.757 3.757 0 115.851 3.119 6.006 6.006 0 013.9 5.339.75.75 0 01-.715.784H2.721a.75.75 0 01-.714-.784 6.006 6.006 0 013.9-5.34 3.753 3.753 0 01-1.664-3.118z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M12 2.5a5.25 5.25 0 00-2.519 9.857 9.005 9.005 0 00-6.477 8.37.75.75 0 00.727.773H20.27a.75.75 0 00.727-.772 9.005 9.005 0 00-6.477-8.37A5.25 5.25 0 0012 2.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPersonFillIcon.defaultProps = {\n  className: 'octicon octicon-person-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PinIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.456.734a1.75 1.75 0 012.826.504l.613 1.327a3.081 3.081 0 002.084 1.707l2.454.584c1.332.317 1.8 1.972.832 2.94L11.06 10l3.72 3.72a.75.75 0 11-1.061 1.06L10 11.06l-2.204 2.205c-.968.968-2.623.5-2.94-.832l-.584-2.454a3.081 3.081 0 00-1.707-2.084l-1.327-.613a1.75 1.75 0 01-.504-2.826L4.456.734zM5.92 1.866a.25.25 0 00-.404-.072L1.794 5.516a.25.25 0 00.072.404l1.328.613A4.582 4.582 0 015.73 9.63l.584 2.454a.25.25 0 00.42.12l5.47-5.47a.25.25 0 00-.12-.42L9.63 5.73a4.581 4.581 0 01-3.098-2.537L5.92 1.866z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.886 1.553a1.75 1.75 0 012.869.604l.633 1.629a5.666 5.666 0 003.725 3.395l3.959 1.131a1.75 1.75 0 01.757 2.92L16.06 15l5.594 5.595a.75.75 0 11-1.06 1.06L15 16.061l-3.768 3.768a1.75 1.75 0 01-2.92-.757l-1.131-3.96a5.667 5.667 0 00-3.395-3.724l-1.63-.633a1.75 1.75 0 01-.603-2.869l6.333-6.333zm6.589 12.912l-.005.005-.005.005-4.294 4.293a.25.25 0 01-.417-.108l-1.13-3.96A7.166 7.166 0 004.33 9.99L2.7 9.356a.25.25 0 01-.086-.41l6.333-6.332a.25.25 0 01.41.086l.633 1.63a7.167 7.167 0 004.71 4.293l3.96 1.131a.25.25 0 01.108.417l-4.293 4.294z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPinIcon.defaultProps = {\n  className: 'octicon octicon-pin',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PlayIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zM6.379 5.227A.25.25 0 006 5.442v5.117a.25.25 0 00.379.214l4.264-2.559a.25.25 0 000-.428L6.379 5.227z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPlayIcon.defaultProps = {\n  className: 'octicon octicon-play',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PlugIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.276 3.09a.25.25 0 01.192-.09h.782a.25.25 0 01.25.25v8.5a.25.25 0 01-.25.25h-.782a.25.25 0 01-.192-.09l-.95-1.14a.75.75 0 00-.483-.264l-3.124-.39a.25.25 0 01-.219-.249V5.133a.25.25 0 01.219-.248l3.124-.39a.75.75 0 00.483-.265l.95-1.14zM4 8v1.867a1.75 1.75 0 001.533 1.737l2.83.354.761.912c.332.4.825.63 1.344.63h.782A1.75 1.75 0 0013 11.75V11h2.25a.75.75 0 000-1.5H13v-4h2.25a.75.75 0 000-1.5H13v-.75a1.75 1.75 0 00-1.75-1.75h-.782c-.519 0-1.012.23-1.344.63l-.76.913-2.831.353A1.75 1.75 0 004 5.133V6.5H2.5A2.5 2.5 0 000 9v5.25a.75.75 0 001.5 0V9a1 1 0 011-1H4z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7 11.5v3.848a1.75 1.75 0 001.57 1.74l6.055.627 1.006 1.174a1.75 1.75 0 001.329.611h1.29A1.75 1.75 0 0020 17.75V15.5h3.25a.75.75 0 000-1.5H20V7.5h3.25a.75.75 0 000-1.5H20V3.75A1.75 1.75 0 0018.25 2h-1.29c-.51 0-.996.223-1.329.611l-1.006 1.174-6.055.626A1.75 1.75 0 007 6.151V10H2.937A2.938 2.938 0 000 12.938v8.312a.75.75 0 001.5 0v-8.313c0-.793.644-1.437 1.438-1.437H7zm9.77-7.913a.25.25 0 01.19-.087h1.29a.25.25 0 01.25.25v14a.25.25 0 01-.25.25h-1.29a.25.25 0 01-.19-.087l-1.2-1.401a.75.75 0 00-.493-.258l-6.353-.657a.25.25 0 01-.224-.249V6.152a.25.25 0 01.224-.249l6.353-.657a.75.75 0 00.492-.258l1.201-1.4z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPlugIcon.defaultProps = {\n  className: 'octicon octicon-plug',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PlusIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.75 2a.75.75 0 01.75.75V7h4.25a.75.75 0 110 1.5H8.5v4.25a.75.75 0 11-1.5 0V8.5H2.75a.75.75 0 010-1.5H7V2.75A.75.75 0 017.75 2z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.75 4.5a.75.75 0 01.75.75V11h5.75a.75.75 0 010 1.5H12.5v5.75a.75.75 0 01-1.5 0V12.5H5.25a.75.75 0 010-1.5H11V5.25a.75.75 0 01.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPlusIcon.defaultProps = {\n  className: 'octicon octicon-plus',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PlusCircleIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zm.75 4.75a.75.75 0 00-1.5 0v2.5h-2.5a.75.75 0 000 1.5h2.5v2.5a.75.75 0 001.5 0v-2.5h2.5a.75.75 0 000-1.5h-2.5v-2.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M12.75 7.75a.75.75 0 00-1.5 0v3.5h-3.5a.75.75 0 000 1.5h3.5v3.5a.75.75 0 001.5 0v-3.5h3.5a.75.75 0 000-1.5h-3.5v-3.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPlusCircleIcon.defaultProps = {\n  className: 'octicon octicon-plus-circle',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ProjectIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M7.25 6a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5A.75.75 0 007.25 6zM12 6a.75.75 0 00-.75.75v4.5a.75.75 0 001.5 0v-4.5A.75.75 0 0012 6zm4 .75a.75.75 0 011.5 0v9.5a.75.75 0 01-1.5 0v-9.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 2A1.75 1.75 0 002 3.75v16.5c0 .966.784 1.75 1.75 1.75h16.5A1.75 1.75 0 0022 20.25V3.75A1.75 1.75 0 0020.25 2H3.75zM3.5 3.75a.25.25 0 01.25-.25h16.5a.25.25 0 01.25.25v16.5a.25.25 0 01-.25.25H3.75a.25.25 0 01-.25-.25V3.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nProjectIcon.defaultProps = {\n  className: 'octicon octicon-project',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction PulseIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6 2a.75.75 0 01.696.471L10 10.731l1.304-3.26A.75.75 0 0112 7h3.25a.75.75 0 010 1.5h-2.742l-1.812 4.528a.75.75 0 01-1.392 0L6 4.77 4.696 8.03A.75.75 0 014 8.5H.75a.75.75 0 010-1.5h2.742l1.812-4.529A.75.75 0 016 2z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M9.002 2.5a.75.75 0 01.691.464l6.302 15.305 2.56-6.301a.75.75 0 01.695-.468h4a.75.75 0 010 1.5h-3.495l-3.06 7.532a.75.75 0 01-1.389.004L8.997 5.21l-3.054 7.329A.75.75 0 015.25 13H.75a.75.75 0 010-1.5h4l3.558-8.538a.75.75 0 01.694-.462z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nPulseIcon.defaultProps = {\n  className: 'octicon octicon-pulse',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction QuestionIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm9 3a1 1 0 11-2 0 1 1 0 012 0zM6.92 6.085c.081-.16.19-.299.34-.398.145-.097.371-.187.74-.187.28 0 .553.087.738.225A.613.613 0 019 6.25c0 .177-.04.264-.077.318a.956.956 0 01-.277.245c-.076.051-.158.1-.258.161l-.007.004a7.728 7.728 0 00-.313.195 2.416 2.416 0 00-.692.661.75.75 0 001.248.832.956.956 0 01.276-.245 6.3 6.3 0 01.26-.16l.006-.004c.093-.057.204-.123.313-.195.222-.149.487-.355.692-.662.214-.32.329-.702.329-1.15 0-.76-.36-1.348-.863-1.725A2.76 2.76 0 008 4c-.631 0-1.155.16-1.572.438-.413.276-.68.638-.849.977a.75.75 0 101.342.67z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M10.97 8.265a1.45 1.45 0 00-.487.57.75.75 0 01-1.341-.67c.2-.402.513-.826.997-1.148C10.627 6.69 11.244 6.5 12 6.5c.658 0 1.369.195 1.934.619a2.45 2.45 0 011.004 2.006c0 1.033-.513 1.72-1.027 2.215-.19.183-.399.358-.579.508l-.147.123a4.329 4.329 0 00-.435.409v1.37a.75.75 0 11-1.5 0v-1.473c0-.237.067-.504.247-.736.22-.28.486-.517.718-.714l.183-.153.001-.001c.172-.143.324-.27.47-.412.368-.355.569-.676.569-1.136a.953.953 0 00-.404-.806C12.766 8.118 12.384 8 12 8c-.494 0-.814.121-1.03.265zM13 17a1 1 0 11-2 0 1 1 0 012 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nQuestionIcon.defaultProps = {\n  className: 'octicon octicon-question',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction QuoteIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 2.5a.75.75 0 000 1.5h10.5a.75.75 0 000-1.5H1.75zm4 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zM2.5 7.75a.75.75 0 00-1.5 0v6a.75.75 0 001.5 0v-6z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3 6.25a.75.75 0 01.75-.75h13.5a.75.75 0 010 1.5H3.75A.75.75 0 013 6.25zM3.75 11a.75.75 0 01.75.75v7a.75.75 0 01-1.5 0v-7a.75.75 0 01.75-.75zM8 12.313a.75.75 0 01.75-.75h11.5a.75.75 0 010 1.5H8.75a.75.75 0 01-.75-.75zm0 5.937a.75.75 0 01.75-.75h11.5a.75.75 0 010 1.5H8.75a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nQuoteIcon.defaultProps = {\n  className: 'octicon octicon-quote',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ReplyIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.78 1.97a.75.75 0 010 1.06L3.81 6h6.44A4.75 4.75 0 0115 10.75v2.5a.75.75 0 01-1.5 0v-2.5a3.25 3.25 0 00-3.25-3.25H3.81l2.97 2.97a.75.75 0 11-1.06 1.06L1.47 7.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M10.53 5.03a.75.75 0 10-1.06-1.06l-6.25 6.25a.75.75 0 000 1.06l6.25 6.25a.75.75 0 101.06-1.06L5.56 11.5H17a3.248 3.248 0 013.25 3.248v4.502a.75.75 0 001.5 0v-4.502A4.748 4.748 0 0017 10H5.56l4.97-4.97z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nReplyIcon.defaultProps = {\n  className: 'octicon octicon-reply',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RepoIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3 2.75A2.75 2.75 0 015.75 0h14.5a.75.75 0 01.75.75v20.5a.75.75 0 01-.75.75h-6a.75.75 0 010-1.5h5.25v-4H6A1.5 1.5 0 004.5 18v.75c0 .716.43 1.334 1.05 1.605a.75.75 0 01-.6 1.374A3.25 3.25 0 013 18.75v-16zM19.5 1.5V15H6c-.546 0-1.059.146-1.5.401V2.75c0-.69.56-1.25 1.25-1.25H19.5z\\\"></path><path d=\\\"M7 18.25a.25.25 0 01.25-.25h5a.25.25 0 01.25.25v5.01a.25.25 0 01-.397.201l-2.206-1.604a.25.25 0 00-.294 0L7.397 23.46a.25.25 0 01-.397-.2v-5.01z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRepoIcon.defaultProps = {\n  className: 'octicon octicon-repo',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RepoCloneIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M15 0H9v7c0 .55.45 1 1 1h1v1h1V8h3c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 7h-1V6h1v1zm4 0h-3V6h3v1zm0-2h-4V1h4v4zM4 5H3V4h1v1zm0-2H3V2h1v1zM2 1h6V0H1C.45 0 0 .45 0 1v12c0 .55.45 1 1 1h2v2l1.5-1.5L6 16v-2h5c.55 0 1-.45 1-1v-3H2V1zm9 10v2H6v-1H3v1H1v-2h10zM3 8h1v1H3V8zm1-1H3V6h1v1z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRepoCloneIcon.defaultProps = {\n  className: 'octicon octicon-repo-clone',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RepoDeletedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M1 2.5A2.5 2.5 0 013.5 0h8.75a.75.75 0 01.75.75v7.5a.75.75 0 01-1.5 0V1.5h-8a1 1 0 00-1 1v6.708A2.492 2.492 0 013.5 9h4.75a.75.75 0 010 1.5H3.5a1 1 0 100 2h4.75a.75.75 0 010 1.5H3.5A2.5 2.5 0 011 11.5v-9z\\\"></path><path d=\\\"M11.28 10.22a.75.75 0 10-1.06 1.06L11.94 13l-1.72 1.72a.75.75 0 101.06 1.06L13 14.06l1.72 1.72a.75.75 0 101.06-1.06L14.06 13l1.72-1.72a.75.75 0 10-1.06-1.06L13 11.94l-1.72-1.72z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRepoDeletedIcon.defaultProps = {\n  className: 'octicon octicon-repo-deleted',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RepoForkedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 21a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zm-3.25-1.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zm-3-12.75a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM18.25 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM15 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M6.5 7.75v1A2.25 2.25 0 008.75 11h6.5a2.25 2.25 0 002.25-2.25v-1H19v1a3.75 3.75 0 01-3.75 3.75h-6.5A3.75 3.75 0 015 8.75v-1h1.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M11.25 16.25v-5h1.5v5h-1.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRepoForkedIcon.defaultProps = {\n  className: 'octicon octicon-repo-forked',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RepoLockedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M1 2.5A2.5 2.5 0 013.5 0h8.75a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0V1.5h-8a1 1 0 00-1 1v6.708A2.492 2.492 0 013.5 9h2.75a.75.75 0 010 1.5H3.5a1 1 0 100 2h2.75a.75.75 0 010 1.5H3.5A2.5 2.5 0 011 11.5v-9z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M9 10.168V9a3 3 0 116 0v1.168c.591.281 1 .884 1 1.582v2.5A1.75 1.75 0 0114.25 16h-4.5A1.75 1.75 0 018 14.25v-2.5c0-.698.409-1.3 1-1.582zM13.5 10h-3V9a1.5 1.5 0 013 0v1z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M2 2.75A2.75 2.75 0 014.75 0h14.5a.75.75 0 01.75.75v8a.75.75 0 01-1.5 0V1.5H4.75c-.69 0-1.25.56-1.25 1.25v12.651A2.987 2.987 0 015 15h6.25a.75.75 0 010 1.5H5A1.5 1.5 0 003.5 18v1.25c0 .69.56 1.25 1.25 1.25h6a.75.75 0 010 1.5h-6A2.75 2.75 0 012 19.25V2.75z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M15 14.5V16h-.25A1.75 1.75 0 0013 17.75v4.5c0 .966.784 1.75 1.75 1.75h7.5A1.75 1.75 0 0024 22.25v-4.5A1.75 1.75 0 0022.25 16H22v-1.5a3.5 3.5 0 10-7 0zm3.5-2a2 2 0 00-2 2V16h4v-1.5a2 2 0 00-2-2z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRepoLockedIcon.defaultProps = {\n  className: 'octicon octicon-repo-locked',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RepoPullIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M13 8V6H7V4h6V2l3 3-3 3zM4 2H3v1h1V2zm7 5h1v6c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v2h-1V1H2v9h9V7zm0 4H1v2h2v-1h3v1h5v-2zM4 6H3v1h1V6zm0-2H3v1h1V4zM3 9h1V8H3v1z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRepoPullIcon.defaultProps = {\n  className: 'octicon octicon-repo-pull',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RepoPushIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1 2.5A2.5 2.5 0 013.5 0h8.75a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0V1.5h-8a1 1 0 00-1 1v6.708A2.492 2.492 0 013.5 9h3.25a.75.75 0 010 1.5H3.5a1 1 0 100 2h5.75a.75.75 0 010 1.5H3.5A2.5 2.5 0 011 11.5v-9zm13.23 7.79a.75.75 0 001.06-1.06l-2.505-2.505a.75.75 0 00-1.06 0L9.22 9.229a.75.75 0 001.06 1.061l1.225-1.224v6.184a.75.75 0 001.5 0V9.066l1.224 1.224z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M4.75 0A2.75 2.75 0 002 2.75v16.5A2.75 2.75 0 004.75 22h11a.75.75 0 000-1.5h-11c-.69 0-1.25-.56-1.25-1.25V18A1.5 1.5 0 015 16.5h7.25a.75.75 0 000-1.5H5c-.546 0-1.059.146-1.5.401V2.75c0-.69.56-1.25 1.25-1.25H18.5v7a.75.75 0 001.5 0V.75a.75.75 0 00-.75-.75H4.75z\\\"></path><path d=\\\"M20 13.903l2.202 2.359a.75.75 0 001.096-1.024l-3.5-3.75a.75.75 0 00-1.096 0l-3.5 3.75a.75.75 0 101.096 1.024l2.202-2.36v9.348a.75.75 0 001.5 0v-9.347z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRepoPushIcon.defaultProps = {\n  className: 'octicon octicon-repo-push',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RepoTemplateIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6 .75A.75.75 0 016.75 0h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 016 .75zm5 0a.75.75 0 01.75-.75h1.5a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0V1.5h-.75A.75.75 0 0111 .75zM4.992.662a.75.75 0 01-.636.848c-.436.063-.783.41-.846.846a.75.75 0 01-1.485-.212A2.501 2.501 0 014.144.025a.75.75 0 01.848.637zM2.75 4a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 012.75 4zm10.5 0a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5a.75.75 0 01.75-.75zM2.75 8a.75.75 0 01.75.75v.268A1.72 1.72 0 013.75 9h.5a.75.75 0 010 1.5h-.5a.25.25 0 00-.25.25v.75c0 .28.114.532.3.714a.75.75 0 01-1.05 1.072A2.495 2.495 0 012 11.5V8.75A.75.75 0 012.75 8zm10.5 0a.75.75 0 01.75.75v4.5a.75.75 0 01-.75.75h-2.5a.75.75 0 010-1.5h1.75v-2h-.75a.75.75 0 010-1.5h.75v-.25a.75.75 0 01.75-.75zM6 9.75A.75.75 0 016.75 9h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 016 9.75zm-1 2.5v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M5.75 0A2.75 2.75 0 003 2.75v1a.75.75 0 001.5 0v-1c0-.69.56-1.25 1.25-1.25h1a.75.75 0 000-1.5h-1zm4 0a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zm7.5 0a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-3a.75.75 0 00-.75-.75h-3zM4.5 6.5a.75.75 0 00-1.5 0v3.75a.75.75 0 001.5 0V6.5zm16.5 0a.75.75 0 00-1.5 0v3.75a.75.75 0 001.5 0V6.5zM4.5 13.25a.75.75 0 00-1.5 0v5.5a3.25 3.25 0 001.95 2.98.75.75 0 10.6-1.375A1.75 1.75 0 014.5 18.75V18A1.5 1.5 0 016 16.5h.75a.75.75 0 000-1.5H6c-.546 0-1.059.146-1.5.401V13.25zm16.5 0a.75.75 0 00-1.5 0V15h-2.25a.75.75 0 000 1.5h2.25v4h-5.25a.75.75 0 000 1.5h6a.75.75 0 00.75-.75v-8zM9.75 15a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zm-2.353 8.461A.25.25 0 017 23.26v-5.01a.25.25 0 01.25-.25h5a.25.25 0 01.25.25v5.01a.25.25 0 01-.397.201l-2.206-1.604a.25.25 0 00-.294 0L7.397 23.46z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRepoTemplateIcon.defaultProps = {\n  className: 'octicon octicon-repo-template',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ReportIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 1.5a.25.25 0 00-.25.25v9.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h6.5a.25.25 0 00.25-.25v-9.5a.25.25 0 00-.25-.25H1.75zM0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v9.5A1.75 1.75 0 0114.25 13H8.06l-2.573 2.573A1.457 1.457 0 013 14.543V13H1.75A1.75 1.75 0 010 11.25v-9.5zM9 9a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.25 4a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h2.5a.75.75 0 01.75.75v3.19l3.427-3.427A1.75 1.75 0 0111.164 17h9.586a.25.25 0 00.25-.25V4.25a.25.25 0 00-.25-.25H3.25zm-1.75.25c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v12.5a1.75 1.75 0 01-1.75 1.75h-9.586a.25.25 0 00-.177.073l-3.5 3.5A1.457 1.457 0 015 21.043V18.5H3.25a1.75 1.75 0 01-1.75-1.75V4.25zM12 6a.75.75 0 01.75.75v4a.75.75 0 01-1.5 0v-4A.75.75 0 0112 6zm0 9a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nReportIcon.defaultProps = {\n  className: 'octicon octicon-report',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RocketIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M14.064 0a8.75 8.75 0 00-6.187 2.563l-.459.458c-.314.314-.616.641-.904.979H3.31a1.75 1.75 0 00-1.49.833L.11 7.607a.75.75 0 00.418 1.11l3.102.954c.037.051.079.1.124.145l2.429 2.428c.046.046.094.088.145.125l.954 3.102a.75.75 0 001.11.418l2.774-1.707a1.75 1.75 0 00.833-1.49V9.485c.338-.288.665-.59.979-.904l.458-.459A8.75 8.75 0 0016 1.936V1.75A1.75 1.75 0 0014.25 0h-.186zM10.5 10.625c-.088.06-.177.118-.266.175l-2.35 1.521.548 1.783 1.949-1.2a.25.25 0 00.119-.213v-2.066zM3.678 8.116L5.2 5.766c.058-.09.117-.178.176-.266H3.309a.25.25 0 00-.213.119l-1.2 1.95 1.782.547zm5.26-4.493A7.25 7.25 0 0114.063 1.5h.186a.25.25 0 01.25.25v.186a7.25 7.25 0 01-2.123 5.127l-.459.458a15.21 15.21 0 01-2.499 2.02l-2.317 1.5-2.143-2.143 1.5-2.317a15.25 15.25 0 012.02-2.5l.458-.458h.002zM12 5a1 1 0 11-2 0 1 1 0 012 0zm-8.44 9.56a1.5 1.5 0 10-2.12-2.12c-.734.73-1.047 2.332-1.15 3.003a.23.23 0 00.265.265c.671-.103 2.273-.416 3.005-1.148z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M20.322.75a10.75 10.75 0 00-7.373 2.926l-1.304 1.23A23.743 23.743 0 0010.103 6.5H5.066a1.75 1.75 0 00-1.5.85l-2.71 4.514a.75.75 0 00.49 1.12l4.571.963c.039.049.082.096.129.14L8.04 15.96l1.872 1.994c.044.047.091.09.14.129l.963 4.572a.75.75 0 001.12.488l4.514-2.709a1.75 1.75 0 00.85-1.5v-5.038a23.741 23.741 0 001.596-1.542l1.228-1.304a10.75 10.75 0 002.925-7.374V2.499A1.75 1.75 0 0021.498.75h-1.177zM16 15.112c-.333.248-.672.487-1.018.718l-3.393 2.262.678 3.223 3.612-2.167a.25.25 0 00.121-.214v-3.822zm-10.092-2.7L8.17 9.017c.23-.346.47-.685.717-1.017H5.066a.25.25 0 00-.214.121l-2.167 3.612 3.223.679zm8.07-7.644a9.25 9.25 0 016.344-2.518h1.177a.25.25 0 01.25.25v1.176a9.25 9.25 0 01-2.517 6.346l-1.228 1.303a22.248 22.248 0 01-3.854 3.257l-3.288 2.192-1.743-1.858a.764.764 0 00-.034-.034l-1.859-1.744 2.193-3.29a22.248 22.248 0 013.255-3.851l1.304-1.23zM17.5 8a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-11 13c.9-.9.9-2.6 0-3.5-.9-.9-2.6-.9-3.5 0-1.209 1.209-1.445 3.901-1.49 4.743a.232.232 0 00.247.247c.842-.045 3.534-.281 4.743-1.49z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRocketIcon.defaultProps = {\n  className: 'octicon octicon-rocket',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RowsIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M16 2.75A1.75 1.75 0 0014.25 1H1.75A1.75 1.75 0 000 2.75v2.5A1.75 1.75 0 001.75 7h12.5A1.75 1.75 0 0016 5.25v-2.5zm-1.75-.25a.25.25 0 01.25.25v2.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25v-2.5a.25.25 0 01.25-.25h12.5zM16 10.75A1.75 1.75 0 0014.25 9H1.75A1.75 1.75 0 000 10.75v2.5A1.75 1.75 0 001.75 15h12.5A1.75 1.75 0 0016 13.25v-2.5zm-1.75-.25a.25.25 0 01.25.25v2.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25v-2.5a.25.25 0 01.25-.25h12.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M22 3.75A1.75 1.75 0 0020.25 2H3.75A1.75 1.75 0 002 3.75v5.5c0 .966.784 1.75 1.75 1.75h16.5A1.75 1.75 0 0022 9.25v-5.5zm-1.75-.25a.25.25 0 01.25.25v5.5a.25.25 0 01-.25.25H3.75a.25.25 0 01-.25-.25v-5.5a.25.25 0 01.25-.25h16.5zM22 14.75A1.75 1.75 0 0020.25 13H3.75A1.75 1.75 0 002 14.75v5.5c0 .966.784 1.75 1.75 1.75h16.5A1.75 1.75 0 0022 20.25v-5.5zm-1.75-.25a.25.25 0 01.25.25v5.5a.25.25 0 01-.25.25H3.75a.25.25 0 01-.25-.25v-5.5a.25.25 0 01.25-.25h16.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRowsIcon.defaultProps = {\n  className: 'octicon octicon-rows',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RssIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.002 2.725a.75.75 0 01.797-.699C8.79 2.42 13.58 7.21 13.974 13.201a.75.75 0 11-1.497.098 10.502 10.502 0 00-9.776-9.776.75.75 0 01-.7-.798zM2 13a1 1 0 112 0 1 1 0 01-2 0zm.84-5.95a.75.75 0 00-.179 1.489c2.509.3 4.5 2.291 4.8 4.8a.75.75 0 101.49-.178A7.003 7.003 0 002.838 7.05z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.5 3.25a.75.75 0 01.75-.75C14.053 2.5 22 10.447 22 20.25a.75.75 0 01-1.5 0C20.5 11.275 13.225 4 4.25 4a.75.75 0 01-.75-.75zM3.5 19a2 2 0 114 0 2 2 0 01-4 0zm.75-9.5a.75.75 0 000 1.5 9.25 9.25 0 019.25 9.25.75.75 0 001.5 0C15 14.313 10.187 9.5 4.25 9.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRssIcon.defaultProps = {\n  className: 'octicon octicon-rss',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction RubyIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.637 2.291A.75.75 0 014.23 2h7.54a.75.75 0 01.593.291l3.48 4.5a.75.75 0 01-.072.999l-7.25 7a.75.75 0 01-1.042 0l-7.25-7a.75.75 0 01-.072-.999l3.48-4.5zM4.598 3.5L1.754 7.177 8 13.207l6.246-6.03L11.402 3.5H4.598z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.873 3.26A.75.75 0 016.44 3h11.31a.75.75 0 01.576.27l5 6a.75.75 0 01-.028.992l-10.75 11.5a.75.75 0 01-1.096 0l-10.75-11.5a.75.75 0 01-.02-1.003l5.19-6zm.91 1.24L2.258 9.73 12 20.153l9.75-10.43L17.399 4.5H6.783z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nRubyIcon.defaultProps = {\n  className: 'octicon octicon-ruby',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ScreenFullIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.75 2.5a.25.25 0 00-.25.25v2.5a.75.75 0 01-1.5 0v-2.5C1 1.784 1.784 1 2.75 1h2.5a.75.75 0 010 1.5h-2.5zM10 1.75a.75.75 0 01.75-.75h2.5c.966 0 1.75.784 1.75 1.75v2.5a.75.75 0 01-1.5 0v-2.5a.25.25 0 00-.25-.25h-2.5a.75.75 0 01-.75-.75zM1.75 10a.75.75 0 01.75.75v2.5c0 .138.112.25.25.25h2.5a.75.75 0 010 1.5h-2.5A1.75 1.75 0 011 13.25v-2.5a.75.75 0 01.75-.75zm12.5 0a.75.75 0 01.75.75v2.5A1.75 1.75 0 0113.25 15h-2.5a.75.75 0 010-1.5h2.5a.25.25 0 00.25-.25v-2.5a.75.75 0 01.75-.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 4.5a.25.25 0 00-.25.25v3.5a.75.75 0 01-1.5 0v-3.5C3 3.784 3.784 3 4.75 3h3.5a.75.75 0 010 1.5h-3.5zM15 3.75a.75.75 0 01.75-.75h3.5c.966 0 1.75.784 1.75 1.75v3.5a.75.75 0 01-1.5 0v-3.5a.25.25 0 00-.25-.25h-3.5a.75.75 0 01-.75-.75zM3.75 15a.75.75 0 01.75.75v3.5c0 .138.112.25.25.25h3.5a.75.75 0 010 1.5h-3.5A1.75 1.75 0 013 19.25v-3.5a.75.75 0 01.75-.75zm16.5 0a.75.75 0 01.75.75v3.5A1.75 1.75 0 0119.25 21h-3.5a.75.75 0 010-1.5h3.5a.25.25 0 00.25-.25v-3.5a.75.75 0 01.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nScreenFullIcon.defaultProps = {\n  className: 'octicon octicon-screen-full',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ScreenNormalIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.25 1a.75.75 0 01.75.75v2.5A1.75 1.75 0 014.25 6h-2.5a.75.75 0 010-1.5h2.5a.25.25 0 00.25-.25v-2.5A.75.75 0 015.25 1zm5.5 0a.75.75 0 01.75.75v2.5c0 .138.112.25.25.25h2.5a.75.75 0 010 1.5h-2.5A1.75 1.75 0 0110 4.25v-2.5a.75.75 0 01.75-.75zM1 10.75a.75.75 0 01.75-.75h2.5c.966 0 1.75.784 1.75 1.75v2.5a.75.75 0 01-1.5 0v-2.5a.25.25 0 00-.25-.25h-2.5a.75.75 0 01-.75-.75zm9 1c0-.966.784-1.75 1.75-1.75h2.5a.75.75 0 010 1.5h-2.5a.25.25 0 00-.25.25v2.5a.75.75 0 01-1.5 0v-2.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.25 3a.75.75 0 01.75.75v3.5A1.75 1.75 0 017.25 9h-3.5a.75.75 0 010-1.5h3.5a.25.25 0 00.25-.25v-3.5A.75.75 0 018.25 3zm7.5 0a.75.75 0 01.75.75v3.5c0 .138.112.25.25.25h3.5a.75.75 0 010 1.5h-3.5A1.75 1.75 0 0115 7.25v-3.5a.75.75 0 01.75-.75zM3 15.75a.75.75 0 01.75-.75h3.5c.966 0 1.75.784 1.75 1.75v3.5a.75.75 0 01-1.5 0v-3.5a.25.25 0 00-.25-.25h-3.5a.75.75 0 01-.75-.75zm12 1c0-.966.784-1.75 1.75-1.75h3.5a.75.75 0 010 1.5h-3.5a.25.25 0 00-.25.25v3.5a.75.75 0 01-1.5 0v-3.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nScreenNormalIcon.defaultProps = {\n  className: 'octicon octicon-screen-normal',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SearchIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.25 2a8.25 8.25 0 105.28 14.59l5.69 5.69a.75.75 0 101.06-1.06l-5.69-5.69A8.25 8.25 0 0010.25 2zM3.5 10.25a6.75 6.75 0 1113.5 0 6.75 6.75 0 01-13.5 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSearchIcon.defaultProps = {\n  className: 'octicon octicon-search',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ServerIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 1A1.75 1.75 0 000 2.75v4c0 .372.116.717.314 1a1.742 1.742 0 00-.314 1v4c0 .966.784 1.75 1.75 1.75h12.5A1.75 1.75 0 0016 12.75v-4c0-.372-.116-.717-.314-1 .198-.283.314-.628.314-1v-4A1.75 1.75 0 0014.25 1H1.75zm0 7.5a.25.25 0 00-.25.25v4c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-4a.25.25 0 00-.25-.25H1.75zM1.5 2.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v4a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25v-4zm5.5 2A.75.75 0 017.75 4h4.5a.75.75 0 010 1.5h-4.5A.75.75 0 017 4.75zM7.75 10a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zM3 4.75A.75.75 0 013.75 4h.5a.75.75 0 010 1.5h-.5A.75.75 0 013 4.75zM3.75 10a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M10.75 6.5a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5zM6 7.25a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5A.75.75 0 016 7.25zm4 9a.75.75 0 01.75-.75h6.5a.75.75 0 010 1.5h-6.5a.75.75 0 01-.75-.75zm-3.25-.75a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M3.25 2A1.75 1.75 0 001.5 3.75v7c0 .372.116.716.314 1a1.742 1.742 0 00-.314 1v7c0 .966.784 1.75 1.75 1.75h17.5a1.75 1.75 0 001.75-1.75v-7c0-.372-.116-.716-.314-1 .198-.284.314-.628.314-1v-7A1.75 1.75 0 0020.75 2H3.25zm0 9h17.5a.25.25 0 00.25-.25v-7a.25.25 0 00-.25-.25H3.25a.25.25 0 00-.25.25v7c0 .138.112.25.25.25zm0 1.5a.25.25 0 00-.25.25v7c0 .138.112.25.25.25h17.5a.25.25 0 00.25-.25v-7a.25.25 0 00-.25-.25H3.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nServerIcon.defaultProps = {\n  className: 'octicon octicon-server',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ShareIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.823.177L4.927 3.073a.25.25 0 00.177.427H7.25v5.75a.75.75 0 001.5 0V3.5h2.146a.25.25 0 00.177-.427L8.177.177a.25.25 0 00-.354 0zM3.75 6.5a.25.25 0 00-.25.25v6.5c0 .138.112.25.25.25h8.5a.25.25 0 00.25-.25v-6.5a.25.25 0 00-.25-.25h-1a.75.75 0 010-1.5h1c.966 0 1.75.784 1.75 1.75v6.5A1.75 1.75 0 0112.25 15h-8.5A1.75 1.75 0 012 13.25v-6.5C2 5.784 2.784 5 3.75 5h1a.75.75 0 110 1.5h-1z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.53 1.22a.75.75 0 00-1.06 0L8.22 4.47a.75.75 0 001.06 1.06l1.97-1.97v10.69a.75.75 0 001.5 0V3.56l1.97 1.97a.75.75 0 101.06-1.06l-3.25-3.25zM5.5 9.75a.25.25 0 01.25-.25h2.5a.75.75 0 000-1.5h-2.5A1.75 1.75 0 004 9.75v10.5c0 .966.784 1.75 1.75 1.75h12.5A1.75 1.75 0 0020 20.25V9.75A1.75 1.75 0 0018.25 8h-2.5a.75.75 0 000 1.5h2.5a.25.25 0 01.25.25v10.5a.25.25 0 01-.25.25H5.75a.25.25 0 01-.25-.25V9.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nShareIcon.defaultProps = {\n  className: 'octicon octicon-share',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ShareAndroidIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M13.5 3a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 3a3 3 0 01-5.175 2.066l-3.92 2.179a3.005 3.005 0 010 1.51l3.92 2.179a3 3 0 11-.73 1.31l-3.92-2.178a3 3 0 110-4.133l3.92-2.178A3 3 0 1115 3zm-1.5 10a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-9-5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M20 5.5a3.5 3.5 0 01-6.062 2.385l-5.112 3.021a3.497 3.497 0 010 2.188l5.112 3.021a3.5 3.5 0 11-.764 1.29l-5.112-3.02a3.5 3.5 0 110-4.77l5.112-3.021v.001A3.5 3.5 0 1120 5.5zm-1.5 0a2 2 0 11-4 0 2 2 0 014 0zM5.5 14a2 2 0 100-4 2 2 0 000 4zm13 4.5a2 2 0 11-4 0 2 2 0 014 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nShareAndroidIcon.defaultProps = {\n  className: 'octicon octicon-share-android',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ShieldIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.467.133a1.75 1.75 0 011.066 0l5.25 1.68A1.75 1.75 0 0115 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.7 1.7 0 01-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 011.217-1.667l5.25-1.68zm.61 1.429a.25.25 0 00-.153 0l-5.25 1.68a.25.25 0 00-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.2.2 0 00.154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.25.25 0 00-.174-.237l-5.25-1.68zM9 10.5a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.75a.75.75 0 10-1.5 0v3a.75.75 0 001.5 0v-3z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M13 15.5a1 1 0 11-2 0 1 1 0 012 0zm-.25-8.25a.75.75 0 00-1.5 0v4.5a.75.75 0 001.5 0v-4.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M11.46.637a1.75 1.75 0 011.08 0l8.25 2.675A1.75 1.75 0 0122 4.976V10c0 6.19-3.77 10.705-9.401 12.83a1.699 1.699 0 01-1.198 0C5.771 20.704 2 16.19 2 10V4.976c0-.76.49-1.43 1.21-1.664L11.46.637zm.617 1.426a.25.25 0 00-.154 0L3.673 4.74a.249.249 0 00-.173.237V10c0 5.461 3.28 9.483 8.43 11.426a.2.2 0 00.14 0C17.22 19.483 20.5 15.46 20.5 10V4.976a.25.25 0 00-.173-.237l-8.25-2.676z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nShieldIcon.defaultProps = {\n  className: 'octicon octicon-shield',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ShieldCheckIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.533.133a1.75 1.75 0 00-1.066 0l-5.25 1.68A1.75 1.75 0 001 3.48V7c0 1.566.32 3.182 1.303 4.682.983 1.498 2.585 2.813 5.032 3.855a1.7 1.7 0 001.33 0c2.447-1.042 4.049-2.357 5.032-3.855C14.68 10.182 15 8.566 15 7V3.48a1.75 1.75 0 00-1.217-1.667L8.533.133zm-.61 1.429a.25.25 0 01.153 0l5.25 1.68a.25.25 0 01.174.238V7c0 1.358-.275 2.666-1.057 3.86-.784 1.194-2.121 2.34-4.366 3.297a.2.2 0 01-.154 0c-2.245-.956-3.582-2.104-4.366-3.298C2.775 9.666 2.5 8.36 2.5 7V3.48a.25.25 0 01.174-.237l5.25-1.68zM11.28 6.28a.75.75 0 00-1.06-1.06L7.25 8.19l-.97-.97a.75.75 0 10-1.06 1.06l1.5 1.5a.75.75 0 001.06 0l3.5-3.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M16.53 9.78a.75.75 0 00-1.06-1.06L11 13.19l-1.97-1.97a.75.75 0 00-1.06 1.06l2.5 2.5a.75.75 0 001.06 0l5-5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12.54.637a1.75 1.75 0 00-1.08 0L3.21 3.312A1.75 1.75 0 002 4.976V10c0 6.19 3.77 10.705 9.401 12.83.386.145.812.145 1.198 0C18.229 20.704 22 16.19 22 10V4.976c0-.759-.49-1.43-1.21-1.664L12.54.637zm-.617 1.426a.25.25 0 01.154 0l8.25 2.676a.25.25 0 01.173.237V10c0 5.461-3.28 9.483-8.43 11.426a.2.2 0 01-.14 0C6.78 19.483 3.5 15.46 3.5 10V4.976c0-.108.069-.203.173-.237l8.25-2.676z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nShieldCheckIcon.defaultProps = {\n  className: 'octicon octicon-shield-check',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ShieldLockIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.533.133a1.75 1.75 0 00-1.066 0l-5.25 1.68A1.75 1.75 0 001 3.48V7c0 1.566.32 3.182 1.303 4.682.983 1.498 2.585 2.813 5.032 3.855a1.7 1.7 0 001.33 0c2.447-1.042 4.049-2.357 5.032-3.855C14.68 10.182 15 8.566 15 7V3.48a1.75 1.75 0 00-1.217-1.667L8.533.133zm-.61 1.429a.25.25 0 01.153 0l5.25 1.68a.25.25 0 01.174.238V7c0 1.358-.275 2.666-1.057 3.86-.784 1.194-2.121 2.34-4.366 3.297a.2.2 0 01-.154 0c-2.245-.956-3.582-2.104-4.366-3.298C2.775 9.666 2.5 8.36 2.5 7V3.48a.25.25 0 01.174-.237l5.25-1.68zM9.5 6.5a1.5 1.5 0 01-.75 1.3v2.45a.75.75 0 01-1.5 0V7.8A1.5 1.5 0 119.5 6.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.077 2.563a.25.25 0 00-.154 0L3.673 5.24a.249.249 0 00-.173.237V10.5c0 5.461 3.28 9.483 8.43 11.426a.2.2 0 00.14 0c5.15-1.943 8.43-5.965 8.43-11.426V5.476a.25.25 0 00-.173-.237l-8.25-2.676zm-.617-1.426a1.75 1.75 0 011.08 0l8.25 2.675A1.75 1.75 0 0122 5.476V10.5c0 6.19-3.77 10.705-9.401 12.83a1.699 1.699 0 01-1.198 0C5.771 21.204 2 16.69 2 10.5V5.476c0-.76.49-1.43 1.21-1.664l8.25-2.675zM13 12.232A2 2 0 0012 8.5a2 2 0 00-1 3.732V15a1 1 0 102 0v-2.768z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nShieldLockIcon.defaultProps = {\n  className: 'octicon octicon-shield-lock',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ShieldXIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.533.133a1.75 1.75 0 00-1.066 0l-5.25 1.68A1.75 1.75 0 001 3.48V7c0 1.566.32 3.182 1.303 4.682.983 1.498 2.585 2.813 5.032 3.855a1.7 1.7 0 001.33 0c2.447-1.042 4.049-2.357 5.032-3.855C14.68 10.182 15 8.566 15 7V3.48a1.75 1.75 0 00-1.217-1.667L8.533.133zm-.61 1.429a.25.25 0 01.153 0l5.25 1.68a.25.25 0 01.174.238V7c0 1.358-.275 2.666-1.057 3.86-.784 1.194-2.121 2.34-4.366 3.297a.2.2 0 01-.154 0c-2.245-.956-3.582-2.104-4.366-3.298C2.775 9.666 2.5 8.36 2.5 7V3.48a.25.25 0 01.174-.237l5.25-1.68zM6.78 5.22a.75.75 0 10-1.06 1.06L6.94 7.5 5.72 8.72a.75.75 0 001.06 1.06L8 8.56l1.22 1.22a.75.75 0 101.06-1.06L9.06 7.5l1.22-1.22a.75.75 0 10-1.06-1.06L8 6.44 6.78 5.22z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M9.28 7.72a.75.75 0 00-1.06 1.06l2.72 2.72-2.72 2.72a.75.75 0 101.06 1.06L12 12.56l2.72 2.72a.75.75 0 101.06-1.06l-2.72-2.72 2.72-2.72a.75.75 0 00-1.06-1.06L12 10.44 9.28 7.72z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12.54.637a1.75 1.75 0 00-1.08 0L3.21 3.312A1.75 1.75 0 002 4.976V10c0 6.19 3.77 10.705 9.401 12.83.386.145.812.145 1.198 0C18.229 20.704 22 16.19 22 10V4.976c0-.759-.49-1.43-1.21-1.664L12.54.637zm-.617 1.426a.25.25 0 01.154 0l8.25 2.676a.25.25 0 01.173.237V10c0 5.461-3.28 9.483-8.43 11.426a.2.2 0 01-.14 0C6.78 19.483 3.5 15.46 3.5 10V4.976c0-.108.069-.203.173-.237l8.25-2.676z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nShieldXIcon.defaultProps = {\n  className: 'octicon octicon-shield-x',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SidebarCollapseIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.823 7.823L4.427 5.427A.25.25 0 004 5.604v4.792c0 .223.27.335.427.177l2.396-2.396a.25.25 0 000-.354z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25H9.5v13H1.75a.25.25 0 01-.25-.25V1.75zM11 14.5v-13h3.25a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H11z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.22 14.47L9.69 12 7.22 9.53a.75.75 0 111.06-1.06l3 3a.75.75 0 010 1.06l-3 3a.75.75 0 01-1.06-1.06z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 2A1.75 1.75 0 002 3.75v16.5c0 .966.784 1.75 1.75 1.75h16.5A1.75 1.75 0 0022 20.25V3.75A1.75 1.75 0 0020.25 2H3.75zM3.5 3.75a.25.25 0 01.25-.25H15v17H3.75a.25.25 0 01-.25-.25V3.75zm13 16.75v-17h3.75a.25.25 0 01.25.25v16.5a.25.25 0 01-.25.25H16.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSidebarCollapseIcon.defaultProps = {\n  className: 'octicon octicon-sidebar-collapse',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SidebarExpandIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.177 7.823l2.396-2.396A.25.25 0 017 5.604v4.792a.25.25 0 01-.427.177L4.177 8.177a.25.25 0 010-.354z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0114.25 16H1.75A1.75 1.75 0 010 14.25V1.75zm1.75-.25a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25H9.5v-13H1.75zm12.5 13H11v-13h3.25a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.28 9.53L8.81 12l2.47 2.47a.75.75 0 11-1.06 1.06l-3-3a.75.75 0 010-1.06l3-3a.75.75 0 111.06 1.06z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M3.75 2A1.75 1.75 0 002 3.75v16.5c0 .966.784 1.75 1.75 1.75h16.5A1.75 1.75 0 0022 20.25V3.75A1.75 1.75 0 0020.25 2H3.75zM3.5 3.75a.25.25 0 01.25-.25H15v17H3.75a.25.25 0 01-.25-.25V3.75zm13 16.75v-17h3.75a.25.25 0 01.25.25v16.5a.25.25 0 01-.25.25H16.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSidebarExpandIcon.defaultProps = {\n  className: 'octicon octicon-sidebar-expand',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SignInIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 2.75C2 1.784 2.784 1 3.75 1h2.5a.75.75 0 010 1.5h-2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h2.5a.75.75 0 010 1.5h-2.5A1.75 1.75 0 012 13.25V2.75zm6.56 4.5l1.97-1.97a.75.75 0 10-1.06-1.06L6.22 7.47a.75.75 0 000 1.06l3.25 3.25a.75.75 0 101.06-1.06L8.56 8.75h5.69a.75.75 0 000-1.5H8.56z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3 3.25c0-.966.784-1.75 1.75-1.75h5.5a.75.75 0 010 1.5h-5.5a.25.25 0 00-.25.25v17.5c0 .138.112.25.25.25h5.5a.75.75 0 010 1.5h-5.5A1.75 1.75 0 013 20.75V3.25zm9.994 9.5l3.3 3.484a.75.75 0 01-1.088 1.032l-4.5-4.75a.75.75 0 010-1.032l4.5-4.75a.75.75 0 011.088 1.032l-3.3 3.484h8.256a.75.75 0 010 1.5h-8.256z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSignInIcon.defaultProps = {\n  className: 'octicon octicon-sign-in',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SignOutIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 2.75C2 1.784 2.784 1 3.75 1h2.5a.75.75 0 010 1.5h-2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h2.5a.75.75 0 010 1.5h-2.5A1.75 1.75 0 012 13.25V2.75zm10.44 4.5H6.75a.75.75 0 000 1.5h5.69l-1.97 1.97a.75.75 0 101.06 1.06l3.25-3.25a.75.75 0 000-1.06l-3.25-3.25a.75.75 0 10-1.06 1.06l1.97 1.97z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3 3.25c0-.966.784-1.75 1.75-1.75h5.5a.75.75 0 010 1.5h-5.5a.25.25 0 00-.25.25v17.5c0 .138.112.25.25.25h5.5a.75.75 0 010 1.5h-5.5A1.75 1.75 0 013 20.75V3.25zm16.006 9.5l-3.3 3.484a.75.75 0 001.088 1.032l4.5-4.75a.75.75 0 000-1.032l-4.5-4.75a.75.75 0 00-1.088 1.032l3.3 3.484H10.75a.75.75 0 000 1.5h8.256z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSignOutIcon.defaultProps = {\n  className: 'octicon octicon-sign-out',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SingleSelectIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M5.06 7.356l2.795 2.833c.08.081.21.081.29 0l2.794-2.833c.13-.131.038-.356-.145-.356H5.206c-.183 0-.275.225-.145.356z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v10.5A1.75 1.75 0 0113.25 15H2.75A1.75 1.75 0 011 13.25V2.75zm1.75-.25a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h10.5a.25.25 0 00.25-.25V2.75a.25.25 0 00-.25-.25H2.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M7.854 10.854l3.792 3.792a.5.5 0 00.708 0l3.793-3.792a.5.5 0 00-.354-.854H8.207a.5.5 0 00-.353.854z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M2 3.75C2 2.784 2.784 2 3.75 2h16.5c.966 0 1.75.784 1.75 1.75v16.5A1.75 1.75 0 0120.25 22H3.75A1.75 1.75 0 012 20.25V3.75zm1.75-.25a.25.25 0 00-.25.25v16.5c0 .138.112.25.25.25h16.5a.25.25 0 00.25-.25V3.75a.25.25 0 00-.25-.25H3.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSingleSelectIcon.defaultProps = {\n  className: 'octicon octicon-single-select',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SkipIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zm3.28 5.78a.75.75 0 00-1.06-1.06l-5.5 5.5a.75.75 0 101.06 1.06l5.5-5.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M17.28 7.78a.75.75 0 00-1.06-1.06l-9.5 9.5a.75.75 0 101.06 1.06l9.5-9.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSkipIcon.defaultProps = {\n  className: 'octicon octicon-skip',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SlidersIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M15 2.75a.75.75 0 01-.75.75h-4a.75.75 0 010-1.5h4a.75.75 0 01.75.75zm-8.5.75v1.25a.75.75 0 001.5 0v-4a.75.75 0 00-1.5 0V2H1.75a.75.75 0 000 1.5H6.5zm1.25 5.25a.75.75 0 000-1.5h-6a.75.75 0 000 1.5h6zM15 8a.75.75 0 01-.75.75H11.5V10a.75.75 0 11-1.5 0V6a.75.75 0 011.5 0v1.25h2.75A.75.75 0 0115 8zm-9 5.25v-2a.75.75 0 00-1.5 0v1.25H1.75a.75.75 0 000 1.5H4.5v1.25a.75.75 0 001.5 0v-2zm9 0a.75.75 0 01-.75.75h-6a.75.75 0 010-1.5h6a.75.75 0 01.75.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSlidersIcon.defaultProps = {\n  className: 'octicon octicon-sliders',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SmileyIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zM5 8a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zM5.32 9.636a.75.75 0 011.038.175l.007.009c.103.118.22.222.35.31.264.178.683.37 1.285.37.602 0 1.02-.192 1.285-.371.13-.088.247-.192.35-.31l.007-.008a.75.75 0 111.222.87l-.614-.431c.614.43.614.431.613.431v.001l-.001.002-.002.003-.005.007-.014.019a1.984 1.984 0 01-.184.213c-.16.166-.338.316-.53.445-.63.418-1.37.638-2.127.629-.946 0-1.652-.308-2.126-.63a3.32 3.32 0 01-.715-.657l-.014-.02-.005-.006-.002-.003v-.002h-.001l.613-.432-.614.43a.75.75 0 01.183-1.044h.001z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M8.456 14.494a.75.75 0 011.068.17 3.08 3.08 0 00.572.492A3.381 3.381 0 0012 15.72c.855 0 1.487-.283 1.904-.562a3.081 3.081 0 00.572-.492l.021-.026a.75.75 0 011.197.905l-.027.034c-.013.016-.03.038-.052.063-.044.05-.105.119-.184.198a4.569 4.569 0 01-.695.566A4.88 4.88 0 0112 17.22a4.88 4.88 0 01-2.736-.814 4.57 4.57 0 01-.695-.566 3.253 3.253 0 01-.236-.261c-.259-.332-.223-.824.123-1.084z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\\\"></path><path d=\\\"M9 10.75a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM16.25 12a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSmileyIcon.defaultProps = {\n  className: 'octicon octicon-smiley',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SortAscIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 4.25a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5H.75A.75.75 0 010 4.25zm0 4a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5H.75A.75.75 0 010 8.25zm0 4a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5H.75a.75.75 0 01-.75-.75zm12.927-9.677a.25.25 0 00-.354 0l-3 3A.25.25 0 009.75 6H12v6.75a.75.75 0 001.5 0V6h2.25a.25.25 0 00.177-.427l-3-3z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M18.5 17.25a.75.75 0 01-1.5 0V7.56l-2.22 2.22a.75.75 0 11-1.06-1.06l3.5-3.5a.75.75 0 011.06 0l3.5 3.5a.75.75 0 01-1.06 1.06L18.5 7.56v9.69zm-15.75.25a.75.75 0 010-1.5h9.5a.75.75 0 010 1.5h-9.5zm0-5a.75.75 0 010-1.5h5.5a.75.75 0 010 1.5h-5.5zm0-5a.75.75 0 010-1.5h3.5a.75.75 0 010 1.5h-3.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSortAscIcon.defaultProps = {\n  className: 'octicon octicon-sort-asc',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SortDescIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 4.25a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5H.75A.75.75 0 010 4.25zm0 4a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5H.75A.75.75 0 010 8.25zm0 4a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5H.75a.75.75 0 01-.75-.75z\\\"></path><path d=\\\"M13.5 10h2.25a.25.25 0 01.177.427l-3 3a.25.25 0 01-.354 0l-3-3A.25.25 0 019.75 10H12V3.75a.75.75 0 011.5 0V10z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M18.5 16.44V6.75a.75.75 0 00-1.5 0v9.69l-2.22-2.22a.75.75 0 10-1.06 1.06l3.5 3.5a.75.75 0 001.06 0l3.5-3.5a.75.75 0 10-1.06-1.06l-2.22 2.22zM2 7.25a.75.75 0 01.75-.75h9.5a.75.75 0 010 1.5h-9.5A.75.75 0 012 7.25zm0 5a.75.75 0 01.75-.75h5.5a.75.75 0 010 1.5h-5.5a.75.75 0 01-.75-.75zm0 5a.75.75 0 01.75-.75h3.5a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSortDescIcon.defaultProps = {\n  className: 'octicon octicon-sort-desc',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SquareIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4 5.75C4 4.784 4.784 4 5.75 4h4.5c.966 0 1.75.784 1.75 1.75v4.5A1.75 1.75 0 0110.25 12h-4.5A1.75 1.75 0 014 10.25v-4.5zm1.75-.25a.25.25 0 00-.25.25v4.5c0 .138.112.25.25.25h4.5a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-4.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6 7.75C6 6.784 6.784 6 7.75 6h8.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0116.25 18h-8.5A1.75 1.75 0 016 16.25v-8.5zm1.75-.25a.25.25 0 00-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 00.25-.25v-8.5a.25.25 0 00-.25-.25h-8.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSquareIcon.defaultProps = {\n  className: 'octicon octicon-square',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SquareFillIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.75 4A1.75 1.75 0 004 5.75v4.5c0 .966.784 1.75 1.75 1.75h4.5A1.75 1.75 0 0012 10.25v-4.5A1.75 1.75 0 0010.25 4h-4.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.75 6A1.75 1.75 0 006 7.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0018 16.25v-8.5A1.75 1.75 0 0016.25 6h-8.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSquareFillIcon.defaultProps = {\n  className: 'octicon octicon-square-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SquirrelIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.499.75a.75.75 0 011.5 0v.996C5.9 2.903 6.793 3.65 7.662 4.376l.24.202c-.036-.694.055-1.422.426-2.163C9.1.873 10.794-.045 12.622.26 14.408.558 16 1.94 16 4.25c0 1.278-.954 2.575-2.44 2.734l.146.508.065.22c.203.701.412 1.455.476 2.226.142 1.707-.4 3.03-1.487 3.898C11.714 14.671 10.27 15 8.75 15h-6a.75.75 0 010-1.5h1.376a4.489 4.489 0 01-.563-1.191 3.833 3.833 0 01-.05-2.063 4.636 4.636 0 01-2.025-.293.75.75 0 11.525-1.406c1.357.507 2.376-.006 2.698-.318l.009-.01a.748.748 0 011.06 0 .75.75 0 01-.012 1.074c-.912.92-.992 1.835-.768 2.586.221.74.745 1.337 1.196 1.621H8.75c1.343 0 2.398-.296 3.074-.836.635-.507 1.036-1.31.928-2.602-.05-.603-.216-1.224-.422-1.93l-.064-.221c-.12-.407-.246-.84-.353-1.29a2.404 2.404 0 01-.507-.441 3.063 3.063 0 01-.633-1.248.75.75 0 011.455-.364c.046.185.144.436.31.627.146.168.353.305.712.305.738 0 1.25-.615 1.25-1.25 0-1.47-.95-2.315-2.123-2.51-1.172-.196-2.227.387-2.706 1.345-.46.92-.27 1.774.019 3.062l.042.19a.753.753 0 01.01.05c.348.443.666.949.94 1.553a.75.75 0 11-1.365.62c-.553-1.217-1.32-1.94-2.3-2.768a85.08 85.08 0 00-.317-.265c-.814-.68-1.75-1.462-2.692-2.619a3.74 3.74 0 00-1.023.88c-.406.495-.663 1.036-.722 1.508.116.122.306.21.591.239.388.038.797-.06 1.032-.19a.75.75 0 01.728 1.31c-.515.287-1.23.439-1.906.373-.682-.067-1.473-.38-1.879-1.193L.75 5.677V5.5c0-.984.48-1.94 1.077-2.664.46-.559 1.05-1.055 1.673-1.353V.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M18.377 3.49c-1.862-.31-3.718.62-4.456 2.095-.428.857-.691 1.624-.728 2.361-.035.71.138 1.444.67 2.252.644.854 1.199 1.913 1.608 3.346a.75.75 0 11-1.442.412c-.353-1.236-.82-2.135-1.372-2.865l-.008-.01c-.53-.698-1.14-1.242-1.807-1.778a50.724 50.724 0 00-.667-.524C9.024 7.884 7.71 6.863 6.471 5.16c-.59.287-1.248.798-1.806 1.454-.665.78-1.097 1.66-1.158 2.446.246.36.685.61 1.246.715.643.12 1.278.015 1.633-.182a.75.75 0 11.728 1.311c-.723.402-1.728.516-2.637.346-.916-.172-1.898-.667-2.398-1.666L2 9.427V9.25c0-1.323.678-2.615 1.523-3.607.7-.824 1.59-1.528 2.477-1.917V2.75a.75.75 0 111.5 0v1.27c1.154 1.67 2.363 2.612 3.568 3.551.207.162.415.323.621.489.001-.063.003-.126.006-.188.052-1.034.414-2.017.884-2.958 1.06-2.118 3.594-3.313 6.044-2.904 1.225.204 2.329.795 3.125 1.748C22.546 4.713 23 5.988 23 7.5c0 1.496-.913 3.255-2.688 3.652.838 1.699 1.438 3.768 1.181 5.697-.269 2.017-1.04 3.615-2.582 4.675C17.409 22.558 15.288 23 12.5 23H4.75a.75.75 0 010-1.5h2.322c-.58-.701-.998-1.578-1.223-2.471-.327-1.3-.297-2.786.265-4.131-.92.091-1.985-.02-3.126-.445a.75.75 0 11.524-1.406c1.964.733 3.428.266 4.045-.19.068-.06.137-.12.208-.18a.745.745 0 01.861-.076.746.746 0 01.32.368.752.752 0 01-.173.819c-.077.076-.16.15-.252.221-1.322 1.234-1.62 3.055-1.218 4.654.438 1.737 1.574 2.833 2.69 2.837H12.5c2.674 0 4.429-.433 5.56-1.212 1.094-.752 1.715-1.904 1.946-3.637.236-1.768-.445-3.845-1.407-5.529a.576.576 0 01-.012-.02 3.557 3.557 0 01-1.553-.94c-.556-.565-.89-1.243-1.012-1.73a.75.75 0 011.456-.364c.057.231.26.67.626 1.043.35.357.822.623 1.443.623 1.172 0 1.953-1.058 1.953-2.234 0-1.205-.357-2.127-.903-2.78-.547-.654-1.318-1.08-2.22-1.23z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSquirrelIcon.defaultProps = {\n  className: 'octicon octicon-squirrel',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction StackIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.122.392a1.75 1.75 0 011.756 0l5.003 2.902c.83.481.83 1.68 0 2.162L8.878 8.358a1.75 1.75 0 01-1.756 0L2.119 5.456a1.25 1.25 0 010-2.162L7.122.392zM8.125 1.69a.25.25 0 00-.25 0l-4.63 2.685 4.63 2.685a.25.25 0 00.25 0l4.63-2.685-4.63-2.685zM1.601 7.789a.75.75 0 011.025-.273l5.249 3.044a.25.25 0 00.25 0l5.249-3.044a.75.75 0 01.752 1.298l-5.248 3.044a1.75 1.75 0 01-1.756 0L1.874 8.814A.75.75 0 011.6 7.789zm0 3.5a.75.75 0 011.025-.273l5.249 3.044a.25.25 0 00.25 0l5.249-3.044a.75.75 0 01.752 1.298l-5.248 3.044a1.75 1.75 0 01-1.756 0l-5.248-3.044a.75.75 0 01-.273-1.025z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.063 1.456a1.75 1.75 0 011.874 0l8.383 5.316a1.75 1.75 0 010 2.956l-8.383 5.316a1.75 1.75 0 01-1.874 0L2.68 9.728a1.75 1.75 0 010-2.956l8.383-5.316zm1.071 1.267a.25.25 0 00-.268 0L3.483 8.039a.25.25 0 000 .422l8.383 5.316a.25.25 0 00.268 0l8.383-5.316a.25.25 0 000-.422l-8.383-5.316z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M1.867 12.324a.75.75 0 011.035-.232l8.964 5.685a.25.25 0 00.268 0l8.964-5.685a.75.75 0 01.804 1.267l-8.965 5.685a1.75 1.75 0 01-1.874 0l-8.965-5.685a.75.75 0 01-.231-1.035z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M1.867 16.324a.75.75 0 011.035-.232l8.964 5.685a.25.25 0 00.268 0l8.964-5.685a.75.75 0 01.804 1.267l-8.965 5.685a1.75 1.75 0 01-1.874 0l-8.965-5.685a.75.75 0 01-.231-1.035z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nStackIcon.defaultProps = {\n  className: 'octicon octicon-stack',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction StarIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 .25a.75.75 0 01.673.418l3.058 6.197 6.839.994a.75.75 0 01.415 1.279l-4.948 4.823 1.168 6.811a.75.75 0 01-1.088.791L12 18.347l-6.117 3.216a.75.75 0 01-1.088-.79l1.168-6.812-4.948-4.823a.75.75 0 01.416-1.28l6.838-.993L11.328.668A.75.75 0 0112 .25zm0 2.445L9.44 7.882a.75.75 0 01-.565.41l-5.725.832 4.143 4.038a.75.75 0 01.215.664l-.978 5.702 5.121-2.692a.75.75 0 01.698 0l5.12 2.692-.977-5.702a.75.75 0 01.215-.664l4.143-4.038-5.725-.831a.75.75 0 01-.565-.41L12 2.694z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nStarIcon.defaultProps = {\n  className: 'octicon octicon-star',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction StarFillIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.672.668a.75.75 0 00-1.345 0L8.27 6.865l-6.838.994a.75.75 0 00-.416 1.279l4.948 4.823-1.168 6.811a.75.75 0 001.088.791L12 18.347l6.117 3.216a.75.75 0 001.088-.79l-1.168-6.812 4.948-4.823a.75.75 0 00-.416-1.28l-6.838-.993L12.672.668z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nStarFillIcon.defaultProps = {\n  className: 'octicon octicon-star-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction StopIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.47.22A.75.75 0 015 0h6a.75.75 0 01.53.22l4.25 4.25c.141.14.22.331.22.53v6a.75.75 0 01-.22.53l-4.25 4.25A.75.75 0 0111 16H5a.75.75 0 01-.53-.22L.22 11.53A.75.75 0 010 11V5a.75.75 0 01.22-.53L4.47.22zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5H5.31zM8 4a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 018 4zm0 8a1 1 0 100-2 1 1 0 000 2z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M12 7a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0112 7zm0 10a1 1 0 100-2 1 1 0 000 2z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M7.328 1.47a.75.75 0 01.53-.22h8.284a.75.75 0 01.53.22l5.858 5.858c.141.14.22.33.22.53v8.284a.75.75 0 01-.22.53l-5.858 5.858a.75.75 0 01-.53.22H7.858a.75.75 0 01-.53-.22L1.47 16.672a.75.75 0 01-.22-.53V7.858a.75.75 0 01.22-.53L7.328 1.47zm.84 1.28L2.75 8.169v7.662l5.419 5.419h7.662l5.419-5.418V8.168L15.832 2.75H8.168z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nStopIcon.defaultProps = {\n  className: 'octicon octicon-stop',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction StopwatchIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.75.75A.75.75 0 016.5 0h3a.75.75 0 010 1.5h-.75v1l-.001.041a6.718 6.718 0 013.464 1.435l.007-.006.75-.75a.75.75 0 111.06 1.06l-.75.75-.006.007a6.75 6.75 0 11-10.548 0L2.72 5.03l-.75-.75a.75.75 0 011.06-1.06l.75.75.007.006A6.718 6.718 0 017.25 2.541a.756.756 0 010-.041v-1H6.5a.75.75 0 01-.75-.75zM8 14.5A5.25 5.25 0 108 4a5.25 5.25 0 000 10.5zm.389-6.7l1.33-1.33a.75.75 0 111.061 1.06L9.45 8.861A1.502 1.502 0 018 10.75a1.5 1.5 0 11.389-2.95z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.25 0a.75.75 0 000 1.5h1v1.278a9.955 9.955 0 00-5.635 2.276L4.28 3.72a.75.75 0 00-1.06 1.06l1.315 1.316A9.962 9.962 0 002 12.75c0 5.523 4.477 10 10 10s10-4.477 10-10a9.962 9.962 0 00-2.535-6.654L20.78 4.78a.75.75 0 00-1.06-1.06l-1.334 1.334a9.955 9.955 0 00-5.636-2.276V1.5h1a.75.75 0 000-1.5h-3.5zM12 21.25a8.5 8.5 0 100-17 8.5 8.5 0 000 17zm4.03-12.53a.75.75 0 010 1.06l-2.381 2.382a1.75 1.75 0 11-1.06-1.06l2.38-2.382a.75.75 0 011.061 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nStopwatchIcon.defaultProps = {\n  className: 'octicon octicon-stopwatch',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction StrikethroughIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.581 3.25c-2.036 0-2.778 1.082-2.778 1.786 0 .055.002.107.006.157a.75.75 0 01-1.496.114 3.56 3.56 0 01-.01-.271c0-1.832 1.75-3.286 4.278-3.286 1.418 0 2.721.58 3.514 1.093a.75.75 0 11-.814 1.26c-.64-.414-1.662-.853-2.7-.853zm3.474 5.25h3.195a.75.75 0 000-1.5H1.75a.75.75 0 000 1.5h6.018c.835.187 1.503.464 1.951.81.439.34.647.725.647 1.197 0 .428-.159.895-.594 1.267-.444.38-1.254.726-2.676.726-1.373 0-2.38-.493-2.86-.956a.75.75 0 00-1.042 1.079C3.992 13.393 5.39 14 7.096 14c1.652 0 2.852-.403 3.65-1.085a3.134 3.134 0 001.12-2.408 2.85 2.85 0 00-.811-2.007z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.36 5C9.37 5 8.105 6.613 8.105 7.848c0 .411.072.744.193 1.02a.75.75 0 01-1.373.603 3.993 3.993 0 01-.32-1.623c0-2.363 2.271-4.348 5.755-4.348 1.931 0 3.722.794 4.814 1.5a.75.75 0 11-.814 1.26c-.94-.607-2.448-1.26-4-1.26zm4.173 7.5h3.717a.75.75 0 000-1.5H3.75a.75.75 0 000 1.5h9.136c1.162.28 2.111.688 2.76 1.211.642.518.979 1.134.979 1.898a2.63 2.63 0 01-.954 2.036c-.703.601-1.934 1.105-3.999 1.105-2.018 0-3.529-.723-4.276-1.445a.75.75 0 10-1.042 1.08c1.066 1.028 2.968 1.865 5.318 1.865 2.295 0 3.916-.56 4.974-1.464a4.131 4.131 0 001.479-3.177c0-1.296-.608-2.316-1.538-3.066a5.77 5.77 0 00-.054-.043z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nStrikethroughIcon.defaultProps = {\n  className: 'octicon octicon-strikethrough',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SunIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 10.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM8 12a4 4 0 100-8 4 4 0 000 8zM8 0a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0V.75A.75.75 0 018 0zm0 13a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 018 13zM2.343 2.343a.75.75 0 011.061 0l1.06 1.061a.75.75 0 01-1.06 1.06l-1.06-1.06a.75.75 0 010-1.06zm9.193 9.193a.75.75 0 011.06 0l1.061 1.06a.75.75 0 01-1.06 1.061l-1.061-1.06a.75.75 0 010-1.061zM16 8a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5A.75.75 0 0116 8zM3 8a.75.75 0 01-.75.75H.75a.75.75 0 010-1.5h1.5A.75.75 0 013 8zm10.657-5.657a.75.75 0 010 1.061l-1.061 1.06a.75.75 0 11-1.06-1.06l1.06-1.06a.75.75 0 011.06 0zm-9.193 9.193a.75.75 0 010 1.06l-1.06 1.061a.75.75 0 11-1.061-1.06l1.06-1.061a.75.75 0 011.061 0z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 17.5a5.5 5.5 0 100-11 5.5 5.5 0 000 11zm0 1.5a7 7 0 100-14 7 7 0 000 14zm12-7a.75.75 0 01-.75.75h-2.5a.75.75 0 010-1.5h2.5A.75.75 0 0124 12zM4 12a.75.75 0 01-.75.75H.75a.75.75 0 010-1.5h2.5A.75.75 0 014 12zm16.485-8.485a.75.75 0 010 1.06l-1.768 1.768a.75.75 0 01-1.06-1.06l1.767-1.768a.75.75 0 011.061 0zM6.343 17.657a.75.75 0 010 1.06l-1.768 1.768a.75.75 0 11-1.06-1.06l1.767-1.768a.75.75 0 011.061 0zM12 0a.75.75 0 01.75.75v2.5a.75.75 0 01-1.5 0V.75A.75.75 0 0112 0zm0 20a.75.75 0 01.75.75v2.5a.75.75 0 01-1.5 0v-2.5A.75.75 0 0112 20zM3.515 3.515a.75.75 0 011.06 0l1.768 1.768a.75.75 0 11-1.06 1.06L3.515 4.575a.75.75 0 010-1.06zm14.142 14.142a.75.75 0 011.06 0l1.768 1.768a.75.75 0 01-1.06 1.06l-1.768-1.767a.75.75 0 010-1.061z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSunIcon.defaultProps = {\n  className: 'octicon octicon-sun',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction SyncIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8 2.5a5.487 5.487 0 00-4.131 1.869l1.204 1.204A.25.25 0 014.896 6H1.25A.25.25 0 011 5.75V2.104a.25.25 0 01.427-.177l1.38 1.38A7.001 7.001 0 0114.95 7.16a.75.75 0 11-1.49.178A5.501 5.501 0 008 2.5zM1.705 8.005a.75.75 0 01.834.656 5.501 5.501 0 009.592 2.97l-1.204-1.204a.25.25 0 01.177-.427h3.646a.25.25 0 01.25.25v3.646a.25.25 0 01-.427.177l-1.38-1.38A7.001 7.001 0 011.05 8.84a.75.75 0 01.656-.834z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M3.38 8A9.502 9.502 0 0112 2.5a9.502 9.502 0 019.215 7.182.75.75 0 101.456-.364C21.473 4.539 17.15 1 12 1a10.995 10.995 0 00-9.5 5.452V4.75a.75.75 0 00-1.5 0V8.5a1 1 0 001 1h3.75a.75.75 0 000-1.5H3.38zm-.595 6.318a.75.75 0 00-1.455.364C2.527 19.461 6.85 23 12 23c4.052 0 7.592-2.191 9.5-5.451v1.701a.75.75 0 001.5 0V15.5a1 1 0 00-1-1h-3.75a.75.75 0 000 1.5h2.37A9.502 9.502 0 0112 21.5c-4.446 0-8.181-3.055-9.215-7.182z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nSyncIcon.defaultProps = {\n  className: 'octicon octicon-sync',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TabIcon(props) {\n  var svgDataByHeight = { \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M22 4.25a.75.75 0 00-1.5 0v15a.75.75 0 001.5 0v-15zm-9.72 14.28a.75.75 0 11-1.06-1.06l4.97-4.97H1.75a.75.75 0 010-1.5h14.44l-4.97-4.97a.75.75 0 011.06-1.06l6.25 6.25a.75.75 0 010 1.06l-6.25 6.25z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTabIcon.defaultProps = {\n  className: 'octicon octicon-tab',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TabExternalIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M3.25 4a.25.25 0 00-.25.25v9a.75.75 0 01-.75.75H.75a.75.75 0 010-1.5h.75V4.25c0-.966.784-1.75 1.75-1.75h9.5c.966 0 1.75.784 1.75 1.75v8.25h.75a.75.75 0 010 1.5h-1.5a.75.75 0 01-.75-.75v-9a.25.25 0 00-.25-.25h-9.5z\\\"></path><path d=\\\"M7.97 7.97l-2.75 2.75a.75.75 0 101.06 1.06l2.75-2.75 1.543 1.543a.25.25 0 00.427-.177V6.25a.25.25 0 00-.25-.25H6.604a.25.25 0 00-.177.427L7.97 7.97z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTabExternalIcon.defaultProps = {\n  className: 'octicon octicon-tab-external',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TableIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0114.25 16H1.75A1.75 1.75 0 010 14.25V1.75zM1.5 6.5v7.75c0 .138.112.25.25.25H5v-8H1.5zM5 5H1.5V1.75a.25.25 0 01.25-.25H5V5zm1.5 1.5v8h7.75a.25.25 0 00.25-.25V6.5h-8zm8-1.5h-8V1.5h7.75a.25.25 0 01.25.25V5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2 3.75C2 2.784 2.784 2 3.75 2h16.5c.966 0 1.75.784 1.75 1.75v16.5A1.75 1.75 0 0120.25 22H3.75A1.75 1.75 0 012 20.25V3.75zM3.5 9v11.25c0 .138.112.25.25.25H7.5V9h-4zm4-1.5h-4V3.75a.25.25 0 01.25-.25H7.5v4zM9 9v11.5h11.25a.25.25 0 00.25-.25V9H9zm11.5-1.5H9v-4h11.25a.25.25 0 01.25.25V7.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTableIcon.defaultProps = {\n  className: 'octicon octicon-table',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TagIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 7.775V2.75a.25.25 0 01.25-.25h5.025a.25.25 0 01.177.073l6.25 6.25a.25.25 0 010 .354l-5.025 5.025a.25.25 0 01-.354 0l-6.25-6.25a.25.25 0 01-.073-.177zm-1.5 0V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 010 2.474l-5.026 5.026a1.75 1.75 0 01-2.474 0l-6.25-6.25A1.75 1.75 0 011 7.775zM6 5a1 1 0 100 2 1 1 0 000-2z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M7.75 6.5a1.25 1.25 0 100 2.5 1.25 1.25 0 000-2.5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 1A1.5 1.5 0 001 2.5v8.44c0 .397.158.779.44 1.06l10.25 10.25a1.5 1.5 0 002.12 0l8.44-8.44a1.5 1.5 0 000-2.12L12 1.44A1.5 1.5 0 0010.94 1H2.5zm0 1.5h8.44l10.25 10.25-8.44 8.44L2.5 10.94V2.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTagIcon.defaultProps = {\n  className: 'octicon octicon-tag',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TasklistIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.5 3.5v3h3v-3h-3zM2 2a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1V3a1 1 0 00-1-1H2zm4.655 8.595a.75.75 0 010 1.06L4.03 14.28a.75.75 0 01-1.06 0l-1.5-1.5a.75.75 0 111.06-1.06l.97.97 2.095-2.095a.75.75 0 011.06 0zM9.75 2.5a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5zm0 5a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5zm0 5a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3 6a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1V6zm1.5 4.5v-4h4v4h-4z\\\"></path><path d=\\\"M12.75 5.5a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5h-7.5zm0 6a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5h-7.5zm0 6a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5h-7.5zm-2.97-2.53a.75.75 0 010 1.06l-3.5 3.5a.75.75 0 01-1.06 0l-2-2a.75.75 0 111.06-1.06l1.47 1.47 2.97-2.97a.75.75 0 011.06 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTasklistIcon.defaultProps = {\n  className: 'octicon octicon-tasklist',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TelescopeIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M14.184 1.143a1.75 1.75 0 00-2.502-.57L.912 7.916a1.75 1.75 0 00-.53 2.32l.447.775a1.75 1.75 0 002.275.702l11.745-5.656a1.75 1.75 0 00.757-2.451l-1.422-2.464zm-1.657.669a.25.25 0 01.358.081l1.422 2.464a.25.25 0 01-.108.35l-2.016.97-1.505-2.605 1.85-1.26zM9.436 3.92l1.391 2.41-5.42 2.61-.942-1.63 4.97-3.39zM3.222 8.157l-1.466 1a.25.25 0 00-.075.33l.447.775a.25.25 0 00.325.1l1.598-.769-.83-1.436zm6.253 2.306a.75.75 0 00-.944-.252l-1.809.87a.75.75 0 00-.293.253L4.38 14.326a.75.75 0 101.238.848l1.881-2.75v2.826a.75.75 0 001.5 0v-2.826l1.881 2.75a.75.75 0 001.238-.848l-2.644-3.863z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M.408 15.13a2 2 0 01.59-2.642L17.038 1.33a2 2 0 012.85.602l2.828 4.644a2 2 0 01-.851 2.847l-17.762 8.43a2 2 0 01-2.59-.807L.408 15.13zm5.263-4.066l7.842-5.455 2.857 4.76-8.712 4.135-1.987-3.44zm-1.235.86L1.854 13.72a.5.5 0 00-.147.66l1.105 1.915a.5.5 0 00.648.201l2.838-1.347-1.862-3.225zm13.295-2.2L14.747 4.75l3.148-2.19a.5.5 0 01.713.151l2.826 4.644a.5.5 0 01-.212.712l-3.49 1.656z\\\"></path><path d=\\\"M17.155 22.87a.75.75 0 00.226-1.036l-4-6.239a.75.75 0 00-.941-.278l-2.75 1.25a.75.75 0 00-.318.274l-3.25 4.989a.75.75 0 001.256.819l3.131-4.806.51-.232v5.64a.75.75 0 101.5 0v-6.22l3.6 5.613a.75.75 0 001.036.226z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTelescopeIcon.defaultProps = {\n  className: 'octicon octicon-telescope',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TelescopeFillIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.531 10.21a.75.75 0 01.944.253l2.644 3.864a.75.75 0 11-1.238.847L9 12.424v2.826a.75.75 0 01-1.5 0v-2.826l-1.881 2.75a.75.75 0 01-1.238-.848l2.048-2.992a.75.75 0 01.293-.252l1.81-.871zM11.905.42a1.5 1.5 0 012.144.49l1.692 2.93a1.5 1.5 0 01-.649 2.102L2.895 11.815a1.5 1.5 0 01-1.95-.602l-.68-1.176a1.5 1.5 0 01.455-1.99L11.905.422zM3.279 8.119l.835 1.445 1.355-.653-.947-1.64-1.243.848zm7.728-1.874L9.6 3.808l1.243-.848 1.52 2.631-1.356.653z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M17.155 22.87a.75.75 0 00.226-1.036l-4-6.239a.75.75 0 00-.941-.277l-2.75 1.25a.75.75 0 00-.318.273l-3.25 4.989a.75.75 0 001.256.819l3.131-4.806.51-.232v5.64a.75.75 0 101.5 0v-6.22l3.6 5.613a.75.75 0 001.036.226z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M.408 15.13a2 2 0 01.59-2.642L17.038 1.33a2 2 0 012.85.602l2.828 4.644a2 2 0 01-.851 2.847l-17.762 8.43a2 2 0 01-2.59-.807L.408 15.13zm5.263-4.066l1.987 3.44-1.36.645-1.862-3.225 1.235-.86zm7.842-5.455l2.857 4.76 1.361-.646-2.984-4.973-1.234.859z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTelescopeFillIcon.defaultProps = {\n  className: 'octicon octicon-telescope-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TerminalIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 2.75C0 1.784.784 1 1.75 1h12.5c.966 0 1.75.784 1.75 1.75v10.5A1.75 1.75 0 0114.25 15H1.75A1.75 1.75 0 010 13.25V2.75zm1.75-.25a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25V2.75a.25.25 0 00-.25-.25H1.75zM7.25 8a.75.75 0 01-.22.53l-2.25 2.25a.75.75 0 11-1.06-1.06L5.44 8 3.72 6.28a.75.75 0 111.06-1.06l2.25 2.25c.141.14.22.331.22.53zm1.5 1.5a.75.75 0 000 1.5h3a.75.75 0 000-1.5h-3z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M9.25 12a.75.75 0 01-.22.53l-2.75 2.75a.75.75 0 01-1.06-1.06L7.44 12 5.22 9.78a.75.75 0 111.06-1.06l2.75 2.75c.141.14.22.331.22.53zm2 2a.75.75 0 000 1.5h5a.75.75 0 000-1.5h-5z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M0 4.75C0 3.784.784 3 1.75 3h20.5c.966 0 1.75.784 1.75 1.75v14.5A1.75 1.75 0 0122.25 21H1.75A1.75 1.75 0 010 19.25V4.75zm1.75-.25a.25.25 0 00-.25.25v14.5c0 .138.112.25.25.25h20.5a.25.25 0 00.25-.25V4.75a.25.25 0 00-.25-.25H1.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTerminalIcon.defaultProps = {\n  className: 'octicon octicon-terminal',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ThreeBarsIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1 2.75A.75.75 0 011.75 2h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 2.75zm0 5A.75.75 0 011.75 7h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 7.75zM1.75 12a.75.75 0 100 1.5h12.5a.75.75 0 100-1.5H1.75z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nThreeBarsIcon.defaultProps = {\n  className: 'octicon octicon-three-bars',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ThumbsdownIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.083 15.986c1.34.153 2.334-.982 2.334-2.183v-.5c0-1.329.646-2.123 1.317-2.614.329-.24.66-.403.919-.508a1.75 1.75 0 001.514.872h1a1.75 1.75 0 001.75-1.75v-7.5a1.75 1.75 0 00-1.75-1.75h-1a1.75 1.75 0 00-1.662 1.2c-.525-.074-1.068-.228-1.726-.415L9.305.705C8.151.385 6.765.053 4.917.053c-1.706 0-2.97.152-3.722 1.139-.353.463-.537 1.042-.669 1.672C.41 3.424.32 4.108.214 4.897l-.04.306c-.25 1.869-.266 3.318.188 4.316.244.537.622.943 1.136 1.2.495.248 1.066.334 1.669.334h1.422l-.015.112c-.07.518-.157 1.17-.157 1.638 0 .921.151 1.718.655 2.299.512.589 1.248.797 2.011.884zm4.334-13.232c-.706-.089-1.39-.284-2.072-.479a63.914 63.914 0 00-.441-.125c-1.096-.304-2.335-.597-3.987-.597-1.794 0-2.28.222-2.529.548-.147.193-.275.505-.393 1.07-.105.502-.188 1.124-.295 1.93l-.04.3c-.25 1.882-.19 2.933.067 3.497a.921.921 0 00.443.48c.208.104.52.175.997.175h1.75c.685 0 1.295.577 1.205 1.335-.022.192-.049.39-.075.586-.066.488-.13.97-.13 1.329 0 .808.144 1.15.288 1.316.137.157.401.303 1.048.377.307.035.664-.237.664-.693v-.5c0-1.922.978-3.127 1.932-3.825a5.862 5.862 0 011.568-.809V2.754zm1.75 6.798a.25.25 0 01-.25-.25v-7.5a.25.25 0 01.25-.25h1a.25.25 0 01.25.25v7.5a.25.25 0 01-.25.25h-1z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.596 21.957c-1.301.092-2.303-.986-2.303-2.206v-1.053c0-2.666-1.813-3.785-2.774-4.2a1.864 1.864 0 00-.523-.13A1.75 1.75 0 015.25 16h-1.5A1.75 1.75 0 012 14.25V3.75C2 2.784 2.784 2 3.75 2h1.5a1.75 1.75 0 011.742 1.58c.838-.06 1.667-.296 2.69-.586l.602-.17C11.748 2.419 13.497 2 15.828 2c2.188 0 3.693.204 4.583 1.372.422.554.65 1.255.816 2.05.148.708.262 1.57.396 2.58l.051.39c.319 2.386.328 4.18-.223 5.394-.293.644-.743 1.125-1.355 1.431-.59.296-1.284.404-2.036.404h-2.05l.056.429c.025.18.05.372.076.572.06.483.117 1.006.117 1.438 0 1.245-.222 2.253-.92 2.942-.684.674-1.668.879-2.743.955zM7 5.082c1.059-.064 2.079-.355 3.118-.651.188-.054.377-.108.568-.16 1.406-.392 3.006-.771 5.142-.771 2.277 0 3.004.274 3.39.781.216.283.388.718.54 1.448.136.65.242 1.45.379 2.477l.05.385c.32 2.398.253 3.794-.102 4.574-.16.352-.375.569-.66.711-.305.153-.74.245-1.365.245h-2.37c-.681 0-1.293.57-1.211 1.328.026.244.065.537.105.834l.07.527c.06.482.105.922.105 1.25 0 1.125-.213 1.617-.473 1.873-.275.27-.774.456-1.795.528-.351.024-.698-.274-.698-.71v-1.053c0-3.55-2.488-5.063-3.68-5.577A3.485 3.485 0 007 12.861V5.08zM3.75 3.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h1.5a.25.25 0 00.25-.25V3.75a.25.25 0 00-.25-.25h-1.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nThumbsdownIcon.defaultProps = {\n  className: 'octicon octicon-thumbsdown',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ThumbsupIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.834.066C7.494-.087 6.5 1.048 6.5 2.25v.5c0 1.329-.647 2.124-1.318 2.614-.328.24-.66.403-.918.508A1.75 1.75 0 002.75 5h-1A1.75 1.75 0 000 6.75v7.5C0 15.216.784 16 1.75 16h1a1.75 1.75 0 001.662-1.201c.525.075 1.067.229 1.725.415.152.043.31.088.475.133 1.154.32 2.54.653 4.388.653 1.706 0 2.97-.153 3.722-1.14.353-.463.537-1.042.668-1.672.118-.56.208-1.243.313-2.033l.04-.306c.25-1.869.265-3.318-.188-4.316a2.418 2.418 0 00-1.137-1.2C13.924 5.085 13.353 5 12.75 5h-1.422l.015-.113c.07-.518.157-1.17.157-1.637 0-.922-.151-1.719-.656-2.3-.51-.589-1.247-.797-2.01-.884zM4.5 13.3c.705.088 1.39.284 2.072.478l.441.125c1.096.305 2.334.598 3.987.598 1.794 0 2.28-.223 2.528-.549.147-.193.276-.505.394-1.07.105-.502.188-1.124.295-1.93l.04-.3c.25-1.882.189-2.933-.068-3.497a.922.922 0 00-.442-.48c-.208-.104-.52-.174-.997-.174H11c-.686 0-1.295-.577-1.206-1.336.023-.192.05-.39.076-.586.065-.488.13-.97.13-1.328 0-.809-.144-1.15-.288-1.316-.137-.158-.402-.304-1.048-.378C8.357 1.521 8 1.793 8 2.25v.5c0 1.922-.978 3.128-1.933 3.825a5.861 5.861 0 01-1.567.81V13.3zM2.75 6.5a.25.25 0 01.25.25v7.5a.25.25 0 01-.25.25h-1a.25.25 0 01-.25-.25v-7.5a.25.25 0 01.25-.25h1z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12.596 2.043c-1.301-.092-2.303.986-2.303 2.206v1.053c0 2.666-1.813 3.785-2.774 4.2a1.866 1.866 0 01-.523.131A1.75 1.75 0 005.25 8h-1.5A1.75 1.75 0 002 9.75v10.5c0 .967.784 1.75 1.75 1.75h1.5a1.75 1.75 0 001.742-1.58c.838.06 1.667.296 2.69.586l.602.17c1.464.406 3.213.824 5.544.824 2.188 0 3.693-.204 4.583-1.372.422-.554.65-1.255.816-2.05.148-.708.262-1.57.396-2.58l.051-.39c.319-2.386.328-4.18-.223-5.394-.293-.644-.743-1.125-1.355-1.431-.59-.296-1.284-.404-2.036-.404h-2.05l.056-.429c.025-.18.05-.372.076-.572.06-.483.117-1.006.117-1.438 0-1.245-.222-2.253-.92-2.941-.684-.675-1.668-.88-2.743-.956zM7 18.918c1.059.064 2.079.355 3.118.652l.568.16c1.406.39 3.006.77 5.142.77 2.277 0 3.004-.274 3.39-.781.216-.283.388-.718.54-1.448.136-.65.242-1.45.379-2.477l.05-.384c.32-2.4.253-3.795-.102-4.575-.16-.352-.375-.568-.66-.711-.305-.153-.74-.245-1.365-.245h-2.37c-.681 0-1.293-.57-1.211-1.328.026-.243.065-.537.105-.834l.07-.527c.06-.482.105-.921.105-1.25 0-1.125-.213-1.617-.473-1.873-.275-.27-.774-.455-1.795-.528-.351-.024-.698.274-.698.71v1.053c0 3.55-2.488 5.063-3.68 5.577-.372.16-.754.232-1.113.26v7.78zM3.75 20.5a.25.25 0 01-.25-.25V9.75a.25.25 0 01.25-.25h1.5a.25.25 0 01.25.25v10.5a.25.25 0 01-.25.25h-1.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nThumbsupIcon.defaultProps = {\n  className: 'octicon octicon-thumbsup',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ToolsIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.433 2.304A4.494 4.494 0 003.5 6c0 1.598.832 3.002 2.09 3.802.518.328.929.923.902 1.64v.008l-.164 3.337a.75.75 0 11-1.498-.073l.163-3.33c.002-.085-.05-.216-.207-.316A5.996 5.996 0 012 6a5.994 5.994 0 012.567-4.92 1.482 1.482 0 011.673-.04c.462.296.76.827.76 1.423v2.82c0 .082.041.16.11.206l.75.51a.25.25 0 00.28 0l.75-.51A.25.25 0 009 5.282V2.463c0-.596.298-1.127.76-1.423a1.482 1.482 0 011.673.04A5.994 5.994 0 0114 6a5.996 5.996 0 01-2.786 5.068c-.157.1-.209.23-.207.315l.163 3.33a.75.75 0 11-1.498.074l-.164-3.345c-.027-.717.384-1.312.902-1.64A4.496 4.496 0 0012.5 6a4.494 4.494 0 00-1.933-3.696c-.024.017-.067.067-.067.16v2.818a1.75 1.75 0 01-.767 1.448l-.75.51a1.75 1.75 0 01-1.966 0l-.75-.51A1.75 1.75 0 015.5 5.282V2.463c0-.092-.043-.142-.067-.159zm.01-.005z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.875 2.292a.125.125 0 00-.032.018A7.24 7.24 0 004.75 8.25a7.247 7.247 0 003.654 6.297c.57.327.982.955.941 1.682v.002l-.317 6.058a.75.75 0 11-1.498-.078l.317-6.062v-.004c.006-.09-.047-.215-.188-.296A8.747 8.747 0 013.25 8.25a8.74 8.74 0 013.732-7.169 1.547 1.547 0 011.709-.064c.484.292.809.835.809 1.46v4.714a.25.25 0 00.119.213l2.25 1.385c.08.05.182.05.262 0l2.25-1.385a.25.25 0 00.119-.213V2.478c0-.626.325-1.169.81-1.461a1.547 1.547 0 011.708.064 8.74 8.74 0 013.732 7.17 8.747 8.747 0 01-4.41 7.598c-.14.081-.193.206-.188.296v.004l.318 6.062a.75.75 0 11-1.498.078l-.317-6.058v-.002c-.041-.727.37-1.355.94-1.682A7.247 7.247 0 0019.25 8.25a7.24 7.24 0 00-3.093-5.94.125.125 0 00-.032-.018l-.01-.001c-.003 0-.014 0-.031.01-.036.022-.084.079-.084.177V7.19a1.75 1.75 0 01-.833 1.49l-2.25 1.385a1.75 1.75 0 01-1.834 0l-2.25-1.384A1.75 1.75 0 018 7.192V2.477c0-.098-.048-.155-.084-.176a.062.062 0 00-.031-.011l-.01.001z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nToolsIcon.defaultProps = {\n  className: 'octicon octicon-tools',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TrashIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25V3h-3V1.75zm4.5 0V3h2.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75zM4.496 6.675a.75.75 0 10-1.492.15l.66 6.6A1.75 1.75 0 005.405 15h5.19c.9 0 1.652-.681 1.741-1.576l.66-6.6a.75.75 0 00-1.492-.149l-.66 6.6a.25.25 0 01-.249.225h-5.19a.25.25 0 01-.249-.225l-.66-6.6z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M16 1.75V3h5.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H8V1.75C8 .784 8.784 0 9.75 0h4.5C15.216 0 16 .784 16 1.75zm-6.5 0a.25.25 0 01.25-.25h4.5a.25.25 0 01.25.25V3h-5V1.75z\\\"></path><path d=\\\"M4.997 6.178a.75.75 0 10-1.493.144L4.916 20.92a1.75 1.75 0 001.742 1.58h10.684a1.75 1.75 0 001.742-1.581l1.413-14.597a.75.75 0 00-1.494-.144l-1.412 14.596a.25.25 0 01-.249.226H6.658a.25.25 0 01-.249-.226L4.997 6.178z\\\"></path><path d=\\\"M9.206 7.501a.75.75 0 01.793.705l.5 8.5A.75.75 0 119 16.794l-.5-8.5a.75.75 0 01.705-.793zm6.293.793A.75.75 0 1014 8.206l-.5 8.5a.75.75 0 001.498.088l.5-8.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTrashIcon.defaultProps = {\n  className: 'octicon octicon-trash',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TriangleDownIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M11.646 15.146L5.854 9.354a.5.5 0 01.353-.854h11.586a.5.5 0 01.353.854l-5.793 5.792a.5.5 0 01-.707 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTriangleDownIcon.defaultProps = {\n  className: 'octicon octicon-triangle-down',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TriangleLeftIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M9.573 4.427L6.177 7.823a.25.25 0 000 .354l3.396 3.396a.25.25 0 00.427-.177V4.604a.25.25 0 00-.427-.177z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M8.854 11.646l5.792-5.792a.5.5 0 01.854.353v11.586a.5.5 0 01-.854.353l-5.792-5.792a.5.5 0 010-.708z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTriangleLeftIcon.defaultProps = {\n  className: 'octicon octicon-triangle-left',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TriangleRightIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M6.427 4.427l3.396 3.396a.25.25 0 010 .354l-3.396 3.396A.25.25 0 016 11.396V4.604a.25.25 0 01.427-.177z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M15.146 12.354l-5.792 5.792a.5.5 0 01-.854-.353V6.207a.5.5 0 01.854-.353l5.792 5.792a.5.5 0 010 .708z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTriangleRightIcon.defaultProps = {\n  className: 'octicon octicon-triangle-right',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TriangleUpIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M4.427 9.573l3.396-3.396a.25.25 0 01.354 0l3.396 3.396a.25.25 0 01-.177.427H4.604a.25.25 0 01-.177-.427z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M12.354 8.854l5.792 5.792a.5.5 0 01-.353.854H6.207a.5.5 0 01-.353-.854l5.792-5.792a.5.5 0 01.708 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTriangleUpIcon.defaultProps = {\n  className: 'octicon octicon-triangle-up',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TrophyIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.217 6.962A3.75 3.75 0 010 3.25v-.5C0 1.784.784 1 1.75 1h1.356c.228-.585.796-1 1.462-1h6.864a1.57 1.57 0 011.462 1h1.356c.966 0 1.75.784 1.75 1.75v.5a3.75 3.75 0 01-3.217 3.712 5.014 5.014 0 01-2.771 3.117l.144 1.446c.005.05.03.12.114.204.086.087.217.17.373.227.283.103.618.274.89.568.285.31.467.723.467 1.226v.75h1.25a.75.75 0 110 1.5H2.75a.75.75 0 010-1.5H4v-.75c0-.503.182-.916.468-1.226.27-.294.606-.465.889-.568a1.03 1.03 0 00.373-.227c.084-.085.109-.153.114-.204l.144-1.446a5.014 5.014 0 01-2.77-3.117zM3 2.5H1.75a.25.25 0 00-.25.25v.5c0 .98.626 1.813 1.5 2.122V2.5zm4.457 7.97l-.12 1.204c-.093.925-.858 1.47-1.467 1.691a.764.764 0 00-.3.176c-.037.04-.07.093-.07.21v.75h5v-.75c0-.117-.033-.17-.07-.21a.763.763 0 00-.3-.176c-.609-.221-1.374-.766-1.466-1.69l-.12-1.204a5.052 5.052 0 01-1.087 0zM13 5.373V2.5h1.25a.25.25 0 01.25.25v.5A2.25 2.25 0 0113 5.372zM4.5 1.568c0-.037.03-.068.068-.068h6.864c.037 0 .068.03.068.068V5.5a3.5 3.5 0 11-7 0V1.568z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.09 10.121A5.252 5.252 0 011 5V3.75C1 2.784 1.784 2 2.75 2h2.364c.236-.586.81-1 1.48-1h10.812c.67 0 1.244.414 1.48 1h2.489c.966 0 1.75.784 1.75 1.75V5a5.252 5.252 0 01-4.219 5.149 7.01 7.01 0 01-4.644 5.478l.231 3.003a.326.326 0 00.034.031c.079.065.303.203.836.282.838.124 1.637.81 1.637 1.807v.75h2.25a.75.75 0 010 1.5H4.75a.75.75 0 010-1.5H7v-.75c0-.996.8-1.683 1.637-1.807.533-.08.757-.217.836-.282a.334.334 0 00.034-.031l.231-3.003A7.01 7.01 0 015.09 10.12zM5 3.5H2.75a.25.25 0 00-.25.25V5A3.752 3.752 0 005 8.537V3.5zm6.217 12.457l-.215 2.793-.001.021-.003.043a1.203 1.203 0 01-.022.147c-.05.237-.194.567-.553.86-.348.286-.853.5-1.566.605a.482.482 0 00-.274.136.265.265 0 00-.083.188v.75h7v-.75a.265.265 0 00-.083-.188.483.483 0 00-.274-.136c-.713-.105-1.218-.32-1.567-.604-.358-.294-.502-.624-.552-.86a1.203 1.203 0 01-.025-.19l-.001-.022-.215-2.793a7.076 7.076 0 01-1.566 0zM19 8.578V3.5h2.375a.25.25 0 01.25.25V5c0 1.68-1.104 3.1-2.625 3.578zM6.5 2.594c0-.052.042-.094.094-.094h10.812c.052 0 .094.042.094.094V9a5.5 5.5 0 11-11 0V2.594z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTrophyIcon.defaultProps = {\n  className: 'octicon octicon-trophy',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction TypographyIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.21 8.5L4.574 3.594 2.857 8.5H6.21zm.5 1.5l.829 2.487a.75.75 0 001.423-.474L5.735 2.332a1.216 1.216 0 00-2.302-.018l-3.39 9.688a.75.75 0 001.415.496L2.332 10H6.71zm3.13-4.358C10.53 4.374 11.87 4 13 4c1.5 0 3 .939 3 2.601v5.649a.75.75 0 01-1.448.275C13.995 12.82 13.3 13 12.5 13c-.77 0-1.514-.231-2.078-.709-.577-.488-.922-1.199-.922-2.041 0-.694.265-1.411.887-1.944C11 7.78 11.88 7.5 13 7.5h1.5v-.899c0-.54-.5-1.101-1.5-1.101-.869 0-1.528.282-1.84.858a.75.75 0 11-1.32-.716zM14.5 9H13c-.881 0-1.375.22-1.637.444-.253.217-.363.5-.363.806 0 .408.155.697.39.896.249.21.63.354 1.11.354.732 0 1.26-.209 1.588-.449.35-.257.412-.495.412-.551V9z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.414 15l1.63 4.505a.75.75 0 001.411-.51l-5.08-14.03a1.463 1.463 0 00-2.75 0l-5.08 14.03a.75.75 0 101.41.51L3.586 15h6.828zm-.544-1.5L7 5.572 4.13 13.5h5.74zm5.076-3.598c.913-1.683 2.703-2.205 4.284-2.205 1.047 0 2.084.312 2.878.885.801.577 1.392 1.455 1.392 2.548v8.12a.75.75 0 01-1.5 0v-.06a3.123 3.123 0 01-.044.025c-.893.52-2.096.785-3.451.785-1.051 0-2.048-.315-2.795-.948-.76-.643-1.217-1.578-1.217-2.702 0-.919.349-1.861 1.168-2.563.81-.694 2-1.087 3.569-1.087H22v-1.57c0-.503-.263-.967-.769-1.332-.513-.37-1.235-.6-2.001-.6-1.319 0-2.429.43-2.966 1.42a.75.75 0 01-1.318-.716zM22 14.2h-2.77c-1.331 0-2.134.333-2.593.726a1.82 1.82 0 00-.644 1.424c0 .689.267 1.203.686 1.557.43.365 1.065.593 1.826.593 1.183 0 2.102-.235 2.697-.581.582-.34.798-.74.798-1.134V14.2z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nTypographyIcon.defaultProps = {\n  className: 'octicon octicon-typography',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction UnfoldIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M8.177.677l2.896 2.896a.25.25 0 01-.177.427H8.75v1.25a.75.75 0 01-1.5 0V4H5.104a.25.25 0 01-.177-.427L7.823.677a.25.25 0 01.354 0zM7.25 10.75a.75.75 0 011.5 0V12h2.146a.25.25 0 01.177.427l-2.896 2.896a.25.25 0 01-.354 0l-2.896-2.896A.25.25 0 015.104 12H7.25v-1.25zm-5-2a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5zM6 8a.75.75 0 01-.75.75h-.5a.75.75 0 010-1.5h.5A.75.75 0 016 8zm2.25.75a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5zM12 8a.75.75 0 01-.75.75h-.5a.75.75 0 010-1.5h.5A.75.75 0 0112 8zm2.25.75a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M12 23a.75.75 0 01-.53-.22l-3.25-3.25a.75.75 0 111.06-1.06L12 21.19l2.72-2.72a.75.75 0 111.06 1.06l-3.25 3.25A.75.75 0 0112 23z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 22.25a.75.75 0 01-.75-.75v-5.75a.75.75 0 011.5 0v5.75a.75.75 0 01-.75.75zM10.75 12a.75.75 0 01.75-.75h1a.75.75 0 110 1.5h-1a.75.75 0 01-.75-.75zm-8 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm12 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm-8 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm12 0a.75.75 0 01.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zM11.47 1.22a.75.75 0 011.06 0l3.25 3.25a.75.75 0 01-1.06 1.06L12 2.81 9.28 5.53a.75.75 0 01-1.06-1.06l3.25-3.25z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1.5a.75.75 0 01.75.75v6a.75.75 0 01-1.5 0v-6A.75.75 0 0112 1.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nUnfoldIcon.defaultProps = {\n  className: 'octicon octicon-unfold',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction UnlockIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.5 4a2.5 2.5 0 014.607-1.346.75.75 0 101.264-.808A4 4 0 004 4v2h-.501A1.5 1.5 0 002 7.5v6A1.5 1.5 0 003.5 15h9a1.5 1.5 0 001.5-1.5v-6A1.5 1.5 0 0012.5 6h-7V4zm-.75 3.5H3.5v6h9v-6H4.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.5 7.25C7.5 4.58 9.422 2.5 12 2.5c2.079 0 3.71 1.34 4.282 3.242a.75.75 0 101.436-.432C16.971 2.825 14.792 1 12 1 8.503 1 6 3.845 6 7.25V9h-.5A2.5 2.5 0 003 11.5v8A2.5 2.5 0 005.5 22h13a2.5 2.5 0 002.5-2.5v-8A2.5 2.5 0 0018.5 9h-11V7.25zm-3 4.25a1 1 0 011-1h13a1 1 0 011 1v8a1 1 0 01-1 1h-13a1 1 0 01-1-1v-8z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nUnlockIcon.defaultProps = {\n  className: 'octicon octicon-unlock',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction UnmuteIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.563 2.069A.75.75 0 018 2.75v10.5a.75.75 0 01-1.238.57L3.472 11H1.75A1.75 1.75 0 010 9.25v-2.5C0 5.784.784 5 1.75 5h1.723l3.289-2.82a.75.75 0 01.801-.111zM6.5 4.38L4.238 6.319a.75.75 0 01-.488.181h-2a.25.25 0 00-.25.25v2.5c0 .138.112.25.25.25h2a.75.75 0 01.488.18L6.5 11.62V4.38zm6.096-2.038a.75.75 0 011.06 0 8 8 0 010 11.314.75.75 0 01-1.06-1.06 6.5 6.5 0 000-9.193.75.75 0 010-1.06v-.001zm-1.06 2.121a.75.75 0 10-1.061 1.061 3.5 3.5 0 010 4.95.75.75 0 101.06 1.06 5 5 0 000-7.07l.001-.001z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.553 3.064A.75.75 0 0112 3.75v16.5a.75.75 0 01-1.255.555L5.46 16H2.75A1.75 1.75 0 011 14.25v-4.5C1 8.784 1.784 8 2.75 8h2.71l5.285-4.805a.75.75 0 01.808-.13zM10.5 5.445l-4.245 3.86a.75.75 0 01-.505.195h-3a.25.25 0 00-.25.25v4.5c0 .138.112.25.25.25h3a.75.75 0 01.505.195l4.245 3.86V5.445z\\\"></path><path d=\\\"M18.718 4.222a.75.75 0 011.06 0c4.296 4.296 4.296 11.26 0 15.556a.75.75 0 01-1.06-1.06 9.5 9.5 0 000-13.436.75.75 0 010-1.06z\\\"></path><path d=\\\"M16.243 7.757a.75.75 0 10-1.061 1.061 4.5 4.5 0 010 6.364.75.75 0 001.06 1.06 6 6 0 000-8.485z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nUnmuteIcon.defaultProps = {\n  className: 'octicon octicon-unmute',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction UnverifiedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.415.52a2.678 2.678 0 013.17 0l.928.68c.153.113.33.186.518.215l1.138.175a2.678 2.678 0 012.241 2.24l.175 1.138c.029.187.102.365.215.518l.68.928a2.678 2.678 0 010 3.17l-.68.928a1.179 1.179 0 00-.215.518l-.175 1.138a2.678 2.678 0 01-2.241 2.241l-1.138.175a1.179 1.179 0 00-.518.215l-.928.68a2.678 2.678 0 01-3.17 0l-.928-.68a1.179 1.179 0 00-.518-.215L3.83 14.41a2.678 2.678 0 01-2.24-2.24l-.175-1.138a1.179 1.179 0 00-.215-.518l-.68-.928a2.678 2.678 0 010-3.17l.68-.928a1.17 1.17 0 00.215-.518l.175-1.14a2.678 2.678 0 012.24-2.24l1.138-.175c.187-.029.365-.102.518-.215l.928-.68zm2.282 1.209a1.178 1.178 0 00-1.394 0l-.928.68a2.678 2.678 0 01-1.18.489l-1.136.174a1.178 1.178 0 00-.987.987l-.174 1.137a2.678 2.678 0 01-.489 1.18l-.68.927c-.305.415-.305.98 0 1.394l.68.928c.256.348.423.752.489 1.18l.174 1.136c.078.51.478.909.987.987l1.137.174c.427.066.831.233 1.18.489l.927.68c.415.305.98.305 1.394 0l.928-.68a2.678 2.678 0 011.18-.489l1.136-.174c.51-.078.909-.478.987-.987l.174-1.137c.066-.427.233-.831.489-1.18l.68-.927c.305-.415.305-.98 0-1.394l-.68-.928a2.678 2.678 0 01-.489-1.18l-.174-1.136a1.178 1.178 0 00-.987-.987l-1.137-.174a2.678 2.678 0 01-1.18-.489l-.927-.68zM9 11a1 1 0 11-2 0 1 1 0 012 0zM6.92 6.085c.081-.16.19-.299.34-.398.145-.097.371-.187.74-.187.28 0 .553.087.738.225A.613.613 0 019 6.25c0 .177-.04.264-.077.318a.956.956 0 01-.277.245c-.076.051-.158.1-.258.161l-.007.004c-.093.056-.204.122-.313.195a2.416 2.416 0 00-.692.661.75.75 0 001.248.832.956.956 0 01.276-.245 6.3 6.3 0 01.26-.16l.006-.004c.093-.057.204-.123.313-.195.222-.149.487-.355.692-.662.214-.32.329-.702.329-1.15 0-.76-.36-1.348-.862-1.725A2.76 2.76 0 008 4c-.631 0-1.154.16-1.572.438-.413.276-.68.638-.849.977a.75.75 0 001.342.67z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M13 16.5a1 1 0 11-2 0 1 1 0 012 0zm-2.517-7.665c.112-.223.268-.424.488-.57C11.186 8.12 11.506 8 12 8c.384 0 .766.118 1.034.319a.953.953 0 01.403.806c0 .48-.218.81-.62 1.186a9.293 9.293 0 01-.409.354 19.8 19.8 0 00-.294.249c-.246.213-.524.474-.738.795l-.126.19V13.5a.75.75 0 001.5 0v-1.12c.09-.1.203-.208.347-.333.063-.055.14-.119.222-.187.166-.14.358-.3.52-.452.536-.5 1.098-1.2 1.098-2.283a2.45 2.45 0 00-1.003-2.006C13.37 6.695 12.658 6.5 12 6.5c-.756 0-1.373.191-1.861.517a2.944 2.944 0 00-.997 1.148.75.75 0 001.341.67z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M9.864 1.2a3.61 3.61 0 014.272 0l1.375 1.01c.274.2.593.333.929.384l1.686.259a3.61 3.61 0 013.021 3.02l.259 1.687c.051.336.183.655.384.929l1.01 1.375a3.61 3.61 0 010 4.272l-1.01 1.375a2.11 2.11 0 00-.384.929l-.259 1.686a3.61 3.61 0 01-3.02 3.021l-1.687.259a2.11 2.11 0 00-.929.384l-1.375 1.01a3.61 3.61 0 01-4.272 0l-1.375-1.01a2.11 2.11 0 00-.929-.384l-1.686-.259a3.61 3.61 0 01-3.021-3.02l-.259-1.687a2.11 2.11 0 00-.384-.929L1.2 14.136a3.61 3.61 0 010-4.272l1.01-1.375a2.11 2.11 0 00.384-.929l.259-1.686a3.61 3.61 0 013.02-3.021l1.687-.259a2.11 2.11 0 00.929-.384L9.864 1.2zm3.384 1.209a2.11 2.11 0 00-2.496 0l-1.376 1.01a3.61 3.61 0 01-1.589.658l-1.686.258a2.11 2.11 0 00-1.766 1.766l-.258 1.686a3.61 3.61 0 01-.658 1.59l-1.01 1.375a2.11 2.11 0 000 2.496l1.01 1.376a3.61 3.61 0 01.658 1.589l.258 1.686a2.11 2.11 0 001.766 1.765l1.686.26a3.61 3.61 0 011.59.657l1.375 1.01a2.11 2.11 0 002.496 0l1.376-1.01a3.61 3.61 0 011.589-.658l1.686-.258a2.11 2.11 0 001.765-1.766l.26-1.686a3.61 3.61 0 01.657-1.59l1.01-1.375a2.11 2.11 0 000-2.496l-1.01-1.376a3.61 3.61 0 01-.658-1.589l-.258-1.686a2.11 2.11 0 00-1.766-1.766l-1.686-.258a3.61 3.61 0 01-1.59-.658l-1.375-1.01z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nUnverifiedIcon.defaultProps = {\n  className: 'octicon octicon-unverified',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction UploadIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M8.53 1.22a.75.75 0 00-1.06 0L3.72 4.97a.75.75 0 001.06 1.06l2.47-2.47v6.69a.75.75 0 001.5 0V3.56l2.47 2.47a.75.75 0 101.06-1.06L8.53 1.22zM3.75 13a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M4.75 22a.75.75 0 010-1.5h14.5a.75.75 0 010 1.5H4.75zm.22-13.53a.75.75 0 001.06 1.06L11 4.56v12.19a.75.75 0 001.5 0V4.56l4.97 4.97a.75.75 0 101.06-1.06l-6.25-6.25a.75.75 0 00-1.06 0L4.97 8.47z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nUploadIcon.defaultProps = {\n  className: 'octicon octicon-upload',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction VerifiedIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M9.585.52a2.678 2.678 0 00-3.17 0l-.928.68a1.178 1.178 0 01-.518.215L3.83 1.59a2.678 2.678 0 00-2.24 2.24l-.175 1.14a1.178 1.178 0 01-.215.518l-.68.928a2.678 2.678 0 000 3.17l.68.928c.113.153.186.33.215.518l.175 1.138a2.678 2.678 0 002.24 2.24l1.138.175c.187.029.365.102.518.215l.928.68a2.678 2.678 0 003.17 0l.928-.68a1.17 1.17 0 01.518-.215l1.138-.175a2.678 2.678 0 002.241-2.241l.175-1.138c.029-.187.102-.365.215-.518l.68-.928a2.678 2.678 0 000-3.17l-.68-.928a1.179 1.179 0 01-.215-.518L14.41 3.83a2.678 2.678 0 00-2.24-2.24l-1.138-.175a1.179 1.179 0 01-.518-.215L9.585.52zM7.303 1.728c.415-.305.98-.305 1.394 0l.928.68c.348.256.752.423 1.18.489l1.136.174c.51.078.909.478.987.987l.174 1.137c.066.427.233.831.489 1.18l.68.927c.305.415.305.98 0 1.394l-.68.928a2.678 2.678 0 00-.489 1.18l-.174 1.136a1.178 1.178 0 01-.987.987l-1.137.174a2.678 2.678 0 00-1.18.489l-.927.68c-.415.305-.98.305-1.394 0l-.928-.68a2.678 2.678 0 00-1.18-.489l-1.136-.174a1.178 1.178 0 01-.987-.987l-.174-1.137a2.678 2.678 0 00-.489-1.18l-.68-.927a1.178 1.178 0 010-1.394l.68-.928c.256-.348.423-.752.489-1.18l.174-1.136c.078-.51.478-.909.987-.987l1.137-.174a2.678 2.678 0 001.18-.489l.927-.68zM11.28 6.78a.75.75 0 00-1.06-1.06L7 8.94 5.78 7.72a.75.75 0 00-1.06 1.06l1.75 1.75a.75.75 0 001.06 0l3.75-3.75z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M17.03 9.78a.75.75 0 00-1.06-1.06l-5.47 5.47-2.47-2.47a.75.75 0 00-1.06 1.06l3 3a.75.75 0 001.06 0l6-6z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M14.136 1.2a3.61 3.61 0 00-4.272 0L8.489 2.21a2.11 2.11 0 01-.929.384l-1.686.259a3.61 3.61 0 00-3.021 3.02L2.594 7.56a2.11 2.11 0 01-.384.929L1.2 9.864a3.61 3.61 0 000 4.272l1.01 1.375c.2.274.333.593.384.929l.259 1.686a3.61 3.61 0 003.02 3.021l1.687.259c.336.051.655.183.929.384l1.375 1.01a3.61 3.61 0 004.272 0l1.375-1.01a2.11 2.11 0 01.929-.384l1.686-.259a3.61 3.61 0 003.021-3.02l.259-1.687a2.11 2.11 0 01.384-.929l1.01-1.375a3.61 3.61 0 000-4.272l-1.01-1.375a2.11 2.11 0 01-.384-.929l-.259-1.686a3.61 3.61 0 00-3.02-3.021l-1.687-.259a2.11 2.11 0 01-.929-.384L14.136 1.2zm-3.384 1.209a2.11 2.11 0 012.496 0l1.376 1.01a3.61 3.61 0 001.589.658l1.686.258a2.11 2.11 0 011.765 1.766l.26 1.686a3.61 3.61 0 00.657 1.59l1.01 1.375a2.11 2.11 0 010 2.496l-1.01 1.376a3.61 3.61 0 00-.658 1.589l-.258 1.686a2.11 2.11 0 01-1.766 1.765l-1.686.26a3.61 3.61 0 00-1.59.657l-1.375 1.01a2.11 2.11 0 01-2.496 0l-1.376-1.01a3.61 3.61 0 00-1.589-.658l-1.686-.258a2.11 2.11 0 01-1.766-1.766l-.258-1.686a3.61 3.61 0 00-.658-1.59l-1.01-1.375a2.11 2.11 0 010-2.496l1.01-1.376a3.61 3.61 0 00.658-1.589l.258-1.686a2.11 2.11 0 011.766-1.766l1.686-.258a3.61 3.61 0 001.59-.658l1.375-1.01z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nVerifiedIcon.defaultProps = {\n  className: 'octicon octicon-verified',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction VersionsIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M7.75 14A1.75 1.75 0 016 12.25v-8.5C6 2.784 6.784 2 7.75 2h6.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0114.25 14h-6.5zm-.25-1.75c0 .138.112.25.25.25h6.5a.25.25 0 00.25-.25v-8.5a.25.25 0 00-.25-.25h-6.5a.25.25 0 00-.25.25v8.5zM4.9 3.508a.75.75 0 01-.274 1.025.25.25 0 00-.126.217v6.5a.25.25 0 00.126.217.75.75 0 01-.752 1.298A1.75 1.75 0 013 11.25v-6.5c0-.649.353-1.214.874-1.516a.75.75 0 011.025.274zM1.625 5.533a.75.75 0 10-.752-1.299A1.75 1.75 0 000 5.75v4.5c0 .649.353 1.214.874 1.515a.75.75 0 10.752-1.298.25.25 0 01-.126-.217v-4.5a.25.25 0 01.126-.217z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10 22a2 2 0 01-2-2V4a2 2 0 012-2h11a2 2 0 012 2v16a2 2 0 01-2 2H10zm-.5-2a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V4a.5.5 0 00-.5-.5H10a.5.5 0 00-.5.5v16zM6.17 4.165a.75.75 0 01-.335 1.006c-.228.114-.295.177-.315.201a.037.037 0 00-.008.016.387.387 0 00-.012.112v13c0 .07.008.102.012.112a.03.03 0 00.008.016c.02.024.087.087.315.201a.75.75 0 11-.67 1.342c-.272-.136-.58-.315-.81-.598C4.1 19.259 4 18.893 4 18.5v-13c0-.393.1-.759.355-1.073.23-.283.538-.462.81-.598a.75.75 0 011.006.336zM2.15 5.624a.75.75 0 01-.274 1.025c-.15.087-.257.17-.32.245C1.5 6.96 1.5 6.99 1.5 7v10c0 .01 0 .04.056.106.063.074.17.158.32.245a.75.75 0 11-.752 1.298C.73 18.421 0 17.907 0 17V7c0-.907.73-1.42 1.124-1.65a.75.75 0 011.025.274z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nVersionsIcon.defaultProps = {\n  className: 'octicon octicon-versions',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction VideoIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 3.5a.25.25 0 00-.25.25v8.5c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-8.5a.25.25 0 00-.25-.25H1.75zM0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0114.25 14H1.75A1.75 1.75 0 010 12.25v-8.5z\\\"></path><path d=\\\"M6 10.559V5.442a.25.25 0 01.379-.215l4.264 2.559a.25.25 0 010 .428l-4.264 2.559A.25.25 0 016 10.559z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.75 4.5a.25.25 0 00-.25.25v14.5c0 .138.112.25.25.25h20.5a.25.25 0 00.25-.25V4.75a.25.25 0 00-.25-.25H1.75zM0 4.75C0 3.784.784 3 1.75 3h20.5c.966 0 1.75.784 1.75 1.75v14.5A1.75 1.75 0 0122.25 21H1.75A1.75 1.75 0 010 19.25V4.75z\\\"></path><path d=\\\"M9 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842L9.77 16.005a.5.5 0 01-.77-.42z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nVideoIcon.defaultProps = {\n  className: 'octicon octicon-video',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction WebhookIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path d=\\\"M5.5 4.25a2.25 2.25 0 014.5 0 .75.75 0 001.5 0 3.75 3.75 0 10-6.14 2.889l-2.272 4.258a.75.75 0 001.324.706L7 7.25a.75.75 0 00-.309-1.015A2.25 2.25 0 015.5 4.25z\\\"></path><path d=\\\"M7.364 3.607a.75.75 0 011.03.257l2.608 4.349a3.75 3.75 0 11-.628 6.785.75.75 0 01.752-1.299 2.25 2.25 0 10-.033-3.88.75.75 0 01-1.03-.256L7.107 4.636a.75.75 0 01.257-1.03z\\\"></path><path d=\\\"M2.9 8.776A.75.75 0 012.625 9.8 2.25 2.25 0 106 11.75a.75.75 0 01.75-.751h5.5a.75.75 0 010 1.5H7.425a3.751 3.751 0 11-5.55-3.998.75.75 0 011.024.274z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nWebhookIcon.defaultProps = {\n  className: 'octicon octicon-webhook',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction WorkflowIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M0 1.75C0 .784.784 0 1.75 0h3.5C6.216 0 7 .784 7 1.75v3.5A1.75 1.75 0 015.25 7H4v4a1 1 0 001 1h4v-1.25C9 9.784 9.784 9 10.75 9h3.5c.966 0 1.75.784 1.75 1.75v3.5A1.75 1.75 0 0114.25 16h-3.5A1.75 1.75 0 019 14.25v-.75H5A2.5 2.5 0 012.5 11V7h-.75A1.75 1.75 0 010 5.25v-3.5zm1.75-.25a.25.25 0 00-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 00.25-.25v-3.5a.25.25 0 00-.25-.25h-3.5zm9 9a.25.25 0 00-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 00.25-.25v-3.5a.25.25 0 00-.25-.25h-3.5z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1 3a2 2 0 012-2h6.5a2 2 0 012 2v6.5a2 2 0 01-2 2H7v4.063C7 16.355 7.644 17 8.438 17H12.5v-2.5a2 2 0 012-2H21a2 2 0 012 2V21a2 2 0 01-2 2h-6.5a2 2 0 01-2-2v-2.5H8.437A2.938 2.938 0 015.5 15.562V11.5H3a2 2 0 01-2-2V3zm2-.5a.5.5 0 00-.5.5v6.5a.5.5 0 00.5.5h6.5a.5.5 0 00.5-.5V3a.5.5 0 00-.5-.5H3zM14.5 14a.5.5 0 00-.5.5V21a.5.5 0 00.5.5H21a.5.5 0 00.5-.5v-6.5a.5.5 0 00-.5-.5h-6.5z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nWorkflowIcon.defaultProps = {\n  className: 'octicon octicon-workflow',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction XIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M5.72 5.72a.75.75 0 011.06 0L12 10.94l5.22-5.22a.75.75 0 111.06 1.06L13.06 12l5.22 5.22a.75.75 0 11-1.06 1.06L12 13.06l-5.22 5.22a.75.75 0 01-1.06-1.06L10.94 12 5.72 6.78a.75.75 0 010-1.06z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nXIcon.defaultProps = {\n  className: 'octicon octicon-x',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction XCircleIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.404 12.596a6.5 6.5 0 119.192-9.192 6.5 6.5 0 01-9.192 9.192zM2.344 2.343a8 8 0 1011.313 11.314A8 8 0 002.343 2.343zM6.03 4.97a.75.75 0 00-1.06 1.06L6.94 8 4.97 9.97a.75.75 0 101.06 1.06L8 9.06l1.97 1.97a.75.75 0 101.06-1.06L9.06 8l1.97-1.97a.75.75 0 10-1.06-1.06L8 6.94 6.03 4.97z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path d=\\\"M9.036 7.976a.75.75 0 00-1.06 1.06L10.939 12l-2.963 2.963a.75.75 0 101.06 1.06L12 13.06l2.963 2.964a.75.75 0 001.061-1.06L13.061 12l2.963-2.964a.75.75 0 10-1.06-1.06L12 10.939 9.036 7.976z\\\"></path><path fill-rule=\\\"evenodd\\\" d=\\\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nXCircleIcon.defaultProps = {\n  className: 'octicon octicon-x-circle',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction XCircleFillIcon(props) {\n  var svgDataByHeight = { \"12\": { \"width\": 12, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1.757 10.243a6 6 0 118.486-8.486 6 6 0 01-8.486 8.486zM6 4.763l-2-2L2.763 4l2 2-2 2L4 9.237l2-2 2 2L9.237 8l-2-2 2-2L8 2.763l-2 2z\\\"></path>\" }, \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M2.343 13.657A8 8 0 1113.657 2.343 8 8 0 012.343 13.657zM6.03 4.97a.75.75 0 00-1.06 1.06L6.94 8 4.97 9.97a.75.75 0 101.06 1.06L8 9.06l1.97 1.97a.75.75 0 101.06-1.06L9.06 8l1.97-1.97a.75.75 0 10-1.06-1.06L8 6.94 6.03 4.97z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12zm8.036-4.024a.75.75 0 00-1.06 1.06L10.939 12l-2.963 2.963a.75.75 0 101.06 1.06L12 13.06l2.963 2.964a.75.75 0 001.061-1.06L13.061 12l2.963-2.964a.75.75 0 10-1.06-1.06L12 10.939 9.036 7.976z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nXCircleFillIcon.defaultProps = {\n  className: 'octicon octicon-x-circle-fill',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction ZapIcon(props) {\n  var svgDataByHeight = { \"16\": { \"width\": 16, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M10.561 1.5a.016.016 0 00-.01.004L3.286 8.571A.25.25 0 003.462 9H6.75a.75.75 0 01.694 1.034l-1.713 4.188 6.982-6.793A.25.25 0 0012.538 7H9.25a.75.75 0 01-.683-1.06l2.008-4.418.003-.006a.02.02 0 00-.004-.009.02.02 0 00-.006-.006L10.56 1.5zM9.504.43a1.516 1.516 0 012.437 1.713L10.415 5.5h2.123c1.57 0 2.346 1.909 1.22 3.004l-7.34 7.142a1.25 1.25 0 01-.871.354h-.302a1.25 1.25 0 01-1.157-1.723L5.633 10.5H3.462c-1.57 0-2.346-1.909-1.22-3.004L9.503.429z\\\"></path>\" }, \"24\": { \"width\": 24, \"path\": \"<path fill-rule=\\\"evenodd\\\" d=\\\"M16.168 2.924L4.51 13.061a.25.25 0 00.164.439h5.45a.75.75 0 01.692 1.041l-2.559 6.066 11.215-9.668a.25.25 0 00-.164-.439H14a.75.75 0 01-.687-1.05l2.855-6.526zm-.452-1.595a1.341 1.341 0 012.109 1.55L15.147 9h4.161c1.623 0 2.372 2.016 1.143 3.075L8.102 22.721a1.149 1.149 0 01-1.81-1.317L8.996 15H4.674c-1.619 0-2.37-2.008-1.148-3.07l12.19-10.6z\\\"></path>\" } };\n  return React.createElement('svg', getSvgProps(_extends({}, props, { svgDataByHeight: svgDataByHeight })));\n}\n\nZapIcon.defaultProps = {\n  className: 'octicon octicon-zap',\n  size: 16,\n  verticalAlign: 'text-bottom'\n};\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction Octicon(_ref) {\n  var Icon = _ref.icon,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, ['icon', 'children']);\n\n  // eslint-disable-next-line no-console\n  console.warn(\n  // eslint-disable-next-line github/unescaped-html-literal\n  '<Octicon> is deprecated. Use icon components on their own instead (e.g. <Octicon icon={AlertIcon} /> → <AlertIcon />)');\n  return typeof Icon === 'function' ? React.createElement(Icon, props) : React.cloneElement(React.Children.only(children), props);\n}\n\nexport default Octicon;\nexport { AccessibilityIcon, AlertIcon, AlertFillIcon, AppsIcon, ArchiveIcon, ArrowBothIcon, ArrowDownIcon, ArrowDownLeftIcon, ArrowDownRightIcon, ArrowLeftIcon, ArrowRightIcon, ArrowSwitchIcon, ArrowUpIcon, ArrowUpLeftIcon, ArrowUpRightIcon, BeakerIcon, BellIcon, BellFillIcon, BellSlashIcon, BlockedIcon, BoldIcon, BookIcon, BookmarkIcon, BookmarkFillIcon, BookmarkSlashIcon, BookmarkSlashFillIcon, BriefcaseIcon, BroadcastIcon, BrowserIcon, BugIcon, CacheIcon, CalendarIcon, CheckIcon, CheckCircleIcon, CheckCircleFillIcon, CheckboxIcon, ChecklistIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronUpIcon, CircleIcon, CircleSlashIcon, ClockIcon, CloudIcon, CloudOfflineIcon, CodeIcon, CodeOfConductIcon, CodeReviewIcon, CodeSquareIcon, CodescanIcon, CodescanCheckmarkIcon, CodespacesIcon, ColumnsIcon, CommandPaletteIcon, CommentIcon, CommentDiscussionIcon, CommitIcon, ContainerIcon, CopilotIcon, CopilotErrorIcon, CopilotWarningIcon, CopyIcon, CpuIcon, CreditCardIcon, CrossReferenceIcon, DashIcon, DatabaseIcon, DependabotIcon, DesktopDownloadIcon, DeviceCameraIcon, DeviceCameraVideoIcon, DeviceDesktopIcon, DeviceMobileIcon, DiamondIcon, DiffIcon, DiffAddedIcon, DiffIgnoredIcon, DiffModifiedIcon, DiffRemovedIcon, DiffRenamedIcon, DotIcon, DotFillIcon, DownloadIcon, DuplicateIcon, EllipsisIcon, EyeIcon, EyeClosedIcon, FeedDiscussionIcon, FeedForkedIcon, FeedHeartIcon, FeedMergedIcon, FeedPersonIcon, FeedRepoIcon, FeedRocketIcon, FeedStarIcon, FeedTagIcon, FeedTrophyIcon, FileIcon, FileAddedIcon, FileBadgeIcon, FileBinaryIcon, FileCodeIcon, FileDiffIcon, FileDirectoryIcon, FileDirectoryFillIcon, FileDirectoryOpenFillIcon, FileMediaIcon, FileMovedIcon, FileRemovedIcon, FileSubmoduleIcon, FileSymlinkFileIcon, FileZipIcon, FilterIcon, FlameIcon, FoldIcon, FoldDownIcon, FoldUpIcon, GearIcon, GiftIcon, GitBranchIcon, GitCommitIcon, GitCompareIcon, GitMergeIcon, GitMergeQueueIcon, GitPullRequestIcon, GitPullRequestClosedIcon, GitPullRequestDraftIcon, GlobeIcon, GrabberIcon, GraphIcon, HashIcon, HeadingIcon, HeartIcon, HeartFillIcon, HistoryIcon, HomeIcon, HomeFillIcon, HorizontalRuleIcon, HourglassIcon, HubotIcon, IdBadgeIcon, ImageIcon, InboxIcon, InfinityIcon, InfoIcon, IssueClosedIcon, IssueDraftIcon, IssueOpenedIcon, IssueReopenedIcon, ItalicIcon, IterationsIcon, KebabHorizontalIcon, KeyIcon, KeyAsteriskIcon, LawIcon, LightBulbIcon, LinkIcon, LinkExternalIcon, ListOrderedIcon, ListUnorderedIcon, LocationIcon, LockIcon, LogIcon, LogoGistIcon, LogoGithubIcon, MailIcon, MarkGithubIcon, MarkdownIcon, MegaphoneIcon, MentionIcon, MeterIcon, MilestoneIcon, MirrorIcon, MoonIcon, MortarBoardIcon, MultiSelectIcon, MuteIcon, NoEntryIcon, NoEntryFillIcon, NorthStarIcon, NoteIcon, NumberIcon, OrganizationIcon, PackageIcon, PackageDependenciesIcon, PackageDependentsIcon, PaintbrushIcon, PaperAirplaneIcon, PaperclipIcon, PasteIcon, PencilIcon, PeopleIcon, PersonIcon, PersonAddIcon, PersonFillIcon, PinIcon, PlayIcon, PlugIcon, PlusIcon, PlusCircleIcon, ProjectIcon, PulseIcon, QuestionIcon, QuoteIcon, ReplyIcon, RepoIcon, RepoCloneIcon, RepoDeletedIcon, RepoForkedIcon, RepoLockedIcon, RepoPullIcon, RepoPushIcon, RepoTemplateIcon, ReportIcon, RocketIcon, RowsIcon, RssIcon, RubyIcon, ScreenFullIcon, ScreenNormalIcon, SearchIcon, ServerIcon, ShareIcon, ShareAndroidIcon, ShieldIcon, ShieldCheckIcon, ShieldLockIcon, ShieldXIcon, SidebarCollapseIcon, SidebarExpandIcon, SignInIcon, SignOutIcon, SingleSelectIcon, SkipIcon, SlidersIcon, SmileyIcon, SortAscIcon, SortDescIcon, SquareIcon, SquareFillIcon, SquirrelIcon, StackIcon, StarIcon, StarFillIcon, StopIcon, StopwatchIcon, StrikethroughIcon, SunIcon, SyncIcon, TabIcon, TabExternalIcon, TableIcon, TagIcon, TasklistIcon, TelescopeIcon, TelescopeFillIcon, TerminalIcon, ThreeBarsIcon, ThumbsdownIcon, ThumbsupIcon, ToolsIcon, TrashIcon, TriangleDownIcon, TriangleLeftIcon, TriangleRightIcon, TriangleUpIcon, TrophyIcon, TypographyIcon, UnfoldIcon, UnlockIcon, UnmuteIcon, UnverifiedIcon, UploadIcon, VerifiedIcon, VersionsIcon, VideoIcon, WebhookIcon, WorkflowIcon, XIcon, XCircleIcon, XCircleFillIcon, ZapIcon };\n","import styled from 'styled-components';\nimport { background, border, color, flexbox, grid, layout, position, shadow, space, typography } from 'styled-system';\nimport sx from './sx';\nconst Box = styled.div.withConfig({\n  displayName: \"Box\",\n  componentId: \"sc-1gh2r6s-0\"\n})(space, color, typography, layout, flexbox, grid, background, border, position, shadow, sx);\nexport default Box;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef } from 'react';\nimport { merge } from '../sx';\nimport { useTheme } from '../ThemeProvider';\nimport Box from '../Box';\nimport { StyledButton } from './types';\nimport { getBaseStyles, getSizeStyles, getVariantStyles } from './styles';\nconst IconButton = /*#__PURE__*/forwardRef((props, forwardedRef) => {\n  const {\n    variant = 'default',\n    size = 'medium',\n    sx: sxProp = {},\n    icon: Icon,\n    ...rest\n  } = props;\n  const {\n    theme\n  } = useTheme();\n  const sxStyles = merge.all([getBaseStyles(theme), getSizeStyles(size, variant, true), getVariantStyles(variant, theme), sxProp]);\n  return /*#__PURE__*/React.createElement(StyledButton, _extends({\n    sx: sxStyles\n  }, rest, {\n    ref: forwardedRef\n  }), /*#__PURE__*/React.createElement(Box, {\n    as: \"span\",\n    sx: {\n      display: 'inline-block'\n    }\n  }, /*#__PURE__*/React.createElement(Icon, null)));\n});\nexport { IconButton };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef } from 'react';\nimport Box from '../Box';\nimport { merge } from '../sx';\nimport { useTheme } from '../ThemeProvider';\nimport { StyledButton } from './types';\nimport { getVariantStyles, getSizeStyles, getButtonStyles } from './styles';\nconst ButtonBase = /*#__PURE__*/forwardRef(({\n  children,\n  as: Component = 'button',\n  sx: sxProp = {},\n  ...props\n}, forwardedRef) => {\n  const {\n    leadingIcon: LeadingIcon,\n    trailingIcon: TrailingIcon,\n    variant = 'default',\n    size = 'medium'\n  } = props;\n  const {\n    theme\n  } = useTheme();\n  const iconWrapStyles = {\n    display: 'inline-block'\n  };\n  const sxStyles = merge.all([getButtonStyles(theme), getSizeStyles(size, variant, false), getVariantStyles(variant, theme), sxProp]);\n  return /*#__PURE__*/React.createElement(StyledButton, _extends({\n    as: Component,\n    sx: sxStyles\n  }, props, {\n    ref: forwardedRef\n  }), LeadingIcon && /*#__PURE__*/React.createElement(Box, {\n    as: \"span\",\n    \"data-component\": \"leadingIcon\",\n    sx: iconWrapStyles\n  }, /*#__PURE__*/React.createElement(LeadingIcon, null)), children && /*#__PURE__*/React.createElement(\"span\", {\n    \"data-component\": \"text\"\n  }, children), TrailingIcon && /*#__PURE__*/React.createElement(Box, {\n    as: \"span\",\n    \"data-component\": \"trailingIcon\",\n    sx: { ...iconWrapStyles,\n      ml: 2\n    }\n  }, /*#__PURE__*/React.createElement(TrailingIcon, null)));\n});\nexport { ButtonBase };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef } from 'react';\nimport { ButtonBase } from './ButtonBase';\nconst ButtonComponent = /*#__PURE__*/forwardRef(({\n  children,\n  ...props\n}, forwardedRef) => {\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    ref: forwardedRef,\n    as: \"button\"\n  }, props), children);\n});\nButtonComponent.displayName = 'Button';\nexport { ButtonComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport CounterLabel from '../CounterLabel';\n\nconst Counter = ({\n  children,\n  sx: sxProp = {},\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(CounterLabel, _extends({\n    \"data-component\": \"ButtonCounter\",\n    sx: {\n      ml: 2,\n      ...sxProp\n    }\n  }, props), children);\n};\n\nCounter.displayName = \"Counter\";\nexport { Counter };","import { ButtonComponent } from './Button';\nimport { Counter } from './ButtonCounter';\nimport { IconButton } from './IconButton';\nimport { LinkButton } from './LinkButton';\nexport { IconButton, LinkButton };\nexport const Button = Object.assign(ButtonComponent, {\n  Counter\n});","export const TEXT_ROW_HEIGHT = '20px'; // custom value off the scale\n\nexport const getVariantStyles = (variant = 'default', theme) => {\n  const style = {\n    default: {\n      color: 'btn.text',\n      backgroundColor: 'btn.bg',\n      boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.shadow}, ${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.insetShadow}`,\n      '&:hover:not([disabled])': {\n        backgroundColor: 'btn.hoverBg'\n      },\n      '&:active:not([disabled])': {\n        backgroundColor: 'btn.activeBg',\n        borderColor: 'btn.activeBorder'\n      },\n      '&:disabled': {\n        color: 'primer.fg.disabled',\n        '[data-component=ButtonCounter]': {\n          color: 'inherit'\n        }\n      },\n      '&[aria-expanded=true]': {\n        backgroundColor: 'btn.activeBg',\n        borderColor: 'btn.activeBorder'\n      }\n    },\n    primary: {\n      color: 'btn.primary.text',\n      backgroundColor: 'btn.primary.bg',\n      borderColor: 'border.subtle',\n      boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.primary.shadow}`,\n      '&:hover:not([disabled])': {\n        color: 'btn.primary.hoverText',\n        backgroundColor: 'btn.primary.hoverBg'\n      },\n      '&:focus:not([disabled])': {\n        boxShadow: 'inset 0 0 0 3px'\n      },\n      '&:focus-visible:not([disabled])': {\n        boxShadow: 'inset 0 0 0 3px'\n      },\n      '&:active:not([disabled])': {\n        backgroundColor: 'btn.primary.selectedBg',\n        boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.primary.selectedShadow}`\n      },\n      '&:disabled': {\n        color: 'btn.primary.disabledText',\n        backgroundColor: 'btn.primary.disabledBg',\n        '[data-component=ButtonCounter]': {\n          color: 'inherit'\n        }\n      },\n      '[data-component=ButtonCounter]': {\n        backgroundColor: 'btn.primary.counterBg',\n        color: 'btn.primary.text'\n      },\n      '&[aria-expanded=true]': {\n        backgroundColor: 'btn.primary.selectedBg',\n        boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.primary.selectedShadow}`\n      }\n    },\n    danger: {\n      color: 'btn.danger.text',\n      backgroundColor: 'btn.bg',\n      boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.shadow}`,\n      '&:hover:not([disabled])': {\n        color: 'btn.danger.hoverText',\n        backgroundColor: 'btn.danger.hoverBg',\n        borderColor: 'btn.danger.hoverBorder',\n        boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.danger.hoverShadow}`,\n        '[data-component=ButtonCounter]': {\n          backgroundColor: 'btn.danger.hoverCounterBg',\n          color: 'btn.danger.hoverText'\n        }\n      },\n      '&:active:not([disabled])': {\n        color: 'btn.danger.selectedText',\n        backgroundColor: 'btn.danger.selectedBg',\n        boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.danger.selectedShadow}`,\n        borderColor: 'btn.danger.selectedBorder'\n      },\n      '&:disabled': {\n        color: 'btn.danger.disabledText',\n        backgroundColor: 'btn.danger.disabledBg',\n        borderColor: 'btn.danger.disabledBorder',\n        '[data-component=ButtonCounter]': {\n          color: 'inherit',\n          backgroundColor: 'btn.danger.disabledCounterBg'\n        }\n      },\n      '[data-component=ButtonCounter]': {\n        color: 'btn.danger.text',\n        backgroundColor: 'btn.danger.counterBg'\n      },\n      '&[aria-expanded=true]': {\n        color: 'btn.danger.selectedText',\n        backgroundColor: 'btn.danger.selectedBg',\n        boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.danger.selectedShadow}`,\n        borderColor: 'btn.danger.selectedBorder'\n      }\n    },\n    invisible: {\n      color: 'accent.fg',\n      backgroundColor: 'transparent',\n      border: '0',\n      boxShadow: 'none',\n      '&:hover:not([disabled])': {\n        backgroundColor: 'btn.hoverBg'\n      },\n      '&:active:not([disabled])': {\n        backgroundColor: 'btn.selectedBg'\n      },\n      '&:disabled': {\n        color: 'primer.fg.disabled',\n        '[data-component=ButtonCounter]': {\n          color: 'inherit'\n        }\n      },\n      '&[aria-expanded=true]': {\n        backgroundColor: 'btn.selectedBg'\n      }\n    },\n    outline: {\n      color: 'btn.outline.text',\n      boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.shadow}`,\n      borderColor: 'btn.border',\n      backgroundColor: 'btn.bg',\n      '&:hover:not([disabled])': {\n        color: 'btn.outline.hoverText',\n        backgroundColor: 'btn.outline.hoverBg',\n        borderColor: 'outline.hoverBorder',\n        boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.outline.hoverShadow}`,\n        '[data-component=ButtonCounter]': {\n          backgroundColor: 'btn.outline.hoverCounterBg',\n          color: 'inherit'\n        }\n      },\n      '&:active:not([disabled])': {\n        color: 'btn.outline.selectedText',\n        backgroundColor: 'btn.outline.selectedBg',\n        boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.outline.selectedShadow}`,\n        borderColor: 'btn.outline.selectedBorder'\n      },\n      '&:disabled': {\n        color: 'btn.outline.disabledText',\n        backgroundColor: 'btn.outline.disabledBg',\n        borderColor: 'btn.border',\n        '[data-component=ButtonCounter]': {\n          backgroundColor: 'btn.outline.disabledCounterBg',\n          color: 'inherit'\n        }\n      },\n      '[data-component=ButtonCounter]': {\n        backgroundColor: 'btn.outline.counterBg',\n        color: 'btn.outline.text'\n      },\n      '&[aria-expanded=true]': {\n        color: 'btn.outline.selectedText',\n        backgroundColor: 'btn.outline.selectedBg',\n        boxShadow: `${theme === null || theme === void 0 ? void 0 : theme.shadows.btn.outline.selectedShadow}`,\n        borderColor: 'btn.outline.selectedBorder'\n      }\n    }\n  };\n  return style[variant];\n};\n/* The button heights have to amount to \n  small - 28\n  medium - 32\n  large - 34\n  In icon these have to be square.\n*/\n\nexport const getSizeStyles = (size = 'medium', variant = 'default', iconOnly) => {\n  let paddingY, paddingX, fontSize;\n\n  switch (size) {\n    case 'small':\n      paddingY = 3;\n      paddingX = 12;\n      fontSize = 0;\n      break;\n\n    case 'large':\n      paddingY = 9;\n      paddingX = 20;\n      fontSize = 2;\n      break;\n\n    case 'medium':\n    default:\n      paddingY = 5;\n      paddingX = 16;\n      fontSize = 1;\n  }\n\n  if (iconOnly) {\n    // when `size !== 'medium'`, vertical alignment of the icon is thrown off\n    // because changing the font size draws an em-box that does not match the\n    // bounding box of the SVG\n    fontSize = 1;\n    paddingX = paddingY + 3; // to make it a square\n  }\n\n  if (variant === 'invisible') {\n    paddingY = paddingY + 1; // to make up for absence of border\n  }\n\n  return {\n    paddingY: `${paddingY}px`,\n    paddingX: `${paddingX}px`,\n    fontSize,\n    '[data-component=ButtonCounter]': {\n      fontSize\n    }\n  };\n};\nexport const getBaseStyles = theme => ({\n  borderRadius: '2',\n  border: '1px solid',\n  borderColor: theme === null || theme === void 0 ? void 0 : theme.colors.btn.border,\n  fontFamily: 'inherit',\n  fontWeight: 'bold',\n  lineHeight: TEXT_ROW_HEIGHT,\n  whiteSpace: 'nowrap',\n  verticalAlign: 'middle',\n  cursor: 'pointer',\n  appearance: 'none',\n  userSelect: 'none',\n  textDecoration: 'none',\n  textAlign: 'center',\n  '&:disabled': {\n    cursor: 'default'\n  },\n  '&:disabled svg': {\n    opacity: '0.6'\n  },\n  '@media (forced-colors: active)': {\n    '&:focus': {\n      // Support for Windows high contrast https://sarahmhigley.com/writing/whcm-quick-tips\n      outline: 'solid 1px transparent'\n    }\n  }\n});\nexport const getButtonStyles = theme => {\n  const styles = { ...getBaseStyles(theme),\n    display: 'grid',\n    gridTemplateAreas: '\"leadingIcon text trailingIcon\"',\n    '& > :not(:last-child)': {\n      mr: '2'\n    },\n    '[data-component=\"leadingIcon\"]': {\n      gridArea: 'leadingIcon'\n    },\n    '[data-component=\"text\"]': {\n      gridArea: 'text'\n    },\n    '[data-component=\"trailingIcon\"]': {\n      gridArea: 'trailingIcon'\n    }\n  };\n  return styles;\n};","import { css } from 'styled-components';\nimport { get } from './constants';\nconst globalFocusStyle = css([\"box-shadow:none;outline:2px solid \", \";\"], get('colors.accent.fg'));\n\nconst getGlobalFocusStyles = outlineOffset => css([\"&:focus:not(:disabled){\", \";outline-offset:\", \";&:not(:focus-visible){outline:solid 1px transparent;}}&:focus-visible:not(:disabled){\", \";outline-offset:\", \";}\"], globalFocusStyle, typeof outlineOffset === 'undefined' ? '2px' : outlineOffset, globalFocusStyle, typeof outlineOffset === 'undefined' ? '2px' : outlineOffset);\n\nexport default getGlobalFocusStyles;","import styled from 'styled-components';\nimport sx from '../sx';\nimport getGlobalFocusStyles from '../_getGlobalFocusStyles';\nexport const StyledButton = styled.button.withConfig({\n  displayName: \"types__StyledButton\",\n  componentId: \"sc-ws60qy-0\"\n})([\"\", \";\", \";\"], getGlobalFocusStyles('-2px'), sx);","import styled from 'styled-components';\nimport { get } from './constants';\nimport sx from './sx';\n\nconst colorStyles = ({\n  scheme,\n  ...props\n}) => {\n  return {\n    color: scheme === 'secondary' ? get('colors.fg.default')(props) : scheme === 'primary' ? get('colors.fg.onEmphasis')(props) : get('colors.fg.default')(props)\n  };\n};\n\nconst bgStyles = ({\n  scheme,\n  ...props\n}) => {\n  return {\n    backgroundColor: scheme === 'secondary' ? get('colors.neutral.muted')(props) : scheme === 'primary' ? get('colors.neutral.emphasis')(props) : get('colors.neutral.muted')(props)\n  };\n};\n\nconst CounterLabel = styled.span.withConfig({\n  displayName: \"CounterLabel\",\n  componentId: \"sc-13ceqbg-0\"\n})([\"display:inline-block;padding:2px 5px;font-size:\", \";font-weight:\", \";line-height:\", \";border-radius:20px;\", \";\", \";&:empty{display:none;}\", \";\"], get('fontSizes.0'), get('fontWeights.bold'), get('lineHeights.condensedUltra'), colorStyles, bgStyles, sx);\nexport default CounterLabel;","import styled from 'styled-components';\nimport { get } from './constants';\nimport sx from './sx';\nconst Heading = styled.h2.withConfig({\n  displayName: \"Heading\",\n  componentId: \"sc-1irtotl-0\"\n})([\"font-weight:\", \";font-size:\", \";margin:0;\", \";\"], get('fontWeights.bold'), get('fontSizes.5'), sx);\nexport default Heading;","import styled from 'styled-components';\nimport { system } from 'styled-system';\nimport { get } from './constants';\nimport sx from './sx';\nconst hoverColor = system({\n  hoverColor: {\n    property: 'color',\n    scale: 'colors'\n  }\n});\nconst Link = styled.a.withConfig({\n  displayName: \"Link\",\n  componentId: \"sc-hrxz1n-0\"\n})([\"color:\", \";text-decoration:\", \";&:hover{text-decoration:\", \";\", \";}&:is(button){display:inline-block;padding:0;font-size:inherit;white-space:nowrap;cursor:pointer;user-select:none;background-color:transparent;border:0;appearance:none;}\", \";\"], props => props.muted ? get('colors.fg.muted')(props) : get('colors.accent.fg')(props), props => props.underline ? 'underline' : 'none', props => props.muted ? 'none' : 'underline', props => props.hoverColor ? hoverColor : props.muted ? `color: ${get('colors.accent.fg')(props)}` : '', sx);\nexport default Link;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport sx from './sx';\nconst sizeMap = {\n  small: '16px',\n  medium: '32px',\n  large: '64px'\n};\n\nfunction Spinner({\n  size: sizeKey = 'medium',\n  ...props\n}) {\n  const size = sizeMap[sizeKey];\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: size,\n    width: size,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\"\n  }, props), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8\",\n    cy: \"8\",\n    r: \"7\",\n    stroke: \"currentColor\",\n    strokeOpacity: \"0.25\",\n    strokeWidth: \"2\",\n    vectorEffect: \"non-scaling-stroke\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15 8a7.002 7.002 0 00-7-7\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    vectorEffect: \"non-scaling-stroke\"\n  }));\n}\n\nSpinner.displayName = \"Spinner\";\nconst StyledSpinner = styled(Spinner).withConfig({\n  displayName: \"Spinner__StyledSpinner\",\n  componentId: \"sc-1dxfx1i-0\"\n})([\"@keyframes rotate-keyframes{100%{transform:rotate(360deg);}}animation:rotate-keyframes 1s linear infinite;\", \"\"], sx);\nStyledSpinner.displayName = 'Spinner';\nexport default StyledSpinner;","import styled from 'styled-components';\nimport { COMMON, TYPOGRAPHY } from './constants';\nimport sx from './sx';\nconst Text = styled.span.withConfig({\n  displayName: \"Text\",\n  componentId: \"sc-125xb1i-0\"\n})([\"\", \";\", \";\", \";\"], TYPOGRAPHY, COMMON, sx);\nexport default Text;","import React from 'react';\nimport { Box, Spinner } from '.';\n\nconst TextInputInnerVisualSlot = ({\n  children,\n  hasLoadingIndicator,\n  showLoadingIndicator,\n  visualPosition\n}) => {\n  if (!children && !hasLoadingIndicator || visualPosition === 'leading' && !children && !showLoadingIndicator) {\n    return null;\n  }\n\n  if (!hasLoadingIndicator) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"TextInput-icon\"\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TextInput-icon\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    position: \"relative\"\n  }, children && /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      visibility: showLoadingIndicator ? 'hidden' : 'visible'\n    }\n  }, children), /*#__PURE__*/React.createElement(Spinner, {\n    sx: children ? {\n      position: 'absolute',\n      top: 0,\n      height: '100%',\n      maxWidth: '100%',\n      visibility: showLoadingIndicator ? 'visible' : 'hidden',\n      ...(visualPosition === 'leading' ? {\n        left: 0\n      } : {\n        right: 0\n      })\n    } : {\n      visibility: showLoadingIndicator ? 'visible' : 'hidden'\n    },\n    size: children ? undefined : 'small'\n  })));\n};\n\nTextInputInnerVisualSlot.displayName = \"TextInputInnerVisualSlot\";\nexport default TextInputInnerVisualSlot;","import styled from 'styled-components';\nimport sx from './sx';\nconst UnstyledTextInput = styled.input.withConfig({\n  displayName: \"_UnstyledTextInput__UnstyledTextInput\",\n  componentId: \"sc-31b2um-0\"\n})([\"border:0;font-size:inherit;font-family:inherit;background-color:transparent;-webkit-appearance:none;color:inherit;width:100%;&:focus{outline:0;}\", \";\"], sx);\nexport default UnstyledTextInput;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef } from 'react';\nimport { Box, Button, IconButton, Tooltip } from '.';\nimport { merge } from './sx';\nconst invisibleButtonStyleOverrides = {\n  color: 'fg.default',\n  paddingTop: '2px',\n  paddingRight: '4px',\n  paddingBottom: '2px',\n  paddingLeft: '4px',\n  position: 'relative',\n  '@media (pointer: coarse)': {\n    ':after': {\n      content: '\"\"',\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      transform: 'translateY(-50%)',\n      top: '50%',\n      minHeight: '44px'\n    }\n  }\n};\n\nconst ConditionalTooltip = ({\n  'aria-label': ariaLabel,\n  children\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, ariaLabel ? /*#__PURE__*/React.createElement(Tooltip, {\n  \"aria-label\": ariaLabel,\n  sx: {\n    /* inline-block is used to ensure the tooltip dimensions don't\n       collapse when being used with `grid` or `inline` children */\n    display: 'inline-block'\n  }\n}, children) : children);\n\nconst TextInputAction = /*#__PURE__*/forwardRef(({\n  'aria-label': ariaLabel,\n  children,\n  icon,\n  sx: sxProp,\n  variant,\n  ...rest\n}, forwardedRef) => {\n  const sx = variant === 'invisible' ? merge(invisibleButtonStyleOverrides, sxProp || {}) : sxProp || {};\n\n  if (icon && !ariaLabel || !children && !ariaLabel) {\n    // eslint-disable-next-line no-console\n    console.warn('Use the `aria-label` prop to provide an accessible label for assistive technology');\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"span\",\n    className: \"TextInput-action\",\n    margin: 1\n  }, icon && !children ? /*#__PURE__*/React.createElement(Tooltip, {\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(IconButton, _extends({\n    variant: variant,\n    type: \"button\",\n    icon: icon,\n    \"aria-label\": ariaLabel,\n    size: \"small\",\n    sx: sx\n  }, rest, {\n    ref: forwardedRef\n  }))) : /*#__PURE__*/React.createElement(ConditionalTooltip, {\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(Button, _extends({\n    variant: variant,\n    size: \"small\",\n    type: \"button\",\n    sx: sx\n  }, rest, {\n    ref: forwardedRef\n  }), children)));\n});\nTextInputAction.defaultProps = {\n  variant: 'invisible'\n};\nexport default TextInputAction;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useState } from 'react';\nimport classnames from 'classnames';\nimport TextInputInnerVisualSlot from './_TextInputInnerVisualSlot';\nimport { useProvidedRefOrCreate } from './hooks';\nimport TextInputWrapper from './_TextInputWrapper';\nimport UnstyledTextInput from './_UnstyledTextInput';\nimport TextInputAction from './_TextInputInnerAction';\n// using forwardRef is important so that other components (ex. SelectMenu) can autofocus the input\nconst TextInput = /*#__PURE__*/React.forwardRef(({\n  icon: IconComponent,\n  leadingVisual: LeadingVisual,\n  trailingVisual: TrailingVisual,\n  trailingAction,\n  block,\n  className,\n  contrast,\n  disabled,\n  loading,\n  loaderPosition,\n  monospace,\n  validationStatus,\n  sx: sxProp,\n  size: sizeProp,\n  onFocus,\n  onBlur,\n  // start deprecated props\n  width: widthProp,\n  minWidth: minWidthProp,\n  maxWidth: maxWidthProp,\n  variant: variantProp,\n  // end deprecated props\n  ...inputProps\n}, ref) => {\n  const [isInputFocused, setIsInputFocused] = useState(false);\n  const inputRef = useProvidedRefOrCreate(ref); // this class is necessary to style FilterSearch, plz no touchy!\n\n  const wrapperClasses = classnames(className, 'TextInput-wrapper');\n  const showLeadingLoadingIndicator = loading && (loaderPosition === 'leading' || Boolean(LeadingVisual && loaderPosition !== 'trailing'));\n  const showTrailingLoadingIndicator = loading && (loaderPosition === 'trailing' || Boolean(loaderPosition === 'auto' && !LeadingVisual));\n\n  const focusInput = () => {\n    var _inputRef$current;\n\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  const handleInputFocus = useCallback(e => {\n    setIsInputFocused(true);\n    onFocus && onFocus(e);\n  }, [onFocus]);\n  const handleInputBlur = useCallback(e => {\n    setIsInputFocused(false);\n    onBlur && onBlur(e);\n  }, [onBlur]);\n  return /*#__PURE__*/React.createElement(TextInputWrapper, {\n    block: block,\n    className: wrapperClasses,\n    validationStatus: validationStatus,\n    contrast: contrast,\n    disabled: disabled,\n    monospace: monospace,\n    sx: sxProp,\n    size: sizeProp,\n    width: widthProp,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    variant: variantProp,\n    hasLeadingVisual: Boolean(LeadingVisual || showLeadingLoadingIndicator),\n    hasTrailingVisual: Boolean(TrailingVisual || showTrailingLoadingIndicator),\n    hasTrailingAction: Boolean(trailingAction),\n    isInputFocused: isInputFocused,\n    onClick: focusInput,\n    \"aria-live\": \"polite\",\n    \"aria-busy\": Boolean(loading)\n  }, IconComponent && /*#__PURE__*/React.createElement(IconComponent, {\n    className: \"TextInput-icon\"\n  }), /*#__PURE__*/React.createElement(TextInputInnerVisualSlot, {\n    visualPosition: \"leading\",\n    showLoadingIndicator: showLeadingLoadingIndicator,\n    hasLoadingIndicator: typeof loading === 'boolean'\n  }, typeof LeadingVisual === 'function' ? /*#__PURE__*/React.createElement(LeadingVisual, null) : LeadingVisual), /*#__PURE__*/React.createElement(UnstyledTextInput, _extends({\n    ref: inputRef,\n    disabled: disabled,\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur\n  }, inputProps, {\n    \"data-component\": \"input\"\n  })), /*#__PURE__*/React.createElement(TextInputInnerVisualSlot, {\n    visualPosition: \"trailing\",\n    showLoadingIndicator: showTrailingLoadingIndicator,\n    hasLoadingIndicator: typeof loading === 'boolean'\n  }, typeof TrailingVisual === 'function' ? /*#__PURE__*/React.createElement(TrailingVisual, null) : TrailingVisual), trailingAction);\n});\nTextInput.defaultProps = {\n  type: 'text',\n  loaderPosition: 'auto'\n};\nTextInput.displayName = 'TextInput';\nexport default Object.assign(TextInput, {\n  Action: TextInputAction\n});","import React from 'react';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\nimport defaultTheme from './theme';\nimport deepmerge from 'deepmerge';\nconst defaultColorMode = 'day';\nconst defaultDayScheme = 'light';\nconst defaultNightScheme = 'dark'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  setColorMode: () => null,\n  setDayScheme: () => null,\n  setNightScheme: () => null\n}); // inspired from __NEXT_DATA__, we use application/json to avoid CSRF policy with inline scripts\n\nconst getServerHandoff = () => {\n  try {\n    var _document$getElementB;\n\n    const serverData = (_document$getElementB = document.getElementById('__PRIMER_DATA__')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.textContent;\n    if (serverData) return JSON.parse(serverData);\n  } catch (error) {// if document/element does not exist or JSON is invalid, supress error\n  }\n\n  return {};\n};\n\nexport const ThemeProvider = ({\n  children,\n  ...props\n}) => {\n  var _ref, _props$theme, _ref2, _props$colorMode, _ref3, _props$dayScheme, _ref4, _props$nightScheme;\n\n  // Get fallback values from parent ThemeProvider (if exists)\n  const {\n    theme: fallbackTheme,\n    colorMode: fallbackColorMode,\n    dayScheme: fallbackDayScheme,\n    nightScheme: fallbackNightScheme\n  } = useTheme(); // Initialize state\n\n  const theme = (_ref = (_props$theme = props.theme) !== null && _props$theme !== void 0 ? _props$theme : fallbackTheme) !== null && _ref !== void 0 ? _ref : defaultTheme;\n  const {\n    resolvedServerColorMode\n  } = getServerHandoff();\n  const resolvedColorModePassthrough = React.useRef(resolvedServerColorMode);\n  const [colorMode, setColorMode] = React.useState((_ref2 = (_props$colorMode = props.colorMode) !== null && _props$colorMode !== void 0 ? _props$colorMode : fallbackColorMode) !== null && _ref2 !== void 0 ? _ref2 : defaultColorMode);\n  const [dayScheme, setDayScheme] = React.useState((_ref3 = (_props$dayScheme = props.dayScheme) !== null && _props$dayScheme !== void 0 ? _props$dayScheme : fallbackDayScheme) !== null && _ref3 !== void 0 ? _ref3 : defaultDayScheme);\n  const [nightScheme, setNightScheme] = React.useState((_ref4 = (_props$nightScheme = props.nightScheme) !== null && _props$nightScheme !== void 0 ? _props$nightScheme : fallbackNightScheme) !== null && _ref4 !== void 0 ? _ref4 : defaultNightScheme);\n  const systemColorMode = useSystemColorMode();\n  const resolvedColorMode = resolvedColorModePassthrough.current || resolveColorMode(colorMode, systemColorMode);\n  const colorScheme = chooseColorScheme(resolvedColorMode, dayScheme, nightScheme);\n  const {\n    resolvedTheme,\n    resolvedColorScheme\n  } = React.useMemo(() => applyColorScheme(theme, colorScheme), [theme, colorScheme]); // this effect will only run on client\n\n  React.useEffect(function updateColorModeAfterServerPassthrough() {\n    const resolvedColorModeOnClient = resolveColorMode(colorMode, systemColorMode);\n\n    if (resolvedColorModePassthrough.current) {\n      // if the resolved color mode passed on from the server is not the resolved color mode on client, change it!\n      if (resolvedColorModePassthrough.current !== resolvedColorModeOnClient) {\n        window.setTimeout(() => {\n          // override colorMode to whatever is resolved on the client to get a re-render\n          setColorMode(resolvedColorModeOnClient); // immediately after that, set the colorMode to what the user passed to respond to system color mode changes\n\n          setColorMode(colorMode);\n        });\n      }\n\n      resolvedColorModePassthrough.current = null;\n    }\n  }, [colorMode, systemColorMode]); // Update state if props change\n\n  React.useEffect(() => {\n    var _ref5, _props$colorMode2;\n\n    setColorMode((_ref5 = (_props$colorMode2 = props.colorMode) !== null && _props$colorMode2 !== void 0 ? _props$colorMode2 : fallbackColorMode) !== null && _ref5 !== void 0 ? _ref5 : defaultColorMode);\n  }, [props.colorMode, fallbackColorMode]);\n  React.useEffect(() => {\n    var _ref6, _props$dayScheme2;\n\n    setDayScheme((_ref6 = (_props$dayScheme2 = props.dayScheme) !== null && _props$dayScheme2 !== void 0 ? _props$dayScheme2 : fallbackDayScheme) !== null && _ref6 !== void 0 ? _ref6 : defaultDayScheme);\n  }, [props.dayScheme, fallbackDayScheme]);\n  React.useEffect(() => {\n    var _ref7, _props$nightScheme2;\n\n    setNightScheme((_ref7 = (_props$nightScheme2 = props.nightScheme) !== null && _props$nightScheme2 !== void 0 ? _props$nightScheme2 : fallbackNightScheme) !== null && _ref7 !== void 0 ? _ref7 : defaultNightScheme);\n  }, [props.nightScheme, fallbackNightScheme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: {\n      theme: resolvedTheme,\n      colorScheme,\n      colorMode,\n      resolvedColorMode,\n      resolvedColorScheme,\n      dayScheme,\n      nightScheme,\n      setColorMode,\n      setDayScheme,\n      setNightScheme\n    }\n  }, /*#__PURE__*/React.createElement(SCThemeProvider, {\n    theme: resolvedTheme\n  }, children, props.preventSSRMismatch ? /*#__PURE__*/React.createElement(\"script\", {\n    type: \"application/json\",\n    id: \"__PRIMER_DATA__\",\n    dangerouslySetInnerHTML: {\n      __html: JSON.stringify({\n        resolvedServerColorMode: resolvedColorMode\n      })\n    }\n  }) : null));\n};\nThemeProvider.displayName = \"ThemeProvider\";\nexport function useTheme() {\n  return React.useContext(ThemeContext);\n}\nexport function useColorSchemeVar(values, fallback) {\n  var _values$colorScheme;\n\n  const {\n    colorScheme = ''\n  } = useTheme();\n  return (_values$colorScheme = values[colorScheme]) !== null && _values$colorScheme !== void 0 ? _values$colorScheme : fallback;\n}\n\nfunction useSystemColorMode() {\n  const [systemColorMode, setSystemColorMode] = React.useState(getSystemColorMode);\n  React.useEffect(() => {\n    var _window, _window$matchMedia;\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    const media = (_window = window) === null || _window === void 0 ? void 0 : (_window$matchMedia = _window.matchMedia) === null || _window$matchMedia === void 0 ? void 0 : _window$matchMedia.call(_window, '(prefers-color-scheme: dark)');\n\n    function handleChange(event) {\n      const isNight = event.matches;\n      setSystemColorMode(isNight ? 'night' : 'day');\n    } // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n\n    if (media) {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (media.addEventListener !== undefined) {\n        media.addEventListener('change', handleChange);\n        return function cleanup() {\n          media.removeEventListener('change', handleChange);\n        };\n      } // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      else if (media.addListener !== undefined) {\n        media.addListener(handleChange);\n        return function cleanup() {\n          media.removeListener(handleChange);\n        };\n      }\n    }\n  }, []);\n  return systemColorMode;\n}\n\nfunction getSystemColorMode() {\n  var _window$matchMedia2, _window2, _window$matchMedia2$c;\n\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  if (typeof window !== 'undefined' && (_window$matchMedia2 = (_window2 = window).matchMedia) !== null && _window$matchMedia2 !== void 0 && (_window$matchMedia2$c = _window$matchMedia2.call(_window2, '(prefers-color-scheme: dark)')) !== null && _window$matchMedia2$c !== void 0 && _window$matchMedia2$c.matches) {\n    return 'night';\n  }\n\n  return 'day';\n}\n\nfunction resolveColorMode(colorMode, systemColorMode) {\n  switch (colorMode) {\n    case 'auto':\n      return systemColorMode;\n\n    default:\n      return colorMode;\n  }\n}\n\nfunction chooseColorScheme(colorMode, dayScheme, nightScheme) {\n  switch (colorMode) {\n    case 'day':\n      return dayScheme;\n\n    case 'night':\n      return nightScheme;\n  }\n}\n\nfunction applyColorScheme(theme, colorScheme) {\n  if (!theme.colorSchemes) {\n    return {\n      resolvedTheme: theme,\n      resolvedColorScheme: undefined\n    };\n  }\n\n  if (!theme.colorSchemes[colorScheme]) {\n    // eslint-disable-next-line no-console\n    console.error(`\\`${colorScheme}\\` scheme not defined in \\`theme.colorSchemes\\``); // Apply the first defined color scheme\n\n    const defaultColorScheme = Object.keys(theme.colorSchemes)[0];\n    return {\n      resolvedTheme: deepmerge(theme, theme.colorSchemes[defaultColorScheme]),\n      resolvedColorScheme: defaultColorScheme\n    };\n  }\n\n  return {\n    resolvedTheme: deepmerge(theme, theme.colorSchemes[colorScheme]),\n    resolvedColorScheme: colorScheme\n  };\n}\n\nexport default ThemeProvider;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport classnames from 'classnames';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { get } from './constants';\nimport sx from './sx';\nconst TooltipBase = styled.span.withConfig({\n  displayName: \"Tooltip__TooltipBase\",\n  componentId: \"sc-uha8qm-0\"\n})([\"position:relative;&::before{position:absolute;z-index:1000001;display:none;width:0px;height:0px;color:\", \";pointer-events:none;content:'';border:6px solid transparent;opacity:0;}&::after{position:absolute;z-index:1000000;display:none;padding:0.5em 0.75em;font:normal normal 11px/1.5 \", \";-webkit-font-smoothing:subpixel-antialiased;color:\", \";text-align:center;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-wrap:break-word;white-space:pre;pointer-events:none;content:attr(aria-label);background:\", \";border-radius:\", \";opacity:0;}@keyframes tooltip-appear{from{opacity:0;}to{opacity:1;}}&:hover,&:active,&:focus{&::before,&::after{display:inline-block;text-decoration:none;animation-name:tooltip-appear;animation-duration:0.1s;animation-fill-mode:forwards;animation-timing-function:ease-in;animation-delay:0.4s;}}&.tooltipped-no-delay:hover,&.tooltipped-no-delay:active,&.tooltipped-no-delay:focus{&::before,&::after{animation-delay:0s;}}&.tooltipped-multiline:hover,&.tooltipped-multiline:active,&.tooltipped-multiline:focus{&::after{display:table-cell;}}&.tooltipped-s,&.tooltipped-se,&.tooltipped-sw{&::after{top:100%;right:50%;margin-top:6px;}&::before{top:auto;right:50%;bottom:-7px;margin-right:-6px;border-bottom-color:\", \";}}&.tooltipped-se{&::after{right:auto;left:50%;margin-left:-\", \";}}&.tooltipped-sw::after{margin-right:-\", \";}&.tooltipped-n,&.tooltipped-ne,&.tooltipped-nw{&::after{right:50%;bottom:100%;margin-bottom:6px;}&::before{top:-7px;right:50%;bottom:auto;margin-right:-6px;border-top-color:\", \";}}&.tooltipped-ne{&::after{right:auto;left:50%;margin-left:-\", \";}}&.tooltipped-nw::after{margin-right:-\", \";}&.tooltipped-s::after,&.tooltipped-n::after{transform:translateX(50%);}&.tooltipped-w{&::after{right:100%;bottom:50%;margin-right:6px;transform:translateY(50%);}&::before{top:50%;bottom:50%;left:-7px;margin-top:-6px;border-left-color:\", \";}}&.tooltipped-e{&::after{bottom:50%;left:100%;margin-left:6px;transform:translateY(50%);}&::before{top:50%;right:-7px;bottom:50%;margin-top:-6px;border-right-color:\", \";}}&.tooltipped-multiline{&::after{width:max-content;max-width:250px;word-wrap:break-word;white-space:pre-line;border-collapse:separate;}&.tooltipped-s::after,&.tooltipped-n::after{right:auto;left:50%;transform:translateX(-50%);}&.tooltipped-w::after,&.tooltipped-e::after{right:100%;}}&.tooltipped-align-right-2::after{right:0;margin-right:0;}&.tooltipped-align-right-2::before{right:15px;}&.tooltipped-align-left-2::after{left:0;margin-left:0;}&.tooltipped-align-left-2::before{left:10px;}\", \";\"], get('colors.neutral.emphasisPlus'), get('fonts.normal'), get('colors.fg.onEmphasis'), get('colors.neutral.emphasisPlus'), get('radii.1'), get('colors.neutral.emphasisPlus'), get('space.3'), get('space.3'), get('colors.neutral.emphasisPlus'), get('space.3'), get('space.3'), get('colors.neutral.emphasisPlus'), get('colors.neutral.emphasisPlus'), sx);\n\nfunction Tooltip({\n  direction = 'n',\n  children,\n  className,\n  text,\n  noDelay,\n  align,\n  wrap,\n  ...rest\n}) {\n  const classes = classnames(className, `tooltipped-${direction}`, align && `tooltipped-align-${align}-2`, noDelay && 'tooltipped-no-delay', wrap && 'tooltipped-multiline');\n  return /*#__PURE__*/React.createElement(TooltipBase, _extends({\n    role: \"tooltip\",\n    \"aria-label\": text\n  }, rest, {\n    className: classes\n  }), children);\n}\n\nTooltip.displayName = \"Tooltip\";\nTooltip.alignments = ['left', 'right'];\nTooltip.directions = ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'];\nexport default Tooltip;","import styled, { css } from 'styled-components';\nimport { maxWidth, minWidth, variant, width } from 'styled-system';\nimport { get } from './constants';\nimport sx from './sx';\nconst sizeDeprecatedVariants = variant({\n  variants: {\n    small: {\n      minHeight: '28px',\n      px: 2,\n      py: '3px',\n      fontSize: 0,\n      lineHeight: '20px'\n    },\n    large: {\n      px: 2,\n      py: '10px',\n      fontSize: 3\n    }\n  }\n});\nconst sizeVariants = variant({\n  prop: 'size',\n  variants: {\n    small: {\n      minHeight: '28px',\n      px: 2,\n      py: '3px',\n      fontSize: 0,\n      lineHeight: '20px'\n    },\n    large: {\n      px: 2,\n      py: '10px',\n      fontSize: 3\n    }\n  }\n});\nconst textInputBasePadding = '12px';\nexport const textInputHorizPadding = textInputBasePadding;\n\nconst renderFocusStyles = (hasTrailingAction, isInputFocused) => {\n  if (hasTrailingAction) {\n    return isInputFocused && css([\"border-color:\", \";outline:none;box-shadow:inset 0 0 0 1px \", \";\"], get('colors.accent.fg'), get('colors.accent.fg'));\n  }\n\n  return css([\"&:focus-within{border-color:\", \";outline:none;box-shadow:inset 0 0 0 1px \", \";}\"], get('colors.accent.fg'), get('colors.accent.fg'));\n};\n\nexport const TextInputBaseWrapper = styled.span.withConfig({\n  displayName: \"_TextInputWrapper__TextInputBaseWrapper\",\n  componentId: \"sc-apywy2-0\"\n})([\"font-size:\", \";line-height:20px;color:\", \";vertical-align:middle;background-color:\", \";border:1px solid \", \";border-radius:\", \";outline:none;box-shadow:\", \";display:inline-flex;align-items:stretch;min-height:32px;input,textarea{cursor:text;}select{cursor:pointer;}&::placeholder{color:\", \";}\", \" > textarea{padding:\", \";}\", \" \", \" \", \" \", \" \", \" \", \" @media (min-width:\", \"){font-size:\", \";}\", \" \", \" \", \" \", \" \", \" \", \";\"], get('fontSizes.1'), get('colors.fg.default'), get('colors.canvas.default'), get('colors.border.default'), get('radii.2'), get('shadows.primer.shadow.inset'), get('colors.fg.subtle'), props => renderFocusStyles(Boolean(props.hasTrailingAction), Boolean(props.isInputFocused)), textInputBasePadding, props => props.contrast && css([\"background-color:\", \";\"], get('colors.canvas.inset')), props => props.disabled && css([\"color:\", \";background-color:\", \";border-color:\", \";input,textarea,select{cursor:not-allowed;}\"], get('colors.primer.fg.disabled'), get('colors.input.disabledBg'), get('colors.border.default')), props => props.monospace && css([\"font-family:\", \";\"], get('fonts.mono')), props => props.validationStatus === 'error' && css([\"border-color:\", \";\", \"\"], get('colors.danger.emphasis'), renderFocusStyles(Boolean(props.hasTrailingAction), Boolean(props.isInputFocused))), props => props.validationStatus === 'success' && css([\"border-color:\", \";\"], get('colors.success.emphasis')), props => props.block && css([\"width:100%;display:flex;align-self:stretch;\"]), get('breakpoints.1'), get('fontSizes.1'), width, minWidth, maxWidth, sizeDeprecatedVariants, sizeVariants, sx);\nconst TextInputWrapper = styled(TextInputBaseWrapper).withConfig({\n  displayName: \"_TextInputWrapper__TextInputWrapper\",\n  componentId: \"sc-apywy2-1\"\n})([\"background-repeat:no-repeat;background-position:right 8px center;& >:not(:last-child){margin-right:\", \";}.TextInput-icon,.TextInput-action{align-self:center;color:\", \";flex-shrink:0;}\", \" \", \" \", \";\"], get('space.2'), get('colors.fg.muted'), props => css([\"padding-left:\", \";padding-right:\", \";> input,> select{padding-left:\", \";padding-right:\", \";}\"], props.hasLeadingVisual ? textInputHorizPadding : 0, props.hasTrailingVisual && !props.hasTrailingAction ? textInputHorizPadding : 0, !props.hasLeadingVisual ? textInputHorizPadding : 0, !props.hasTrailingVisual && !props.hasTrailingAction ? textInputHorizPadding : 0), props => props.validationStatus === 'warning' && css([\"border-color:\", \";\", \"\"], get('colors.attention.emphasis'), renderFocusStyles(Boolean(props.hasTrailingAction), Boolean(props.isInputFocused))), sx);\nexport default TextInputWrapper;","import { get } from '@styled-system/core';\nexport var themeGet = function themeGet(path, fallback) {\n  if (fallback === void 0) {\n    fallback = null;\n  }\n\n  return function (props) {\n    return get(props.theme, path, fallback);\n  };\n};\nexport default themeGet;\n","import { themeGet } from '@styled-system/theme-get'; // eslint-disable-next-line import/no-namespace\n\nimport * as styledSystem from 'styled-system';\nimport theme from './theme';\nconst {\n  get: getKey,\n  compose,\n  system\n} = styledSystem;\nexport const get = key => themeGet(key, getKey(theme, key)); // Common props\n\nexport const COMMON = compose(styledSystem.space, styledSystem.color, styledSystem.display);\n// Typography props\nconst whiteSpace = system({\n  whiteSpace: {\n    property: 'whiteSpace' // cssProperty: 'whiteSpace',\n\n  }\n});\nexport const TYPOGRAPHY = compose(styledSystem.typography, whiteSpace);\n// Border props\nexport const BORDER = compose(styledSystem.border, styledSystem.shadow);\n// Layout props\nexport const LAYOUT = styledSystem.layout;","import React from 'react';\n/**\n * There are some situations where we only want to create a new ref if one is not provided to a component\n * or hook as a prop. However, due to the `rules-of-hooks`, we cannot conditionally make a call to `React.useRef`\n * only in the situations where the ref is not provided as a prop.\n * This hook aims to encapsulate that logic, so the consumer doesn't need to be concerned with violating `rules-of-hooks`.\n * @param providedRef The ref to use - if undefined, will use the ref from a call to React.useRef\n * @type TRef The type of the RefObject which should be created.\n */\n\nexport function useProvidedRefOrCreate(providedRef) {\n  const createdRef = React.useRef(null);\n  return providedRef !== null && providedRef !== void 0 ? providedRef : createdRef;\n}","import { useCallback, useState } from 'react';\n/**\n * There are some situations where we want to give users the option to control state externally with their own state handlers\n * or default to using internal state handlers. Because of the 'rules-of-hooks', we cannot conditionally make a call to `React.useState`\n * only in the situations where the state is not provided as a prop.\n * This hook aims to encapsulate that logic, so the consumer doesn't need to be concerned with violating `rules-of-hooks`.\n * @param externalState The state to use - if undefined, will use the state from a call to React.useState\n * @param setExternalState The setState to use - if undefined, will use the setState from a call to React.useState\n * @param defaultState The defaultState to use, if using internal state.\n */\n\nexport function useProvidedStateOrCreate(externalState, setExternalState, defaultState) {\n  const [internalState, setInternalState] = useState(defaultState);\n  const state = externalState !== null && externalState !== void 0 ? externalState : internalState;\n  const setState = useCallback(s => {\n    setInternalState(s);\n    if (setExternalState) setExternalState(s);\n  }, [setExternalState]);\n  return [state, setState];\n}","import css from '@styled-system/css';\nimport merge from 'deepmerge';\n\nconst sx = props => css(props.sx);\n\nexport default sx;\nexport { merge };","var module = {\n  exports: {}\n};\nvar exports = module.exports;\n// this file was prevaled\n// This file needs to be a JavaScript file using CommonJS to be compatible with preval\n// Cache bust: 2022-07-25 12:00:00 GMT (This file is cached by our deployment tooling, update this timestamp to rebuild this file)\nmodule.exports = {\n  \"animation\": {\n    \"easeOutCubic\": \"cubic-bezier(0.33, 1, 0.68, 1)\"\n  },\n  \"borderWidths\": [0, \"1px\"],\n  \"breakpoints\": [\"544px\", \"768px\", \"1012px\", \"1280px\"],\n  \"fonts\": {\n    \"normal\": \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\"\",\n    \"mono\": \"SFMono-Regular, Consolas, \\\"Liberation Mono\\\", Menlo, Courier, monospace\"\n  },\n  \"fontSizes\": [\"12px\", \"14px\", \"16px\", \"20px\", \"24px\", \"32px\", \"40px\", \"48px\"],\n  \"fontWeights\": {\n    \"light\": 300,\n    \"normal\": 400,\n    \"semibold\": 500,\n    \"bold\": 600\n  },\n  \"lineHeights\": {\n    \"condensedUltra\": 1,\n    \"condensed\": 1.25,\n    \"default\": 1.5\n  },\n  \"radii\": [\"0\", \"3px\", \"6px\", \"100px\"],\n  \"sizes\": {\n    \"small\": \"544px\",\n    \"medium\": \"768px\",\n    \"large\": \"1012px\",\n    \"xlarge\": \"1280px\"\n  },\n  \"space\": [\"0\", \"4px\", \"8px\", \"16px\", \"24px\", \"32px\", \"40px\", \"48px\", \"64px\", \"80px\", \"96px\", \"112px\", \"128px\"],\n  \"colorSchemes\": {\n    \"light\": {\n      \"colors\": {\n        \"canvasDefaultTransparent\": \"rgba(255,255,255,0)\",\n        \"pageHeaderBg\": \"#f6f8fa\",\n        \"marketingIcon\": {\n          \"primary\": \"#218bff\",\n          \"secondary\": \"#54aeff\"\n        },\n        \"diffBlob\": {\n          \"addition\": {\n            \"numText\": \"#24292f\",\n            \"fg\": \"#24292f\",\n            \"numBg\": \"#ccffd8\",\n            \"lineBg\": \"#e6ffec\",\n            \"wordBg\": \"#abf2bc\"\n          },\n          \"deletion\": {\n            \"numText\": \"#24292f\",\n            \"fg\": \"#24292f\",\n            \"numBg\": \"#ffd7d5\",\n            \"lineBg\": \"#ffebe9\",\n            \"wordBg\": \"rgba(255,129,130,0.4)\"\n          },\n          \"hunk\": {\n            \"numBg\": \"rgba(84,174,255,0.4)\"\n          },\n          \"expander\": {\n            \"icon\": \"#57606a\"\n          }\n        },\n        \"diffstat\": {\n          \"deletionBorder\": \"rgba(27,31,36,0.15)\",\n          \"additionBorder\": \"rgba(27,31,36,0.15)\",\n          \"additionBg\": \"#2da44e\"\n        },\n        \"searchKeyword\": {\n          \"hl\": \"#fff8c5\"\n        },\n        \"prettylights\": {\n          \"syntax\": {\n            \"comment\": \"#6e7781\",\n            \"constant\": \"#0550ae\",\n            \"entity\": \"#8250df\",\n            \"storageModifierImport\": \"#24292f\",\n            \"entityTag\": \"#116329\",\n            \"keyword\": \"#cf222e\",\n            \"string\": \"#0a3069\",\n            \"variable\": \"#953800\",\n            \"brackethighlighterUnmatched\": \"#82071e\",\n            \"invalidIllegalText\": \"#f6f8fa\",\n            \"invalidIllegalBg\": \"#82071e\",\n            \"carriageReturnText\": \"#f6f8fa\",\n            \"carriageReturnBg\": \"#cf222e\",\n            \"stringRegexp\": \"#116329\",\n            \"markupList\": \"#3b2300\",\n            \"markupHeading\": \"#0550ae\",\n            \"markupItalic\": \"#24292f\",\n            \"markupBold\": \"#24292f\",\n            \"markupDeletedText\": \"#82071e\",\n            \"markupDeletedBg\": \"#ffebe9\",\n            \"markupInsertedText\": \"#116329\",\n            \"markupInsertedBg\": \"#dafbe1\",\n            \"markupChangedText\": \"#953800\",\n            \"markupChangedBg\": \"#ffd8b5\",\n            \"markupIgnoredText\": \"#eaeef2\",\n            \"markupIgnoredBg\": \"#0550ae\",\n            \"metaDiffRange\": \"#8250df\",\n            \"brackethighlighterAngle\": \"#57606a\",\n            \"sublimelinterGutterMark\": \"#8c959f\",\n            \"constantOtherReferenceLink\": \"#0a3069\"\n          }\n        },\n        \"codemirror\": {\n          \"text\": \"#24292f\",\n          \"bg\": \"#ffffff\",\n          \"guttersBg\": \"#ffffff\",\n          \"guttermarkerText\": \"#ffffff\",\n          \"guttermarkerSubtleText\": \"#6e7781\",\n          \"linenumberText\": \"#57606a\",\n          \"cursor\": \"#24292f\",\n          \"selectionBg\": \"rgba(84,174,255,0.4)\",\n          \"activelineBg\": \"rgba(234,238,242,0.5)\",\n          \"matchingbracketText\": \"#24292f\",\n          \"linesBg\": \"#ffffff\",\n          \"syntax\": {\n            \"comment\": \"#24292f\",\n            \"constant\": \"#0550ae\",\n            \"entity\": \"#8250df\",\n            \"keyword\": \"#cf222e\",\n            \"storage\": \"#cf222e\",\n            \"string\": \"#0a3069\",\n            \"support\": \"#0550ae\",\n            \"variable\": \"#953800\"\n          }\n        },\n        \"checks\": {\n          \"bg\": \"#24292f\",\n          \"textPrimary\": \"#f6f8fa\",\n          \"textSecondary\": \"#8c959f\",\n          \"textLink\": \"#54aeff\",\n          \"btnIcon\": \"#afb8c1\",\n          \"btnHoverIcon\": \"#f6f8fa\",\n          \"btnHoverBg\": \"rgba(255,255,255,0.125)\",\n          \"inputText\": \"#eaeef2\",\n          \"inputPlaceholderText\": \"#8c959f\",\n          \"inputFocusText\": \"#8c959f\",\n          \"inputBg\": \"#32383f\",\n          \"donutError\": \"#fa4549\",\n          \"donutPending\": \"#bf8700\",\n          \"donutSuccess\": \"#2da44e\",\n          \"donutNeutral\": \"#afb8c1\",\n          \"dropdownText\": \"#afb8c1\",\n          \"dropdownBg\": \"#32383f\",\n          \"dropdownBorder\": \"#424a53\",\n          \"dropdownShadow\": \"rgba(27,31,36,0.3)\",\n          \"dropdownHoverText\": \"#f6f8fa\",\n          \"dropdownHoverBg\": \"#424a53\",\n          \"dropdownBtnHoverText\": \"#f6f8fa\",\n          \"dropdownBtnHoverBg\": \"#32383f\",\n          \"scrollbarThumbBg\": \"#57606a\",\n          \"headerLabelText\": \"#d0d7de\",\n          \"headerLabelOpenText\": \"#f6f8fa\",\n          \"headerBorder\": \"#32383f\",\n          \"headerIcon\": \"#8c959f\",\n          \"lineText\": \"#d0d7de\",\n          \"lineNumText\": \"rgba(140,149,159,0.75)\",\n          \"lineTimestampText\": \"#8c959f\",\n          \"lineHoverBg\": \"#32383f\",\n          \"lineSelectedBg\": \"rgba(33,139,255,0.15)\",\n          \"lineSelectedNumText\": \"#54aeff\",\n          \"lineDtFmText\": \"#24292f\",\n          \"lineDtFmBg\": \"#9a6700\",\n          \"gateBg\": \"rgba(125,78,0,0.15)\",\n          \"gateText\": \"#d0d7de\",\n          \"gateWaitingText\": \"#d4a72c\",\n          \"stepHeaderOpenBg\": \"#32383f\",\n          \"stepErrorText\": \"#ff8182\",\n          \"stepWarningText\": \"#d4a72c\",\n          \"loglineText\": \"#8c959f\",\n          \"loglineNumText\": \"rgba(140,149,159,0.75)\",\n          \"loglineDebugText\": \"#c297ff\",\n          \"loglineErrorText\": \"#d0d7de\",\n          \"loglineErrorNumText\": \"#ff8182\",\n          \"loglineErrorBg\": \"rgba(164,14,38,0.15)\",\n          \"loglineWarningText\": \"#d0d7de\",\n          \"loglineWarningNumText\": \"#d4a72c\",\n          \"loglineWarningBg\": \"rgba(125,78,0,0.15)\",\n          \"loglineCommandText\": \"#54aeff\",\n          \"loglineSectionText\": \"#4ac26b\",\n          \"ansi\": {\n            \"black\": \"#24292f\",\n            \"blackBright\": \"#32383f\",\n            \"white\": \"#d0d7de\",\n            \"whiteBright\": \"#d0d7de\",\n            \"gray\": \"#8c959f\",\n            \"red\": \"#ff8182\",\n            \"redBright\": \"#ffaba8\",\n            \"green\": \"#4ac26b\",\n            \"greenBright\": \"#6fdd8b\",\n            \"yellow\": \"#d4a72c\",\n            \"yellowBright\": \"#eac54f\",\n            \"blue\": \"#54aeff\",\n            \"blueBright\": \"#80ccff\",\n            \"magenta\": \"#c297ff\",\n            \"magentaBright\": \"#d8b9ff\",\n            \"cyan\": \"#76e3ea\",\n            \"cyanBright\": \"#b3f0ff\"\n          }\n        },\n        \"project\": {\n          \"headerBg\": \"#24292f\",\n          \"sidebarBg\": \"#ffffff\",\n          \"gradientIn\": \"#ffffff\",\n          \"gradientOut\": \"rgba(255,255,255,0)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"bg\": \"#1b1f23\"\n          }\n        },\n        \"avatar\": {\n          \"bg\": \"#ffffff\",\n          \"border\": \"rgba(27,31,36,0.15)\",\n          \"stackFade\": \"#afb8c1\",\n          \"stackFadeMore\": \"#d0d7de\"\n        },\n        \"topicTag\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"counter\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"selectMenu\": {\n          \"backdropBorder\": \"rgba(0,0,0,0)\",\n          \"tapHighlight\": \"rgba(175,184,193,0.5)\",\n          \"tapFocusBg\": \"#b6e3ff\"\n        },\n        \"header\": {\n          \"text\": \"rgba(255,255,255,0.7)\",\n          \"bg\": \"#24292f\",\n          \"divider\": \"#57606a\",\n          \"logo\": \"#ffffff\"\n        },\n        \"headerSearch\": {\n          \"bg\": \"#24292f\",\n          \"border\": \"#57606a\"\n        },\n        \"sidenav\": {\n          \"selectedBg\": \"#ffffff\"\n        },\n        \"menu\": {\n          \"bgActive\": \"rgba(0,0,0,0)\"\n        },\n        \"input\": {\n          \"disabledBg\": \"rgba(175,184,193,0.2)\"\n        },\n        \"timeline\": {\n          \"badgeBg\": \"#eaeef2\"\n        },\n        \"ansi\": {\n          \"black\": \"#24292f\",\n          \"blackBright\": \"#57606a\",\n          \"white\": \"#6e7781\",\n          \"whiteBright\": \"#8c959f\",\n          \"gray\": \"#6e7781\",\n          \"red\": \"#cf222e\",\n          \"redBright\": \"#a40e26\",\n          \"green\": \"#116329\",\n          \"greenBright\": \"#1a7f37\",\n          \"yellow\": \"#4d2d00\",\n          \"yellowBright\": \"#633c01\",\n          \"blue\": \"#0969da\",\n          \"blueBright\": \"#218bff\",\n          \"magenta\": \"#8250df\",\n          \"magentaBright\": \"#a475f9\",\n          \"cyan\": \"#1b7c83\",\n          \"cyanBright\": \"#3192aa\"\n        },\n        \"btn\": {\n          \"text\": \"#24292f\",\n          \"bg\": \"#f6f8fa\",\n          \"border\": \"rgba(27,31,36,0.15)\",\n          \"hoverBg\": \"#f3f4f6\",\n          \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n          \"activeBg\": \"hsla(220,14%,93%,1)\",\n          \"activeBorder\": \"rgba(27,31,36,0.15)\",\n          \"selectedBg\": \"hsla(220,14%,94%,1)\",\n          \"focusBg\": \"#f6f8fa\",\n          \"focusBorder\": \"rgba(27,31,36,0.15)\",\n          \"counterBg\": \"rgba(27,31,36,0.08)\",\n          \"primary\": {\n            \"text\": \"#ffffff\",\n            \"bg\": \"#2da44e\",\n            \"border\": \"rgba(27,31,36,0.15)\",\n            \"hoverBg\": \"#2c974b\",\n            \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n            \"selectedBg\": \"hsla(137,55%,36%,1)\",\n            \"disabledText\": \"rgba(255,255,255,0.8)\",\n            \"disabledBg\": \"#94d3a2\",\n            \"disabledBorder\": \"rgba(27,31,36,0.15)\",\n            \"focusBg\": \"#2da44e\",\n            \"focusBorder\": \"rgba(27,31,36,0.15)\",\n            \"icon\": \"rgba(255,255,255,0.8)\",\n            \"counterBg\": \"rgba(255,255,255,0.2)\"\n          },\n          \"outline\": {\n            \"text\": \"#0969da\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#0969da\",\n            \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"hsla(212,92%,42%,1)\",\n            \"selectedBorder\": \"rgba(27,31,36,0.15)\",\n            \"disabledText\": \"rgba(9,105,218,0.5)\",\n            \"disabledBg\": \"#f6f8fa\",\n            \"disabledCounterBg\": \"rgba(9,105,218,0.05)\",\n            \"focusBorder\": \"rgba(27,31,36,0.15)\",\n            \"counterBg\": \"rgba(9,105,218,0.1)\"\n          },\n          \"danger\": {\n            \"text\": \"#cf222e\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#a40e26\",\n            \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"hsla(356,72%,44%,1)\",\n            \"selectedBorder\": \"rgba(27,31,36,0.15)\",\n            \"disabledText\": \"rgba(207,34,46,0.5)\",\n            \"disabledBg\": \"#f6f8fa\",\n            \"disabledCounterBg\": \"rgba(207,34,46,0.05)\",\n            \"focusBorder\": \"rgba(27,31,36,0.15)\",\n            \"counterBg\": \"rgba(207,34,46,0.1)\",\n            \"icon\": \"#cf222e\",\n            \"hoverIcon\": \"#ffffff\"\n          }\n        },\n        \"underlinenav\": {\n          \"icon\": \"#6e7781\",\n          \"borderHover\": \"rgba(175,184,193,0.2)\"\n        },\n        \"actionListItem\": {\n          \"inlineDivider\": \"rgba(208,215,222,0.48)\",\n          \"default\": {\n            \"hoverBg\": \"rgba(208,215,222,0.32)\",\n            \"hoverBorder\": \"rgba(0,0,0,0)\",\n            \"activeBg\": \"rgba(208,215,222,0.48)\",\n            \"activeBorder\": \"rgba(0,0,0,0)\",\n            \"selectedBg\": \"rgba(208,215,222,0.24)\"\n          },\n          \"danger\": {\n            \"hoverBg\": \"rgba(255,235,233,0.64)\",\n            \"activeBg\": \"#ffebe9\",\n            \"hoverText\": \"#cf222e\"\n          }\n        },\n        \"switchTrack\": {\n          \"bg\": \"#eaeef2\",\n          \"border\": \"#afb8c1\",\n          \"checked\": {\n            \"bg\": \"#ddf4ff\",\n            \"hoverBg\": \"#b6e3ff\",\n            \"activeBg\": \"#80ccff\",\n            \"border\": \"#54aeff\"\n          }\n        },\n        \"switchKnob\": {\n          \"checked\": {\n            \"bg\": \"#0969da\",\n            \"disabledBg\": \"#6e7781\"\n          }\n        },\n        \"segmentedControl\": {\n          \"bg\": \"#eaeef2\",\n          \"button\": {\n            \"hover\": {\n              \"bg\": \"rgba(175,184,193,0.2)\"\n            },\n            \"active\": {\n              \"bg\": \"rgba(175,184,193,0.4)\"\n            },\n            \"selected\": {\n              \"border\": \"#6e7781\"\n            }\n          }\n        },\n        \"fg\": {\n          \"default\": \"#24292f\",\n          \"muted\": \"#57606a\",\n          \"subtle\": \"#6e7781\",\n          \"onEmphasis\": \"#ffffff\"\n        },\n        \"canvas\": {\n          \"default\": \"#ffffff\",\n          \"overlay\": \"#ffffff\",\n          \"inset\": \"#f6f8fa\",\n          \"subtle\": \"#f6f8fa\"\n        },\n        \"border\": {\n          \"default\": \"#d0d7de\",\n          \"muted\": \"hsla(210,18%,87%,1)\",\n          \"subtle\": \"rgba(27,31,36,0.15)\"\n        },\n        \"neutral\": {\n          \"emphasisPlus\": \"#24292f\",\n          \"emphasis\": \"#6e7781\",\n          \"muted\": \"rgba(175,184,193,0.2)\",\n          \"subtle\": \"rgba(234,238,242,0.5)\"\n        },\n        \"accent\": {\n          \"fg\": \"#0969da\",\n          \"emphasis\": \"#0969da\",\n          \"muted\": \"rgba(84,174,255,0.4)\",\n          \"subtle\": \"#ddf4ff\"\n        },\n        \"success\": {\n          \"fg\": \"#1a7f37\",\n          \"emphasis\": \"#2da44e\",\n          \"muted\": \"rgba(74,194,107,0.4)\",\n          \"subtle\": \"#dafbe1\"\n        },\n        \"attention\": {\n          \"fg\": \"#9a6700\",\n          \"emphasis\": \"#bf8700\",\n          \"muted\": \"rgba(212,167,44,0.4)\",\n          \"subtle\": \"#fff8c5\"\n        },\n        \"severe\": {\n          \"fg\": \"#bc4c00\",\n          \"emphasis\": \"#bc4c00\",\n          \"muted\": \"rgba(251,143,68,0.4)\",\n          \"subtle\": \"#fff1e5\"\n        },\n        \"danger\": {\n          \"fg\": \"#cf222e\",\n          \"emphasis\": \"#cf222e\",\n          \"muted\": \"rgba(255,129,130,0.4)\",\n          \"subtle\": \"#ffebe9\"\n        },\n        \"open\": {\n          \"fg\": \"#1a7f37\",\n          \"emphasis\": \"#2da44e\",\n          \"muted\": \"rgba(74,194,107,0.4)\",\n          \"subtle\": \"#dafbe1\"\n        },\n        \"closed\": {\n          \"fg\": \"#cf222e\",\n          \"emphasis\": \"#cf222e\",\n          \"muted\": \"rgba(255,129,130,0.4)\",\n          \"subtle\": \"#ffebe9\"\n        },\n        \"done\": {\n          \"fg\": \"#8250df\",\n          \"emphasis\": \"#8250df\",\n          \"muted\": \"rgba(194,151,255,0.4)\",\n          \"subtle\": \"#fbefff\"\n        },\n        \"sponsors\": {\n          \"fg\": \"#bf3989\",\n          \"emphasis\": \"#bf3989\",\n          \"muted\": \"rgba(255,128,200,0.4)\",\n          \"subtle\": \"#ffeff7\"\n        },\n        \"primer\": {\n          \"fg\": {\n            \"disabled\": \"#8c959f\"\n          },\n          \"canvas\": {\n            \"backdrop\": \"rgba(27,31,36,0.5)\",\n            \"sticky\": \"rgba(255,255,255,0.95)\"\n          },\n          \"border\": {\n            \"active\": \"#fd8c73\",\n            \"contrast\": \"rgba(27,31,36,0.1)\"\n          }\n        }\n      },\n      \"shadows\": {\n        \"mktg\": {\n          \"btn\": {\n            \"shadow\": {\n              \"outline\": \"rgb(0 0 0 / 15%) 0 0 0 1px inset\",\n              \"focus\": \"rgb(0 0 0 / 15%) 0 0 0 4px\",\n              \"hover\": \"0 3px 2px rgba(0, 0, 0, 0.07), 0 7px 5px rgba(0, 0, 0, 0.04), 0 12px 10px rgba(0, 0, 0, 0.03), 0 22px 18px rgba(0, 0, 0, 0.03), 0 42px 33px rgba(0, 0, 0, 0.02), 0 100px 80px rgba(0, 0, 0, 0.02)\",\n              \"hoverMuted\": \"rgb(0 0 0 / 70%) 0 0 0 2px inset\"\n            }\n          }\n        },\n        \"avatar\": {\n          \"childShadow\": \"-2px -2px 0 rgba(255,255,255,0.8)\"\n        },\n        \"overlay\": {\n          \"shadow\": \"0 1px 3px rgba(27,31,36,0.12), 0 8px 24px rgba(66,74,83,0.12)\"\n        },\n        \"btn\": {\n          \"shadow\": \"0 1px 0 rgba(27,31,36,0.04)\",\n          \"insetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.25)\",\n          \"focusShadow\": \"0 0 0 3px rgba(9,105,218,0.3)\",\n          \"shadowActive\": \"inset 0 0.15em 0.3em rgba(27,31,36,0.15)\",\n          \"shadowInputFocus\": \"0 0 0 0.2em rgba(9,105,218,0.3)\",\n          \"primary\": {\n            \"shadow\": \"0 1px 0 rgba(27,31,36,0.1)\",\n            \"insetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(0,45,17,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(45,164,78,0.4)\"\n          },\n          \"outline\": {\n            \"hoverShadow\": \"0 1px 0 rgba(27,31,36,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(0,33,85,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(5,80,174,0.4)\"\n          },\n          \"danger\": {\n            \"hoverShadow\": \"0 1px 0 rgba(27,31,36,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(76,0,20,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(164,14,38,0.4)\"\n          }\n        },\n        \"shadow\": {\n          \"small\": \"0 1px 0 rgba(27,31,36,0.04)\",\n          \"medium\": \"0 3px 6px rgba(140,149,159,0.15)\",\n          \"large\": \"0 8px 24px rgba(140,149,159,0.2)\",\n          \"extraLarge\": \"0 12px 28px rgba(140,149,159,0.3)\"\n        },\n        \"primer\": {\n          \"shadow\": {\n            \"highlight\": \"inset 0 1px 0 rgba(255,255,255,0.25)\",\n            \"inset\": \"inset 0 1px 0 rgba(208,215,222,0.2)\",\n            \"focus\": \"0 0 0 3px rgba(9,105,218,0.3)\"\n          }\n        }\n      }\n    },\n    \"light_high_contrast\": {\n      \"colors\": {\n        \"canvasDefaultTransparent\": \"rgba(255,255,255,0)\",\n        \"pageHeaderBg\": \"#ffffff\",\n        \"marketingIcon\": {\n          \"primary\": \"#1168e3\",\n          \"secondary\": \"#368cf9\"\n        },\n        \"diffBlob\": {\n          \"addition\": {\n            \"numText\": \"#0e1116\",\n            \"fg\": \"#ffffff\",\n            \"numBg\": \"#ccffd8\",\n            \"lineBg\": \"#e6ffec\",\n            \"wordBg\": \"#055d20\"\n          },\n          \"deletion\": {\n            \"numText\": \"#0e1116\",\n            \"fg\": \"#ffffff\",\n            \"numBg\": \"#ffd7d5\",\n            \"lineBg\": \"#fff0ee\",\n            \"wordBg\": \"#a0111f\"\n          },\n          \"hunk\": {\n            \"numBg\": \"#9cd7ff\"\n          },\n          \"expander\": {\n            \"icon\": \"#0e1116\"\n          }\n        },\n        \"diffstat\": {\n          \"deletionBorder\": \"rgba(1,4,9,0.8)\",\n          \"additionBorder\": \"rgba(1,4,9,0.8)\",\n          \"additionBg\": \"#117f32\"\n        },\n        \"searchKeyword\": {\n          \"hl\": \"#fcf7be\"\n        },\n        \"prettylights\": {\n          \"syntax\": {\n            \"comment\": \"#66707b\",\n            \"constant\": \"#023b95\",\n            \"entity\": \"#622cbc\",\n            \"storageModifierImport\": \"#0e1116\",\n            \"entityTag\": \"#024c1a\",\n            \"keyword\": \"#a0111f\",\n            \"string\": \"#032563\",\n            \"variable\": \"#702c00\",\n            \"brackethighlighterUnmatched\": \"#6e011a\",\n            \"invalidIllegalText\": \"#ffffff\",\n            \"invalidIllegalBg\": \"#6e011a\",\n            \"carriageReturnText\": \"#ffffff\",\n            \"carriageReturnBg\": \"#a0111f\",\n            \"stringRegexp\": \"#024c1a\",\n            \"markupList\": \"#2e1800\",\n            \"markupHeading\": \"#023b95\",\n            \"markupItalic\": \"#0e1116\",\n            \"markupBold\": \"#0e1116\",\n            \"markupDeletedText\": \"#6e011a\",\n            \"markupDeletedBg\": \"#fff0ee\",\n            \"markupInsertedText\": \"#024c1a\",\n            \"markupInsertedBg\": \"#d2fedb\",\n            \"markupChangedText\": \"#702c00\",\n            \"markupChangedBg\": \"#ffc67b\",\n            \"markupIgnoredText\": \"#e7ecf0\",\n            \"markupIgnoredBg\": \"#023b95\",\n            \"metaDiffRange\": \"#622cbc\",\n            \"brackethighlighterAngle\": \"#4b535d\",\n            \"sublimelinterGutterMark\": \"#88929d\",\n            \"constantOtherReferenceLink\": \"#032563\"\n          }\n        },\n        \"codemirror\": {\n          \"text\": \"#0e1116\",\n          \"bg\": \"#ffffff\",\n          \"guttersBg\": \"#ffffff\",\n          \"guttermarkerText\": \"#ffffff\",\n          \"guttermarkerSubtleText\": \"#66707b\",\n          \"linenumberText\": \"#0e1116\",\n          \"cursor\": \"#0e1116\",\n          \"selectionBg\": \"#368cf9\",\n          \"activelineBg\": \"#e7ecf0\",\n          \"matchingbracketText\": \"#0e1116\",\n          \"linesBg\": \"#ffffff\",\n          \"syntax\": {\n            \"comment\": \"#0e1116\",\n            \"constant\": \"#023b95\",\n            \"entity\": \"#622cbc\",\n            \"keyword\": \"#a0111f\",\n            \"storage\": \"#a0111f\",\n            \"string\": \"#032563\",\n            \"support\": \"#023b95\",\n            \"variable\": \"#702c00\"\n          }\n        },\n        \"checks\": {\n          \"bg\": \"#0e1116\",\n          \"textPrimary\": \"#ffffff\",\n          \"textSecondary\": \"#88929d\",\n          \"textLink\": \"#368cf9\",\n          \"btnIcon\": \"#acb6c0\",\n          \"btnHoverIcon\": \"#ffffff\",\n          \"btnHoverBg\": \"rgba(255,255,255,0.125)\",\n          \"inputText\": \"#e7ecf0\",\n          \"inputPlaceholderText\": \"#88929d\",\n          \"inputFocusText\": \"#88929d\",\n          \"inputBg\": \"#20252c\",\n          \"donutError\": \"#d5232c\",\n          \"donutPending\": \"#956400\",\n          \"donutSuccess\": \"#117f32\",\n          \"donutNeutral\": \"#acb6c0\",\n          \"dropdownText\": \"#acb6c0\",\n          \"dropdownBg\": \"#20252c\",\n          \"dropdownBorder\": \"#343b43\",\n          \"dropdownShadow\": \"rgba(1,4,9,0.3)\",\n          \"dropdownHoverText\": \"#ffffff\",\n          \"dropdownHoverBg\": \"#343b43\",\n          \"dropdownBtnHoverText\": \"#ffffff\",\n          \"dropdownBtnHoverBg\": \"#20252c\",\n          \"scrollbarThumbBg\": \"#4b535d\",\n          \"headerLabelText\": \"#ced5dc\",\n          \"headerLabelOpenText\": \"#ffffff\",\n          \"headerBorder\": \"#20252c\",\n          \"headerIcon\": \"#88929d\",\n          \"lineText\": \"#ced5dc\",\n          \"lineNumText\": \"rgba(136,146,157,0.75)\",\n          \"lineTimestampText\": \"#88929d\",\n          \"lineHoverBg\": \"#20252c\",\n          \"lineSelectedBg\": \"rgba(17,104,227,0.15)\",\n          \"lineSelectedNumText\": \"#368cf9\",\n          \"lineDtFmText\": \"#0e1116\",\n          \"lineDtFmBg\": \"#744500\",\n          \"gateBg\": \"rgba(96,55,0,0.15)\",\n          \"gateText\": \"#ced5dc\",\n          \"gateWaitingText\": \"#b58407\",\n          \"stepHeaderOpenBg\": \"#20252c\",\n          \"stepErrorText\": \"#ee5a5d\",\n          \"stepWarningText\": \"#b58407\",\n          \"loglineText\": \"#88929d\",\n          \"loglineNumText\": \"rgba(136,146,157,0.75)\",\n          \"loglineDebugText\": \"#a371f7\",\n          \"loglineErrorText\": \"#ced5dc\",\n          \"loglineErrorNumText\": \"#ee5a5d\",\n          \"loglineErrorBg\": \"rgba(134,6,29,0.15)\",\n          \"loglineWarningText\": \"#ced5dc\",\n          \"loglineWarningNumText\": \"#b58407\",\n          \"loglineWarningBg\": \"rgba(96,55,0,0.15)\",\n          \"loglineCommandText\": \"#368cf9\",\n          \"loglineSectionText\": \"#26a148\",\n          \"ansi\": {\n            \"black\": \"#0e1116\",\n            \"blackBright\": \"#20252c\",\n            \"white\": \"#ced5dc\",\n            \"whiteBright\": \"#ced5dc\",\n            \"gray\": \"#88929d\",\n            \"red\": \"#ee5a5d\",\n            \"redBright\": \"#ff8e8a\",\n            \"green\": \"#26a148\",\n            \"greenBright\": \"#43c663\",\n            \"yellow\": \"#b58407\",\n            \"yellowBright\": \"#d5a824\",\n            \"blue\": \"#368cf9\",\n            \"blueBright\": \"#67b3fd\",\n            \"magenta\": \"#a371f7\",\n            \"magentaBright\": \"#c49bff\",\n            \"cyan\": \"#76e3ea\",\n            \"cyanBright\": \"#b3f0ff\"\n          }\n        },\n        \"project\": {\n          \"headerBg\": \"#0e1116\",\n          \"sidebarBg\": \"#ffffff\",\n          \"gradientIn\": \"#ffffff\",\n          \"gradientOut\": \"rgba(255,255,255,0)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"bg\": \"#1b1f23\"\n          }\n        },\n        \"avatar\": {\n          \"bg\": \"#ffffff\",\n          \"border\": \"rgba(1,4,9,0.8)\",\n          \"stackFade\": \"#acb6c0\",\n          \"stackFadeMore\": \"#ced5dc\"\n        },\n        \"topicTag\": {\n          \"border\": \"#0349b4\"\n        },\n        \"counter\": {\n          \"border\": \"#20252c\"\n        },\n        \"selectMenu\": {\n          \"backdropBorder\": \"rgba(0,0,0,0)\",\n          \"tapHighlight\": \"rgba(172,182,192,0.5)\",\n          \"tapFocusBg\": \"#9cd7ff\"\n        },\n        \"header\": {\n          \"text\": \"rgba(255,255,255,0.7)\",\n          \"bg\": \"#0e1116\",\n          \"divider\": \"#acb6c0\",\n          \"logo\": \"#ffffff\"\n        },\n        \"headerSearch\": {\n          \"bg\": \"#0e1116\",\n          \"border\": \"#4b535d\"\n        },\n        \"sidenav\": {\n          \"selectedBg\": \"#ffffff\"\n        },\n        \"menu\": {\n          \"bgActive\": \"rgba(0,0,0,0)\"\n        },\n        \"input\": {\n          \"disabledBg\": \"rgba(172,182,192,0.2)\"\n        },\n        \"timeline\": {\n          \"badgeBg\": \"#e7ecf0\"\n        },\n        \"ansi\": {\n          \"black\": \"#0e1116\",\n          \"blackBright\": \"#4b535d\",\n          \"white\": \"#66707b\",\n          \"whiteBright\": \"#88929d\",\n          \"gray\": \"#66707b\",\n          \"red\": \"#a0111f\",\n          \"redBright\": \"#86061d\",\n          \"green\": \"#024c1a\",\n          \"greenBright\": \"#055d20\",\n          \"yellow\": \"#3f2200\",\n          \"yellowBright\": \"#4e2c00\",\n          \"blue\": \"#0349b4\",\n          \"blueBright\": \"#1168e3\",\n          \"magenta\": \"#622cbc\",\n          \"magentaBright\": \"#844ae7\",\n          \"cyan\": \"#1b7c83\",\n          \"cyanBright\": \"#3192aa\"\n        },\n        \"btn\": {\n          \"text\": \"#0e1116\",\n          \"bg\": \"#e7ecf0\",\n          \"border\": \"rgba(1,4,9,0.8)\",\n          \"hoverBg\": \"#ced5dc\",\n          \"hoverBorder\": \"rgba(1,4,9,0.8)\",\n          \"activeBg\": \"#acb6c0\",\n          \"activeBorder\": \"rgba(1,4,9,0.8)\",\n          \"selectedBg\": \"#acb6c0\",\n          \"focusBg\": \"#ced5dc\",\n          \"focusBorder\": \"rgba(1,4,9,0.8)\",\n          \"counterBg\": \"rgba(1,4,9,0.08)\",\n          \"primary\": {\n            \"text\": \"#ffffff\",\n            \"bg\": \"#055d20\",\n            \"border\": \"#013d14\",\n            \"hoverBg\": \"#024c1a\",\n            \"hoverBorder\": \"#013d14\",\n            \"selectedBg\": \"hsla(139,95%,13%,1)\",\n            \"disabledText\": \"rgba(255,255,255,0.8)\",\n            \"disabledBg\": \"#94d3a2\",\n            \"disabledBorder\": \"rgba(1,4,9,0.8)\",\n            \"focusBg\": \"#013d14\",\n            \"focusBorder\": \"#013d14\",\n            \"icon\": \"rgba(255,255,255,0.8)\",\n            \"counterBg\": \"rgba(255,255,255,0.2)\"\n          },\n          \"outline\": {\n            \"text\": \"#023b95\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#0349b4\",\n            \"hoverBorder\": \"#022f7a\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#022f7a\",\n            \"selectedBorder\": \"#022f7a\",\n            \"disabledText\": \"rgba(3,73,180,0.5)\",\n            \"disabledBg\": \"#e7ecf0\",\n            \"disabledCounterBg\": \"rgba(3,73,180,0.05)\",\n            \"focusBorder\": \"#022f7a\",\n            \"counterBg\": \"rgba(3,73,180,0.1)\"\n          },\n          \"danger\": {\n            \"text\": \"#86061d\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#a0111f\",\n            \"hoverBorder\": \"#6e011a\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#6e011a\",\n            \"selectedBorder\": \"#6e011a\",\n            \"disabledText\": \"rgba(160,17,31,0.5)\",\n            \"disabledBg\": \"#e7ecf0\",\n            \"disabledCounterBg\": \"rgba(160,17,31,0.05)\",\n            \"focusBorder\": \"#6e011a\",\n            \"counterBg\": \"rgba(160,17,31,0.1)\",\n            \"icon\": \"#86061d\",\n            \"hoverIcon\": \"#ffffff\"\n          }\n        },\n        \"underlinenav\": {\n          \"icon\": \"#66707b\",\n          \"borderHover\": \"rgba(172,182,192,0.2)\"\n        },\n        \"actionListItem\": {\n          \"inlineDivider\": \"#88929d\",\n          \"default\": {\n            \"hoverBg\": \"#e7ecf0\",\n            \"hoverBorder\": \"#88929d\",\n            \"activeBg\": \"#ced5dc\",\n            \"activeBorder\": \"#20252c\",\n            \"selectedBg\": \"#ced5dc\"\n          },\n          \"danger\": {\n            \"hoverBg\": \"#a0111f\",\n            \"activeBg\": \"#6e011a\",\n            \"hoverText\": \"#ffffff\"\n          }\n        },\n        \"switchTrack\": {\n          \"bg\": \"#ffffff\",\n          \"border\": \"#20252c\",\n          \"checked\": {\n            \"bg\": \"#dff7ff\",\n            \"hoverBg\": \"#9cd7ff\",\n            \"activeBg\": \"#67b3fd\",\n            \"border\": \"#0349b4\"\n          }\n        },\n        \"switchKnob\": {\n          \"checked\": {\n            \"bg\": \"#0349b4\",\n            \"disabledBg\": \"#66707b\"\n          }\n        },\n        \"segmentedControl\": {\n          \"bg\": \"#e7ecf0\",\n          \"button\": {\n            \"hover\": {\n              \"bg\": \"rgba(172,182,192,0.2)\"\n            },\n            \"active\": {\n              \"bg\": \"rgba(172,182,192,0.4)\"\n            },\n            \"selected\": {\n              \"border\": \"#66707b\"\n            }\n          }\n        },\n        \"fg\": {\n          \"default\": \"#0e1116\",\n          \"muted\": \"#0e1116\",\n          \"subtle\": \"#66707b\",\n          \"onEmphasis\": \"#ffffff\"\n        },\n        \"canvas\": {\n          \"default\": \"#ffffff\",\n          \"overlay\": \"#ffffff\",\n          \"inset\": \"#ffffff\",\n          \"subtle\": \"#e7ecf0\"\n        },\n        \"border\": {\n          \"default\": \"#20252c\",\n          \"muted\": \"#88929d\",\n          \"subtle\": \"rgba(1,4,9,0.8)\"\n        },\n        \"neutral\": {\n          \"emphasisPlus\": \"#0e1116\",\n          \"emphasis\": \"#66707b\",\n          \"muted\": \"rgba(172,182,192,0.2)\",\n          \"subtle\": \"#e7ecf0\"\n        },\n        \"accent\": {\n          \"fg\": \"#0349b4\",\n          \"emphasis\": \"#0349b4\",\n          \"muted\": \"#368cf9\",\n          \"subtle\": \"#dff7ff\"\n        },\n        \"success\": {\n          \"fg\": \"#055d20\",\n          \"emphasis\": \"#055d20\",\n          \"muted\": \"#26a148\",\n          \"subtle\": \"#d2fedb\"\n        },\n        \"attention\": {\n          \"fg\": \"#744500\",\n          \"emphasis\": \"#744500\",\n          \"muted\": \"#b58407\",\n          \"subtle\": \"#fcf7be\"\n        },\n        \"severe\": {\n          \"fg\": \"#873800\",\n          \"emphasis\": \"#873800\",\n          \"muted\": \"#dc6d1a\",\n          \"subtle\": \"#fff2d5\"\n        },\n        \"danger\": {\n          \"fg\": \"#a0111f\",\n          \"emphasis\": \"#a0111f\",\n          \"muted\": \"#ee5a5d\",\n          \"subtle\": \"#fff0ee\"\n        },\n        \"open\": {\n          \"fg\": \"#055d20\",\n          \"emphasis\": \"#117f32\",\n          \"muted\": \"rgba(38,161,72,0.4)\",\n          \"subtle\": \"#d2fedb\"\n        },\n        \"closed\": {\n          \"fg\": \"#a0111f\",\n          \"emphasis\": \"#a0111f\",\n          \"muted\": \"rgba(238,90,93,0.4)\",\n          \"subtle\": \"#fff0ee\"\n        },\n        \"done\": {\n          \"fg\": \"#622cbc\",\n          \"emphasis\": \"#622cbc\",\n          \"muted\": \"#a371f7\",\n          \"subtle\": \"#faf0fe\"\n        },\n        \"sponsors\": {\n          \"fg\": \"#971368\",\n          \"emphasis\": \"#971368\",\n          \"muted\": \"#ed4baf\",\n          \"subtle\": \"#feeff7\"\n        },\n        \"primer\": {\n          \"fg\": {\n            \"disabled\": \"#88929d\"\n          },\n          \"canvas\": {\n            \"backdrop\": \"rgba(1,4,9,0.5)\",\n            \"sticky\": \"rgba(255,255,255,0.95)\"\n          },\n          \"border\": {\n            \"active\": \"#ef5b48\",\n            \"contrast\": \"rgba(1,4,9,0.1)\"\n          }\n        }\n      },\n      \"shadows\": {\n        \"mktg\": {\n          \"btn\": {\n            \"shadow\": {\n              \"outline\": \"rgb(0 0 0 / 15%) 0 0 0 1px inset\",\n              \"focus\": \"rgb(0 0 0 / 15%) 0 0 0 4px\",\n              \"hover\": \"0 3px 2px rgba(0, 0, 0, 0.07), 0 7px 5px rgba(0, 0, 0, 0.04), 0 12px 10px rgba(0, 0, 0, 0.03), 0 22px 18px rgba(0, 0, 0, 0.03), 0 42px 33px rgba(0, 0, 0, 0.02), 0 100px 80px rgba(0, 0, 0, 0.02)\",\n              \"hoverMuted\": \"rgb(0 0 0 / 70%) 0 0 0 2px inset\"\n            }\n          }\n        },\n        \"avatar\": {\n          \"childShadow\": \"-2px -2px 0 rgba(255,255,255,0.8)\"\n        },\n        \"overlay\": {\n          \"shadow\": \"0 1px 3px rgba(1,4,9,0.12), 0 8px 24px rgba(52,59,67,0.12)\"\n        },\n        \"btn\": {\n          \"shadow\": \"0 1px 0 rgba(1,4,9,0.04)\",\n          \"insetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.25)\",\n          \"focusShadow\": \"0 0 0 3px rgba(3,73,180,0.3)\",\n          \"shadowActive\": \"inset 0 0.15em 0.3em rgba(1,4,9,0.15)\",\n          \"shadowInputFocus\": \"0 0 0 0.2em rgba(3,73,180,0.3)\",\n          \"primary\": {\n            \"shadow\": \"0 1px 0 rgba(1,4,9,0.1)\",\n            \"insetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(0,35,11,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(1,61,20,0.4)\"\n          },\n          \"outline\": {\n            \"hoverShadow\": \"0 1px 0 rgba(1,4,9,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(2,26,74,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(2,59,149,0.4)\"\n          },\n          \"danger\": {\n            \"hoverShadow\": \"0 1px 0 rgba(1,4,9,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(67,0,17,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(134,6,29,0.4)\"\n          }\n        },\n        \"shadow\": {\n          \"small\": \"0 1px 0 rgba(1,4,9,0.04)\",\n          \"medium\": \"0 3px 6px rgba(136,146,157,0.15)\",\n          \"large\": \"0 8px 24px rgba(136,146,157,0.2)\",\n          \"extraLarge\": \"0 12px 28px rgba(136,146,157,0.3)\"\n        },\n        \"primer\": {\n          \"shadow\": {\n            \"highlight\": \"inset 0 1px 0 rgba(255,255,255,0.25)\",\n            \"inset\": \"inset 0 1px 0 rgba(206,213,220,0.2)\",\n            \"focus\": \"0 0 0 3px rgba(3,73,180,0.3)\"\n          }\n        }\n      }\n    },\n    \"light_colorblind\": {\n      \"colors\": {\n        \"canvasDefaultTransparent\": \"rgba(255,255,255,0)\",\n        \"pageHeaderBg\": \"#f6f8fa\",\n        \"marketingIcon\": {\n          \"primary\": \"#218bff\",\n          \"secondary\": \"#54aeff\"\n        },\n        \"diffBlob\": {\n          \"addition\": {\n            \"numText\": \"#24292f\",\n            \"fg\": \"#24292f\",\n            \"numBg\": \"rgba(84,174,255,0.4)\",\n            \"lineBg\": \"rgba(221,244,255,0.5)\",\n            \"wordBg\": \"rgba(84,174,255,0.4)\"\n          },\n          \"deletion\": {\n            \"numText\": \"#24292f\",\n            \"fg\": \"#24292f\",\n            \"numBg\": \"rgba(247,153,57,0.4)\",\n            \"lineBg\": \"rgba(255,245,232,0.5)\",\n            \"wordBg\": \"rgba(255,188,109,0.5)\"\n          },\n          \"hunk\": {\n            \"numBg\": \"rgba(84,174,255,0.4)\"\n          },\n          \"expander\": {\n            \"icon\": \"#57606a\"\n          }\n        },\n        \"diffstat\": {\n          \"deletionBorder\": \"rgba(27,31,36,0.15)\",\n          \"additionBorder\": \"rgba(27,31,36,0.15)\",\n          \"additionBg\": \"#218bff\"\n        },\n        \"searchKeyword\": {\n          \"hl\": \"#fff8c5\"\n        },\n        \"prettylights\": {\n          \"syntax\": {\n            \"comment\": \"#6e7781\",\n            \"constant\": \"#0550ae\",\n            \"entity\": \"#8250df\",\n            \"storageModifierImport\": \"#24292f\",\n            \"entityTag\": \"#0550ae\",\n            \"keyword\": \"#b35900\",\n            \"string\": \"#0a3069\",\n            \"variable\": \"#8a4600\",\n            \"brackethighlighterUnmatched\": \"#6f3800\",\n            \"invalidIllegalText\": \"#f6f8fa\",\n            \"invalidIllegalBg\": \"#6f3800\",\n            \"carriageReturnText\": \"#f6f8fa\",\n            \"carriageReturnBg\": \"#b35900\",\n            \"stringRegexp\": \"#0550ae\",\n            \"markupList\": \"#3b2300\",\n            \"markupHeading\": \"#0550ae\",\n            \"markupItalic\": \"#24292f\",\n            \"markupBold\": \"#24292f\",\n            \"markupDeletedText\": \"#6f3800\",\n            \"markupDeletedBg\": \"#fff5e8\",\n            \"markupInsertedText\": \"#0550ae\",\n            \"markupInsertedBg\": \"#ddf4ff\",\n            \"markupChangedText\": \"#8a4600\",\n            \"markupChangedBg\": \"#ffddb0\",\n            \"markupIgnoredText\": \"#eaeef2\",\n            \"markupIgnoredBg\": \"#0550ae\",\n            \"metaDiffRange\": \"#8250df\",\n            \"brackethighlighterAngle\": \"#57606a\",\n            \"sublimelinterGutterMark\": \"#8c959f\",\n            \"constantOtherReferenceLink\": \"#0a3069\"\n          }\n        },\n        \"codemirror\": {\n          \"text\": \"#24292f\",\n          \"bg\": \"#ffffff\",\n          \"guttersBg\": \"#ffffff\",\n          \"guttermarkerText\": \"#ffffff\",\n          \"guttermarkerSubtleText\": \"#6e7781\",\n          \"linenumberText\": \"#57606a\",\n          \"cursor\": \"#24292f\",\n          \"selectionBg\": \"rgba(84,174,255,0.4)\",\n          \"activelineBg\": \"rgba(234,238,242,0.5)\",\n          \"matchingbracketText\": \"#24292f\",\n          \"linesBg\": \"#ffffff\",\n          \"syntax\": {\n            \"comment\": \"#24292f\",\n            \"constant\": \"#0550ae\",\n            \"entity\": \"#8250df\",\n            \"keyword\": \"#b35900\",\n            \"storage\": \"#b35900\",\n            \"string\": \"#0a3069\",\n            \"support\": \"#0550ae\",\n            \"variable\": \"#8a4600\"\n          }\n        },\n        \"checks\": {\n          \"bg\": \"#24292f\",\n          \"textPrimary\": \"#f6f8fa\",\n          \"textSecondary\": \"#8c959f\",\n          \"textLink\": \"#54aeff\",\n          \"btnIcon\": \"#afb8c1\",\n          \"btnHoverIcon\": \"#f6f8fa\",\n          \"btnHoverBg\": \"rgba(255,255,255,0.125)\",\n          \"inputText\": \"#eaeef2\",\n          \"inputPlaceholderText\": \"#8c959f\",\n          \"inputFocusText\": \"#8c959f\",\n          \"inputBg\": \"#32383f\",\n          \"donutError\": \"#dd7815\",\n          \"donutPending\": \"#bf8700\",\n          \"donutSuccess\": \"#218bff\",\n          \"donutNeutral\": \"#afb8c1\",\n          \"dropdownText\": \"#afb8c1\",\n          \"dropdownBg\": \"#32383f\",\n          \"dropdownBorder\": \"#424a53\",\n          \"dropdownShadow\": \"rgba(27,31,36,0.3)\",\n          \"dropdownHoverText\": \"#f6f8fa\",\n          \"dropdownHoverBg\": \"#424a53\",\n          \"dropdownBtnHoverText\": \"#f6f8fa\",\n          \"dropdownBtnHoverBg\": \"#32383f\",\n          \"scrollbarThumbBg\": \"#57606a\",\n          \"headerLabelText\": \"#d0d7de\",\n          \"headerLabelOpenText\": \"#f6f8fa\",\n          \"headerBorder\": \"#32383f\",\n          \"headerIcon\": \"#8c959f\",\n          \"lineText\": \"#d0d7de\",\n          \"lineNumText\": \"rgba(140,149,159,0.75)\",\n          \"lineTimestampText\": \"#8c959f\",\n          \"lineHoverBg\": \"#32383f\",\n          \"lineSelectedBg\": \"rgba(33,139,255,0.15)\",\n          \"lineSelectedNumText\": \"#54aeff\",\n          \"lineDtFmText\": \"#24292f\",\n          \"lineDtFmBg\": \"#9a6700\",\n          \"gateBg\": \"rgba(125,78,0,0.15)\",\n          \"gateText\": \"#d0d7de\",\n          \"gateWaitingText\": \"#d4a72c\",\n          \"stepHeaderOpenBg\": \"#32383f\",\n          \"stepErrorText\": \"#f79939\",\n          \"stepWarningText\": \"#d4a72c\",\n          \"loglineText\": \"#8c959f\",\n          \"loglineNumText\": \"rgba(140,149,159,0.75)\",\n          \"loglineDebugText\": \"#c297ff\",\n          \"loglineErrorText\": \"#d0d7de\",\n          \"loglineErrorNumText\": \"#f79939\",\n          \"loglineErrorBg\": \"rgba(138,70,0,0.15)\",\n          \"loglineWarningText\": \"#d0d7de\",\n          \"loglineWarningNumText\": \"#d4a72c\",\n          \"loglineWarningBg\": \"rgba(125,78,0,0.15)\",\n          \"loglineCommandText\": \"#54aeff\",\n          \"loglineSectionText\": \"#54aeff\",\n          \"ansi\": {\n            \"black\": \"#24292f\",\n            \"blackBright\": \"#32383f\",\n            \"white\": \"#d0d7de\",\n            \"whiteBright\": \"#d0d7de\",\n            \"gray\": \"#8c959f\",\n            \"red\": \"#f79939\",\n            \"redBright\": \"#ffbc6d\",\n            \"green\": \"#54aeff\",\n            \"greenBright\": \"#80ccff\",\n            \"yellow\": \"#d4a72c\",\n            \"yellowBright\": \"#eac54f\",\n            \"blue\": \"#54aeff\",\n            \"blueBright\": \"#80ccff\",\n            \"magenta\": \"#c297ff\",\n            \"magentaBright\": \"#d8b9ff\",\n            \"cyan\": \"#76e3ea\",\n            \"cyanBright\": \"#b3f0ff\"\n          }\n        },\n        \"project\": {\n          \"headerBg\": \"#24292f\",\n          \"sidebarBg\": \"#ffffff\",\n          \"gradientIn\": \"#ffffff\",\n          \"gradientOut\": \"rgba(255,255,255,0)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"bg\": \"#1b1f23\"\n          }\n        },\n        \"avatar\": {\n          \"bg\": \"#ffffff\",\n          \"border\": \"rgba(27,31,36,0.15)\",\n          \"stackFade\": \"#afb8c1\",\n          \"stackFadeMore\": \"#d0d7de\"\n        },\n        \"topicTag\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"counter\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"selectMenu\": {\n          \"backdropBorder\": \"rgba(0,0,0,0)\",\n          \"tapHighlight\": \"rgba(175,184,193,0.5)\",\n          \"tapFocusBg\": \"#b6e3ff\"\n        },\n        \"header\": {\n          \"text\": \"rgba(255,255,255,0.7)\",\n          \"bg\": \"#24292f\",\n          \"divider\": \"#57606a\",\n          \"logo\": \"#ffffff\"\n        },\n        \"headerSearch\": {\n          \"bg\": \"#24292f\",\n          \"border\": \"#57606a\"\n        },\n        \"sidenav\": {\n          \"selectedBg\": \"#ffffff\"\n        },\n        \"menu\": {\n          \"bgActive\": \"rgba(0,0,0,0)\"\n        },\n        \"input\": {\n          \"disabledBg\": \"rgba(175,184,193,0.2)\"\n        },\n        \"timeline\": {\n          \"badgeBg\": \"#eaeef2\"\n        },\n        \"ansi\": {\n          \"black\": \"#24292f\",\n          \"blackBright\": \"#57606a\",\n          \"white\": \"#6e7781\",\n          \"whiteBright\": \"#8c959f\",\n          \"gray\": \"#6e7781\",\n          \"red\": \"#b35900\",\n          \"redBright\": \"#8a4600\",\n          \"green\": \"#0550ae\",\n          \"greenBright\": \"#0969da\",\n          \"yellow\": \"#4d2d00\",\n          \"yellowBright\": \"#633c01\",\n          \"blue\": \"#0969da\",\n          \"blueBright\": \"#218bff\",\n          \"magenta\": \"#8250df\",\n          \"magentaBright\": \"#a475f9\",\n          \"cyan\": \"#1b7c83\",\n          \"cyanBright\": \"#3192aa\"\n        },\n        \"btn\": {\n          \"text\": \"#24292f\",\n          \"bg\": \"#f6f8fa\",\n          \"border\": \"rgba(27,31,36,0.15)\",\n          \"hoverBg\": \"#f3f4f6\",\n          \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n          \"activeBg\": \"hsla(220,14%,93%,1)\",\n          \"activeBorder\": \"rgba(27,31,36,0.15)\",\n          \"selectedBg\": \"hsla(220,14%,94%,1)\",\n          \"focusBg\": \"#f6f8fa\",\n          \"focusBorder\": \"rgba(27,31,36,0.15)\",\n          \"counterBg\": \"rgba(27,31,36,0.08)\",\n          \"primary\": {\n            \"text\": \"#ffffff\",\n            \"bg\": \"#218bff\",\n            \"border\": \"rgba(27,31,36,0.15)\",\n            \"hoverBg\": \"#0969da\",\n            \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n            \"selectedBg\": \"hsla(212,92%,43%,1)\",\n            \"disabledText\": \"rgba(255,255,255,0.8)\",\n            \"disabledBg\": \"#80ccff\",\n            \"disabledBorder\": \"rgba(27,31,36,0.15)\",\n            \"focusBg\": \"#218bff\",\n            \"focusBorder\": \"rgba(27,31,36,0.15)\",\n            \"icon\": \"rgba(255,255,255,0.8)\",\n            \"counterBg\": \"rgba(255,255,255,0.2)\"\n          },\n          \"outline\": {\n            \"text\": \"#0969da\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#0969da\",\n            \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"hsla(212,92%,42%,1)\",\n            \"selectedBorder\": \"rgba(27,31,36,0.15)\",\n            \"disabledText\": \"rgba(9,105,218,0.5)\",\n            \"disabledBg\": \"#f6f8fa\",\n            \"disabledCounterBg\": \"rgba(9,105,218,0.05)\",\n            \"focusBorder\": \"rgba(27,31,36,0.15)\",\n            \"counterBg\": \"rgba(9,105,218,0.1)\"\n          },\n          \"danger\": {\n            \"text\": \"#b35900\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#8a4600\",\n            \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"hsla(30,100%,32%,1)\",\n            \"selectedBorder\": \"rgba(27,31,36,0.15)\",\n            \"disabledText\": \"rgba(179,89,0,0.5)\",\n            \"disabledBg\": \"#f6f8fa\",\n            \"disabledCounterBg\": \"rgba(179,89,0,0.05)\",\n            \"focusBorder\": \"rgba(27,31,36,0.15)\",\n            \"counterBg\": \"rgba(179,89,0,0.1)\",\n            \"icon\": \"#b35900\",\n            \"hoverIcon\": \"#ffffff\"\n          }\n        },\n        \"underlinenav\": {\n          \"icon\": \"#6e7781\",\n          \"borderHover\": \"rgba(175,184,193,0.2)\"\n        },\n        \"actionListItem\": {\n          \"inlineDivider\": \"rgba(208,215,222,0.48)\",\n          \"default\": {\n            \"hoverBg\": \"rgba(208,215,222,0.32)\",\n            \"hoverBorder\": \"rgba(0,0,0,0)\",\n            \"activeBg\": \"rgba(208,215,222,0.48)\",\n            \"activeBorder\": \"rgba(0,0,0,0)\",\n            \"selectedBg\": \"rgba(208,215,222,0.24)\"\n          },\n          \"danger\": {\n            \"hoverBg\": \"rgba(255,245,232,0.64)\",\n            \"activeBg\": \"#fff5e8\",\n            \"hoverText\": \"#b35900\"\n          }\n        },\n        \"switchTrack\": {\n          \"bg\": \"#eaeef2\",\n          \"border\": \"#afb8c1\",\n          \"checked\": {\n            \"bg\": \"#ddf4ff\",\n            \"hoverBg\": \"#b6e3ff\",\n            \"activeBg\": \"#80ccff\",\n            \"border\": \"#54aeff\"\n          }\n        },\n        \"switchKnob\": {\n          \"checked\": {\n            \"bg\": \"#0969da\",\n            \"disabledBg\": \"#6e7781\"\n          }\n        },\n        \"segmentedControl\": {\n          \"bg\": \"#eaeef2\",\n          \"button\": {\n            \"hover\": {\n              \"bg\": \"rgba(175,184,193,0.2)\"\n            },\n            \"active\": {\n              \"bg\": \"rgba(175,184,193,0.4)\"\n            },\n            \"selected\": {\n              \"border\": \"#6e7781\"\n            }\n          }\n        },\n        \"fg\": {\n          \"default\": \"#24292f\",\n          \"muted\": \"#57606a\",\n          \"subtle\": \"#6e7781\",\n          \"onEmphasis\": \"#ffffff\"\n        },\n        \"canvas\": {\n          \"default\": \"#ffffff\",\n          \"overlay\": \"#ffffff\",\n          \"inset\": \"#f6f8fa\",\n          \"subtle\": \"#f6f8fa\"\n        },\n        \"border\": {\n          \"default\": \"#d0d7de\",\n          \"muted\": \"hsla(210,18%,87%,1)\",\n          \"subtle\": \"rgba(27,31,36,0.15)\"\n        },\n        \"neutral\": {\n          \"emphasisPlus\": \"#24292f\",\n          \"emphasis\": \"#6e7781\",\n          \"muted\": \"rgba(175,184,193,0.2)\",\n          \"subtle\": \"rgba(234,238,242,0.5)\"\n        },\n        \"accent\": {\n          \"fg\": \"#0969da\",\n          \"emphasis\": \"#0969da\",\n          \"muted\": \"rgba(84,174,255,0.4)\",\n          \"subtle\": \"#ddf4ff\"\n        },\n        \"success\": {\n          \"fg\": \"#0969da\",\n          \"emphasis\": \"#218bff\",\n          \"muted\": \"rgba(84,174,255,0.4)\",\n          \"subtle\": \"#ddf4ff\"\n        },\n        \"attention\": {\n          \"fg\": \"#9a6700\",\n          \"emphasis\": \"#bf8700\",\n          \"muted\": \"rgba(212,167,44,0.4)\",\n          \"subtle\": \"#fff8c5\"\n        },\n        \"severe\": {\n          \"fg\": \"#b35900\",\n          \"emphasis\": \"#b35900\",\n          \"muted\": \"rgba(247,153,57,0.4)\",\n          \"subtle\": \"#fff5e8\"\n        },\n        \"danger\": {\n          \"fg\": \"#b35900\",\n          \"emphasis\": \"#b35900\",\n          \"muted\": \"rgba(247,153,57,0.4)\",\n          \"subtle\": \"#fff5e8\"\n        },\n        \"open\": {\n          \"fg\": \"#b35900\",\n          \"emphasis\": \"#dd7815\",\n          \"muted\": \"rgba(247,153,57,0.4)\",\n          \"subtle\": \"#fff5e8\"\n        },\n        \"closed\": {\n          \"fg\": \"#6e7781\",\n          \"emphasis\": \"#6e7781\",\n          \"muted\": \"rgba(175,184,193,0.4)\",\n          \"subtle\": \"#f6f8fa\"\n        },\n        \"done\": {\n          \"fg\": \"#8250df\",\n          \"emphasis\": \"#8250df\",\n          \"muted\": \"rgba(194,151,255,0.4)\",\n          \"subtle\": \"#fbefff\"\n        },\n        \"sponsors\": {\n          \"fg\": \"#bf3989\",\n          \"emphasis\": \"#bf3989\",\n          \"muted\": \"rgba(255,128,200,0.4)\",\n          \"subtle\": \"#ffeff7\"\n        },\n        \"primer\": {\n          \"fg\": {\n            \"disabled\": \"#8c959f\"\n          },\n          \"canvas\": {\n            \"backdrop\": \"rgba(27,31,36,0.5)\",\n            \"sticky\": \"rgba(255,255,255,0.95)\"\n          },\n          \"border\": {\n            \"active\": \"#fd8c73\",\n            \"contrast\": \"rgba(27,31,36,0.1)\"\n          }\n        }\n      },\n      \"shadows\": {\n        \"mktg\": {\n          \"btn\": {\n            \"shadow\": {\n              \"outline\": \"rgb(0 0 0 / 15%) 0 0 0 1px inset\",\n              \"focus\": \"rgb(0 0 0 / 15%) 0 0 0 4px\",\n              \"hover\": \"0 3px 2px rgba(0, 0, 0, 0.07), 0 7px 5px rgba(0, 0, 0, 0.04), 0 12px 10px rgba(0, 0, 0, 0.03), 0 22px 18px rgba(0, 0, 0, 0.03), 0 42px 33px rgba(0, 0, 0, 0.02), 0 100px 80px rgba(0, 0, 0, 0.02)\",\n              \"hoverMuted\": \"rgb(0 0 0 / 70%) 0 0 0 2px inset\"\n            }\n          }\n        },\n        \"avatar\": {\n          \"childShadow\": \"-2px -2px 0 rgba(255,255,255,0.8)\"\n        },\n        \"overlay\": {\n          \"shadow\": \"0 1px 3px rgba(27,31,36,0.12), 0 8px 24px rgba(66,74,83,0.12)\"\n        },\n        \"btn\": {\n          \"shadow\": \"0 1px 0 rgba(27,31,36,0.04)\",\n          \"insetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.25)\",\n          \"focusShadow\": \"0 0 0 3px rgba(9,105,218,0.3)\",\n          \"shadowActive\": \"inset 0 0.15em 0.3em rgba(27,31,36,0.15)\",\n          \"shadowInputFocus\": \"0 0 0 0.2em rgba(9,105,218,0.3)\",\n          \"primary\": {\n            \"shadow\": \"0 1px 0 rgba(27,31,36,0.1)\",\n            \"insetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(0,33,85,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(33,139,255,0.4)\"\n          },\n          \"outline\": {\n            \"hoverShadow\": \"0 1px 0 rgba(27,31,36,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(0,33,85,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(5,80,174,0.4)\"\n          },\n          \"danger\": {\n            \"hoverShadow\": \"0 1px 0 rgba(27,31,36,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(65,32,0,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(138,70,0,0.4)\"\n          }\n        },\n        \"shadow\": {\n          \"small\": \"0 1px 0 rgba(27,31,36,0.04)\",\n          \"medium\": \"0 3px 6px rgba(140,149,159,0.15)\",\n          \"large\": \"0 8px 24px rgba(140,149,159,0.2)\",\n          \"extraLarge\": \"0 12px 28px rgba(140,149,159,0.3)\"\n        },\n        \"primer\": {\n          \"shadow\": {\n            \"highlight\": \"inset 0 1px 0 rgba(255,255,255,0.25)\",\n            \"inset\": \"inset 0 1px 0 rgba(208,215,222,0.2)\",\n            \"focus\": \"0 0 0 3px rgba(9,105,218,0.3)\"\n          }\n        }\n      }\n    },\n    \"light_tritanopia\": {\n      \"colors\": {\n        \"canvasDefaultTransparent\": \"rgba(255,255,255,0)\",\n        \"pageHeaderBg\": \"#f6f8fa\",\n        \"marketingIcon\": {\n          \"primary\": \"#218bff\",\n          \"secondary\": \"#54aeff\"\n        },\n        \"diffBlob\": {\n          \"addition\": {\n            \"numText\": \"#24292f\",\n            \"fg\": \"#24292f\",\n            \"numBg\": \"rgba(84,174,255,0.4)\",\n            \"lineBg\": \"rgba(221,244,255,0.5)\",\n            \"wordBg\": \"rgba(84,174,255,0.4)\"\n          },\n          \"deletion\": {\n            \"numText\": \"#24292f\",\n            \"fg\": \"#24292f\",\n            \"numBg\": \"rgba(255,129,130,0.4)\",\n            \"lineBg\": \"rgba(255,235,233,0.5)\",\n            \"wordBg\": \"rgba(255,171,168,0.5)\"\n          },\n          \"hunk\": {\n            \"numBg\": \"rgba(84,174,255,0.4)\"\n          },\n          \"expander\": {\n            \"icon\": \"#57606a\"\n          }\n        },\n        \"diffstat\": {\n          \"deletionBorder\": \"rgba(27,31,36,0.15)\",\n          \"additionBorder\": \"rgba(27,31,36,0.15)\",\n          \"additionBg\": \"#218bff\"\n        },\n        \"searchKeyword\": {\n          \"hl\": \"#fff8c5\"\n        },\n        \"prettylights\": {\n          \"syntax\": {\n            \"comment\": \"#6e7781\",\n            \"constant\": \"#0550ae\",\n            \"entity\": \"#8250df\",\n            \"storageModifierImport\": \"#24292f\",\n            \"entityTag\": \"#0550ae\",\n            \"keyword\": \"#cf222e\",\n            \"string\": \"#0a3069\",\n            \"variable\": \"#a40e26\",\n            \"brackethighlighterUnmatched\": \"#82071e\",\n            \"invalidIllegalText\": \"#f6f8fa\",\n            \"invalidIllegalBg\": \"#82071e\",\n            \"carriageReturnText\": \"#f6f8fa\",\n            \"carriageReturnBg\": \"#cf222e\",\n            \"stringRegexp\": \"#0550ae\",\n            \"markupList\": \"#3b2300\",\n            \"markupHeading\": \"#0550ae\",\n            \"markupItalic\": \"#24292f\",\n            \"markupBold\": \"#24292f\",\n            \"markupDeletedText\": \"#82071e\",\n            \"markupDeletedBg\": \"#ffebe9\",\n            \"markupInsertedText\": \"#0550ae\",\n            \"markupInsertedBg\": \"#ddf4ff\",\n            \"markupChangedText\": \"#a40e26\",\n            \"markupChangedBg\": \"#ffcecb\",\n            \"markupIgnoredText\": \"#eaeef2\",\n            \"markupIgnoredBg\": \"#0550ae\",\n            \"metaDiffRange\": \"#8250df\",\n            \"brackethighlighterAngle\": \"#57606a\",\n            \"sublimelinterGutterMark\": \"#8c959f\",\n            \"constantOtherReferenceLink\": \"#0a3069\"\n          }\n        },\n        \"codemirror\": {\n          \"text\": \"#24292f\",\n          \"bg\": \"#ffffff\",\n          \"guttersBg\": \"#ffffff\",\n          \"guttermarkerText\": \"#ffffff\",\n          \"guttermarkerSubtleText\": \"#6e7781\",\n          \"linenumberText\": \"#57606a\",\n          \"cursor\": \"#24292f\",\n          \"selectionBg\": \"rgba(84,174,255,0.4)\",\n          \"activelineBg\": \"rgba(234,238,242,0.5)\",\n          \"matchingbracketText\": \"#24292f\",\n          \"linesBg\": \"#ffffff\",\n          \"syntax\": {\n            \"comment\": \"#24292f\",\n            \"constant\": \"#0550ae\",\n            \"entity\": \"#8250df\",\n            \"keyword\": \"#cf222e\",\n            \"storage\": \"#cf222e\",\n            \"string\": \"#0a3069\",\n            \"support\": \"#0550ae\",\n            \"variable\": \"#a40e26\"\n          }\n        },\n        \"checks\": {\n          \"bg\": \"#24292f\",\n          \"textPrimary\": \"#f6f8fa\",\n          \"textSecondary\": \"#8c959f\",\n          \"textLink\": \"#54aeff\",\n          \"btnIcon\": \"#afb8c1\",\n          \"btnHoverIcon\": \"#f6f8fa\",\n          \"btnHoverBg\": \"rgba(255,255,255,0.125)\",\n          \"inputText\": \"#eaeef2\",\n          \"inputPlaceholderText\": \"#8c959f\",\n          \"inputFocusText\": \"#8c959f\",\n          \"inputBg\": \"#32383f\",\n          \"donutError\": \"#fa4549\",\n          \"donutPending\": \"#bf8700\",\n          \"donutSuccess\": \"#218bff\",\n          \"donutNeutral\": \"#afb8c1\",\n          \"dropdownText\": \"#afb8c1\",\n          \"dropdownBg\": \"#32383f\",\n          \"dropdownBorder\": \"#424a53\",\n          \"dropdownShadow\": \"rgba(27,31,36,0.3)\",\n          \"dropdownHoverText\": \"#f6f8fa\",\n          \"dropdownHoverBg\": \"#424a53\",\n          \"dropdownBtnHoverText\": \"#f6f8fa\",\n          \"dropdownBtnHoverBg\": \"#32383f\",\n          \"scrollbarThumbBg\": \"#57606a\",\n          \"headerLabelText\": \"#d0d7de\",\n          \"headerLabelOpenText\": \"#f6f8fa\",\n          \"headerBorder\": \"#32383f\",\n          \"headerIcon\": \"#8c959f\",\n          \"lineText\": \"#d0d7de\",\n          \"lineNumText\": \"rgba(140,149,159,0.75)\",\n          \"lineTimestampText\": \"#8c959f\",\n          \"lineHoverBg\": \"#32383f\",\n          \"lineSelectedBg\": \"rgba(33,139,255,0.15)\",\n          \"lineSelectedNumText\": \"#54aeff\",\n          \"lineDtFmText\": \"#24292f\",\n          \"lineDtFmBg\": \"#9a6700\",\n          \"gateBg\": \"rgba(125,78,0,0.15)\",\n          \"gateText\": \"#d0d7de\",\n          \"gateWaitingText\": \"#d4a72c\",\n          \"stepHeaderOpenBg\": \"#32383f\",\n          \"stepErrorText\": \"#ff8182\",\n          \"stepWarningText\": \"#d4a72c\",\n          \"loglineText\": \"#8c959f\",\n          \"loglineNumText\": \"rgba(140,149,159,0.75)\",\n          \"loglineDebugText\": \"#c297ff\",\n          \"loglineErrorText\": \"#d0d7de\",\n          \"loglineErrorNumText\": \"#ff8182\",\n          \"loglineErrorBg\": \"rgba(164,14,38,0.15)\",\n          \"loglineWarningText\": \"#d0d7de\",\n          \"loglineWarningNumText\": \"#d4a72c\",\n          \"loglineWarningBg\": \"rgba(125,78,0,0.15)\",\n          \"loglineCommandText\": \"#54aeff\",\n          \"loglineSectionText\": \"#54aeff\",\n          \"ansi\": {\n            \"black\": \"#24292f\",\n            \"blackBright\": \"#32383f\",\n            \"white\": \"#d0d7de\",\n            \"whiteBright\": \"#d0d7de\",\n            \"gray\": \"#8c959f\",\n            \"red\": \"#ff8182\",\n            \"redBright\": \"#ffaba8\",\n            \"green\": \"#54aeff\",\n            \"greenBright\": \"#80ccff\",\n            \"yellow\": \"#d4a72c\",\n            \"yellowBright\": \"#eac54f\",\n            \"blue\": \"#54aeff\",\n            \"blueBright\": \"#80ccff\",\n            \"magenta\": \"#c297ff\",\n            \"magentaBright\": \"#d8b9ff\",\n            \"cyan\": \"#76e3ea\",\n            \"cyanBright\": \"#b3f0ff\"\n          }\n        },\n        \"project\": {\n          \"headerBg\": \"#24292f\",\n          \"sidebarBg\": \"#ffffff\",\n          \"gradientIn\": \"#ffffff\",\n          \"gradientOut\": \"rgba(255,255,255,0)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"bg\": \"#1b1f23\"\n          }\n        },\n        \"avatar\": {\n          \"bg\": \"#ffffff\",\n          \"border\": \"rgba(27,31,36,0.15)\",\n          \"stackFade\": \"#afb8c1\",\n          \"stackFadeMore\": \"#d0d7de\"\n        },\n        \"topicTag\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"counter\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"selectMenu\": {\n          \"backdropBorder\": \"rgba(0,0,0,0)\",\n          \"tapHighlight\": \"rgba(175,184,193,0.5)\",\n          \"tapFocusBg\": \"#b6e3ff\"\n        },\n        \"header\": {\n          \"text\": \"rgba(255,255,255,0.7)\",\n          \"bg\": \"#24292f\",\n          \"divider\": \"#57606a\",\n          \"logo\": \"#ffffff\"\n        },\n        \"headerSearch\": {\n          \"bg\": \"#24292f\",\n          \"border\": \"#57606a\"\n        },\n        \"sidenav\": {\n          \"selectedBg\": \"#ffffff\"\n        },\n        \"menu\": {\n          \"bgActive\": \"rgba(0,0,0,0)\"\n        },\n        \"input\": {\n          \"disabledBg\": \"rgba(175,184,193,0.2)\"\n        },\n        \"timeline\": {\n          \"badgeBg\": \"#eaeef2\"\n        },\n        \"ansi\": {\n          \"black\": \"#24292f\",\n          \"blackBright\": \"#57606a\",\n          \"white\": \"#6e7781\",\n          \"whiteBright\": \"#8c959f\",\n          \"gray\": \"#6e7781\",\n          \"red\": \"#cf222e\",\n          \"redBright\": \"#a40e26\",\n          \"green\": \"#0550ae\",\n          \"greenBright\": \"#0969da\",\n          \"yellow\": \"#4d2d00\",\n          \"yellowBright\": \"#633c01\",\n          \"blue\": \"#0969da\",\n          \"blueBright\": \"#218bff\",\n          \"magenta\": \"#8250df\",\n          \"magentaBright\": \"#a475f9\",\n          \"cyan\": \"#1b7c83\",\n          \"cyanBright\": \"#3192aa\"\n        },\n        \"btn\": {\n          \"text\": \"#24292f\",\n          \"bg\": \"#f6f8fa\",\n          \"border\": \"rgba(27,31,36,0.15)\",\n          \"hoverBg\": \"#f3f4f6\",\n          \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n          \"activeBg\": \"hsla(220,14%,93%,1)\",\n          \"activeBorder\": \"rgba(27,31,36,0.15)\",\n          \"selectedBg\": \"hsla(220,14%,94%,1)\",\n          \"focusBg\": \"#f6f8fa\",\n          \"focusBorder\": \"rgba(27,31,36,0.15)\",\n          \"counterBg\": \"rgba(27,31,36,0.08)\",\n          \"primary\": {\n            \"text\": \"#ffffff\",\n            \"bg\": \"#218bff\",\n            \"border\": \"rgba(27,31,36,0.15)\",\n            \"hoverBg\": \"#0969da\",\n            \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n            \"selectedBg\": \"hsla(212,92%,43%,1)\",\n            \"disabledText\": \"rgba(255,255,255,0.8)\",\n            \"disabledBg\": \"#80ccff\",\n            \"disabledBorder\": \"rgba(27,31,36,0.15)\",\n            \"focusBg\": \"#218bff\",\n            \"focusBorder\": \"rgba(27,31,36,0.15)\",\n            \"icon\": \"rgba(255,255,255,0.8)\",\n            \"counterBg\": \"rgba(255,255,255,0.2)\"\n          },\n          \"outline\": {\n            \"text\": \"#0969da\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#0969da\",\n            \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"hsla(212,92%,42%,1)\",\n            \"selectedBorder\": \"rgba(27,31,36,0.15)\",\n            \"disabledText\": \"rgba(9,105,218,0.5)\",\n            \"disabledBg\": \"#f6f8fa\",\n            \"disabledCounterBg\": \"rgba(9,105,218,0.05)\",\n            \"focusBorder\": \"rgba(27,31,36,0.15)\",\n            \"counterBg\": \"rgba(9,105,218,0.1)\"\n          },\n          \"danger\": {\n            \"text\": \"#cf222e\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#a40e26\",\n            \"hoverBorder\": \"rgba(27,31,36,0.15)\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"hsla(356,72%,44%,1)\",\n            \"selectedBorder\": \"rgba(27,31,36,0.15)\",\n            \"disabledText\": \"rgba(207,34,46,0.5)\",\n            \"disabledBg\": \"#f6f8fa\",\n            \"disabledCounterBg\": \"rgba(207,34,46,0.05)\",\n            \"focusBorder\": \"rgba(27,31,36,0.15)\",\n            \"counterBg\": \"rgba(207,34,46,0.1)\",\n            \"icon\": \"#cf222e\",\n            \"hoverIcon\": \"#ffffff\"\n          }\n        },\n        \"underlinenav\": {\n          \"icon\": \"#6e7781\",\n          \"borderHover\": \"rgba(175,184,193,0.2)\"\n        },\n        \"actionListItem\": {\n          \"inlineDivider\": \"rgba(208,215,222,0.48)\",\n          \"default\": {\n            \"hoverBg\": \"rgba(208,215,222,0.32)\",\n            \"hoverBorder\": \"rgba(0,0,0,0)\",\n            \"activeBg\": \"rgba(208,215,222,0.48)\",\n            \"activeBorder\": \"rgba(0,0,0,0)\",\n            \"selectedBg\": \"rgba(208,215,222,0.24)\"\n          },\n          \"danger\": {\n            \"hoverBg\": \"rgba(255,235,233,0.64)\",\n            \"activeBg\": \"#ffebe9\",\n            \"hoverText\": \"#cf222e\"\n          }\n        },\n        \"switchTrack\": {\n          \"bg\": \"#eaeef2\",\n          \"border\": \"#afb8c1\",\n          \"checked\": {\n            \"bg\": \"#ddf4ff\",\n            \"hoverBg\": \"#b6e3ff\",\n            \"activeBg\": \"#80ccff\",\n            \"border\": \"#54aeff\"\n          }\n        },\n        \"switchKnob\": {\n          \"checked\": {\n            \"bg\": \"#0969da\",\n            \"disabledBg\": \"#6e7781\"\n          }\n        },\n        \"segmentedControl\": {\n          \"bg\": \"#eaeef2\",\n          \"button\": {\n            \"hover\": {\n              \"bg\": \"rgba(175,184,193,0.2)\"\n            },\n            \"active\": {\n              \"bg\": \"rgba(175,184,193,0.4)\"\n            },\n            \"selected\": {\n              \"border\": \"#6e7781\"\n            }\n          }\n        },\n        \"fg\": {\n          \"default\": \"#24292f\",\n          \"muted\": \"#57606a\",\n          \"subtle\": \"#6e7781\",\n          \"onEmphasis\": \"#ffffff\"\n        },\n        \"canvas\": {\n          \"default\": \"#ffffff\",\n          \"overlay\": \"#ffffff\",\n          \"inset\": \"#f6f8fa\",\n          \"subtle\": \"#f6f8fa\"\n        },\n        \"border\": {\n          \"default\": \"#d0d7de\",\n          \"muted\": \"hsla(210,18%,87%,1)\",\n          \"subtle\": \"rgba(27,31,36,0.15)\"\n        },\n        \"neutral\": {\n          \"emphasisPlus\": \"#24292f\",\n          \"emphasis\": \"#6e7781\",\n          \"muted\": \"rgba(175,184,193,0.2)\",\n          \"subtle\": \"rgba(234,238,242,0.5)\"\n        },\n        \"accent\": {\n          \"fg\": \"#0969da\",\n          \"emphasis\": \"#0969da\",\n          \"muted\": \"rgba(84,174,255,0.4)\",\n          \"subtle\": \"#ddf4ff\"\n        },\n        \"success\": {\n          \"fg\": \"#0969da\",\n          \"emphasis\": \"#218bff\",\n          \"muted\": \"rgba(84,174,255,0.4)\",\n          \"subtle\": \"#ddf4ff\"\n        },\n        \"attention\": {\n          \"fg\": \"#9a6700\",\n          \"emphasis\": \"#bf8700\",\n          \"muted\": \"rgba(212,167,44,0.4)\",\n          \"subtle\": \"#fff8c5\"\n        },\n        \"severe\": {\n          \"fg\": \"#cf222e\",\n          \"emphasis\": \"#cf222e\",\n          \"muted\": \"rgba(255,129,130,0.4)\",\n          \"subtle\": \"#ffebe9\"\n        },\n        \"danger\": {\n          \"fg\": \"#cf222e\",\n          \"emphasis\": \"#cf222e\",\n          \"muted\": \"rgba(255,129,130,0.4)\",\n          \"subtle\": \"#ffebe9\"\n        },\n        \"open\": {\n          \"fg\": \"#cf222e\",\n          \"emphasis\": \"#fa4549\",\n          \"muted\": \"rgba(255,129,130,0.4)\",\n          \"subtle\": \"#ffebe9\"\n        },\n        \"closed\": {\n          \"fg\": \"#6e7781\",\n          \"emphasis\": \"#6e7781\",\n          \"muted\": \"rgba(175,184,193,0.4)\",\n          \"subtle\": \"#f6f8fa\"\n        },\n        \"done\": {\n          \"fg\": \"#8250df\",\n          \"emphasis\": \"#8250df\",\n          \"muted\": \"rgba(194,151,255,0.4)\",\n          \"subtle\": \"#fbefff\"\n        },\n        \"sponsors\": {\n          \"fg\": \"#bf3989\",\n          \"emphasis\": \"#bf3989\",\n          \"muted\": \"rgba(255,128,200,0.4)\",\n          \"subtle\": \"#ffeff7\"\n        },\n        \"primer\": {\n          \"fg\": {\n            \"disabled\": \"#8c959f\"\n          },\n          \"canvas\": {\n            \"backdrop\": \"rgba(27,31,36,0.5)\",\n            \"sticky\": \"rgba(255,255,255,0.95)\"\n          },\n          \"border\": {\n            \"active\": \"#fd8c73\",\n            \"contrast\": \"rgba(27,31,36,0.1)\"\n          }\n        }\n      },\n      \"shadows\": {\n        \"mktg\": {\n          \"btn\": {\n            \"shadow\": {\n              \"outline\": \"rgb(0 0 0 / 15%) 0 0 0 1px inset\",\n              \"focus\": \"rgb(0 0 0 / 15%) 0 0 0 4px\",\n              \"hover\": \"0 3px 2px rgba(0, 0, 0, 0.07), 0 7px 5px rgba(0, 0, 0, 0.04), 0 12px 10px rgba(0, 0, 0, 0.03), 0 22px 18px rgba(0, 0, 0, 0.03), 0 42px 33px rgba(0, 0, 0, 0.02), 0 100px 80px rgba(0, 0, 0, 0.02)\",\n              \"hoverMuted\": \"rgb(0 0 0 / 70%) 0 0 0 2px inset\"\n            }\n          }\n        },\n        \"avatar\": {\n          \"childShadow\": \"-2px -2px 0 rgba(255,255,255,0.8)\"\n        },\n        \"overlay\": {\n          \"shadow\": \"0 1px 3px rgba(27,31,36,0.12), 0 8px 24px rgba(66,74,83,0.12)\"\n        },\n        \"btn\": {\n          \"shadow\": \"0 1px 0 rgba(27,31,36,0.04)\",\n          \"insetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.25)\",\n          \"focusShadow\": \"0 0 0 3px rgba(9,105,218,0.3)\",\n          \"shadowActive\": \"inset 0 0.15em 0.3em rgba(27,31,36,0.15)\",\n          \"shadowInputFocus\": \"0 0 0 0.2em rgba(9,105,218,0.3)\",\n          \"primary\": {\n            \"shadow\": \"0 1px 0 rgba(27,31,36,0.1)\",\n            \"insetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(0,33,85,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(33,139,255,0.4)\"\n          },\n          \"outline\": {\n            \"hoverShadow\": \"0 1px 0 rgba(27,31,36,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(0,33,85,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(5,80,174,0.4)\"\n          },\n          \"danger\": {\n            \"hoverShadow\": \"0 1px 0 rgba(27,31,36,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"inset 0 1px 0 rgba(76,0,20,0.2)\",\n            \"focusShadow\": \"0 0 0 3px rgba(164,14,38,0.4)\"\n          }\n        },\n        \"shadow\": {\n          \"small\": \"0 1px 0 rgba(27,31,36,0.04)\",\n          \"medium\": \"0 3px 6px rgba(140,149,159,0.15)\",\n          \"large\": \"0 8px 24px rgba(140,149,159,0.2)\",\n          \"extraLarge\": \"0 12px 28px rgba(140,149,159,0.3)\"\n        },\n        \"primer\": {\n          \"shadow\": {\n            \"highlight\": \"inset 0 1px 0 rgba(255,255,255,0.25)\",\n            \"inset\": \"inset 0 1px 0 rgba(208,215,222,0.2)\",\n            \"focus\": \"0 0 0 3px rgba(9,105,218,0.3)\"\n          }\n        }\n      }\n    },\n    \"dark\": {\n      \"colors\": {\n        \"canvasDefaultTransparent\": \"rgba(13,17,23,0)\",\n        \"pageHeaderBg\": \"#0d1117\",\n        \"marketingIcon\": {\n          \"primary\": \"#79c0ff\",\n          \"secondary\": \"#1f6feb\"\n        },\n        \"diffBlob\": {\n          \"addition\": {\n            \"numText\": \"#c9d1d9\",\n            \"fg\": \"#c9d1d9\",\n            \"numBg\": \"rgba(63,185,80,0.3)\",\n            \"lineBg\": \"rgba(46,160,67,0.15)\",\n            \"wordBg\": \"rgba(46,160,67,0.4)\"\n          },\n          \"deletion\": {\n            \"numText\": \"#c9d1d9\",\n            \"fg\": \"#c9d1d9\",\n            \"numBg\": \"rgba(248,81,73,0.3)\",\n            \"lineBg\": \"rgba(248,81,73,0.15)\",\n            \"wordBg\": \"rgba(248,81,73,0.4)\"\n          },\n          \"hunk\": {\n            \"numBg\": \"rgba(56,139,253,0.4)\"\n          },\n          \"expander\": {\n            \"icon\": \"#8b949e\"\n          }\n        },\n        \"diffstat\": {\n          \"deletionBorder\": \"rgba(240,246,252,0.1)\",\n          \"additionBorder\": \"rgba(240,246,252,0.1)\",\n          \"additionBg\": \"#3fb950\"\n        },\n        \"searchKeyword\": {\n          \"hl\": \"rgba(210,153,34,0.4)\"\n        },\n        \"prettylights\": {\n          \"syntax\": {\n            \"comment\": \"#8b949e\",\n            \"constant\": \"#79c0ff\",\n            \"entity\": \"#d2a8ff\",\n            \"storageModifierImport\": \"#c9d1d9\",\n            \"entityTag\": \"#7ee787\",\n            \"keyword\": \"#ff7b72\",\n            \"string\": \"#a5d6ff\",\n            \"variable\": \"#ffa657\",\n            \"brackethighlighterUnmatched\": \"#f85149\",\n            \"invalidIllegalText\": \"#f0f6fc\",\n            \"invalidIllegalBg\": \"#8e1519\",\n            \"carriageReturnText\": \"#f0f6fc\",\n            \"carriageReturnBg\": \"#b62324\",\n            \"stringRegexp\": \"#7ee787\",\n            \"markupList\": \"#f2cc60\",\n            \"markupHeading\": \"#1f6feb\",\n            \"markupItalic\": \"#c9d1d9\",\n            \"markupBold\": \"#c9d1d9\",\n            \"markupDeletedText\": \"#ffdcd7\",\n            \"markupDeletedBg\": \"#67060c\",\n            \"markupInsertedText\": \"#aff5b4\",\n            \"markupInsertedBg\": \"#033a16\",\n            \"markupChangedText\": \"#ffdfb6\",\n            \"markupChangedBg\": \"#5a1e02\",\n            \"markupIgnoredText\": \"#c9d1d9\",\n            \"markupIgnoredBg\": \"#1158c7\",\n            \"metaDiffRange\": \"#d2a8ff\",\n            \"brackethighlighterAngle\": \"#8b949e\",\n            \"sublimelinterGutterMark\": \"#484f58\",\n            \"constantOtherReferenceLink\": \"#a5d6ff\"\n          }\n        },\n        \"codemirror\": {\n          \"text\": \"#c9d1d9\",\n          \"bg\": \"#0d1117\",\n          \"guttersBg\": \"#0d1117\",\n          \"guttermarkerText\": \"#0d1117\",\n          \"guttermarkerSubtleText\": \"#6e7681\",\n          \"linenumberText\": \"#8b949e\",\n          \"cursor\": \"#c9d1d9\",\n          \"selectionBg\": \"rgba(56,139,253,0.4)\",\n          \"activelineBg\": \"rgba(110,118,129,0.1)\",\n          \"matchingbracketText\": \"#c9d1d9\",\n          \"linesBg\": \"#0d1117\",\n          \"syntax\": {\n            \"comment\": \"#8b949e\",\n            \"constant\": \"#79c0ff\",\n            \"entity\": \"#d2a8ff\",\n            \"keyword\": \"#ff7b72\",\n            \"storage\": \"#ff7b72\",\n            \"string\": \"#a5d6ff\",\n            \"support\": \"#79c0ff\",\n            \"variable\": \"#ffa657\"\n          }\n        },\n        \"checks\": {\n          \"bg\": \"#010409\",\n          \"textPrimary\": \"#c9d1d9\",\n          \"textSecondary\": \"#8b949e\",\n          \"textLink\": \"#58a6ff\",\n          \"btnIcon\": \"#8b949e\",\n          \"btnHoverIcon\": \"#c9d1d9\",\n          \"btnHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"inputText\": \"#8b949e\",\n          \"inputPlaceholderText\": \"#6e7681\",\n          \"inputFocusText\": \"#c9d1d9\",\n          \"inputBg\": \"#161b22\",\n          \"donutError\": \"#f85149\",\n          \"donutPending\": \"#d29922\",\n          \"donutSuccess\": \"#2ea043\",\n          \"donutNeutral\": \"#8b949e\",\n          \"dropdownText\": \"#c9d1d9\",\n          \"dropdownBg\": \"#161b22\",\n          \"dropdownBorder\": \"#30363d\",\n          \"dropdownShadow\": \"rgba(1,4,9,0.3)\",\n          \"dropdownHoverText\": \"#c9d1d9\",\n          \"dropdownHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"dropdownBtnHoverText\": \"#c9d1d9\",\n          \"dropdownBtnHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"scrollbarThumbBg\": \"rgba(110,118,129,0.4)\",\n          \"headerLabelText\": \"#8b949e\",\n          \"headerLabelOpenText\": \"#c9d1d9\",\n          \"headerBorder\": \"#21262d\",\n          \"headerIcon\": \"#8b949e\",\n          \"lineText\": \"#8b949e\",\n          \"lineNumText\": \"#6e7681\",\n          \"lineTimestampText\": \"#6e7681\",\n          \"lineHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"lineSelectedBg\": \"rgba(56,139,253,0.15)\",\n          \"lineSelectedNumText\": \"#58a6ff\",\n          \"lineDtFmText\": \"#ffffff\",\n          \"lineDtFmBg\": \"#9e6a03\",\n          \"gateBg\": \"rgba(187,128,9,0.15)\",\n          \"gateText\": \"#8b949e\",\n          \"gateWaitingText\": \"#d29922\",\n          \"stepHeaderOpenBg\": \"#161b22\",\n          \"stepErrorText\": \"#f85149\",\n          \"stepWarningText\": \"#d29922\",\n          \"loglineText\": \"#8b949e\",\n          \"loglineNumText\": \"#6e7681\",\n          \"loglineDebugText\": \"#a371f7\",\n          \"loglineErrorText\": \"#8b949e\",\n          \"loglineErrorNumText\": \"#6e7681\",\n          \"loglineErrorBg\": \"rgba(248,81,73,0.15)\",\n          \"loglineWarningText\": \"#8b949e\",\n          \"loglineWarningNumText\": \"#d29922\",\n          \"loglineWarningBg\": \"rgba(187,128,9,0.15)\",\n          \"loglineCommandText\": \"#58a6ff\",\n          \"loglineSectionText\": \"#3fb950\",\n          \"ansi\": {\n            \"black\": \"#0d1117\",\n            \"blackBright\": \"#161b22\",\n            \"white\": \"#b1bac4\",\n            \"whiteBright\": \"#b1bac4\",\n            \"gray\": \"#6e7681\",\n            \"red\": \"#ff7b72\",\n            \"redBright\": \"#ffa198\",\n            \"green\": \"#3fb950\",\n            \"greenBright\": \"#56d364\",\n            \"yellow\": \"#d29922\",\n            \"yellowBright\": \"#e3b341\",\n            \"blue\": \"#58a6ff\",\n            \"blueBright\": \"#79c0ff\",\n            \"magenta\": \"#bc8cff\",\n            \"magentaBright\": \"#d2a8ff\",\n            \"cyan\": \"#76e3ea\",\n            \"cyanBright\": \"#b3f0ff\"\n          }\n        },\n        \"project\": {\n          \"headerBg\": \"#0d1117\",\n          \"sidebarBg\": \"#161b22\",\n          \"gradientIn\": \"#161b22\",\n          \"gradientOut\": \"rgba(22,27,34,0)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"bg\": \"#f6f8fa\"\n          }\n        },\n        \"avatar\": {\n          \"bg\": \"rgba(255,255,255,0.1)\",\n          \"border\": \"rgba(240,246,252,0.1)\",\n          \"stackFade\": \"#30363d\",\n          \"stackFadeMore\": \"#21262d\"\n        },\n        \"topicTag\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"counter\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"selectMenu\": {\n          \"backdropBorder\": \"#484f58\",\n          \"tapHighlight\": \"rgba(48,54,61,0.5)\",\n          \"tapFocusBg\": \"#0c2d6b\"\n        },\n        \"header\": {\n          \"text\": \"rgba(255,255,255,0.7)\",\n          \"bg\": \"#161b22\",\n          \"divider\": \"#8b949e\",\n          \"logo\": \"#f0f6fc\"\n        },\n        \"headerSearch\": {\n          \"bg\": \"#0d1117\",\n          \"border\": \"#30363d\"\n        },\n        \"sidenav\": {\n          \"selectedBg\": \"#21262d\"\n        },\n        \"menu\": {\n          \"bgActive\": \"#161b22\"\n        },\n        \"input\": {\n          \"disabledBg\": \"rgba(110,118,129,0)\"\n        },\n        \"timeline\": {\n          \"badgeBg\": \"#21262d\"\n        },\n        \"ansi\": {\n          \"black\": \"#484f58\",\n          \"blackBright\": \"#6e7681\",\n          \"white\": \"#b1bac4\",\n          \"whiteBright\": \"#ffffff\",\n          \"gray\": \"#6e7681\",\n          \"red\": \"#ff7b72\",\n          \"redBright\": \"#ffa198\",\n          \"green\": \"#3fb950\",\n          \"greenBright\": \"#56d364\",\n          \"yellow\": \"#d29922\",\n          \"yellowBright\": \"#e3b341\",\n          \"blue\": \"#58a6ff\",\n          \"blueBright\": \"#79c0ff\",\n          \"magenta\": \"#bc8cff\",\n          \"magentaBright\": \"#d2a8ff\",\n          \"cyan\": \"#39c5cf\",\n          \"cyanBright\": \"#56d4dd\"\n        },\n        \"btn\": {\n          \"text\": \"#c9d1d9\",\n          \"bg\": \"#21262d\",\n          \"border\": \"rgba(240,246,252,0.1)\",\n          \"hoverBg\": \"#30363d\",\n          \"hoverBorder\": \"#8b949e\",\n          \"activeBg\": \"hsla(212,12%,18%,1)\",\n          \"activeBorder\": \"#6e7681\",\n          \"selectedBg\": \"#161b22\",\n          \"focusBg\": \"#21262d\",\n          \"focusBorder\": \"#8b949e\",\n          \"counterBg\": \"#30363d\",\n          \"primary\": {\n            \"text\": \"#ffffff\",\n            \"bg\": \"#238636\",\n            \"border\": \"rgba(240,246,252,0.1)\",\n            \"hoverBg\": \"#2ea043\",\n            \"hoverBorder\": \"rgba(240,246,252,0.1)\",\n            \"selectedBg\": \"#238636\",\n            \"disabledText\": \"rgba(255,255,255,0.5)\",\n            \"disabledBg\": \"rgba(35,134,54,0.6)\",\n            \"disabledBorder\": \"rgba(240,246,252,0.1)\",\n            \"focusBg\": \"#238636\",\n            \"focusBorder\": \"rgba(240,246,252,0.1)\",\n            \"icon\": \"#ffffff\",\n            \"counterBg\": \"rgba(255,255,255,0.2)\"\n          },\n          \"outline\": {\n            \"text\": \"#58a6ff\",\n            \"hoverText\": \"#58a6ff\",\n            \"hoverBg\": \"#30363d\",\n            \"hoverBorder\": \"rgba(240,246,252,0.1)\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#0d419d\",\n            \"selectedBorder\": \"rgba(240,246,252,0.1)\",\n            \"disabledText\": \"rgba(88,166,255,0.5)\",\n            \"disabledBg\": \"#0d1117\",\n            \"disabledCounterBg\": \"rgba(31,111,235,0.05)\",\n            \"focusBorder\": \"rgba(240,246,252,0.1)\",\n            \"counterBg\": \"rgba(31,111,235,0.1)\"\n          },\n          \"danger\": {\n            \"text\": \"#f85149\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#da3633\",\n            \"hoverBorder\": \"#f85149\",\n            \"hoverIcon\": \"#ffffff\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#b62324\",\n            \"selectedBorder\": \"#ff7b72\",\n            \"disabledText\": \"rgba(248,81,73,0.5)\",\n            \"disabledBg\": \"#0d1117\",\n            \"disabledCounterBg\": \"rgba(218,54,51,0.05)\",\n            \"focusBorder\": \"#f85149\",\n            \"counterBg\": \"rgba(218,54,51,0.1)\",\n            \"icon\": \"#f85149\"\n          }\n        },\n        \"underlinenav\": {\n          \"icon\": \"#6e7681\",\n          \"borderHover\": \"rgba(110,118,129,0.4)\"\n        },\n        \"actionListItem\": {\n          \"inlineDivider\": \"rgba(48,54,61,0.48)\",\n          \"default\": {\n            \"hoverBg\": \"rgba(177,186,196,0.12)\",\n            \"hoverBorder\": \"rgba(0,0,0,0)\",\n            \"activeBg\": \"rgba(177,186,196,0.2)\",\n            \"activeBorder\": \"rgba(0,0,0,0)\",\n            \"selectedBg\": \"rgba(177,186,196,0.08)\"\n          },\n          \"danger\": {\n            \"hoverBg\": \"rgba(248,81,73,0.16)\",\n            \"activeBg\": \"rgba(248,81,73,0.24)\",\n            \"hoverText\": \"#ff7b72\"\n          }\n        },\n        \"switchTrack\": {\n          \"bg\": \"#010409\",\n          \"border\": \"#6e7681\",\n          \"checked\": {\n            \"bg\": \"rgba(31,111,235,0.35)\",\n            \"hoverBg\": \"rgba(31,111,235,0.5)\",\n            \"activeBg\": \"rgba(31,111,235,0.65)\",\n            \"border\": \"#58a6ff\"\n          }\n        },\n        \"switchKnob\": {\n          \"checked\": {\n            \"bg\": \"#1f6feb\",\n            \"disabledBg\": \"#484f58\"\n          }\n        },\n        \"segmentedControl\": {\n          \"bg\": \"#161b22\",\n          \"button\": {\n            \"hover\": {\n              \"bg\": \"#30363d\"\n            },\n            \"active\": {\n              \"bg\": \"#21262d\"\n            },\n            \"selected\": {\n              \"border\": \"#6e7681\"\n            }\n          }\n        },\n        \"fg\": {\n          \"default\": \"#c9d1d9\",\n          \"muted\": \"#8b949e\",\n          \"subtle\": \"#6e7681\",\n          \"onEmphasis\": \"#ffffff\"\n        },\n        \"canvas\": {\n          \"default\": \"#0d1117\",\n          \"overlay\": \"#161b22\",\n          \"inset\": \"#010409\",\n          \"subtle\": \"#161b22\"\n        },\n        \"border\": {\n          \"default\": \"#30363d\",\n          \"muted\": \"#21262d\",\n          \"subtle\": \"rgba(240,246,252,0.1)\"\n        },\n        \"neutral\": {\n          \"emphasisPlus\": \"#6e7681\",\n          \"emphasis\": \"#6e7681\",\n          \"muted\": \"rgba(110,118,129,0.4)\",\n          \"subtle\": \"rgba(110,118,129,0.1)\"\n        },\n        \"accent\": {\n          \"fg\": \"#58a6ff\",\n          \"emphasis\": \"#1f6feb\",\n          \"muted\": \"rgba(56,139,253,0.4)\",\n          \"subtle\": \"rgba(56,139,253,0.15)\"\n        },\n        \"success\": {\n          \"fg\": \"#3fb950\",\n          \"emphasis\": \"#238636\",\n          \"muted\": \"rgba(46,160,67,0.4)\",\n          \"subtle\": \"rgba(46,160,67,0.15)\"\n        },\n        \"attention\": {\n          \"fg\": \"#d29922\",\n          \"emphasis\": \"#9e6a03\",\n          \"muted\": \"rgba(187,128,9,0.4)\",\n          \"subtle\": \"rgba(187,128,9,0.15)\"\n        },\n        \"severe\": {\n          \"fg\": \"#db6d28\",\n          \"emphasis\": \"#bd561d\",\n          \"muted\": \"rgba(219,109,40,0.4)\",\n          \"subtle\": \"rgba(219,109,40,0.15)\"\n        },\n        \"danger\": {\n          \"fg\": \"#f85149\",\n          \"emphasis\": \"#da3633\",\n          \"muted\": \"rgba(248,81,73,0.4)\",\n          \"subtle\": \"rgba(248,81,73,0.15)\"\n        },\n        \"open\": {\n          \"fg\": \"#3fb950\",\n          \"emphasis\": \"#238636\",\n          \"muted\": \"rgba(46,160,67,0.4)\",\n          \"subtle\": \"rgba(46,160,67,0.15)\"\n        },\n        \"closed\": {\n          \"fg\": \"#f85149\",\n          \"emphasis\": \"#da3633\",\n          \"muted\": \"rgba(248,81,73,0.4)\",\n          \"subtle\": \"rgba(248,81,73,0.15)\"\n        },\n        \"done\": {\n          \"fg\": \"#a371f7\",\n          \"emphasis\": \"#8957e5\",\n          \"muted\": \"rgba(163,113,247,0.4)\",\n          \"subtle\": \"rgba(163,113,247,0.15)\"\n        },\n        \"sponsors\": {\n          \"fg\": \"#db61a2\",\n          \"emphasis\": \"#bf4b8a\",\n          \"muted\": \"rgba(219,97,162,0.4)\",\n          \"subtle\": \"rgba(219,97,162,0.15)\"\n        },\n        \"primer\": {\n          \"fg\": {\n            \"disabled\": \"#484f58\"\n          },\n          \"canvas\": {\n            \"backdrop\": \"rgba(1,4,9,0.8)\",\n            \"sticky\": \"rgba(13,17,23,0.95)\"\n          },\n          \"border\": {\n            \"active\": \"#f78166\",\n            \"contrast\": \"rgba(255,255,255,0.2)\"\n          }\n        }\n      },\n      \"shadows\": {\n        \"checks\": {\n          \"inputShadow\": \"0 0 0 1px (obj) => get_1.default(obj, path)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"shadow\": {\n              \"outline\": \"rgb(255 255 255 / 25%) 0 0 0 1px inset\",\n              \"focus\": \"rgb(255 255 255 / 25%) 0 0 0 4px\",\n              \"hover\": \"0 4px 7px rgba(0, 0, 0, 0.15), 0 100px 80px rgba(255, 255, 255, 0.02), 0 42px 33px rgba(255, 255, 255, 0.024), 0 22px 18px rgba(255, 255, 255, 0.028), 0 12px 10px rgba(255, 255, 255, 0.034), 0 7px 5px rgba(255, 255, 255, 0.04), 0 3px 2px rgba(255, 255, 255, 0.07)\",\n              \"hoverMuted\": \"rgb(255 255 255) 0 0 0 2px inset\"\n            }\n          }\n        },\n        \"avatar\": {\n          \"childShadow\": \"-2px -2px 0 #0d1117\"\n        },\n        \"overlay\": {\n          \"shadow\": \"0 0 0 1px #30363d, 0 16px 32px rgba(1,4,9,0.85)\"\n        },\n        \"btn\": {\n          \"shadow\": \"0 0 transparent\",\n          \"insetShadow\": \"0 0 transparent\",\n          \"focusShadow\": \"0 0 0 3px rgba(139,148,158,0.3)\",\n          \"shadowActive\": \"inset 0 0.15em 0.3em rgba(1,4,9,0.15)\",\n          \"shadowInputFocus\": \"0 0 0 0.2em rgba(31,111,235,0.3)\",\n          \"primary\": {\n            \"shadow\": \"0 0 transparent\",\n            \"insetShadow\": \"0 0 transparent\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(46,164,79,0.4)\"\n          },\n          \"outline\": {\n            \"hoverShadow\": \"0 1px 0 rgba(1,4,9,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(17,88,199,0.4)\"\n          },\n          \"danger\": {\n            \"hoverShadow\": \"0 0 transparent\",\n            \"hoverInsetShadow\": \"0 0 transparent\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(248,81,73,0.4)\"\n          }\n        },\n        \"shadow\": {\n          \"small\": \"0 0 transparent\",\n          \"medium\": \"0 3px 6px #010409\",\n          \"large\": \"0 8px 24px #010409\",\n          \"extraLarge\": \"0 12px 48px #010409\"\n        },\n        \"primer\": {\n          \"shadow\": {\n            \"highlight\": \"0 0 transparent\",\n            \"inset\": \"0 0 transparent\",\n            \"focus\": \"0 0 0 3px #0c2d6b\"\n          }\n        }\n      }\n    },\n    \"dark_dimmed\": {\n      \"colors\": {\n        \"canvasDefaultTransparent\": \"rgba(34,39,46,0)\",\n        \"pageHeaderBg\": \"#22272e\",\n        \"marketingIcon\": {\n          \"primary\": \"#6cb6ff\",\n          \"secondary\": \"#316dca\"\n        },\n        \"diffBlob\": {\n          \"addition\": {\n            \"numText\": \"#adbac7\",\n            \"fg\": \"#adbac7\",\n            \"numBg\": \"rgba(87,171,90,0.3)\",\n            \"lineBg\": \"rgba(70,149,74,0.15)\",\n            \"wordBg\": \"rgba(70,149,74,0.4)\"\n          },\n          \"deletion\": {\n            \"numText\": \"#adbac7\",\n            \"fg\": \"#adbac7\",\n            \"numBg\": \"rgba(229,83,75,0.3)\",\n            \"lineBg\": \"rgba(229,83,75,0.15)\",\n            \"wordBg\": \"rgba(229,83,75,0.4)\"\n          },\n          \"hunk\": {\n            \"numBg\": \"rgba(65,132,228,0.4)\"\n          },\n          \"expander\": {\n            \"icon\": \"#768390\"\n          }\n        },\n        \"diffstat\": {\n          \"deletionBorder\": \"rgba(205,217,229,0.1)\",\n          \"additionBorder\": \"rgba(205,217,229,0.1)\",\n          \"additionBg\": \"#57ab5a\"\n        },\n        \"searchKeyword\": {\n          \"hl\": \"rgba(198,144,38,0.4)\"\n        },\n        \"prettylights\": {\n          \"syntax\": {\n            \"comment\": \"#768390\",\n            \"constant\": \"#6cb6ff\",\n            \"entity\": \"#dcbdfb\",\n            \"storageModifierImport\": \"#adbac7\",\n            \"entityTag\": \"#8ddb8c\",\n            \"keyword\": \"#f47067\",\n            \"string\": \"#96d0ff\",\n            \"variable\": \"#f69d50\",\n            \"brackethighlighterUnmatched\": \"#e5534b\",\n            \"invalidIllegalText\": \"#cdd9e5\",\n            \"invalidIllegalBg\": \"#922323\",\n            \"carriageReturnText\": \"#cdd9e5\",\n            \"carriageReturnBg\": \"#ad2e2c\",\n            \"stringRegexp\": \"#8ddb8c\",\n            \"markupList\": \"#eac55f\",\n            \"markupHeading\": \"#316dca\",\n            \"markupItalic\": \"#adbac7\",\n            \"markupBold\": \"#adbac7\",\n            \"markupDeletedText\": \"#ffd8d3\",\n            \"markupDeletedBg\": \"#78191b\",\n            \"markupInsertedText\": \"#b4f1b4\",\n            \"markupInsertedBg\": \"#1b4721\",\n            \"markupChangedText\": \"#ffddb0\",\n            \"markupChangedBg\": \"#682d0f\",\n            \"markupIgnoredText\": \"#adbac7\",\n            \"markupIgnoredBg\": \"#255ab2\",\n            \"metaDiffRange\": \"#dcbdfb\",\n            \"brackethighlighterAngle\": \"#768390\",\n            \"sublimelinterGutterMark\": \"#545d68\",\n            \"constantOtherReferenceLink\": \"#96d0ff\"\n          }\n        },\n        \"codemirror\": {\n          \"text\": \"#adbac7\",\n          \"bg\": \"#22272e\",\n          \"guttersBg\": \"#22272e\",\n          \"guttermarkerText\": \"#22272e\",\n          \"guttermarkerSubtleText\": \"#636e7b\",\n          \"linenumberText\": \"#768390\",\n          \"cursor\": \"#adbac7\",\n          \"selectionBg\": \"rgba(65,132,228,0.4)\",\n          \"activelineBg\": \"rgba(99,110,123,0.1)\",\n          \"matchingbracketText\": \"#adbac7\",\n          \"linesBg\": \"#22272e\",\n          \"syntax\": {\n            \"comment\": \"#768390\",\n            \"constant\": \"#6cb6ff\",\n            \"entity\": \"#dcbdfb\",\n            \"keyword\": \"#f47067\",\n            \"storage\": \"#f47067\",\n            \"string\": \"#96d0ff\",\n            \"support\": \"#6cb6ff\",\n            \"variable\": \"#f69d50\"\n          }\n        },\n        \"checks\": {\n          \"bg\": \"#1c2128\",\n          \"textPrimary\": \"#adbac7\",\n          \"textSecondary\": \"#768390\",\n          \"textLink\": \"#539bf5\",\n          \"btnIcon\": \"#768390\",\n          \"btnHoverIcon\": \"#adbac7\",\n          \"btnHoverBg\": \"rgba(99,110,123,0.1)\",\n          \"inputText\": \"#768390\",\n          \"inputPlaceholderText\": \"#636e7b\",\n          \"inputFocusText\": \"#adbac7\",\n          \"inputBg\": \"#2d333b\",\n          \"donutError\": \"#e5534b\",\n          \"donutPending\": \"#c69026\",\n          \"donutSuccess\": \"#46954a\",\n          \"donutNeutral\": \"#768390\",\n          \"dropdownText\": \"#adbac7\",\n          \"dropdownBg\": \"#2d333b\",\n          \"dropdownBorder\": \"#444c56\",\n          \"dropdownShadow\": \"rgba(28,33,40,0.3)\",\n          \"dropdownHoverText\": \"#adbac7\",\n          \"dropdownHoverBg\": \"rgba(99,110,123,0.1)\",\n          \"dropdownBtnHoverText\": \"#adbac7\",\n          \"dropdownBtnHoverBg\": \"rgba(99,110,123,0.1)\",\n          \"scrollbarThumbBg\": \"rgba(99,110,123,0.4)\",\n          \"headerLabelText\": \"#768390\",\n          \"headerLabelOpenText\": \"#adbac7\",\n          \"headerBorder\": \"#373e47\",\n          \"headerIcon\": \"#768390\",\n          \"lineText\": \"#768390\",\n          \"lineNumText\": \"#636e7b\",\n          \"lineTimestampText\": \"#636e7b\",\n          \"lineHoverBg\": \"rgba(99,110,123,0.1)\",\n          \"lineSelectedBg\": \"rgba(65,132,228,0.15)\",\n          \"lineSelectedNumText\": \"#539bf5\",\n          \"lineDtFmText\": \"#cdd9e5\",\n          \"lineDtFmBg\": \"#966600\",\n          \"gateBg\": \"rgba(174,124,20,0.15)\",\n          \"gateText\": \"#768390\",\n          \"gateWaitingText\": \"#c69026\",\n          \"stepHeaderOpenBg\": \"#2d333b\",\n          \"stepErrorText\": \"#e5534b\",\n          \"stepWarningText\": \"#c69026\",\n          \"loglineText\": \"#768390\",\n          \"loglineNumText\": \"#636e7b\",\n          \"loglineDebugText\": \"#986ee2\",\n          \"loglineErrorText\": \"#768390\",\n          \"loglineErrorNumText\": \"#636e7b\",\n          \"loglineErrorBg\": \"rgba(229,83,75,0.15)\",\n          \"loglineWarningText\": \"#768390\",\n          \"loglineWarningNumText\": \"#c69026\",\n          \"loglineWarningBg\": \"rgba(174,124,20,0.15)\",\n          \"loglineCommandText\": \"#539bf5\",\n          \"loglineSectionText\": \"#57ab5a\",\n          \"ansi\": {\n            \"black\": \"#22272e\",\n            \"blackBright\": \"#2d333b\",\n            \"white\": \"#909dab\",\n            \"whiteBright\": \"#909dab\",\n            \"gray\": \"#636e7b\",\n            \"red\": \"#f47067\",\n            \"redBright\": \"#ff938a\",\n            \"green\": \"#57ab5a\",\n            \"greenBright\": \"#6bc46d\",\n            \"yellow\": \"#c69026\",\n            \"yellowBright\": \"#daaa3f\",\n            \"blue\": \"#539bf5\",\n            \"blueBright\": \"#6cb6ff\",\n            \"magenta\": \"#b083f0\",\n            \"magentaBright\": \"#dcbdfb\",\n            \"cyan\": \"#76e3ea\",\n            \"cyanBright\": \"#b3f0ff\"\n          }\n        },\n        \"project\": {\n          \"headerBg\": \"#22272e\",\n          \"sidebarBg\": \"#2d333b\",\n          \"gradientIn\": \"#2d333b\",\n          \"gradientOut\": \"rgba(45,51,59,0)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"bg\": \"#f6f8fa\"\n          }\n        },\n        \"avatar\": {\n          \"bg\": \"rgba(205,217,229,0.1)\",\n          \"border\": \"rgba(205,217,229,0.1)\",\n          \"stackFade\": \"#444c56\",\n          \"stackFadeMore\": \"#373e47\"\n        },\n        \"topicTag\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"counter\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"selectMenu\": {\n          \"backdropBorder\": \"#545d68\",\n          \"tapHighlight\": \"rgba(68,76,86,0.5)\",\n          \"tapFocusBg\": \"#143d79\"\n        },\n        \"header\": {\n          \"text\": \"rgba(205,217,229,0.7)\",\n          \"bg\": \"#2d333b\",\n          \"divider\": \"#768390\",\n          \"logo\": \"#cdd9e5\"\n        },\n        \"headerSearch\": {\n          \"bg\": \"#22272e\",\n          \"border\": \"#444c56\"\n        },\n        \"sidenav\": {\n          \"selectedBg\": \"#373e47\"\n        },\n        \"menu\": {\n          \"bgActive\": \"#2d333b\"\n        },\n        \"input\": {\n          \"disabledBg\": \"rgba(99,110,123,0)\"\n        },\n        \"timeline\": {\n          \"badgeBg\": \"#373e47\"\n        },\n        \"ansi\": {\n          \"black\": \"#545d68\",\n          \"blackBright\": \"#636e7b\",\n          \"white\": \"#909dab\",\n          \"whiteBright\": \"#cdd9e5\",\n          \"gray\": \"#636e7b\",\n          \"red\": \"#f47067\",\n          \"redBright\": \"#ff938a\",\n          \"green\": \"#57ab5a\",\n          \"greenBright\": \"#6bc46d\",\n          \"yellow\": \"#c69026\",\n          \"yellowBright\": \"#daaa3f\",\n          \"blue\": \"#539bf5\",\n          \"blueBright\": \"#6cb6ff\",\n          \"magenta\": \"#b083f0\",\n          \"magentaBright\": \"#dcbdfb\",\n          \"cyan\": \"#39c5cf\",\n          \"cyanBright\": \"#56d4dd\"\n        },\n        \"btn\": {\n          \"text\": \"#adbac7\",\n          \"bg\": \"#373e47\",\n          \"border\": \"rgba(205,217,229,0.1)\",\n          \"hoverBg\": \"#444c56\",\n          \"hoverBorder\": \"#768390\",\n          \"activeBg\": \"hsla(213,12%,27%,1)\",\n          \"activeBorder\": \"#636e7b\",\n          \"selectedBg\": \"#2d333b\",\n          \"focusBg\": \"#373e47\",\n          \"focusBorder\": \"#768390\",\n          \"counterBg\": \"#444c56\",\n          \"primary\": {\n            \"text\": \"#ffffff\",\n            \"bg\": \"#347d39\",\n            \"border\": \"rgba(205,217,229,0.1)\",\n            \"hoverBg\": \"#46954a\",\n            \"hoverBorder\": \"rgba(205,217,229,0.1)\",\n            \"selectedBg\": \"#347d39\",\n            \"disabledText\": \"rgba(205,217,229,0.5)\",\n            \"disabledBg\": \"rgba(52,125,57,0.6)\",\n            \"disabledBorder\": \"rgba(205,217,229,0.1)\",\n            \"focusBg\": \"#347d39\",\n            \"focusBorder\": \"rgba(205,217,229,0.1)\",\n            \"icon\": \"#cdd9e5\",\n            \"counterBg\": \"rgba(205,217,229,0.2)\"\n          },\n          \"outline\": {\n            \"text\": \"#539bf5\",\n            \"hoverText\": \"#539bf5\",\n            \"hoverBg\": \"#444c56\",\n            \"hoverBorder\": \"rgba(205,217,229,0.1)\",\n            \"hoverCounterBg\": \"rgba(205,217,229,0.2)\",\n            \"selectedText\": \"#cdd9e5\",\n            \"selectedBg\": \"#1b4b91\",\n            \"selectedBorder\": \"rgba(205,217,229,0.1)\",\n            \"disabledText\": \"rgba(83,155,245,0.5)\",\n            \"disabledBg\": \"#22272e\",\n            \"disabledCounterBg\": \"rgba(49,109,202,0.05)\",\n            \"focusBorder\": \"rgba(205,217,229,0.1)\",\n            \"counterBg\": \"rgba(49,109,202,0.1)\"\n          },\n          \"danger\": {\n            \"text\": \"#e5534b\",\n            \"hoverText\": \"#cdd9e5\",\n            \"hoverBg\": \"#c93c37\",\n            \"hoverBorder\": \"#e5534b\",\n            \"hoverIcon\": \"#cdd9e5\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#ad2e2c\",\n            \"selectedBorder\": \"#f47067\",\n            \"disabledText\": \"rgba(229,83,75,0.5)\",\n            \"disabledBg\": \"#22272e\",\n            \"disabledCounterBg\": \"rgba(201,60,55,0.05)\",\n            \"focusBorder\": \"#e5534b\",\n            \"counterBg\": \"rgba(201,60,55,0.1)\",\n            \"icon\": \"#e5534b\"\n          }\n        },\n        \"underlinenav\": {\n          \"icon\": \"#636e7b\",\n          \"borderHover\": \"rgba(99,110,123,0.4)\"\n        },\n        \"actionListItem\": {\n          \"inlineDivider\": \"rgba(68,76,86,0.48)\",\n          \"default\": {\n            \"hoverBg\": \"rgba(144,157,171,0.12)\",\n            \"hoverBorder\": \"rgba(0,0,0,0)\",\n            \"activeBg\": \"rgba(144,157,171,0.2)\",\n            \"activeBorder\": \"rgba(0,0,0,0)\",\n            \"selectedBg\": \"rgba(144,157,171,0.08)\"\n          },\n          \"danger\": {\n            \"hoverBg\": \"rgba(229,83,75,0.16)\",\n            \"activeBg\": \"rgba(229,83,75,0.24)\",\n            \"hoverText\": \"#f47067\"\n          }\n        },\n        \"switchTrack\": {\n          \"bg\": \"#1c2128\",\n          \"border\": \"#636e7b\",\n          \"checked\": {\n            \"bg\": \"rgba(49,109,202,0.35)\",\n            \"hoverBg\": \"rgba(49,109,202,0.5)\",\n            \"activeBg\": \"rgba(49,109,202,0.65)\",\n            \"border\": \"#539bf5\"\n          }\n        },\n        \"switchKnob\": {\n          \"checked\": {\n            \"bg\": \"#316dca\",\n            \"disabledBg\": \"#545d68\"\n          }\n        },\n        \"segmentedControl\": {\n          \"bg\": \"#2d333b\",\n          \"button\": {\n            \"hover\": {\n              \"bg\": \"#444c56\"\n            },\n            \"active\": {\n              \"bg\": \"#373e47\"\n            },\n            \"selected\": {\n              \"border\": \"#636e7b\"\n            }\n          }\n        },\n        \"fg\": {\n          \"default\": \"#adbac7\",\n          \"muted\": \"#768390\",\n          \"subtle\": \"#636e7b\",\n          \"onEmphasis\": \"#cdd9e5\"\n        },\n        \"canvas\": {\n          \"default\": \"#22272e\",\n          \"overlay\": \"#2d333b\",\n          \"inset\": \"#1c2128\",\n          \"subtle\": \"#2d333b\"\n        },\n        \"border\": {\n          \"default\": \"#444c56\",\n          \"muted\": \"#373e47\",\n          \"subtle\": \"rgba(205,217,229,0.1)\"\n        },\n        \"neutral\": {\n          \"emphasisPlus\": \"#636e7b\",\n          \"emphasis\": \"#636e7b\",\n          \"muted\": \"rgba(99,110,123,0.4)\",\n          \"subtle\": \"rgba(99,110,123,0.1)\"\n        },\n        \"accent\": {\n          \"fg\": \"#539bf5\",\n          \"emphasis\": \"#316dca\",\n          \"muted\": \"rgba(65,132,228,0.4)\",\n          \"subtle\": \"rgba(65,132,228,0.15)\"\n        },\n        \"success\": {\n          \"fg\": \"#57ab5a\",\n          \"emphasis\": \"#347d39\",\n          \"muted\": \"rgba(70,149,74,0.4)\",\n          \"subtle\": \"rgba(70,149,74,0.15)\"\n        },\n        \"attention\": {\n          \"fg\": \"#c69026\",\n          \"emphasis\": \"#966600\",\n          \"muted\": \"rgba(174,124,20,0.4)\",\n          \"subtle\": \"rgba(174,124,20,0.15)\"\n        },\n        \"severe\": {\n          \"fg\": \"#cc6b2c\",\n          \"emphasis\": \"#ae5622\",\n          \"muted\": \"rgba(204,107,44,0.4)\",\n          \"subtle\": \"rgba(204,107,44,0.15)\"\n        },\n        \"danger\": {\n          \"fg\": \"#e5534b\",\n          \"emphasis\": \"#c93c37\",\n          \"muted\": \"rgba(229,83,75,0.4)\",\n          \"subtle\": \"rgba(229,83,75,0.15)\"\n        },\n        \"open\": {\n          \"fg\": \"#57ab5a\",\n          \"emphasis\": \"#347d39\",\n          \"muted\": \"rgba(70,149,74,0.4)\",\n          \"subtle\": \"rgba(70,149,74,0.15)\"\n        },\n        \"closed\": {\n          \"fg\": \"#e5534b\",\n          \"emphasis\": \"#c93c37\",\n          \"muted\": \"rgba(229,83,75,0.4)\",\n          \"subtle\": \"rgba(229,83,75,0.15)\"\n        },\n        \"done\": {\n          \"fg\": \"#986ee2\",\n          \"emphasis\": \"#8256d0\",\n          \"muted\": \"rgba(152,110,226,0.4)\",\n          \"subtle\": \"rgba(152,110,226,0.15)\"\n        },\n        \"sponsors\": {\n          \"fg\": \"#c96198\",\n          \"emphasis\": \"#ae4c82\",\n          \"muted\": \"rgba(201,97,152,0.4)\",\n          \"subtle\": \"rgba(201,97,152,0.15)\"\n        },\n        \"primer\": {\n          \"fg\": {\n            \"disabled\": \"#545d68\"\n          },\n          \"canvas\": {\n            \"backdrop\": \"rgba(28,33,40,0.8)\",\n            \"sticky\": \"rgba(34,39,46,0.95)\"\n          },\n          \"border\": {\n            \"active\": \"#ec775c\",\n            \"contrast\": \"rgba(205,217,229,0.2)\"\n          }\n        }\n      },\n      \"shadows\": {\n        \"checks\": {\n          \"inputShadow\": \"0 0 0 1px (obj) => get_1.default(obj, path)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"shadow\": {\n              \"outline\": \"rgb(255 255 255 / 25%) 0 0 0 1px inset\",\n              \"focus\": \"rgb(255 255 255 / 25%) 0 0 0 4px\",\n              \"hover\": \"0 4px 7px rgba(0, 0, 0, 0.15), 0 100px 80px rgba(255, 255, 255, 0.02), 0 42px 33px rgba(255, 255, 255, 0.024), 0 22px 18px rgba(255, 255, 255, 0.028), 0 12px 10px rgba(255, 255, 255, 0.034), 0 7px 5px rgba(255, 255, 255, 0.04), 0 3px 2px rgba(255, 255, 255, 0.07)\",\n              \"hoverMuted\": \"rgb(255 255 255) 0 0 0 2px inset\"\n            }\n          }\n        },\n        \"avatar\": {\n          \"childShadow\": \"-2px -2px 0 #22272e\"\n        },\n        \"overlay\": {\n          \"shadow\": \"0 0 0 1px #444c56, 0 16px 32px rgba(28,33,40,0.85)\"\n        },\n        \"btn\": {\n          \"shadow\": \"0 0 transparent\",\n          \"insetShadow\": \"0 0 transparent\",\n          \"focusShadow\": \"0 0 0 3px rgba(118,131,144,0.3)\",\n          \"shadowActive\": \"inset 0 0.15em 0.3em rgba(28,33,40,0.15)\",\n          \"shadowInputFocus\": \"0 0 0 0.2em rgba(49,109,202,0.3)\",\n          \"primary\": {\n            \"shadow\": \"0 0 transparent\",\n            \"insetShadow\": \"0 0 transparent\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(46,164,79,0.4)\"\n          },\n          \"outline\": {\n            \"hoverShadow\": \"0 1px 0 rgba(28,33,40,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(205,217,229,0.03)\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(37,90,178,0.4)\"\n          },\n          \"danger\": {\n            \"hoverShadow\": \"0 0 transparent\",\n            \"hoverInsetShadow\": \"0 0 transparent\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(229,83,75,0.4)\"\n          }\n        },\n        \"shadow\": {\n          \"small\": \"0 0 transparent\",\n          \"medium\": \"0 3px 6px #1c2128\",\n          \"large\": \"0 8px 24px #1c2128\",\n          \"extraLarge\": \"0 12px 48px #1c2128\"\n        },\n        \"primer\": {\n          \"shadow\": {\n            \"highlight\": \"0 0 transparent\",\n            \"inset\": \"0 0 transparent\",\n            \"focus\": \"0 0 0 3px #143d79\"\n          }\n        }\n      }\n    },\n    \"dark_high_contrast\": {\n      \"colors\": {\n        \"canvasDefaultTransparent\": \"rgba(10,12,16,0)\",\n        \"pageHeaderBg\": \"#0a0c10\",\n        \"marketingIcon\": {\n          \"primary\": \"#91cbff\",\n          \"secondary\": \"#409eff\"\n        },\n        \"diffBlob\": {\n          \"addition\": {\n            \"numText\": \"#f0f3f6\",\n            \"fg\": \"#0a0c10\",\n            \"numBg\": \"rgba(38,205,77,0.3)\",\n            \"lineBg\": \"rgba(9,180,58,0.15)\",\n            \"wordBg\": \"#09b43a\"\n          },\n          \"deletion\": {\n            \"numText\": \"#f0f3f6\",\n            \"fg\": \"#0a0c10\",\n            \"numBg\": \"rgba(255,106,105,0.3)\",\n            \"lineBg\": \"rgba(255,106,105,0.15)\",\n            \"wordBg\": \"#ff6a69\"\n          },\n          \"hunk\": {\n            \"numBg\": \"rgba(64,158,255,0.4)\"\n          },\n          \"expander\": {\n            \"icon\": \"#f0f3f6\"\n          }\n        },\n        \"diffstat\": {\n          \"deletionBorder\": \"#ffb1af\",\n          \"additionBorder\": \"#4ae168\",\n          \"additionBg\": \"#26cd4d\"\n        },\n        \"searchKeyword\": {\n          \"hl\": \"rgba(240,183,47,0.4)\"\n        },\n        \"prettylights\": {\n          \"syntax\": {\n            \"comment\": \"#bdc4cc\",\n            \"constant\": \"#91cbff\",\n            \"entity\": \"#dbb7ff\",\n            \"storageModifierImport\": \"#f0f3f6\",\n            \"entityTag\": \"#72f088\",\n            \"keyword\": \"#ff9492\",\n            \"string\": \"#addcff\",\n            \"variable\": \"#ffb757\",\n            \"brackethighlighterUnmatched\": \"#ff6a69\",\n            \"invalidIllegalText\": \"#ffffff\",\n            \"invalidIllegalBg\": \"#e82a2f\",\n            \"carriageReturnText\": \"#ffffff\",\n            \"carriageReturnBg\": \"#ff4445\",\n            \"stringRegexp\": \"#72f088\",\n            \"markupList\": \"#fbd669\",\n            \"markupHeading\": \"#409eff\",\n            \"markupItalic\": \"#f0f3f6\",\n            \"markupBold\": \"#f0f3f6\",\n            \"markupDeletedText\": \"#ffdedb\",\n            \"markupDeletedBg\": \"#cc1421\",\n            \"markupInsertedText\": \"#acf7b6\",\n            \"markupInsertedBg\": \"#007728\",\n            \"markupChangedText\": \"#ffe1b4\",\n            \"markupChangedBg\": \"#a74c00\",\n            \"markupIgnoredText\": \"#f0f3f6\",\n            \"markupIgnoredBg\": \"#318bf8\",\n            \"metaDiffRange\": \"#dbb7ff\",\n            \"brackethighlighterAngle\": \"#bdc4cc\",\n            \"sublimelinterGutterMark\": \"#7a828e\",\n            \"constantOtherReferenceLink\": \"#addcff\"\n          }\n        },\n        \"codemirror\": {\n          \"text\": \"#f0f3f6\",\n          \"bg\": \"#0a0c10\",\n          \"guttersBg\": \"#0a0c10\",\n          \"guttermarkerText\": \"#0a0c10\",\n          \"guttermarkerSubtleText\": \"#9ea7b3\",\n          \"linenumberText\": \"#f0f3f6\",\n          \"cursor\": \"#f0f3f6\",\n          \"selectionBg\": \"rgba(64,158,255,0.4)\",\n          \"activelineBg\": \"rgba(158,167,179,0.1)\",\n          \"matchingbracketText\": \"#f0f3f6\",\n          \"linesBg\": \"#0a0c10\",\n          \"syntax\": {\n            \"comment\": \"#bdc4cc\",\n            \"constant\": \"#91cbff\",\n            \"entity\": \"#dbb7ff\",\n            \"keyword\": \"#ff9492\",\n            \"storage\": \"#ff9492\",\n            \"string\": \"#addcff\",\n            \"support\": \"#91cbff\",\n            \"variable\": \"#ffb757\"\n          }\n        },\n        \"checks\": {\n          \"bg\": \"#010409\",\n          \"textPrimary\": \"#f0f3f6\",\n          \"textSecondary\": \"#f0f3f6\",\n          \"textLink\": \"#71b7ff\",\n          \"btnIcon\": \"#f0f3f6\",\n          \"btnHoverIcon\": \"#f0f3f6\",\n          \"btnHoverBg\": \"rgba(158,167,179,0.1)\",\n          \"inputText\": \"#f0f3f6\",\n          \"inputPlaceholderText\": \"#9ea7b3\",\n          \"inputFocusText\": \"#f0f3f6\",\n          \"inputBg\": \"#272b33\",\n          \"donutError\": \"#ff6a69\",\n          \"donutPending\": \"#f0b72f\",\n          \"donutSuccess\": \"#09b43a\",\n          \"donutNeutral\": \"#bdc4cc\",\n          \"dropdownText\": \"#f0f3f6\",\n          \"dropdownBg\": \"#272b33\",\n          \"dropdownBorder\": \"#7a828e\",\n          \"dropdownShadow\": \"rgba(1,4,9,0.3)\",\n          \"dropdownHoverText\": \"#f0f3f6\",\n          \"dropdownHoverBg\": \"rgba(158,167,179,0.1)\",\n          \"dropdownBtnHoverText\": \"#f0f3f6\",\n          \"dropdownBtnHoverBg\": \"rgba(158,167,179,0.1)\",\n          \"scrollbarThumbBg\": \"rgba(158,167,179,0.4)\",\n          \"headerLabelText\": \"#f0f3f6\",\n          \"headerLabelOpenText\": \"#f0f3f6\",\n          \"headerBorder\": \"#7a828e\",\n          \"headerIcon\": \"#f0f3f6\",\n          \"lineText\": \"#f0f3f6\",\n          \"lineNumText\": \"#9ea7b3\",\n          \"lineTimestampText\": \"#9ea7b3\",\n          \"lineHoverBg\": \"rgba(158,167,179,0.1)\",\n          \"lineSelectedBg\": \"rgba(64,158,255,0.15)\",\n          \"lineSelectedNumText\": \"#71b7ff\",\n          \"lineDtFmText\": \"#0a0c10\",\n          \"lineDtFmBg\": \"#e09b13\",\n          \"gateBg\": \"rgba(224,155,19,0.15)\",\n          \"gateText\": \"#f0f3f6\",\n          \"gateWaitingText\": \"#f0b72f\",\n          \"stepHeaderOpenBg\": \"#272b33\",\n          \"stepErrorText\": \"#ff6a69\",\n          \"stepWarningText\": \"#f0b72f\",\n          \"loglineText\": \"#f0f3f6\",\n          \"loglineNumText\": \"#9ea7b3\",\n          \"loglineDebugText\": \"#b780ff\",\n          \"loglineErrorText\": \"#f0f3f6\",\n          \"loglineErrorNumText\": \"#9ea7b3\",\n          \"loglineErrorBg\": \"rgba(255,106,105,0.15)\",\n          \"loglineWarningText\": \"#f0f3f6\",\n          \"loglineWarningNumText\": \"#f0b72f\",\n          \"loglineWarningBg\": \"rgba(224,155,19,0.15)\",\n          \"loglineCommandText\": \"#71b7ff\",\n          \"loglineSectionText\": \"#26cd4d\",\n          \"ansi\": {\n            \"black\": \"#0a0c10\",\n            \"blackBright\": \"#272b33\",\n            \"white\": \"#d9dee3\",\n            \"whiteBright\": \"#d9dee3\",\n            \"gray\": \"#9ea7b3\",\n            \"red\": \"#ff9492\",\n            \"redBright\": \"#ffb1af\",\n            \"green\": \"#26cd4d\",\n            \"greenBright\": \"#4ae168\",\n            \"yellow\": \"#f0b72f\",\n            \"yellowBright\": \"#f7c843\",\n            \"blue\": \"#71b7ff\",\n            \"blueBright\": \"#91cbff\",\n            \"magenta\": \"#cb9eff\",\n            \"magentaBright\": \"#dbb7ff\",\n            \"cyan\": \"#76e3ea\",\n            \"cyanBright\": \"#b3f0ff\"\n          }\n        },\n        \"project\": {\n          \"headerBg\": \"#0a0c10\",\n          \"sidebarBg\": \"#272b33\",\n          \"gradientIn\": \"#272b33\",\n          \"gradientOut\": \"rgba(39,43,51,0)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"bg\": \"#f6f8fa\"\n          }\n        },\n        \"avatar\": {\n          \"bg\": \"rgba(255,255,255,0.1)\",\n          \"border\": \"rgba(255,255,255,0.9)\",\n          \"stackFade\": \"#525964\",\n          \"stackFadeMore\": \"#272b33\"\n        },\n        \"topicTag\": {\n          \"border\": \"#409eff\"\n        },\n        \"counter\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"selectMenu\": {\n          \"backdropBorder\": \"#7a828e\",\n          \"tapHighlight\": \"rgba(82,89,100,0.5)\",\n          \"tapFocusBg\": \"#1e60d5\"\n        },\n        \"header\": {\n          \"text\": \"rgba(255,255,255,0.7)\",\n          \"bg\": \"#272b33\",\n          \"divider\": \"#bdc4cc\",\n          \"logo\": \"#ffffff\"\n        },\n        \"headerSearch\": {\n          \"bg\": \"#0a0c10\",\n          \"border\": \"#525964\"\n        },\n        \"sidenav\": {\n          \"selectedBg\": \"#272b33\"\n        },\n        \"menu\": {\n          \"bgActive\": \"#272b33\"\n        },\n        \"input\": {\n          \"disabledBg\": \"rgba(158,167,179,0)\"\n        },\n        \"timeline\": {\n          \"badgeBg\": \"#272b33\"\n        },\n        \"ansi\": {\n          \"black\": \"#7a828e\",\n          \"blackBright\": \"#9ea7b3\",\n          \"white\": \"#d9dee3\",\n          \"whiteBright\": \"#ffffff\",\n          \"gray\": \"#9ea7b3\",\n          \"red\": \"#ff9492\",\n          \"redBright\": \"#ffb1af\",\n          \"green\": \"#26cd4d\",\n          \"greenBright\": \"#4ae168\",\n          \"yellow\": \"#f0b72f\",\n          \"yellowBright\": \"#f7c843\",\n          \"blue\": \"#71b7ff\",\n          \"blueBright\": \"#91cbff\",\n          \"magenta\": \"#cb9eff\",\n          \"magentaBright\": \"#dbb7ff\",\n          \"cyan\": \"#39c5cf\",\n          \"cyanBright\": \"#56d4dd\"\n        },\n        \"btn\": {\n          \"text\": \"#f0f3f6\",\n          \"bg\": \"#272b33\",\n          \"border\": \"#7a828e\",\n          \"hoverBg\": \"#525964\",\n          \"hoverBorder\": \"#bdc4cc\",\n          \"activeBg\": \"hsla(217,10%,33%,1)\",\n          \"activeBorder\": \"#9ea7b3\",\n          \"selectedBg\": \"rgba(82,89,100,0.9)\",\n          \"focusBg\": \"#272b33\",\n          \"focusBorder\": \"#bdc4cc\",\n          \"counterBg\": \"#525964\",\n          \"primary\": {\n            \"text\": \"#0a0c10\",\n            \"bg\": \"#09b43a\",\n            \"border\": \"#4ae168\",\n            \"hoverBg\": \"#26cd4d\",\n            \"hoverBorder\": \"#4ae168\",\n            \"selectedBg\": \"#09b43a\",\n            \"disabledText\": \"rgba(10,12,16,0.5)\",\n            \"disabledBg\": \"rgba(9,180,58,0.6)\",\n            \"disabledBorder\": \"rgba(74,225,104,0.4)\",\n            \"focusBg\": \"#09b43a\",\n            \"focusBorder\": \"#7a828e\",\n            \"icon\": \"#0a0c10\",\n            \"counterBg\": \"rgba(1,4,9,0.15)\"\n          },\n          \"outline\": {\n            \"text\": \"#71b7ff\",\n            \"hoverText\": \"#71b7ff\",\n            \"hoverBg\": \"#525964\",\n            \"hoverBorder\": \"#7a828e\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#2672f3\",\n            \"selectedBorder\": \"#7a828e\",\n            \"disabledText\": \"rgba(113,183,255,0.5)\",\n            \"disabledBg\": \"#0a0c10\",\n            \"disabledCounterBg\": \"rgba(64,158,255,0.05)\",\n            \"focusBorder\": \"#7a828e\",\n            \"counterBg\": \"rgba(64,158,255,0.1)\"\n          },\n          \"danger\": {\n            \"text\": \"#ff6a69\",\n            \"hoverText\": \"#0a0c10\",\n            \"hoverBg\": \"#ff6a69\",\n            \"hoverBorder\": \"#ff6a69\",\n            \"hoverIcon\": \"#0a0c10\",\n            \"hoverCounterBg\": \"rgba(1,4,9,0.15)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#ff4445\",\n            \"selectedBorder\": \"#ff9492\",\n            \"disabledText\": \"rgba(255,106,105,0.5)\",\n            \"disabledBg\": \"#0a0c10\",\n            \"disabledCounterBg\": \"rgba(255,106,105,0.05)\",\n            \"focusBorder\": \"#ff6a69\",\n            \"counterBg\": \"rgba(1,4,9,0.15)\",\n            \"icon\": \"#ff6a69\"\n          }\n        },\n        \"underlinenav\": {\n          \"icon\": \"#f0f3f6\",\n          \"borderHover\": \"#bdc4cc\"\n        },\n        \"actionListItem\": {\n          \"inlineDivider\": \"#7a828e\",\n          \"default\": {\n            \"hoverBg\": \"#272b33\",\n            \"hoverBorder\": \"#7a828e\",\n            \"activeBg\": \"#525964\",\n            \"activeBorder\": \"#9ea7b3\",\n            \"selectedBg\": \"#525964\"\n          },\n          \"danger\": {\n            \"hoverBg\": \"#ff6a69\",\n            \"activeBg\": \"#ff4445\",\n            \"hoverText\": \"#0a0c10\"\n          }\n        },\n        \"switchTrack\": {\n          \"bg\": \"#010409\",\n          \"border\": \"#7a828e\",\n          \"checked\": {\n            \"bg\": \"rgba(64,158,255,0.35)\",\n            \"hoverBg\": \"rgba(64,158,255,0.5)\",\n            \"activeBg\": \"rgba(64,158,255,0.65)\",\n            \"border\": \"#409eff\"\n          }\n        },\n        \"switchKnob\": {\n          \"checked\": {\n            \"bg\": \"#409eff\",\n            \"disabledBg\": \"#7a828e\"\n          }\n        },\n        \"segmentedControl\": {\n          \"bg\": \"#272b33\",\n          \"button\": {\n            \"hover\": {\n              \"bg\": \"#525964\"\n            },\n            \"active\": {\n              \"bg\": \"#272b33\"\n            },\n            \"selected\": {\n              \"border\": \"#9ea7b3\"\n            }\n          }\n        },\n        \"fg\": {\n          \"default\": \"#f0f3f6\",\n          \"muted\": \"#f0f3f6\",\n          \"subtle\": \"#9ea7b3\",\n          \"onEmphasis\": \"#0a0c10\"\n        },\n        \"canvas\": {\n          \"default\": \"#0a0c10\",\n          \"overlay\": \"#272b33\",\n          \"inset\": \"#010409\",\n          \"subtle\": \"#272b33\"\n        },\n        \"border\": {\n          \"default\": \"#7a828e\",\n          \"muted\": \"#7a828e\",\n          \"subtle\": \"#7a828e\"\n        },\n        \"neutral\": {\n          \"emphasisPlus\": \"#ffffff\",\n          \"emphasis\": \"#9ea7b3\",\n          \"muted\": \"rgba(158,167,179,0.4)\",\n          \"subtle\": \"rgba(158,167,179,0.1)\"\n        },\n        \"accent\": {\n          \"fg\": \"#71b7ff\",\n          \"emphasis\": \"#409eff\",\n          \"muted\": \"#409eff\",\n          \"subtle\": \"rgba(64,158,255,0.15)\"\n        },\n        \"success\": {\n          \"fg\": \"#26cd4d\",\n          \"emphasis\": \"#09b43a\",\n          \"muted\": \"#09b43a\",\n          \"subtle\": \"rgba(9,180,58,0.15)\"\n        },\n        \"attention\": {\n          \"fg\": \"#f0b72f\",\n          \"emphasis\": \"#e09b13\",\n          \"muted\": \"#e09b13\",\n          \"subtle\": \"rgba(224,155,19,0.15)\"\n        },\n        \"severe\": {\n          \"fg\": \"#e7811d\",\n          \"emphasis\": \"#e7811d\",\n          \"muted\": \"#e7811d\",\n          \"subtle\": \"rgba(231,129,29,0.15)\"\n        },\n        \"danger\": {\n          \"fg\": \"#ff6a69\",\n          \"emphasis\": \"#ff6a69\",\n          \"muted\": \"#ff6a69\",\n          \"subtle\": \"rgba(255,106,105,0.15)\"\n        },\n        \"open\": {\n          \"fg\": \"#26cd4d\",\n          \"emphasis\": \"#09b43a\",\n          \"muted\": \"rgba(9,180,58,0.4)\",\n          \"subtle\": \"rgba(9,180,58,0.15)\"\n        },\n        \"closed\": {\n          \"fg\": \"#ff6a69\",\n          \"emphasis\": \"#ff6a69\",\n          \"muted\": \"rgba(255,106,105,0.4)\",\n          \"subtle\": \"rgba(255,106,105,0.15)\"\n        },\n        \"done\": {\n          \"fg\": \"#b780ff\",\n          \"emphasis\": \"#b87fff\",\n          \"muted\": \"#b780ff\",\n          \"subtle\": \"rgba(183,128,255,0.15)\"\n        },\n        \"sponsors\": {\n          \"fg\": \"#ef6eb1\",\n          \"emphasis\": \"#ef6eb1\",\n          \"muted\": \"#ef6eb1\",\n          \"subtle\": \"rgba(239,110,177,0.15)\"\n        },\n        \"primer\": {\n          \"fg\": {\n            \"disabled\": \"#7a828e\"\n          },\n          \"canvas\": {\n            \"backdrop\": \"rgba(1,4,9,0.8)\",\n            \"sticky\": \"rgba(10,12,16,0.95)\"\n          },\n          \"border\": {\n            \"active\": \"#ff967d\",\n            \"contrast\": \"rgba(255,255,255,0.2)\"\n          }\n        }\n      },\n      \"shadows\": {\n        \"checks\": {\n          \"inputShadow\": \"0 0 0 1px (obj) => get_1.default(obj, path)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"shadow\": {\n              \"outline\": \"rgb(255 255 255 / 25%) 0 0 0 1px inset\",\n              \"focus\": \"rgb(255 255 255 / 25%) 0 0 0 4px\",\n              \"hover\": \"0 4px 7px rgba(0, 0, 0, 0.15), 0 100px 80px rgba(255, 255, 255, 0.02), 0 42px 33px rgba(255, 255, 255, 0.024), 0 22px 18px rgba(255, 255, 255, 0.028), 0 12px 10px rgba(255, 255, 255, 0.034), 0 7px 5px rgba(255, 255, 255, 0.04), 0 3px 2px rgba(255, 255, 255, 0.07)\",\n              \"hoverMuted\": \"rgb(255 255 255) 0 0 0 2px inset\"\n            }\n          }\n        },\n        \"avatar\": {\n          \"childShadow\": \"-2px -2px 0 #0a0c10\"\n        },\n        \"overlay\": {\n          \"shadow\": \"0 0 0 1px #525964, 0 16px 32px rgba(1,4,9,0.85)\"\n        },\n        \"btn\": {\n          \"shadow\": \"0 0 transparent\",\n          \"insetShadow\": \"0 0 transparent\",\n          \"focusShadow\": \"0 0 0 3px rgba(189,196,204,0.3)\",\n          \"shadowActive\": \"inset 0 0.15em 0.3em rgba(1,4,9,0.15)\",\n          \"shadowInputFocus\": \"0 0 0 0.2em rgba(64,158,255,0.3)\",\n          \"primary\": {\n            \"shadow\": \"0 0 transparent\",\n            \"insetShadow\": \"0 0 transparent\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(46,164,79,0.4)\"\n          },\n          \"outline\": {\n            \"hoverShadow\": \"0 1px 0 rgba(1,4,9,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(49,139,248,0.4)\"\n          },\n          \"danger\": {\n            \"hoverShadow\": \"0 0 transparent\",\n            \"hoverInsetShadow\": \"0 0 transparent\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(255,106,105,0.4)\"\n          }\n        },\n        \"shadow\": {\n          \"small\": \"0 0 transparent\",\n          \"medium\": \"0 3px 6px #010409\",\n          \"large\": \"0 8px 24px #010409\",\n          \"extraLarge\": \"0 12px 48px #010409\"\n        },\n        \"primer\": {\n          \"shadow\": {\n            \"highlight\": \"0 0 transparent\",\n            \"inset\": \"0 0 transparent\",\n            \"focus\": \"0 0 0 3px #1e60d5\"\n          }\n        }\n      }\n    },\n    \"dark_colorblind\": {\n      \"colors\": {\n        \"canvasDefaultTransparent\": \"rgba(13,17,23,0)\",\n        \"pageHeaderBg\": \"#0d1117\",\n        \"marketingIcon\": {\n          \"primary\": \"#79c0ff\",\n          \"secondary\": \"#1f6feb\"\n        },\n        \"diffBlob\": {\n          \"addition\": {\n            \"numText\": \"#c9d1d9\",\n            \"fg\": \"#c9d1d9\",\n            \"numBg\": \"rgba(88,166,255,0.3)\",\n            \"lineBg\": \"rgba(56,139,253,0.15)\",\n            \"wordBg\": \"rgba(56,139,253,0.4)\"\n          },\n          \"deletion\": {\n            \"numText\": \"#c9d1d9\",\n            \"fg\": \"#c9d1d9\",\n            \"numBg\": \"rgba(212,118,22,0.3)\",\n            \"lineBg\": \"rgba(212,118,22,0.15)\",\n            \"wordBg\": \"rgba(212,118,22,0.4)\"\n          },\n          \"hunk\": {\n            \"numBg\": \"rgba(56,139,253,0.4)\"\n          },\n          \"expander\": {\n            \"icon\": \"#8b949e\"\n          }\n        },\n        \"diffstat\": {\n          \"deletionBorder\": \"rgba(240,246,252,0.1)\",\n          \"additionBorder\": \"rgba(240,246,252,0.1)\",\n          \"additionBg\": \"#58a6ff\"\n        },\n        \"searchKeyword\": {\n          \"hl\": \"rgba(210,153,34,0.4)\"\n        },\n        \"prettylights\": {\n          \"syntax\": {\n            \"comment\": \"#8b949e\",\n            \"constant\": \"#79c0ff\",\n            \"entity\": \"#d2a8ff\",\n            \"storageModifierImport\": \"#c9d1d9\",\n            \"entityTag\": \"#a5d6ff\",\n            \"keyword\": \"#ec8e2c\",\n            \"string\": \"#a5d6ff\",\n            \"variable\": \"#fdac54\",\n            \"brackethighlighterUnmatched\": \"#d47616\",\n            \"invalidIllegalText\": \"#f0f6fc\",\n            \"invalidIllegalBg\": \"#6c3906\",\n            \"carriageReturnText\": \"#f0f6fc\",\n            \"carriageReturnBg\": \"#914d04\",\n            \"stringRegexp\": \"#a5d6ff\",\n            \"markupList\": \"#f2cc60\",\n            \"markupHeading\": \"#1f6feb\",\n            \"markupItalic\": \"#c9d1d9\",\n            \"markupBold\": \"#c9d1d9\",\n            \"markupDeletedText\": \"#ffe2bb\",\n            \"markupDeletedBg\": \"#4e2906\",\n            \"markupInsertedText\": \"#cae8ff\",\n            \"markupInsertedBg\": \"#0c2d6b\",\n            \"markupChangedText\": \"#ffe2bb\",\n            \"markupChangedBg\": \"#4e2906\",\n            \"markupIgnoredText\": \"#c9d1d9\",\n            \"markupIgnoredBg\": \"#1158c7\",\n            \"metaDiffRange\": \"#d2a8ff\",\n            \"brackethighlighterAngle\": \"#8b949e\",\n            \"sublimelinterGutterMark\": \"#484f58\",\n            \"constantOtherReferenceLink\": \"#a5d6ff\"\n          }\n        },\n        \"codemirror\": {\n          \"text\": \"#c9d1d9\",\n          \"bg\": \"#0d1117\",\n          \"guttersBg\": \"#0d1117\",\n          \"guttermarkerText\": \"#0d1117\",\n          \"guttermarkerSubtleText\": \"#6e7681\",\n          \"linenumberText\": \"#8b949e\",\n          \"cursor\": \"#c9d1d9\",\n          \"selectionBg\": \"rgba(56,139,253,0.4)\",\n          \"activelineBg\": \"rgba(110,118,129,0.1)\",\n          \"matchingbracketText\": \"#c9d1d9\",\n          \"linesBg\": \"#0d1117\",\n          \"syntax\": {\n            \"comment\": \"#8b949e\",\n            \"constant\": \"#79c0ff\",\n            \"entity\": \"#d2a8ff\",\n            \"keyword\": \"#ec8e2c\",\n            \"storage\": \"#ec8e2c\",\n            \"string\": \"#a5d6ff\",\n            \"support\": \"#79c0ff\",\n            \"variable\": \"#fdac54\"\n          }\n        },\n        \"checks\": {\n          \"bg\": \"#010409\",\n          \"textPrimary\": \"#c9d1d9\",\n          \"textSecondary\": \"#8b949e\",\n          \"textLink\": \"#58a6ff\",\n          \"btnIcon\": \"#8b949e\",\n          \"btnHoverIcon\": \"#c9d1d9\",\n          \"btnHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"inputText\": \"#8b949e\",\n          \"inputPlaceholderText\": \"#6e7681\",\n          \"inputFocusText\": \"#c9d1d9\",\n          \"inputBg\": \"#161b22\",\n          \"donutError\": \"#d47616\",\n          \"donutPending\": \"#d29922\",\n          \"donutSuccess\": \"#388bfd\",\n          \"donutNeutral\": \"#8b949e\",\n          \"dropdownText\": \"#c9d1d9\",\n          \"dropdownBg\": \"#161b22\",\n          \"dropdownBorder\": \"#30363d\",\n          \"dropdownShadow\": \"rgba(1,4,9,0.3)\",\n          \"dropdownHoverText\": \"#c9d1d9\",\n          \"dropdownHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"dropdownBtnHoverText\": \"#c9d1d9\",\n          \"dropdownBtnHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"scrollbarThumbBg\": \"rgba(110,118,129,0.4)\",\n          \"headerLabelText\": \"#8b949e\",\n          \"headerLabelOpenText\": \"#c9d1d9\",\n          \"headerBorder\": \"#21262d\",\n          \"headerIcon\": \"#8b949e\",\n          \"lineText\": \"#8b949e\",\n          \"lineNumText\": \"#6e7681\",\n          \"lineTimestampText\": \"#6e7681\",\n          \"lineHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"lineSelectedBg\": \"rgba(56,139,253,0.15)\",\n          \"lineSelectedNumText\": \"#58a6ff\",\n          \"lineDtFmText\": \"#ffffff\",\n          \"lineDtFmBg\": \"#9e6a03\",\n          \"gateBg\": \"rgba(187,128,9,0.15)\",\n          \"gateText\": \"#8b949e\",\n          \"gateWaitingText\": \"#d29922\",\n          \"stepHeaderOpenBg\": \"#161b22\",\n          \"stepErrorText\": \"#d47616\",\n          \"stepWarningText\": \"#d29922\",\n          \"loglineText\": \"#8b949e\",\n          \"loglineNumText\": \"#6e7681\",\n          \"loglineDebugText\": \"#a371f7\",\n          \"loglineErrorText\": \"#8b949e\",\n          \"loglineErrorNumText\": \"#6e7681\",\n          \"loglineErrorBg\": \"rgba(212,118,22,0.15)\",\n          \"loglineWarningText\": \"#8b949e\",\n          \"loglineWarningNumText\": \"#d29922\",\n          \"loglineWarningBg\": \"rgba(187,128,9,0.15)\",\n          \"loglineCommandText\": \"#58a6ff\",\n          \"loglineSectionText\": \"#58a6ff\",\n          \"ansi\": {\n            \"black\": \"#0d1117\",\n            \"blackBright\": \"#161b22\",\n            \"white\": \"#b1bac4\",\n            \"whiteBright\": \"#b1bac4\",\n            \"gray\": \"#6e7681\",\n            \"red\": \"#ec8e2c\",\n            \"redBright\": \"#fdac54\",\n            \"green\": \"#58a6ff\",\n            \"greenBright\": \"#79c0ff\",\n            \"yellow\": \"#d29922\",\n            \"yellowBright\": \"#e3b341\",\n            \"blue\": \"#58a6ff\",\n            \"blueBright\": \"#79c0ff\",\n            \"magenta\": \"#bc8cff\",\n            \"magentaBright\": \"#d2a8ff\",\n            \"cyan\": \"#76e3ea\",\n            \"cyanBright\": \"#b3f0ff\"\n          }\n        },\n        \"project\": {\n          \"headerBg\": \"#0d1117\",\n          \"sidebarBg\": \"#161b22\",\n          \"gradientIn\": \"#161b22\",\n          \"gradientOut\": \"rgba(22,27,34,0)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"bg\": \"#f6f8fa\"\n          }\n        },\n        \"avatar\": {\n          \"bg\": \"rgba(255,255,255,0.1)\",\n          \"border\": \"rgba(240,246,252,0.1)\",\n          \"stackFade\": \"#30363d\",\n          \"stackFadeMore\": \"#21262d\"\n        },\n        \"topicTag\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"counter\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"selectMenu\": {\n          \"backdropBorder\": \"#484f58\",\n          \"tapHighlight\": \"rgba(48,54,61,0.5)\",\n          \"tapFocusBg\": \"#0c2d6b\"\n        },\n        \"header\": {\n          \"text\": \"rgba(255,255,255,0.7)\",\n          \"bg\": \"#161b22\",\n          \"divider\": \"#8b949e\",\n          \"logo\": \"#f0f6fc\"\n        },\n        \"headerSearch\": {\n          \"bg\": \"#0d1117\",\n          \"border\": \"#30363d\"\n        },\n        \"sidenav\": {\n          \"selectedBg\": \"#21262d\"\n        },\n        \"menu\": {\n          \"bgActive\": \"#161b22\"\n        },\n        \"input\": {\n          \"disabledBg\": \"rgba(110,118,129,0)\"\n        },\n        \"timeline\": {\n          \"badgeBg\": \"#21262d\"\n        },\n        \"ansi\": {\n          \"black\": \"#484f58\",\n          \"blackBright\": \"#6e7681\",\n          \"white\": \"#b1bac4\",\n          \"whiteBright\": \"#ffffff\",\n          \"gray\": \"#6e7681\",\n          \"red\": \"#ec8e2c\",\n          \"redBright\": \"#fdac54\",\n          \"green\": \"#58a6ff\",\n          \"greenBright\": \"#79c0ff\",\n          \"yellow\": \"#d29922\",\n          \"yellowBright\": \"#e3b341\",\n          \"blue\": \"#58a6ff\",\n          \"blueBright\": \"#79c0ff\",\n          \"magenta\": \"#bc8cff\",\n          \"magentaBright\": \"#d2a8ff\",\n          \"cyan\": \"#39c5cf\",\n          \"cyanBright\": \"#56d4dd\"\n        },\n        \"btn\": {\n          \"text\": \"#c9d1d9\",\n          \"bg\": \"#21262d\",\n          \"border\": \"rgba(240,246,252,0.1)\",\n          \"hoverBg\": \"#30363d\",\n          \"hoverBorder\": \"#8b949e\",\n          \"activeBg\": \"hsla(212,12%,18%,1)\",\n          \"activeBorder\": \"#6e7681\",\n          \"selectedBg\": \"#161b22\",\n          \"focusBg\": \"#21262d\",\n          \"focusBorder\": \"#8b949e\",\n          \"counterBg\": \"#30363d\",\n          \"primary\": {\n            \"text\": \"#ffffff\",\n            \"bg\": \"#1f6feb\",\n            \"border\": \"rgba(240,246,252,0.1)\",\n            \"hoverBg\": \"#388bfd\",\n            \"hoverBorder\": \"rgba(240,246,252,0.1)\",\n            \"selectedBg\": \"#1f6feb\",\n            \"disabledText\": \"rgba(255,255,255,0.5)\",\n            \"disabledBg\": \"rgba(31,111,235,0.6)\",\n            \"disabledBorder\": \"rgba(240,246,252,0.1)\",\n            \"focusBg\": \"#1f6feb\",\n            \"focusBorder\": \"rgba(240,246,252,0.1)\",\n            \"icon\": \"#ffffff\",\n            \"counterBg\": \"rgba(255,255,255,0.2)\"\n          },\n          \"outline\": {\n            \"text\": \"#58a6ff\",\n            \"hoverText\": \"#58a6ff\",\n            \"hoverBg\": \"#30363d\",\n            \"hoverBorder\": \"rgba(240,246,252,0.1)\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#0d419d\",\n            \"selectedBorder\": \"rgba(240,246,252,0.1)\",\n            \"disabledText\": \"rgba(88,166,255,0.5)\",\n            \"disabledBg\": \"#0d1117\",\n            \"disabledCounterBg\": \"rgba(31,111,235,0.05)\",\n            \"focusBorder\": \"rgba(240,246,252,0.1)\",\n            \"counterBg\": \"rgba(31,111,235,0.1)\"\n          },\n          \"danger\": {\n            \"text\": \"#d47616\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#b76100\",\n            \"hoverBorder\": \"#d47616\",\n            \"hoverIcon\": \"#ffffff\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#914d04\",\n            \"selectedBorder\": \"#ec8e2c\",\n            \"disabledText\": \"rgba(212,118,22,0.5)\",\n            \"disabledBg\": \"#0d1117\",\n            \"disabledCounterBg\": \"rgba(183,97,0,0.05)\",\n            \"focusBorder\": \"#d47616\",\n            \"counterBg\": \"rgba(183,97,0,0.1)\",\n            \"icon\": \"#d47616\"\n          }\n        },\n        \"underlinenav\": {\n          \"icon\": \"#6e7681\",\n          \"borderHover\": \"rgba(110,118,129,0.4)\"\n        },\n        \"actionListItem\": {\n          \"inlineDivider\": \"rgba(48,54,61,0.48)\",\n          \"default\": {\n            \"hoverBg\": \"rgba(177,186,196,0.12)\",\n            \"hoverBorder\": \"rgba(0,0,0,0)\",\n            \"activeBg\": \"rgba(177,186,196,0.2)\",\n            \"activeBorder\": \"rgba(0,0,0,0)\",\n            \"selectedBg\": \"rgba(177,186,196,0.08)\"\n          },\n          \"danger\": {\n            \"hoverBg\": \"rgba(212,118,22,0.16)\",\n            \"activeBg\": \"rgba(212,118,22,0.24)\",\n            \"hoverText\": \"#ec8e2c\"\n          }\n        },\n        \"switchTrack\": {\n          \"bg\": \"#010409\",\n          \"border\": \"#6e7681\",\n          \"checked\": {\n            \"bg\": \"rgba(31,111,235,0.35)\",\n            \"hoverBg\": \"rgba(31,111,235,0.5)\",\n            \"activeBg\": \"rgba(31,111,235,0.65)\",\n            \"border\": \"#58a6ff\"\n          }\n        },\n        \"switchKnob\": {\n          \"checked\": {\n            \"bg\": \"#1f6feb\",\n            \"disabledBg\": \"#484f58\"\n          }\n        },\n        \"segmentedControl\": {\n          \"bg\": \"#161b22\",\n          \"button\": {\n            \"hover\": {\n              \"bg\": \"#30363d\"\n            },\n            \"active\": {\n              \"bg\": \"#21262d\"\n            },\n            \"selected\": {\n              \"border\": \"#6e7681\"\n            }\n          }\n        },\n        \"fg\": {\n          \"default\": \"#c9d1d9\",\n          \"muted\": \"#8b949e\",\n          \"subtle\": \"#6e7681\",\n          \"onEmphasis\": \"#ffffff\"\n        },\n        \"canvas\": {\n          \"default\": \"#0d1117\",\n          \"overlay\": \"#161b22\",\n          \"inset\": \"#010409\",\n          \"subtle\": \"#161b22\"\n        },\n        \"border\": {\n          \"default\": \"#30363d\",\n          \"muted\": \"#21262d\",\n          \"subtle\": \"rgba(240,246,252,0.1)\"\n        },\n        \"neutral\": {\n          \"emphasisPlus\": \"#6e7681\",\n          \"emphasis\": \"#6e7681\",\n          \"muted\": \"rgba(110,118,129,0.4)\",\n          \"subtle\": \"rgba(110,118,129,0.1)\"\n        },\n        \"accent\": {\n          \"fg\": \"#58a6ff\",\n          \"emphasis\": \"#1f6feb\",\n          \"muted\": \"rgba(56,139,253,0.4)\",\n          \"subtle\": \"rgba(56,139,253,0.15)\"\n        },\n        \"success\": {\n          \"fg\": \"#58a6ff\",\n          \"emphasis\": \"#1f6feb\",\n          \"muted\": \"rgba(56,139,253,0.4)\",\n          \"subtle\": \"rgba(56,139,253,0.15)\"\n        },\n        \"attention\": {\n          \"fg\": \"#d29922\",\n          \"emphasis\": \"#9e6a03\",\n          \"muted\": \"rgba(187,128,9,0.4)\",\n          \"subtle\": \"rgba(187,128,9,0.15)\"\n        },\n        \"severe\": {\n          \"fg\": \"#d47616\",\n          \"emphasis\": \"#b76100\",\n          \"muted\": \"rgba(212,118,22,0.4)\",\n          \"subtle\": \"rgba(212,118,22,0.15)\"\n        },\n        \"danger\": {\n          \"fg\": \"#d47616\",\n          \"emphasis\": \"#b76100\",\n          \"muted\": \"rgba(212,118,22,0.4)\",\n          \"subtle\": \"rgba(212,118,22,0.15)\"\n        },\n        \"open\": {\n          \"fg\": \"#ec8e2c\",\n          \"emphasis\": \"#b76100\",\n          \"muted\": \"rgba(212,118,22,0.4)\",\n          \"subtle\": \"rgba(212,118,22,0.15)\"\n        },\n        \"closed\": {\n          \"fg\": \"#8b949e\",\n          \"emphasis\": \"#6e7681\",\n          \"muted\": \"rgba(110,118,129,0.4)\",\n          \"subtle\": \"rgba(110,118,129,0.1)\"\n        },\n        \"done\": {\n          \"fg\": \"#a371f7\",\n          \"emphasis\": \"#8957e5\",\n          \"muted\": \"rgba(163,113,247,0.4)\",\n          \"subtle\": \"rgba(163,113,247,0.15)\"\n        },\n        \"sponsors\": {\n          \"fg\": \"#db61a2\",\n          \"emphasis\": \"#bf4b8a\",\n          \"muted\": \"rgba(219,97,162,0.4)\",\n          \"subtle\": \"rgba(219,97,162,0.15)\"\n        },\n        \"primer\": {\n          \"fg\": {\n            \"disabled\": \"#484f58\"\n          },\n          \"canvas\": {\n            \"backdrop\": \"rgba(1,4,9,0.8)\",\n            \"sticky\": \"rgba(13,17,23,0.95)\"\n          },\n          \"border\": {\n            \"active\": \"#f78166\",\n            \"contrast\": \"rgba(255,255,255,0.2)\"\n          }\n        }\n      },\n      \"shadows\": {\n        \"checks\": {\n          \"inputShadow\": \"0 0 0 1px (obj) => get_1.default(obj, path)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"shadow\": {\n              \"outline\": \"rgb(255 255 255 / 25%) 0 0 0 1px inset\",\n              \"focus\": \"rgb(255 255 255 / 25%) 0 0 0 4px\",\n              \"hover\": \"0 4px 7px rgba(0, 0, 0, 0.15), 0 100px 80px rgba(255, 255, 255, 0.02), 0 42px 33px rgba(255, 255, 255, 0.024), 0 22px 18px rgba(255, 255, 255, 0.028), 0 12px 10px rgba(255, 255, 255, 0.034), 0 7px 5px rgba(255, 255, 255, 0.04), 0 3px 2px rgba(255, 255, 255, 0.07)\",\n              \"hoverMuted\": \"rgb(255 255 255) 0 0 0 2px inset\"\n            }\n          }\n        },\n        \"avatar\": {\n          \"childShadow\": \"-2px -2px 0 #0d1117\"\n        },\n        \"overlay\": {\n          \"shadow\": \"0 0 0 1px #30363d, 0 16px 32px rgba(1,4,9,0.85)\"\n        },\n        \"btn\": {\n          \"shadow\": \"0 0 transparent\",\n          \"insetShadow\": \"0 0 transparent\",\n          \"focusShadow\": \"0 0 0 3px rgba(139,148,158,0.3)\",\n          \"shadowActive\": \"inset 0 0.15em 0.3em rgba(1,4,9,0.15)\",\n          \"shadowInputFocus\": \"0 0 0 0.2em rgba(31,111,235,0.3)\",\n          \"primary\": {\n            \"shadow\": \"0 0 transparent\",\n            \"insetShadow\": \"0 0 transparent\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(46,164,79,0.4)\"\n          },\n          \"outline\": {\n            \"hoverShadow\": \"0 1px 0 rgba(1,4,9,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(17,88,199,0.4)\"\n          },\n          \"danger\": {\n            \"hoverShadow\": \"0 0 transparent\",\n            \"hoverInsetShadow\": \"0 0 transparent\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(212,118,22,0.4)\"\n          }\n        },\n        \"shadow\": {\n          \"small\": \"0 0 transparent\",\n          \"medium\": \"0 3px 6px #010409\",\n          \"large\": \"0 8px 24px #010409\",\n          \"extraLarge\": \"0 12px 48px #010409\"\n        },\n        \"primer\": {\n          \"shadow\": {\n            \"highlight\": \"0 0 transparent\",\n            \"inset\": \"0 0 transparent\",\n            \"focus\": \"0 0 0 3px #0c2d6b\"\n          }\n        }\n      }\n    },\n    \"dark_tritanopia\": {\n      \"colors\": {\n        \"canvasDefaultTransparent\": \"rgba(13,17,23,0)\",\n        \"pageHeaderBg\": \"#0d1117\",\n        \"marketingIcon\": {\n          \"primary\": \"#79c0ff\",\n          \"secondary\": \"#1f6feb\"\n        },\n        \"diffBlob\": {\n          \"addition\": {\n            \"numText\": \"#c9d1d9\",\n            \"fg\": \"#c9d1d9\",\n            \"numBg\": \"rgba(88,166,255,0.3)\",\n            \"lineBg\": \"rgba(56,139,253,0.15)\",\n            \"wordBg\": \"rgba(56,139,253,0.4)\"\n          },\n          \"deletion\": {\n            \"numText\": \"#c9d1d9\",\n            \"fg\": \"#c9d1d9\",\n            \"numBg\": \"rgba(248,81,73,0.3)\",\n            \"lineBg\": \"rgba(248,81,73,0.15)\",\n            \"wordBg\": \"rgba(248,81,73,0.4)\"\n          },\n          \"hunk\": {\n            \"numBg\": \"rgba(56,139,253,0.4)\"\n          },\n          \"expander\": {\n            \"icon\": \"#8b949e\"\n          }\n        },\n        \"diffstat\": {\n          \"deletionBorder\": \"rgba(240,246,252,0.1)\",\n          \"additionBorder\": \"rgba(240,246,252,0.1)\",\n          \"additionBg\": \"#58a6ff\"\n        },\n        \"searchKeyword\": {\n          \"hl\": \"rgba(210,153,34,0.4)\"\n        },\n        \"prettylights\": {\n          \"syntax\": {\n            \"comment\": \"#8b949e\",\n            \"constant\": \"#79c0ff\",\n            \"entity\": \"#d2a8ff\",\n            \"storageModifierImport\": \"#c9d1d9\",\n            \"entityTag\": \"#a5d6ff\",\n            \"keyword\": \"#ff7b72\",\n            \"string\": \"#a5d6ff\",\n            \"variable\": \"#ffa198\",\n            \"brackethighlighterUnmatched\": \"#f85149\",\n            \"invalidIllegalText\": \"#f0f6fc\",\n            \"invalidIllegalBg\": \"#8e1519\",\n            \"carriageReturnText\": \"#f0f6fc\",\n            \"carriageReturnBg\": \"#b62324\",\n            \"stringRegexp\": \"#a5d6ff\",\n            \"markupList\": \"#f2cc60\",\n            \"markupHeading\": \"#1f6feb\",\n            \"markupItalic\": \"#c9d1d9\",\n            \"markupBold\": \"#c9d1d9\",\n            \"markupDeletedText\": \"#ffdcd7\",\n            \"markupDeletedBg\": \"#67060c\",\n            \"markupInsertedText\": \"#cae8ff\",\n            \"markupInsertedBg\": \"#0c2d6b\",\n            \"markupChangedText\": \"#ffdcd7\",\n            \"markupChangedBg\": \"#67060c\",\n            \"markupIgnoredText\": \"#c9d1d9\",\n            \"markupIgnoredBg\": \"#1158c7\",\n            \"metaDiffRange\": \"#d2a8ff\",\n            \"brackethighlighterAngle\": \"#8b949e\",\n            \"sublimelinterGutterMark\": \"#484f58\",\n            \"constantOtherReferenceLink\": \"#a5d6ff\"\n          }\n        },\n        \"codemirror\": {\n          \"text\": \"#c9d1d9\",\n          \"bg\": \"#0d1117\",\n          \"guttersBg\": \"#0d1117\",\n          \"guttermarkerText\": \"#0d1117\",\n          \"guttermarkerSubtleText\": \"#6e7681\",\n          \"linenumberText\": \"#8b949e\",\n          \"cursor\": \"#c9d1d9\",\n          \"selectionBg\": \"rgba(56,139,253,0.4)\",\n          \"activelineBg\": \"rgba(110,118,129,0.1)\",\n          \"matchingbracketText\": \"#c9d1d9\",\n          \"linesBg\": \"#0d1117\",\n          \"syntax\": {\n            \"comment\": \"#8b949e\",\n            \"constant\": \"#79c0ff\",\n            \"entity\": \"#d2a8ff\",\n            \"keyword\": \"#ff7b72\",\n            \"storage\": \"#ff7b72\",\n            \"string\": \"#a5d6ff\",\n            \"support\": \"#79c0ff\",\n            \"variable\": \"#ffa198\"\n          }\n        },\n        \"checks\": {\n          \"bg\": \"#010409\",\n          \"textPrimary\": \"#c9d1d9\",\n          \"textSecondary\": \"#8b949e\",\n          \"textLink\": \"#58a6ff\",\n          \"btnIcon\": \"#8b949e\",\n          \"btnHoverIcon\": \"#c9d1d9\",\n          \"btnHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"inputText\": \"#8b949e\",\n          \"inputPlaceholderText\": \"#6e7681\",\n          \"inputFocusText\": \"#c9d1d9\",\n          \"inputBg\": \"#161b22\",\n          \"donutError\": \"#f85149\",\n          \"donutPending\": \"#d29922\",\n          \"donutSuccess\": \"#388bfd\",\n          \"donutNeutral\": \"#8b949e\",\n          \"dropdownText\": \"#c9d1d9\",\n          \"dropdownBg\": \"#161b22\",\n          \"dropdownBorder\": \"#30363d\",\n          \"dropdownShadow\": \"rgba(1,4,9,0.3)\",\n          \"dropdownHoverText\": \"#c9d1d9\",\n          \"dropdownHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"dropdownBtnHoverText\": \"#c9d1d9\",\n          \"dropdownBtnHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"scrollbarThumbBg\": \"rgba(110,118,129,0.4)\",\n          \"headerLabelText\": \"#8b949e\",\n          \"headerLabelOpenText\": \"#c9d1d9\",\n          \"headerBorder\": \"#21262d\",\n          \"headerIcon\": \"#8b949e\",\n          \"lineText\": \"#8b949e\",\n          \"lineNumText\": \"#6e7681\",\n          \"lineTimestampText\": \"#6e7681\",\n          \"lineHoverBg\": \"rgba(110,118,129,0.1)\",\n          \"lineSelectedBg\": \"rgba(56,139,253,0.15)\",\n          \"lineSelectedNumText\": \"#58a6ff\",\n          \"lineDtFmText\": \"#ffffff\",\n          \"lineDtFmBg\": \"#9e6a03\",\n          \"gateBg\": \"rgba(187,128,9,0.15)\",\n          \"gateText\": \"#8b949e\",\n          \"gateWaitingText\": \"#d29922\",\n          \"stepHeaderOpenBg\": \"#161b22\",\n          \"stepErrorText\": \"#f85149\",\n          \"stepWarningText\": \"#d29922\",\n          \"loglineText\": \"#8b949e\",\n          \"loglineNumText\": \"#6e7681\",\n          \"loglineDebugText\": \"#a371f7\",\n          \"loglineErrorText\": \"#8b949e\",\n          \"loglineErrorNumText\": \"#6e7681\",\n          \"loglineErrorBg\": \"rgba(248,81,73,0.15)\",\n          \"loglineWarningText\": \"#8b949e\",\n          \"loglineWarningNumText\": \"#d29922\",\n          \"loglineWarningBg\": \"rgba(187,128,9,0.15)\",\n          \"loglineCommandText\": \"#58a6ff\",\n          \"loglineSectionText\": \"#58a6ff\",\n          \"ansi\": {\n            \"black\": \"#0d1117\",\n            \"blackBright\": \"#161b22\",\n            \"white\": \"#b1bac4\",\n            \"whiteBright\": \"#b1bac4\",\n            \"gray\": \"#6e7681\",\n            \"red\": \"#ff7b72\",\n            \"redBright\": \"#ffa198\",\n            \"green\": \"#58a6ff\",\n            \"greenBright\": \"#79c0ff\",\n            \"yellow\": \"#d29922\",\n            \"yellowBright\": \"#e3b341\",\n            \"blue\": \"#58a6ff\",\n            \"blueBright\": \"#79c0ff\",\n            \"magenta\": \"#bc8cff\",\n            \"magentaBright\": \"#d2a8ff\",\n            \"cyan\": \"#76e3ea\",\n            \"cyanBright\": \"#b3f0ff\"\n          }\n        },\n        \"project\": {\n          \"headerBg\": \"#0d1117\",\n          \"sidebarBg\": \"#161b22\",\n          \"gradientIn\": \"#161b22\",\n          \"gradientOut\": \"rgba(22,27,34,0)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"bg\": \"#f6f8fa\"\n          }\n        },\n        \"avatar\": {\n          \"bg\": \"rgba(255,255,255,0.1)\",\n          \"border\": \"rgba(240,246,252,0.1)\",\n          \"stackFade\": \"#30363d\",\n          \"stackFadeMore\": \"#21262d\"\n        },\n        \"topicTag\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"counter\": {\n          \"border\": \"rgba(0,0,0,0)\"\n        },\n        \"selectMenu\": {\n          \"backdropBorder\": \"#484f58\",\n          \"tapHighlight\": \"rgba(48,54,61,0.5)\",\n          \"tapFocusBg\": \"#0c2d6b\"\n        },\n        \"header\": {\n          \"text\": \"rgba(255,255,255,0.7)\",\n          \"bg\": \"#161b22\",\n          \"divider\": \"#8b949e\",\n          \"logo\": \"#f0f6fc\"\n        },\n        \"headerSearch\": {\n          \"bg\": \"#0d1117\",\n          \"border\": \"#30363d\"\n        },\n        \"sidenav\": {\n          \"selectedBg\": \"#21262d\"\n        },\n        \"menu\": {\n          \"bgActive\": \"#161b22\"\n        },\n        \"input\": {\n          \"disabledBg\": \"rgba(110,118,129,0)\"\n        },\n        \"timeline\": {\n          \"badgeBg\": \"#21262d\"\n        },\n        \"ansi\": {\n          \"black\": \"#484f58\",\n          \"blackBright\": \"#6e7681\",\n          \"white\": \"#b1bac4\",\n          \"whiteBright\": \"#ffffff\",\n          \"gray\": \"#6e7681\",\n          \"red\": \"#ff7b72\",\n          \"redBright\": \"#ffa198\",\n          \"green\": \"#58a6ff\",\n          \"greenBright\": \"#79c0ff\",\n          \"yellow\": \"#d29922\",\n          \"yellowBright\": \"#e3b341\",\n          \"blue\": \"#58a6ff\",\n          \"blueBright\": \"#79c0ff\",\n          \"magenta\": \"#bc8cff\",\n          \"magentaBright\": \"#d2a8ff\",\n          \"cyan\": \"#39c5cf\",\n          \"cyanBright\": \"#56d4dd\"\n        },\n        \"btn\": {\n          \"text\": \"#c9d1d9\",\n          \"bg\": \"#21262d\",\n          \"border\": \"rgba(240,246,252,0.1)\",\n          \"hoverBg\": \"#30363d\",\n          \"hoverBorder\": \"#8b949e\",\n          \"activeBg\": \"hsla(212,12%,18%,1)\",\n          \"activeBorder\": \"#6e7681\",\n          \"selectedBg\": \"#161b22\",\n          \"focusBg\": \"#21262d\",\n          \"focusBorder\": \"#8b949e\",\n          \"counterBg\": \"#30363d\",\n          \"primary\": {\n            \"text\": \"#ffffff\",\n            \"bg\": \"#1f6feb\",\n            \"border\": \"rgba(240,246,252,0.1)\",\n            \"hoverBg\": \"#388bfd\",\n            \"hoverBorder\": \"rgba(240,246,252,0.1)\",\n            \"selectedBg\": \"#1f6feb\",\n            \"disabledText\": \"rgba(255,255,255,0.5)\",\n            \"disabledBg\": \"rgba(31,111,235,0.6)\",\n            \"disabledBorder\": \"rgba(240,246,252,0.1)\",\n            \"focusBg\": \"#1f6feb\",\n            \"focusBorder\": \"rgba(240,246,252,0.1)\",\n            \"icon\": \"#ffffff\",\n            \"counterBg\": \"rgba(255,255,255,0.2)\"\n          },\n          \"outline\": {\n            \"text\": \"#58a6ff\",\n            \"hoverText\": \"#58a6ff\",\n            \"hoverBg\": \"#30363d\",\n            \"hoverBorder\": \"rgba(240,246,252,0.1)\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#0d419d\",\n            \"selectedBorder\": \"rgba(240,246,252,0.1)\",\n            \"disabledText\": \"rgba(88,166,255,0.5)\",\n            \"disabledBg\": \"#0d1117\",\n            \"disabledCounterBg\": \"rgba(31,111,235,0.05)\",\n            \"focusBorder\": \"rgba(240,246,252,0.1)\",\n            \"counterBg\": \"rgba(31,111,235,0.1)\"\n          },\n          \"danger\": {\n            \"text\": \"#f85149\",\n            \"hoverText\": \"#ffffff\",\n            \"hoverBg\": \"#da3633\",\n            \"hoverBorder\": \"#f85149\",\n            \"hoverIcon\": \"#ffffff\",\n            \"hoverCounterBg\": \"rgba(255,255,255,0.2)\",\n            \"selectedText\": \"#ffffff\",\n            \"selectedBg\": \"#b62324\",\n            \"selectedBorder\": \"#ff7b72\",\n            \"disabledText\": \"rgba(248,81,73,0.5)\",\n            \"disabledBg\": \"#0d1117\",\n            \"disabledCounterBg\": \"rgba(218,54,51,0.05)\",\n            \"focusBorder\": \"#f85149\",\n            \"counterBg\": \"rgba(218,54,51,0.1)\",\n            \"icon\": \"#f85149\"\n          }\n        },\n        \"underlinenav\": {\n          \"icon\": \"#6e7681\",\n          \"borderHover\": \"rgba(110,118,129,0.4)\"\n        },\n        \"actionListItem\": {\n          \"inlineDivider\": \"rgba(48,54,61,0.48)\",\n          \"default\": {\n            \"hoverBg\": \"rgba(177,186,196,0.12)\",\n            \"hoverBorder\": \"rgba(0,0,0,0)\",\n            \"activeBg\": \"rgba(177,186,196,0.2)\",\n            \"activeBorder\": \"rgba(0,0,0,0)\",\n            \"selectedBg\": \"rgba(177,186,196,0.08)\"\n          },\n          \"danger\": {\n            \"hoverBg\": \"rgba(248,81,73,0.16)\",\n            \"activeBg\": \"rgba(248,81,73,0.24)\",\n            \"hoverText\": \"#ff7b72\"\n          }\n        },\n        \"switchTrack\": {\n          \"bg\": \"#010409\",\n          \"border\": \"#6e7681\",\n          \"checked\": {\n            \"bg\": \"rgba(31,111,235,0.35)\",\n            \"hoverBg\": \"rgba(31,111,235,0.5)\",\n            \"activeBg\": \"rgba(31,111,235,0.65)\",\n            \"border\": \"#58a6ff\"\n          }\n        },\n        \"switchKnob\": {\n          \"checked\": {\n            \"bg\": \"#1f6feb\",\n            \"disabledBg\": \"#484f58\"\n          }\n        },\n        \"segmentedControl\": {\n          \"bg\": \"#161b22\",\n          \"button\": {\n            \"hover\": {\n              \"bg\": \"#30363d\"\n            },\n            \"active\": {\n              \"bg\": \"#21262d\"\n            },\n            \"selected\": {\n              \"border\": \"#6e7681\"\n            }\n          }\n        },\n        \"fg\": {\n          \"default\": \"#c9d1d9\",\n          \"muted\": \"#8b949e\",\n          \"subtle\": \"#6e7681\",\n          \"onEmphasis\": \"#ffffff\"\n        },\n        \"canvas\": {\n          \"default\": \"#0d1117\",\n          \"overlay\": \"#161b22\",\n          \"inset\": \"#010409\",\n          \"subtle\": \"#161b22\"\n        },\n        \"border\": {\n          \"default\": \"#30363d\",\n          \"muted\": \"#21262d\",\n          \"subtle\": \"rgba(240,246,252,0.1)\"\n        },\n        \"neutral\": {\n          \"emphasisPlus\": \"#6e7681\",\n          \"emphasis\": \"#6e7681\",\n          \"muted\": \"rgba(110,118,129,0.4)\",\n          \"subtle\": \"rgba(110,118,129,0.1)\"\n        },\n        \"accent\": {\n          \"fg\": \"#58a6ff\",\n          \"emphasis\": \"#1f6feb\",\n          \"muted\": \"rgba(56,139,253,0.4)\",\n          \"subtle\": \"rgba(56,139,253,0.15)\"\n        },\n        \"success\": {\n          \"fg\": \"#58a6ff\",\n          \"emphasis\": \"#1f6feb\",\n          \"muted\": \"rgba(56,139,253,0.4)\",\n          \"subtle\": \"rgba(56,139,253,0.15)\"\n        },\n        \"attention\": {\n          \"fg\": \"#d29922\",\n          \"emphasis\": \"#9e6a03\",\n          \"muted\": \"rgba(187,128,9,0.4)\",\n          \"subtle\": \"rgba(187,128,9,0.15)\"\n        },\n        \"severe\": {\n          \"fg\": \"#f85149\",\n          \"emphasis\": \"#da3633\",\n          \"muted\": \"rgba(248,81,73,0.4)\",\n          \"subtle\": \"rgba(248,81,73,0.15)\"\n        },\n        \"danger\": {\n          \"fg\": \"#f85149\",\n          \"emphasis\": \"#da3633\",\n          \"muted\": \"rgba(248,81,73,0.4)\",\n          \"subtle\": \"rgba(248,81,73,0.15)\"\n        },\n        \"open\": {\n          \"fg\": \"#ff7b72\",\n          \"emphasis\": \"#da3633\",\n          \"muted\": \"rgba(248,81,73,0.4)\",\n          \"subtle\": \"rgba(248,81,73,0.15)\"\n        },\n        \"closed\": {\n          \"fg\": \"#8b949e\",\n          \"emphasis\": \"#6e7681\",\n          \"muted\": \"rgba(110,118,129,0.4)\",\n          \"subtle\": \"rgba(110,118,129,0.1)\"\n        },\n        \"done\": {\n          \"fg\": \"#a371f7\",\n          \"emphasis\": \"#8957e5\",\n          \"muted\": \"rgba(163,113,247,0.4)\",\n          \"subtle\": \"rgba(163,113,247,0.15)\"\n        },\n        \"sponsors\": {\n          \"fg\": \"#db61a2\",\n          \"emphasis\": \"#bf4b8a\",\n          \"muted\": \"rgba(219,97,162,0.4)\",\n          \"subtle\": \"rgba(219,97,162,0.15)\"\n        },\n        \"primer\": {\n          \"fg\": {\n            \"disabled\": \"#484f58\"\n          },\n          \"canvas\": {\n            \"backdrop\": \"rgba(1,4,9,0.8)\",\n            \"sticky\": \"rgba(13,17,23,0.95)\"\n          },\n          \"border\": {\n            \"active\": \"#f78166\",\n            \"contrast\": \"rgba(255,255,255,0.2)\"\n          }\n        }\n      },\n      \"shadows\": {\n        \"checks\": {\n          \"inputShadow\": \"0 0 0 1px (obj) => get_1.default(obj, path)\"\n        },\n        \"mktg\": {\n          \"btn\": {\n            \"shadow\": {\n              \"outline\": \"rgb(255 255 255 / 25%) 0 0 0 1px inset\",\n              \"focus\": \"rgb(255 255 255 / 25%) 0 0 0 4px\",\n              \"hover\": \"0 4px 7px rgba(0, 0, 0, 0.15), 0 100px 80px rgba(255, 255, 255, 0.02), 0 42px 33px rgba(255, 255, 255, 0.024), 0 22px 18px rgba(255, 255, 255, 0.028), 0 12px 10px rgba(255, 255, 255, 0.034), 0 7px 5px rgba(255, 255, 255, 0.04), 0 3px 2px rgba(255, 255, 255, 0.07)\",\n              \"hoverMuted\": \"rgb(255 255 255) 0 0 0 2px inset\"\n            }\n          }\n        },\n        \"avatar\": {\n          \"childShadow\": \"-2px -2px 0 #0d1117\"\n        },\n        \"overlay\": {\n          \"shadow\": \"0 0 0 1px #30363d, 0 16px 32px rgba(1,4,9,0.85)\"\n        },\n        \"btn\": {\n          \"shadow\": \"0 0 transparent\",\n          \"insetShadow\": \"0 0 transparent\",\n          \"focusShadow\": \"0 0 0 3px rgba(139,148,158,0.3)\",\n          \"shadowActive\": \"inset 0 0.15em 0.3em rgba(1,4,9,0.15)\",\n          \"shadowInputFocus\": \"0 0 0 0.2em rgba(31,111,235,0.3)\",\n          \"primary\": {\n            \"shadow\": \"0 0 transparent\",\n            \"insetShadow\": \"0 0 transparent\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(46,164,79,0.4)\"\n          },\n          \"outline\": {\n            \"hoverShadow\": \"0 1px 0 rgba(1,4,9,0.1)\",\n            \"hoverInsetShadow\": \"inset 0 1px 0 rgba(255,255,255,0.03)\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(17,88,199,0.4)\"\n          },\n          \"danger\": {\n            \"hoverShadow\": \"0 0 transparent\",\n            \"hoverInsetShadow\": \"0 0 transparent\",\n            \"selectedShadow\": \"0 0 transparent\",\n            \"focusShadow\": \"0 0 0 3px rgba(248,81,73,0.4)\"\n          }\n        },\n        \"shadow\": {\n          \"small\": \"0 0 transparent\",\n          \"medium\": \"0 3px 6px #010409\",\n          \"large\": \"0 8px 24px #010409\",\n          \"extraLarge\": \"0 12px 48px #010409\"\n        },\n        \"primer\": {\n          \"shadow\": {\n            \"highlight\": \"0 0 transparent\",\n            \"inset\": \"0 0 transparent\",\n            \"focus\": \"0 0 0 3px #0c2d6b\"\n          }\n        }\n      }\n    }\n  }\n};\nexport default module.exports;","import theme from './theme-preval';\nexport default theme; // NOTE: for now, ThemeColors and ThemeShadows are handcrafted types. It would be nice if these\n// were exports from primitives (or a different shape but derived from those exports).","import assign from 'object-assign';\nexport var merge = function merge(a, b) {\n  var result = assign({}, a, b);\n\n  for (var key in a) {\n    var _assign;\n\n    if (!a[key] || typeof b[key] !== 'object') continue;\n    assign(result, (_assign = {}, _assign[key] = assign(a[key], b[key]), _assign));\n  }\n\n  return result;\n}; // sort object-value responsive styles\n\nvar sort = function sort(obj) {\n  var next = {};\n  Object.keys(obj).sort(function (a, b) {\n    return a.localeCompare(b, undefined, {\n      numeric: true,\n      sensitivity: 'base'\n    });\n  }).forEach(function (key) {\n    next[key] = obj[key];\n  });\n  return next;\n};\n\nvar defaults = {\n  breakpoints: [40, 52, 64].map(function (n) {\n    return n + 'em';\n  })\n};\n\nvar createMediaQuery = function createMediaQuery(n) {\n  return \"@media screen and (min-width: \" + n + \")\";\n};\n\nvar getValue = function getValue(n, scale) {\n  return get(scale, n, n);\n};\n\nexport var get = function get(obj, key, def, p, undef) {\n  key = key && key.split ? key.split('.') : [key];\n\n  for (p = 0; p < key.length; p++) {\n    obj = obj ? obj[key[p]] : undef;\n  }\n\n  return obj === undef ? def : obj;\n};\nexport var createParser = function createParser(config) {\n  var cache = {};\n\n  var parse = function parse(props) {\n    var styles = {};\n    var shouldSort = false;\n    var isCacheDisabled = props.theme && props.theme.disableStyledSystemCache;\n\n    for (var key in props) {\n      if (!config[key]) continue;\n      var sx = config[key];\n      var raw = props[key];\n      var scale = get(props.theme, sx.scale, sx.defaults);\n\n      if (typeof raw === 'object') {\n        cache.breakpoints = !isCacheDisabled && cache.breakpoints || get(props.theme, 'breakpoints', defaults.breakpoints);\n\n        if (Array.isArray(raw)) {\n          cache.media = !isCacheDisabled && cache.media || [null].concat(cache.breakpoints.map(createMediaQuery));\n          styles = merge(styles, parseResponsiveStyle(cache.media, sx, scale, raw, props));\n          continue;\n        }\n\n        if (raw !== null) {\n          styles = merge(styles, parseResponsiveObject(cache.breakpoints, sx, scale, raw, props));\n          shouldSort = true;\n        }\n\n        continue;\n      }\n\n      assign(styles, sx(raw, scale, props));\n    } // sort object-based responsive styles\n\n\n    if (shouldSort) {\n      styles = sort(styles);\n    }\n\n    return styles;\n  };\n\n  parse.config = config;\n  parse.propNames = Object.keys(config);\n  parse.cache = cache;\n  var keys = Object.keys(config).filter(function (k) {\n    return k !== 'config';\n  });\n\n  if (keys.length > 1) {\n    keys.forEach(function (key) {\n      var _createParser;\n\n      parse[key] = createParser((_createParser = {}, _createParser[key] = config[key], _createParser));\n    });\n  }\n\n  return parse;\n};\n\nvar parseResponsiveStyle = function parseResponsiveStyle(mediaQueries, sx, scale, raw, _props) {\n  var styles = {};\n  raw.slice(0, mediaQueries.length).forEach(function (value, i) {\n    var media = mediaQueries[i];\n    var style = sx(value, scale, _props);\n\n    if (!media) {\n      assign(styles, style);\n    } else {\n      var _assign2;\n\n      assign(styles, (_assign2 = {}, _assign2[media] = assign({}, styles[media], style), _assign2));\n    }\n  });\n  return styles;\n};\n\nvar parseResponsiveObject = function parseResponsiveObject(breakpoints, sx, scale, raw, _props) {\n  var styles = {};\n\n  for (var key in raw) {\n    var breakpoint = breakpoints[key];\n    var value = raw[key];\n    var style = sx(value, scale, _props);\n\n    if (!breakpoint) {\n      assign(styles, style);\n    } else {\n      var _assign3;\n\n      var media = createMediaQuery(breakpoint);\n      assign(styles, (_assign3 = {}, _assign3[media] = assign({}, styles[media], style), _assign3));\n    }\n  }\n\n  return styles;\n};\n\nexport var createStyleFunction = function createStyleFunction(_ref) {\n  var properties = _ref.properties,\n      property = _ref.property,\n      scale = _ref.scale,\n      _ref$transform = _ref.transform,\n      transform = _ref$transform === void 0 ? getValue : _ref$transform,\n      defaultScale = _ref.defaultScale;\n  properties = properties || [property];\n\n  var sx = function sx(value, scale, _props) {\n    var result = {};\n    var n = transform(value, scale, _props);\n    if (n === null) return;\n    properties.forEach(function (prop) {\n      result[prop] = n;\n    });\n    return result;\n  };\n\n  sx.scale = scale;\n  sx.defaults = defaultScale;\n  return sx;\n}; // new v5 API\n\nexport var system = function system(args) {\n  if (args === void 0) {\n    args = {};\n  }\n\n  var config = {};\n  Object.keys(args).forEach(function (key) {\n    var conf = args[key];\n\n    if (conf === true) {\n      // shortcut definition\n      config[key] = createStyleFunction({\n        property: key,\n        scale: key\n      });\n      return;\n    }\n\n    if (typeof conf === 'function') {\n      config[key] = conf;\n      return;\n    }\n\n    config[key] = createStyleFunction(conf);\n  });\n  var parser = createParser(config);\n  return parser;\n};\nexport var compose = function compose() {\n  var config = {};\n\n  for (var _len = arguments.length, parsers = new Array(_len), _key = 0; _key < _len; _key++) {\n    parsers[_key] = arguments[_key];\n  }\n\n  parsers.forEach(function (parser) {\n    if (!parser || !parser.config) return;\n    assign(config, parser.config);\n  });\n  var parser = createParser(config);\n  return parser;\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// based on https://github.com/developit/dlv\nexport var get = function get(obj, key, def, p, undef) {\n  key = key && key.split ? key.split('.') : [key];\n\n  for (p = 0; p < key.length; p++) {\n    obj = obj ? obj[key[p]] : undef;\n  }\n\n  return obj === undef ? def : obj;\n};\nvar defaultBreakpoints = [40, 52, 64].map(function (n) {\n  return n + 'em';\n});\nvar defaultTheme = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72]\n};\nvar aliases = {\n  bg: 'backgroundColor',\n  m: 'margin',\n  mt: 'marginTop',\n  mr: 'marginRight',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mx: 'marginX',\n  my: 'marginY',\n  p: 'padding',\n  pt: 'paddingTop',\n  pr: 'paddingRight',\n  pb: 'paddingBottom',\n  pl: 'paddingLeft',\n  px: 'paddingX',\n  py: 'paddingY'\n};\nvar multiples = {\n  marginX: ['marginLeft', 'marginRight'],\n  marginY: ['marginTop', 'marginBottom'],\n  paddingX: ['paddingLeft', 'paddingRight'],\n  paddingY: ['paddingTop', 'paddingBottom'],\n  size: ['width', 'height']\n};\nvar scales = {\n  color: 'colors',\n  backgroundColor: 'colors',\n  borderColor: 'colors',\n  margin: 'space',\n  marginTop: 'space',\n  marginRight: 'space',\n  marginBottom: 'space',\n  marginLeft: 'space',\n  marginX: 'space',\n  marginY: 'space',\n  padding: 'space',\n  paddingTop: 'space',\n  paddingRight: 'space',\n  paddingBottom: 'space',\n  paddingLeft: 'space',\n  paddingX: 'space',\n  paddingY: 'space',\n  top: 'space',\n  right: 'space',\n  bottom: 'space',\n  left: 'space',\n  gridGap: 'space',\n  gridColumnGap: 'space',\n  gridRowGap: 'space',\n  gap: 'space',\n  columnGap: 'space',\n  rowGap: 'space',\n  fontFamily: 'fonts',\n  fontSize: 'fontSizes',\n  fontWeight: 'fontWeights',\n  lineHeight: 'lineHeights',\n  letterSpacing: 'letterSpacings',\n  border: 'borders',\n  borderTop: 'borders',\n  borderRight: 'borders',\n  borderBottom: 'borders',\n  borderLeft: 'borders',\n  borderWidth: 'borderWidths',\n  borderStyle: 'borderStyles',\n  borderRadius: 'radii',\n  borderTopRightRadius: 'radii',\n  borderTopLeftRadius: 'radii',\n  borderBottomRightRadius: 'radii',\n  borderBottomLeftRadius: 'radii',\n  borderTopWidth: 'borderWidths',\n  borderTopColor: 'colors',\n  borderTopStyle: 'borderStyles',\n  borderBottomWidth: 'borderWidths',\n  borderBottomColor: 'colors',\n  borderBottomStyle: 'borderStyles',\n  borderLeftWidth: 'borderWidths',\n  borderLeftColor: 'colors',\n  borderLeftStyle: 'borderStyles',\n  borderRightWidth: 'borderWidths',\n  borderRightColor: 'colors',\n  borderRightStyle: 'borderStyles',\n  outlineColor: 'colors',\n  boxShadow: 'shadows',\n  textShadow: 'shadows',\n  zIndex: 'zIndices',\n  width: 'sizes',\n  minWidth: 'sizes',\n  maxWidth: 'sizes',\n  height: 'sizes',\n  minHeight: 'sizes',\n  maxHeight: 'sizes',\n  flexBasis: 'sizes',\n  size: 'sizes',\n  // svg\n  fill: 'colors',\n  stroke: 'colors'\n};\n\nvar positiveOrNegative = function positiveOrNegative(scale, value) {\n  if (typeof value !== 'number' || value >= 0) {\n    return get(scale, value, value);\n  }\n\n  var absolute = Math.abs(value);\n  var n = get(scale, absolute, absolute);\n  if (typeof n === 'string') return '-' + n;\n  return n * -1;\n};\n\nvar transforms = ['margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'top', 'bottom', 'left', 'right'].reduce(function (acc, curr) {\n  var _extends2;\n\n  return _extends({}, acc, (_extends2 = {}, _extends2[curr] = positiveOrNegative, _extends2));\n}, {});\nexport var responsive = function responsive(styles) {\n  return function (theme) {\n    var next = {};\n    var breakpoints = get(theme, 'breakpoints', defaultBreakpoints);\n    var mediaQueries = [null].concat(breakpoints.map(function (n) {\n      return \"@media screen and (min-width: \" + n + \")\";\n    }));\n\n    for (var key in styles) {\n      var value = typeof styles[key] === 'function' ? styles[key](theme) : styles[key];\n      if (value == null) continue;\n\n      if (!Array.isArray(value)) {\n        next[key] = value;\n        continue;\n      }\n\n      for (var i = 0; i < value.slice(0, mediaQueries.length).length; i++) {\n        var media = mediaQueries[i];\n\n        if (!media) {\n          next[key] = value[i];\n          continue;\n        }\n\n        next[media] = next[media] || {};\n        if (value[i] == null) continue;\n        next[media][key] = value[i];\n      }\n    }\n\n    return next;\n  };\n};\nexport var css = function css(args) {\n  return function (props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    var theme = _extends({}, defaultTheme, {}, props.theme || props);\n\n    var result = {};\n    var obj = typeof args === 'function' ? args(theme) : args;\n    var styles = responsive(obj)(theme);\n\n    for (var key in styles) {\n      var x = styles[key];\n      var val = typeof x === 'function' ? x(theme) : x;\n\n      if (key === 'variant') {\n        var variant = css(get(theme, val))(theme);\n        result = _extends({}, result, {}, variant);\n        continue;\n      }\n\n      if (val && typeof val === 'object') {\n        result[key] = css(val)(theme);\n        continue;\n      }\n\n      var prop = get(aliases, key, key);\n      var scaleName = get(scales, prop);\n      var scale = get(theme, scaleName, get(theme, prop, {}));\n      var transform = get(transforms, prop, get);\n      var value = transform(scale, val, val);\n\n      if (multiples[prop]) {\n        var dirs = multiples[prop];\n\n        for (var i = 0; i < dirs.length; i++) {\n          result[dirs[i]] = value;\n        }\n      } else {\n        result[prop] = value;\n      }\n    }\n\n    return result;\n  };\n};\nexport default css;\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Applies the :focus-visible polyfill at the given scope.\n   * A scope in this case is either the top-level Document or a Shadow Root.\n   *\n   * @param {(Document|ShadowRoot)} scope\n   * @see https://github.com/WICG/focus-visible\n   */\n  function applyFocusVisiblePolyfill(scope) {\n    var hadKeyboardEvent = true;\n    var hadFocusVisibleRecently = false;\n    var hadFocusVisibleRecentlyTimeout = null;\n\n    var inputTypesAllowlist = {\n      text: true,\n      search: true,\n      url: true,\n      tel: true,\n      email: true,\n      password: true,\n      number: true,\n      date: true,\n      month: true,\n      week: true,\n      time: true,\n      datetime: true,\n      'datetime-local': true\n    };\n\n    /**\n     * Helper function for legacy browsers and iframes which sometimes focus\n     * elements like document, body, and non-interactive SVG.\n     * @param {Element} el\n     */\n    function isValidFocusTarget(el) {\n      if (\n        el &&\n        el !== document &&\n        el.nodeName !== 'HTML' &&\n        el.nodeName !== 'BODY' &&\n        'classList' in el &&\n        'contains' in el.classList\n      ) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Computes whether the given element should automatically trigger the\n     * `focus-visible` class being added, i.e. whether it should always match\n     * `:focus-visible` when focused.\n     * @param {Element} el\n     * @return {boolean}\n     */\n    function focusTriggersKeyboardModality(el) {\n      var type = el.type;\n      var tagName = el.tagName;\n\n      if (tagName === 'INPUT' && inputTypesAllowlist[type] && !el.readOnly) {\n        return true;\n      }\n\n      if (tagName === 'TEXTAREA' && !el.readOnly) {\n        return true;\n      }\n\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Add the `focus-visible` class to the given element if it was not added by\n     * the author.\n     * @param {Element} el\n     */\n    function addFocusVisibleClass(el) {\n      if (el.classList.contains('focus-visible')) {\n        return;\n      }\n      el.classList.add('focus-visible');\n      el.setAttribute('data-focus-visible-added', '');\n    }\n\n    /**\n     * Remove the `focus-visible` class from the given element if it was not\n     * originally added by the author.\n     * @param {Element} el\n     */\n    function removeFocusVisibleClass(el) {\n      if (!el.hasAttribute('data-focus-visible-added')) {\n        return;\n      }\n      el.classList.remove('focus-visible');\n      el.removeAttribute('data-focus-visible-added');\n    }\n\n    /**\n     * If the most recent user interaction was via the keyboard;\n     * and the key press did not include a meta, alt/option, or control key;\n     * then the modality is keyboard. Otherwise, the modality is not keyboard.\n     * Apply `focus-visible` to any current active element and keep track\n     * of our keyboard modality state with `hadKeyboardEvent`.\n     * @param {KeyboardEvent} e\n     */\n    function onKeyDown(e) {\n      if (e.metaKey || e.altKey || e.ctrlKey) {\n        return;\n      }\n\n      if (isValidFocusTarget(scope.activeElement)) {\n        addFocusVisibleClass(scope.activeElement);\n      }\n\n      hadKeyboardEvent = true;\n    }\n\n    /**\n     * If at any point a user clicks with a pointing device, ensure that we change\n     * the modality away from keyboard.\n     * This avoids the situation where a user presses a key on an already focused\n     * element, and then clicks on a different element, focusing it with a\n     * pointing device, while we still think we're in keyboard modality.\n     * @param {Event} e\n     */\n    function onPointerDown(e) {\n      hadKeyboardEvent = false;\n    }\n\n    /**\n     * On `focus`, add the `focus-visible` class to the target if:\n     * - the target received focus as a result of keyboard navigation, or\n     * - the event target is an element that will likely require interaction\n     *   via the keyboard (e.g. a text box)\n     * @param {Event} e\n     */\n    function onFocus(e) {\n      // Prevent IE from focusing the document or HTML element.\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {\n        addFocusVisibleClass(e.target);\n      }\n    }\n\n    /**\n     * On `blur`, remove the `focus-visible` class from the target.\n     * @param {Event} e\n     */\n    function onBlur(e) {\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (\n        e.target.classList.contains('focus-visible') ||\n        e.target.hasAttribute('data-focus-visible-added')\n      ) {\n        // To detect a tab/window switch, we look for a blur event followed\n        // rapidly by a visibility change.\n        // If we don't see a visibility change within 100ms, it's probably a\n        // regular focus change.\n        hadFocusVisibleRecently = true;\n        window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n        hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {\n          hadFocusVisibleRecently = false;\n        }, 100);\n        removeFocusVisibleClass(e.target);\n      }\n    }\n\n    /**\n     * If the user changes tabs, keep track of whether or not the previously\n     * focused element had .focus-visible.\n     * @param {Event} e\n     */\n    function onVisibilityChange(e) {\n      if (document.visibilityState === 'hidden') {\n        // If the tab becomes active again, the browser will handle calling focus\n        // on the element (Safari actually calls it twice).\n        // If this tab change caused a blur on an element with focus-visible,\n        // re-apply the class when the user switches back to the tab.\n        if (hadFocusVisibleRecently) {\n          hadKeyboardEvent = true;\n        }\n        addInitialPointerMoveListeners();\n      }\n    }\n\n    /**\n     * Add a group of listeners to detect usage of any pointing devices.\n     * These listeners will be added when the polyfill first loads, and anytime\n     * the window is blurred, so that they are active when the window regains\n     * focus.\n     */\n    function addInitialPointerMoveListeners() {\n      document.addEventListener('mousemove', onInitialPointerMove);\n      document.addEventListener('mousedown', onInitialPointerMove);\n      document.addEventListener('mouseup', onInitialPointerMove);\n      document.addEventListener('pointermove', onInitialPointerMove);\n      document.addEventListener('pointerdown', onInitialPointerMove);\n      document.addEventListener('pointerup', onInitialPointerMove);\n      document.addEventListener('touchmove', onInitialPointerMove);\n      document.addEventListener('touchstart', onInitialPointerMove);\n      document.addEventListener('touchend', onInitialPointerMove);\n    }\n\n    function removeInitialPointerMoveListeners() {\n      document.removeEventListener('mousemove', onInitialPointerMove);\n      document.removeEventListener('mousedown', onInitialPointerMove);\n      document.removeEventListener('mouseup', onInitialPointerMove);\n      document.removeEventListener('pointermove', onInitialPointerMove);\n      document.removeEventListener('pointerdown', onInitialPointerMove);\n      document.removeEventListener('pointerup', onInitialPointerMove);\n      document.removeEventListener('touchmove', onInitialPointerMove);\n      document.removeEventListener('touchstart', onInitialPointerMove);\n      document.removeEventListener('touchend', onInitialPointerMove);\n    }\n\n    /**\n     * When the polfyill first loads, assume the user is in keyboard modality.\n     * If any event is received from a pointing device (e.g. mouse, pointer,\n     * touch), turn off keyboard modality.\n     * This accounts for situations where focus enters the page from the URL bar.\n     * @param {Event} e\n     */\n    function onInitialPointerMove(e) {\n      // Work around a Safari quirk that fires a mousemove on <html> whenever the\n      // window blurs, even if you're tabbing out of the page. ¯\\_(ツ)_/¯\n      if (e.target.nodeName && e.target.nodeName.toLowerCase() === 'html') {\n        return;\n      }\n\n      hadKeyboardEvent = false;\n      removeInitialPointerMoveListeners();\n    }\n\n    // For some kinds of state, we are interested in changes at the global scope\n    // only. For example, global pointer input, global key presses and global\n    // visibility change should affect the state at every scope:\n    document.addEventListener('keydown', onKeyDown, true);\n    document.addEventListener('mousedown', onPointerDown, true);\n    document.addEventListener('pointerdown', onPointerDown, true);\n    document.addEventListener('touchstart', onPointerDown, true);\n    document.addEventListener('visibilitychange', onVisibilityChange, true);\n\n    addInitialPointerMoveListeners();\n\n    // For focus and blur, we specifically care about state changes in the local\n    // scope. This is because focus / blur events that originate from within a\n    // shadow root are not re-dispatched from the host element if it was already\n    // the active element in its own scope:\n    scope.addEventListener('focus', onFocus, true);\n    scope.addEventListener('blur', onBlur, true);\n\n    // We detect that a node is a ShadowRoot by ensuring that it is a\n    // DocumentFragment and also has a host property. This check covers native\n    // implementation and polyfill implementation transparently. If we only cared\n    // about the native implementation, we could just check if the scope was\n    // an instance of a ShadowRoot.\n    if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && scope.host) {\n      // Since a ShadowRoot is a special kind of DocumentFragment, it does not\n      // have a root element to add a class to. So, we add this attribute to the\n      // host element instead:\n      scope.host.setAttribute('data-js-focus-visible', '');\n    } else if (scope.nodeType === Node.DOCUMENT_NODE) {\n      document.documentElement.classList.add('js-focus-visible');\n      document.documentElement.setAttribute('data-js-focus-visible', '');\n    }\n  }\n\n  // It is important to wrap all references to global window and document in\n  // these checks to support server-side rendering use cases\n  // @see https://github.com/WICG/focus-visible/issues/199\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    // Make the polyfill helper globally available. This can be used as a signal\n    // to interested libraries that wish to coordinate with the polyfill for e.g.,\n    // applying the polyfill to a shadow root:\n    window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill;\n\n    // Notify interested libraries of the polyfill's presence, in case the\n    // polyfill was loaded lazily:\n    var event;\n\n    try {\n      event = new CustomEvent('focus-visible-polyfill-ready');\n    } catch (error) {\n      // IE11 does not support using CustomEvent as a constructor directly:\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent('focus-visible-polyfill-ready', false, false, {});\n    }\n\n    window.dispatchEvent(event);\n  }\n\n  if (typeof document !== 'undefined') {\n    // Apply the polyfill to the global document, so that no JavaScript\n    // coordination is required to use the polyfill in the top-level document:\n    applyFocusVisiblePolyfill(document);\n  }\n\n})));\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default isPropValid;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","// @flow\nimport type { Interpolation } from '../types';\n\nexport default (\n  strings: Array<string>,\n  interpolations: Array<Interpolation>\n): Array<Interpolation> => {\n  const result = [strings[0]];\n\n  for (let i = 0, len = interpolations.length; i < len; i += 1) {\n    result.push(interpolations[i], strings[i + 1]);\n  }\n\n  return result;\n};\n","// @flow\nimport { typeOf } from 'react-is';\n\nexport default (x: any): boolean =>\n  x !== null &&\n  typeof x === 'object' &&\n  (x.toString ? x.toString() : Object.prototype.toString.call(x)) === '[object Object]' &&\n  !typeOf(x);\n","// @flow\nexport const EMPTY_ARRAY = Object.freeze([]);\nexport const EMPTY_OBJECT = Object.freeze({});\n","// @flow\nexport default function isFunction(test: any): boolean %checks {\n  return typeof test === 'function';\n}\n","// @flow\nimport type { IStyledComponent } from '../types';\n\nexport default function getComponentName(\n  target: $PropertyType<IStyledComponent, 'target'>\n): string {\n  return (\n    (process.env.NODE_ENV !== 'production' ? typeof target === 'string' && target : false) ||\n    // $FlowFixMe\n    target.displayName ||\n    // $FlowFixMe\n    target.name ||\n    'Component'\n  );\n}\n","// @flow\nexport default function isStyledComponent(target: any): boolean %checks {\n  return target && typeof target.styledComponentId === 'string';\n}\n","// @flow\n\ndeclare var SC_DISABLE_SPEEDY: ?boolean;\ndeclare var __VERSION__: string;\n\nexport const SC_ATTR: string =\n  (typeof process !== 'undefined' && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR)) ||\n  'data-styled';\n\nexport const SC_ATTR_ACTIVE = 'active';\nexport const SC_ATTR_VERSION = 'data-styled-version';\nexport const SC_VERSION = __VERSION__;\nexport const SPLITTER = '/*!sc*/\\n';\n\nexport const IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;\n\nexport const DISABLE_SPEEDY =\n  Boolean(typeof SC_DISABLE_SPEEDY === 'boolean'\n    ? SC_DISABLE_SPEEDY\n    : (typeof process !== 'undefined' && typeof process.env.REACT_APP_SC_DISABLE_SPEEDY !== 'undefined' && process.env.REACT_APP_SC_DISABLE_SPEEDY !== ''\n      ? process.env.REACT_APP_SC_DISABLE_SPEEDY === 'false' ? false : process.env.REACT_APP_SC_DISABLE_SPEEDY\n      : (typeof process !== 'undefined' && typeof process.env.SC_DISABLE_SPEEDY !== 'undefined' && process.env.SC_DISABLE_SPEEDY !== ''\n        ? process.env.SC_DISABLE_SPEEDY === 'false' ? false : process.env.SC_DISABLE_SPEEDY\n        : process.env.NODE_ENV !== 'production'\n      )\n    ));\n\n// Shared empty execution context when generating static styles\nexport const STATIC_EXECUTION_CONTEXT = {};\n","// @flow\nimport errorMap from './errors';\n\nconst ERRORS = process.env.NODE_ENV !== 'production' ? errorMap : {};\n\n/**\n * super basic version of sprintf\n */\nfunction format(...args) {\n  let a = args[0];\n  const b = [];\n\n  for (let c = 1, len = args.length; c < len; c += 1) {\n    b.push(args[c]);\n  }\n\n  b.forEach(d => {\n    a = a.replace(/%[a-z]/, d);\n  });\n\n  return a;\n}\n\n/**\n * Create an error file out of errors.md for development and a simple web link to the full errors\n * in production mode.\n */\nexport default function throwStyledComponentsError(\n  code: string | number,\n  ...interpolations: Array<any>\n) {\n  if (process.env.NODE_ENV === 'production') {\n    throw new Error(\n      `An error occurred. See https://git.io/JUIaE#${code} for more information.${\n        interpolations.length > 0 ? ` Args: ${interpolations.join(', ')}` : ''\n      }`\n    );\n  } else {\n    throw new Error(format(ERRORS[code], ...interpolations).trim());\n  }\n}\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport type { GroupedTag, Tag } from './types';\nimport { SPLITTER } from '../constants';\nimport throwStyledError from '../utils/error';\n\n/** Create a GroupedTag with an underlying Tag implementation */\nexport const makeGroupedTag = (tag: Tag): GroupedTag => {\n  return new DefaultGroupedTag(tag);\n};\n\nconst BASE_SIZE = 1 << 9;\n\nclass DefaultGroupedTag implements GroupedTag {\n  groupSizes: Uint32Array;\n\n  length: number;\n\n  tag: Tag;\n\n  constructor(tag: Tag) {\n    this.groupSizes = new Uint32Array(BASE_SIZE);\n    this.length = BASE_SIZE;\n    this.tag = tag;\n  }\n\n  indexOfGroup(group: number): number {\n    let index = 0;\n    for (let i = 0; i < group; i++) {\n      index += this.groupSizes[i];\n    }\n\n    return index;\n  }\n\n  insertRules(group: number, rules: string[]): void {\n    if (group >= this.groupSizes.length) {\n      const oldBuffer = this.groupSizes;\n      const oldSize = oldBuffer.length;\n\n      let newSize = oldSize;\n      while (group >= newSize) {\n        newSize <<= 1;\n        if (newSize < 0) {\n          throwStyledError(16, `${group}`);\n        }\n      }\n\n      this.groupSizes = new Uint32Array(newSize);\n      this.groupSizes.set(oldBuffer);\n      this.length = newSize;\n\n      for (let i = oldSize; i < newSize; i++) {\n        this.groupSizes[i] = 0;\n      }\n    }\n\n    let ruleIndex = this.indexOfGroup(group + 1);\n    for (let i = 0, l = rules.length; i < l; i++) {\n      if (this.tag.insertRule(ruleIndex, rules[i])) {\n        this.groupSizes[group]++;\n        ruleIndex++;\n      }\n    }\n  }\n\n  clearGroup(group: number): void {\n    if (group < this.length) {\n      const length = this.groupSizes[group];\n      const startIndex = this.indexOfGroup(group);\n      const endIndex = startIndex + length;\n\n      this.groupSizes[group] = 0;\n\n      for (let i = startIndex; i < endIndex; i++) {\n        this.tag.deleteRule(startIndex);\n      }\n    }\n  }\n\n  getGroup(group: number): string {\n    let css = '';\n    if (group >= this.length || this.groupSizes[group] === 0) {\n      return css;\n    }\n\n    const length = this.groupSizes[group];\n    const startIndex = this.indexOfGroup(group);\n    const endIndex = startIndex + length;\n\n    for (let i = startIndex; i < endIndex; i++) {\n      css += `${this.tag.getRule(i)}${SPLITTER}`;\n    }\n\n    return css;\n  }\n}\n","// @flow\n\nimport throwStyledError from '../utils/error';\n\nconst MAX_SMI = 1 << 31 - 1;\n\nlet groupIDRegister: Map<string, number> = new Map();\nlet reverseRegister: Map<number, string> = new Map();\nlet nextFreeGroup = 1;\n\nexport const resetGroupIds = () => {\n  groupIDRegister = new Map();\n  reverseRegister = new Map();\n  nextFreeGroup = 1;\n};\n\nexport const getGroupForId = (id: string): number => {\n  if (groupIDRegister.has(id)) {\n    return (groupIDRegister.get(id): any);\n  }\n\n  while (reverseRegister.has(nextFreeGroup)) {\n    nextFreeGroup++;\n  }\n\n  const group = nextFreeGroup++;\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    ((group | 0) < 0 || group > MAX_SMI)\n  ) {\n    throwStyledError(16, `${group}`);\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n  return group;\n};\n\nexport const getIdForGroup = (group: number): void | string => {\n  return reverseRegister.get(group);\n};\n\nexport const setGroupForId = (id: string, group: number) => {\n  if (group >= nextFreeGroup) {\n    nextFreeGroup = group + 1;\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n};\n","// @flow\n\nimport { SPLITTER, SC_ATTR, SC_ATTR_ACTIVE, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport { getIdForGroup, setGroupForId } from './GroupIDAllocator';\nimport type { Sheet } from './types';\n\nconst SELECTOR = `style[${SC_ATTR}][${SC_ATTR_VERSION}=\"${SC_VERSION}\"]`;\nconst MARKER_RE = new RegExp(`^${SC_ATTR}\\\\.g(\\\\d+)\\\\[id=\"([\\\\w\\\\d-]+)\"\\\\].*?\"([^\"]*)`);\n\nexport const outputSheet = (sheet: Sheet) => {\n  const tag = sheet.getTag();\n  const { length } = tag;\n\n  let css = '';\n  for (let group = 0; group < length; group++) {\n    const id = getIdForGroup(group);\n    if (id === undefined) continue;\n\n    const names = sheet.names.get(id);\n    const rules = tag.getGroup(group);\n    if (!names || !rules || !names.size) continue;\n\n    const selector = `${SC_ATTR}.g${group}[id=\"${id}\"]`;\n\n    let content = '';\n    if (names !== undefined) {\n      names.forEach(name => {\n        if (name.length > 0) {\n          content += `${name},`;\n        }\n      });\n    }\n\n    // NOTE: It's easier to collect rules and have the marker\n    // after the actual rules to simplify the rehydration\n    css += `${rules}${selector}{content:\"${content}\"}${SPLITTER}`;\n  }\n\n  return css;\n};\n\nconst rehydrateNamesFromContent = (sheet: Sheet, id: string, content: string) => {\n  const names = content.split(',');\n  let name;\n\n  for (let i = 0, l = names.length; i < l; i++) {\n    // eslint-disable-next-line\n    if ((name = names[i])) {\n      sheet.registerName(id, name);\n    }\n  }\n};\n\nconst rehydrateSheetFromTag = (sheet: Sheet, style: HTMLStyleElement) => {\n  const parts = (style.textContent || '').split(SPLITTER);\n  const rules: string[] = [];\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    const part = parts[i].trim();\n    if (!part) continue;\n\n    const marker = part.match(MARKER_RE);\n\n    if (marker) {\n      const group = parseInt(marker[1], 10) | 0;\n      const id = marker[2];\n\n      if (group !== 0) {\n        // Rehydrate componentId to group index mapping\n        setGroupForId(id, group);\n        // Rehydrate names and rules\n        // looks like: data-styled.g11[id=\"idA\"]{content:\"nameA,\"}\n        rehydrateNamesFromContent(sheet, id, marker[3]);\n        sheet.getTag().insertRules(group, rules);\n      }\n\n      rules.length = 0;\n    } else {\n      rules.push(part);\n    }\n  }\n};\n\nexport const rehydrateSheet = (sheet: Sheet) => {\n  const nodes = document.querySelectorAll(SELECTOR);\n\n  for (let i = 0, l = nodes.length; i < l; i++) {\n    const node = ((nodes[i]: any): HTMLStyleElement);\n    if (node && node.getAttribute(SC_ATTR) !== SC_ATTR_ACTIVE) {\n      rehydrateSheetFromTag(sheet, node);\n\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }\n};\n","// @flow\n/* eslint-disable camelcase, no-undef */\n\ndeclare var window: { __webpack_nonce__: string };\n\nconst getNonce = () => {\n\n  return typeof window !== 'undefined'\n    ? typeof window.__webpack_nonce__ !== 'undefined'\n      ? window.__webpack_nonce__\n      : null\n    : null;\n};\n\nexport default getNonce;\n","// @flow\n\nimport { SC_ATTR, SC_ATTR_ACTIVE, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport getNonce from '../utils/nonce';\nimport throwStyledError from '../utils/error';\n\nconst ELEMENT_TYPE = 1; /* Node.ELEMENT_TYPE */\n\n/** Find last style element if any inside target */\nconst findLastStyleTag = (target: HTMLElement): void | HTMLStyleElement => {\n  const { childNodes } = target;\n\n  for (let i = childNodes.length; i >= 0; i--) {\n    const child = ((childNodes[i]: any): ?HTMLElement);\n    if (child && child.nodeType === ELEMENT_TYPE && child.hasAttribute(SC_ATTR)) {\n      return ((child: any): HTMLStyleElement);\n    }\n  }\n\n  return undefined;\n};\n\n/** Create a style element inside `target` or <head> after the last */\nexport const makeStyleTag = (target?: HTMLElement): HTMLStyleElement => {\n  const head = ((document.head: any): HTMLElement);\n  const parent = target || head;\n  const style = document.createElement('style');\n  const prevStyle = findLastStyleTag(parent);\n  const nextSibling = prevStyle !== undefined ? prevStyle.nextSibling : null;\n\n  style.setAttribute(SC_ATTR, SC_ATTR_ACTIVE);\n  style.setAttribute(SC_ATTR_VERSION, SC_VERSION);\n\n  const nonce = getNonce();\n\n  if (nonce) style.setAttribute('nonce', nonce);\n\n  parent.insertBefore(style, nextSibling);\n\n  return style;\n};\n\n/** Get the CSSStyleSheet instance for a given style element */\nexport const getSheet = (tag: HTMLStyleElement): CSSStyleSheet => {\n  if (tag.sheet) {\n    return ((tag.sheet: any): CSSStyleSheet);\n  }\n\n  // Avoid Firefox quirk where the style element might not have a sheet property\n  const { styleSheets } = document;\n  for (let i = 0, l = styleSheets.length; i < l; i++) {\n    const sheet = styleSheets[i];\n    if (sheet.ownerNode === tag) {\n      return ((sheet: any): CSSStyleSheet);\n    }\n  }\n\n  throwStyledError(17);\n  return (undefined: any);\n};\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport { makeStyleTag, getSheet } from './dom';\nimport type { SheetOptions, Tag } from './types';\n\n/** Create a CSSStyleSheet-like tag depending on the environment */\nexport const makeTag = ({ isServer, useCSSOMInjection, target }: SheetOptions): Tag => {\n  if (isServer) {\n    return new VirtualTag(target);\n  } else if (useCSSOMInjection) {\n    return new CSSOMTag(target);\n  } else {\n    return new TextTag(target);\n  }\n};\n\nexport class CSSOMTag implements Tag {\n  element: HTMLStyleElement;\n\n  sheet: CSSStyleSheet;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n\n    // Avoid Edge bug where empty style elements don't create sheets\n    element.appendChild(document.createTextNode(''));\n\n    this.sheet = getSheet(element);\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    try {\n      this.sheet.insertRule(rule, index);\n      this.length++;\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.sheet.deleteRule(index);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    const rule = this.sheet.cssRules[index];\n    // Avoid IE11 quirk where cssText is inaccessible on some invalid rules\n    if (rule !== undefined && typeof rule.cssText === 'string') {\n      return rule.cssText;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A Tag that emulates the CSSStyleSheet API but uses text nodes */\nexport class TextTag implements Tag {\n  element: HTMLStyleElement;\n\n  nodes: NodeList<Node>;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n    this.nodes = element.childNodes;\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length && index >= 0) {\n      const node = document.createTextNode(rule);\n      const refNode = this.nodes[index];\n      this.element.insertBefore(node, refNode || null);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.element.removeChild(this.nodes[index]);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.nodes[index].textContent;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A completely virtual (server-side) Tag that doesn't manipulate the DOM */\nexport class VirtualTag implements Tag {\n  rules: string[];\n\n  length: number;\n\n  constructor(_target?: HTMLElement) {\n    this.rules = [];\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length) {\n      this.rules.splice(index, 0, rule);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.rules.splice(index, 1);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.rules[index];\n    } else {\n      return '';\n    }\n  }\n}\n","// @flow\nimport { DISABLE_SPEEDY, IS_BROWSER } from '../constants';\nimport { EMPTY_OBJECT } from '../utils/empties';\nimport { makeGroupedTag } from './GroupedTag';\nimport { getGroupForId } from './GroupIDAllocator';\nimport { outputSheet, rehydrateSheet } from './Rehydration';\nimport { makeTag } from './Tag';\nimport type { GroupedTag, Sheet, SheetOptions } from './types';\n\nlet SHOULD_REHYDRATE = IS_BROWSER;\n\ntype SheetConstructorArgs = {\n  isServer?: boolean,\n  useCSSOMInjection?: boolean,\n  target?: HTMLElement,\n};\n\ntype GlobalStylesAllocationMap = { [key: string]: number };\ntype NamesAllocationMap = Map<string, Set<string>>;\n\nconst defaultOptions: SheetOptions = {\n  isServer: !IS_BROWSER,\n  useCSSOMInjection: !DISABLE_SPEEDY,\n};\n\n/** Contains the main stylesheet logic for stringification and caching */\nexport default class StyleSheet implements Sheet {\n  gs: GlobalStylesAllocationMap;\n\n  names: NamesAllocationMap;\n\n  options: SheetOptions;\n\n  server: boolean;\n\n  tag: void | GroupedTag;\n\n  /** Register a group ID to give it an index */\n  static registerId(id: string): number {\n    return getGroupForId(id);\n  }\n\n  constructor(\n    options: SheetConstructorArgs = EMPTY_OBJECT,\n    globalStyles?: GlobalStylesAllocationMap = {},\n    names?: NamesAllocationMap\n  ) {\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.gs = globalStyles;\n    this.names = new Map(names);\n    this.server = !!options.isServer;\n\n    // We rehydrate only once and use the sheet that is created first\n    if (!this.server && IS_BROWSER && SHOULD_REHYDRATE) {\n      SHOULD_REHYDRATE = false;\n      rehydrateSheet(this);\n    }\n  }\n\n  reconstructWithOptions(options: SheetConstructorArgs, withNames?: boolean = true) {\n    return new StyleSheet(\n      { ...this.options, ...options },\n      this.gs,\n      (withNames && this.names) || undefined\n    );\n  }\n\n  allocateGSInstance(id: string) {\n    return (this.gs[id] = (this.gs[id] || 0) + 1);\n  }\n\n  /** Lazily initialises a GroupedTag for when it's actually needed */\n  getTag(): GroupedTag {\n    return this.tag || (this.tag = makeGroupedTag(makeTag(this.options)));\n  }\n\n  /** Check whether a name is known for caching */\n  hasNameForId(id: string, name: string): boolean {\n    return this.names.has(id) && (this.names.get(id): any).has(name);\n  }\n\n  /** Mark a group's name as known for caching */\n  registerName(id: string, name: string) {\n    getGroupForId(id);\n\n    if (!this.names.has(id)) {\n      const groupNames = new Set();\n      groupNames.add(name);\n      this.names.set(id, groupNames);\n    } else {\n      (this.names.get(id): any).add(name);\n    }\n  }\n\n  /** Insert new rules which also marks the name as known */\n  insertRules(id: string, name: string, rules: string[]) {\n    this.registerName(id, name);\n    this.getTag().insertRules(getGroupForId(id), rules);\n  }\n\n  /** Clears all cached names for a given group ID */\n  clearNames(id: string) {\n    if (this.names.has(id)) {\n      (this.names.get(id): any).clear();\n    }\n  }\n\n  /** Clears all rules for a given group ID */\n  clearRules(id: string) {\n    this.getTag().clearGroup(getGroupForId(id));\n    this.clearNames(id);\n  }\n\n  /** Clears the entire tag which deletes all rules but not its names */\n  clearTag() {\n    // NOTE: This does not clear the names, since it's only used during SSR\n    // so that we can continuously output only new rules\n    this.tag = undefined;\n  }\n\n  /** Outputs the current sheet as a CSS string with markers for SSR */\n  toString(): string {\n    return outputSheet(this);\n  }\n}\n","// @flow\n/* eslint-disable no-bitwise */\n\nconst AD_REPLACER_R = /(a)(d)/gi;\n\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\n * counterparts */\nconst charsLength = 52;\n\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\nconst getAlphabeticChar = (code: number): string =>\n  String.fromCharCode(code + (code > 25 ? 39 : 97));\n\n/* input a number, usually a hash and convert it to base-52 */\nexport default function generateAlphabeticName(code: number): string {\n  let name = '';\n  let x;\n\n  /* get a char and divide by alphabet-length */\n  for (x = Math.abs(code); x > charsLength; x = (x / charsLength) | 0) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return (getAlphabeticChar(x % charsLength) + name).replace(AD_REPLACER_R, '$1-$2');\n}\n","// @flow\n/* eslint-disable */\n\nexport const SEED = 5381;\n\n// When we have separate strings it's useful to run a progressive\n// version of djb2 where we pretend that we're still looping over\n// the same string\nexport const phash = (h: number, x: string): number => {\n  let i = x.length;\n\n  while (i) {\n    h = (h * 33) ^ x.charCodeAt(--i);\n  }\n\n  return h;\n};\n\n// This is a djb2 hashing function\nexport const hash = (x: string): number => {\n  return phash(SEED, x);\n};\n","// @flow\nimport isFunction from './isFunction';\nimport isStyledComponent from './isStyledComponent';\nimport type { RuleSet } from '../types';\n\nexport default function isStaticRules(rules: RuleSet): boolean {\n  for (let i = 0; i < rules.length; i += 1) {\n    const rule = rules[i];\n\n    if (isFunction(rule) && !isStyledComponent(rule)) {\n      // functions are allowed to be static if they're just being\n      // used to get the classname of a nested styled component\n      return false;\n    }\n  }\n\n  return true;\n}\n","// @flow\nimport { SC_VERSION } from '../constants';\nimport StyleSheet from '../sheet';\nimport type { RuleSet, Stringifier } from '../types';\nimport flatten from '../utils/flatten';\nimport generateName from '../utils/generateAlphabeticName';\nimport { hash, phash } from '../utils/hash';\nimport isStaticRules from '../utils/isStaticRules';\n\nconst SEED = hash(SC_VERSION);\n\n/**\n * ComponentStyle is all the CSS-specific stuff, not the React-specific stuff.\n */\nexport default class ComponentStyle {\n  baseHash: number;\n\n  baseStyle: ?ComponentStyle;\n\n  componentId: string;\n\n  isStatic: boolean;\n\n  rules: RuleSet;\n\n  staticRulesId: string;\n\n  constructor(rules: RuleSet, componentId: string, baseStyle?: ComponentStyle) {\n    this.rules = rules;\n    this.staticRulesId = '';\n    this.isStatic = process.env.NODE_ENV === 'production' &&\n      (baseStyle === undefined || baseStyle.isStatic) &&\n      isStaticRules(rules);\n    this.componentId = componentId;\n\n    // SC_VERSION gives us isolation between multiple runtimes on the page at once\n    // this is improved further with use of the babel plugin \"namespace\" feature\n    this.baseHash = phash(SEED, componentId);\n\n    this.baseStyle = baseStyle;\n\n    // NOTE: This registers the componentId, which ensures a consistent order\n    // for this component's styles compared to others\n    StyleSheet.registerId(componentId);\n  }\n\n  /*\n   * Flattens a rule set into valid CSS\n   * Hashes it, wraps the whole chunk in a .hash1234 {}\n   * Returns the hash to be injected on render()\n   * */\n  generateAndInjectStyles(executionContext: Object, styleSheet: StyleSheet, stylis: Stringifier) {\n    const { componentId } = this;\n\n    const names = [];\n\n    if (this.baseStyle) {\n      names.push(this.baseStyle.generateAndInjectStyles(executionContext, styleSheet, stylis));\n    }\n\n    // force dynamic classnames if user-supplied stylis plugins are in use\n    if (this.isStatic && !stylis.hash) {\n      if (this.staticRulesId && styleSheet.hasNameForId(componentId, this.staticRulesId)) {\n        names.push(this.staticRulesId);\n      } else {\n        const cssStatic = flatten(this.rules, executionContext, styleSheet, stylis).join('');\n        const name = generateName(phash(this.baseHash, cssStatic) >>> 0);\n\n        if (!styleSheet.hasNameForId(componentId, name)) {\n          const cssStaticFormatted = stylis(cssStatic, `.${name}`, undefined, componentId);\n\n          styleSheet.insertRules(componentId, name, cssStaticFormatted);\n        }\n\n        names.push(name);\n        this.staticRulesId = name;\n      }\n    } else {\n      const { length } = this.rules;\n      let dynamicHash = phash(this.baseHash, stylis.hash);\n      let css = '';\n\n      for (let i = 0; i < length; i++) {\n        const partRule = this.rules[i];\n\n        if (typeof partRule === 'string') {\n          css += partRule;\n\n          if (process.env.NODE_ENV !== 'production') dynamicHash = phash(dynamicHash, partRule + i);\n        } else if (partRule) {\n          const partChunk = flatten(partRule, executionContext, styleSheet, stylis);\n          const partString = Array.isArray(partChunk) ? partChunk.join('') : partChunk;\n          dynamicHash = phash(dynamicHash, partString + i);\n          css += partString;\n        }\n      }\n\n      if (css) {\n        const name = generateName(dynamicHash >>> 0);\n\n        if (!styleSheet.hasNameForId(componentId, name)) {\n          const cssFormatted = stylis(css, `.${name}`, undefined, componentId);\n          styleSheet.insertRules(componentId, name, cssFormatted);\n        }\n\n        names.push(name);\n      }\n    }\n\n    return names.join(' ');\n  }\n}\n","import Stylis from '@emotion/stylis';\nimport { type Stringifier } from '../types';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from './empties';\nimport throwStyledError from './error';\nimport { phash, SEED } from './hash';\nimport insertRulePlugin from './stylisPluginInsertRule';\n\nconst COMMENT_REGEX = /^\\s*\\/\\/.*$/gm;\nconst COMPLEX_SELECTOR_PREFIX = [':', '[', '.', '#'];\n\ntype StylisInstanceConstructorArgs = {\n  options?: Object,\n  plugins?: Array<Function>,\n};\n\nexport default function createStylisInstance({\n  options = EMPTY_OBJECT,\n  plugins = EMPTY_ARRAY,\n}: StylisInstanceConstructorArgs = EMPTY_OBJECT) {\n  const stylis = new Stylis(options);\n\n  // Wrap `insertRulePlugin to build a list of rules,\n  // and then make our own plugin to return the rules. This\n  // makes it easier to hook into the existing SSR architecture\n\n  let parsingRules = [];\n\n  // eslint-disable-next-line consistent-return\n  const returnRulesPlugin = context => {\n    if (context === -2) {\n      const parsedRules = parsingRules;\n      parsingRules = [];\n      return parsedRules;\n    }\n  };\n\n  const parseRulesPlugin = insertRulePlugin(rule => {\n    parsingRules.push(rule);\n  });\n\n  let _componentId: string;\n  let _selector: string;\n  let _selectorRegexp: RegExp;\n  let _consecutiveSelfRefRegExp: RegExp;\n\n  const selfReferenceReplacer = (match, offset, string) => {\n    if (\n      // do not replace the first occurrence if it is complex (has a modifier)\n      (offset === 0 ? COMPLEX_SELECTOR_PREFIX.indexOf(string[_selector.length]) === -1 : true) &&\n      // no consecutive self refs (.b.b); that is a precedence boost and treated differently\n      !string.match(_consecutiveSelfRefRegExp)\n    ) {\n      return `.${_componentId}`;\n    }\n\n    return match;\n  };\n\n  /**\n   * When writing a style like\n   *\n   * & + & {\n   *   color: red;\n   * }\n   *\n   * The second ampersand should be a reference to the static component class. stylis\n   * has no knowledge of static class so we have to intelligently replace the base selector.\n   *\n   * https://github.com/thysultan/stylis.js/tree/v3.5.4#plugins <- more info about the context phase values\n   * \"2\" means this plugin is taking effect at the very end after all other processing is complete\n   */\n  const selfReferenceReplacementPlugin = (context, _, selectors) => {\n    if (context === 2 && selectors.length && selectors[0].lastIndexOf(_selector) > 0) {\n      // eslint-disable-next-line no-param-reassign\n      selectors[0] = selectors[0].replace(_selectorRegexp, selfReferenceReplacer);\n    }\n  };\n\n  stylis.use([...plugins, selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]);\n\n  function stringifyRules(css, selector, prefix, componentId = '&'): Stringifier {\n    const flatCSS = css.replace(COMMENT_REGEX, '');\n    const cssStr = selector && prefix ? `${prefix} ${selector} { ${flatCSS} }` : flatCSS;\n\n    // stylis has no concept of state to be passed to plugins\n    // but since JS is single-threaded, we can rely on that to ensure\n    // these properties stay in sync with the current stylis run\n    _componentId = componentId;\n    _selector = selector;\n    _selectorRegexp = new RegExp(`\\\\${_selector}\\\\b`, 'g');\n    _consecutiveSelfRefRegExp = new RegExp(`(\\\\${_selector}\\\\b){2,}`);\n\n    return stylis(prefix || !selector ? '' : selector, cssStr);\n  }\n\n  stringifyRules.hash = plugins.length\n    ? plugins\n        .reduce((acc, plugin) => {\n          if (!plugin.name) {\n            throwStyledError(15);\n          }\n\n          return phash(acc, plugin.name);\n        }, SEED)\n        .toString()\n    : '';\n\n  return stringifyRules;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2016 Sultan Tarimo\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/* eslint-disable */\n\nexport default function(insertRule) {\n  const delimiter = '/*|*/';\n  const needle = `${delimiter}}`;\n\n  function toSheet(block) {\n    if (block) {\n      try {\n        insertRule(`${block}}`);\n      } catch (e) {}\n    }\n  }\n\n  return function ruleSheet(\n    context,\n    content,\n    selectors,\n    parents,\n    line,\n    column,\n    length,\n    ns,\n    depth,\n    at\n  ) {\n    switch (context) {\n      // property\n      case 1:\n        // @import\n        if (depth === 0 && content.charCodeAt(0) === 64) return insertRule(`${content};`), '';\n        break;\n      // selector\n      case 2:\n        if (ns === 0) return content + delimiter;\n        break;\n      // at-rule\n      case 3:\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            return insertRule(selectors[0] + content), '';\n          default:\n            return content + (at === 0 ? delimiter : '');\n        }\n      case -2:\n        content.split(needle).forEach(toSheet);\n    }\n  };\n}\n","// @flow\nimport React, { type Context, type Node, useContext, useEffect, useMemo, useState } from 'react';\nimport shallowequal from 'shallowequal';\nimport StyleSheet from '../sheet';\nimport type { Stringifier } from '../types';\nimport createStylisInstance from '../utils/stylis';\n\ntype Props = {\n  children?: Node,\n  disableCSSOMInjection?: boolean,\n  disableVendorPrefixes?: boolean,\n  sheet?: StyleSheet,\n  stylisPlugins?: Array<Function>,\n  target?: HTMLElement,\n};\n\nexport const StyleSheetContext: Context<StyleSheet | void> = React.createContext();\nexport const StyleSheetConsumer = StyleSheetContext.Consumer;\nexport const StylisContext: Context<Stringifier | void> = React.createContext();\nexport const StylisConsumer = StylisContext.Consumer;\n\nexport const masterSheet: StyleSheet = new StyleSheet();\nexport const masterStylis: Stringifier = createStylisInstance();\n\nexport function useStyleSheet(): StyleSheet {\n  return useContext(StyleSheetContext) || masterSheet;\n}\n\nexport function useStylis(): Stringifier {\n  return useContext(StylisContext) || masterStylis;\n}\n\nexport default function StyleSheetManager(props: Props) {\n  const [plugins, setPlugins] = useState(props.stylisPlugins);\n  const contextStyleSheet = useStyleSheet();\n\n  const styleSheet = useMemo(() => {\n    let sheet = contextStyleSheet;\n\n    if (props.sheet) {\n      // eslint-disable-next-line prefer-destructuring\n      sheet = props.sheet;\n    } else if (props.target) {\n      sheet = sheet.reconstructWithOptions({ target: props.target }, false);\n    }\n\n    if (props.disableCSSOMInjection) {\n      sheet = sheet.reconstructWithOptions({ useCSSOMInjection: false });\n    }\n\n    return sheet;\n  }, [props.disableCSSOMInjection, props.sheet, props.target]);\n\n  const stylis = useMemo(\n    () =>\n      createStylisInstance({\n        options: { prefix: !props.disableVendorPrefixes },\n        plugins,\n      }),\n    [props.disableVendorPrefixes, plugins]\n  );\n\n  useEffect(() => {\n    if (!shallowequal(plugins, props.stylisPlugins)) setPlugins(props.stylisPlugins);\n  }, [props.stylisPlugins]);\n\n  return (\n    <StyleSheetContext.Provider value={styleSheet}>\n      <StylisContext.Provider value={stylis}>\n        {process.env.NODE_ENV !== 'production'\n          ? React.Children.only(props.children)\n          : props.children}\n      </StylisContext.Provider>\n    </StyleSheetContext.Provider>\n  );\n}\n","// @flow\nimport StyleSheet from '../sheet';\nimport { type Stringifier } from '../types';\nimport throwStyledError from '../utils/error';\nimport { masterStylis } from './StyleSheetManager';\n\nexport default class Keyframes {\n  id: string;\n\n  name: string;\n\n  rules: string;\n\n  constructor(name: string, rules: string) {\n    this.name = name;\n    this.id = `sc-keyframes-${name}`;\n    this.rules = rules;\n  }\n\n  inject = (styleSheet: StyleSheet, stylisInstance: Stringifier = masterStylis) => {\n    const resolvedName = this.name + stylisInstance.hash;\n\n    if (!styleSheet.hasNameForId(this.id, resolvedName)) {\n      styleSheet.insertRules(\n        this.id,\n        resolvedName,\n        stylisInstance(this.rules, resolvedName, '@keyframes')\n      );\n    }\n  };\n\n  toString = () => {\n    return throwStyledError(12, String(this.name));\n  };\n\n  getName(stylisInstance: Stringifier = masterStylis) {\n    return this.name + stylisInstance.hash;\n  }\n}\n","// @flow\n\n/**\n * inlined version of\n * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/hyphenateStyleName.js\n */\n\nconst uppercaseCheck = /([A-Z])/;\nconst uppercasePattern = /([A-Z])/g;\nconst msPattern = /^ms-/;\nconst prefixAndLowerCase = (char: string): string => `-${char.toLowerCase()}`;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nexport default function hyphenateStyleName(string: string): string {\n  return uppercaseCheck.test(string)\n  ? string\n    .replace(uppercasePattern, prefixAndLowerCase)\n    .replace(msPattern, '-ms-')\n  : string;\n}\n","// @flow\nimport { isElement } from 'react-is';\nimport getComponentName from './getComponentName';\nimport isFunction from './isFunction';\nimport isStatelessFunction from './isStatelessFunction';\nimport isPlainObject from './isPlainObject';\nimport isStyledComponent from './isStyledComponent';\nimport Keyframes from '../models/Keyframes';\nimport hyphenate from './hyphenateStyleName';\nimport addUnitIfNeeded from './addUnitIfNeeded';\nimport { type Stringifier } from '../types';\n\n/**\n * It's falsish not falsy because 0 is allowed.\n */\nconst isFalsish = chunk => chunk === undefined || chunk === null || chunk === false || chunk === '';\n\nexport const objToCssArray = (obj: Object, prevKey?: string): Array<string | Function> => {\n  const rules = [];\n\n  for (const key in obj) {\n    if (!obj.hasOwnProperty(key) || isFalsish(obj[key])) continue;\n\n    if ((Array.isArray(obj[key]) && obj[key].isCss) || isFunction(obj[key])) {\n      rules.push(`${hyphenate(key)}:`, obj[key], ';');\n    } else if (isPlainObject(obj[key])) {\n      rules.push(...objToCssArray(obj[key], key));\n    } else {\n      rules.push(`${hyphenate(key)}: ${addUnitIfNeeded(key, obj[key])};`);\n    }\n  }\n\n  return prevKey ? [`${prevKey} {`, ...rules, '}'] : rules;\n};\n\nexport default function flatten(\n  chunk: any,\n  executionContext: ?Object,\n  styleSheet: ?Object,\n  stylisInstance: ?Stringifier\n): any {\n  if (Array.isArray(chunk)) {\n    const ruleSet = [];\n\n    for (let i = 0, len = chunk.length, result; i < len; i += 1) {\n      result = flatten(chunk[i], executionContext, styleSheet, stylisInstance);\n\n      if (result === '') continue;\n      else if (Array.isArray(result)) ruleSet.push(...result);\n      else ruleSet.push(result);\n    }\n\n    return ruleSet;\n  }\n\n  if (isFalsish(chunk)) {\n    return '';\n  }\n\n  /* Handle other components */\n  if (isStyledComponent(chunk)) {\n    return `.${chunk.styledComponentId}`;\n  }\n\n  /* Either execute or defer the function */\n  if (isFunction(chunk)) {\n    if (isStatelessFunction(chunk) && executionContext) {\n      const result = chunk(executionContext);\n\n      if (process.env.NODE_ENV !== 'production' && isElement(result)) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `${getComponentName(\n            chunk\n          )} is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.`\n        );\n      }\n\n      return flatten(result, executionContext, styleSheet, stylisInstance);\n    } else return chunk;\n  }\n\n  if (chunk instanceof Keyframes) {\n    if (styleSheet) {\n      chunk.inject(styleSheet, stylisInstance);\n      return chunk.getName(stylisInstance);\n    } else return chunk;\n  }\n\n  /* Handle objects */\n  return isPlainObject(chunk) ? objToCssArray(chunk) : chunk.toString();\n}\n","// @flow\nexport default function isStatelessFunction(test: any): boolean {\n  return (\n    typeof test === 'function'\n    && !(\n      test.prototype\n      && test.prototype.isReactComponent\n    )\n  );\n}\n","// @flow\nimport unitless from '@emotion/unitless';\n\n// Taken from https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/dangerousStyleValue.js\nexport default function addUnitIfNeeded(name: string, value: any): any {\n  // https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133\n  // $FlowFixMe\n  if (value == null || typeof value === 'boolean' || value === '') {\n    return '';\n  }\n\n  if (typeof value === 'number' && value !== 0 && !(name in unitless)) {\n    return `${value}px`; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return String(value).trim();\n}\n","// @flow\nimport interleave from '../utils/interleave';\nimport isPlainObject from '../utils/isPlainObject';\nimport { EMPTY_ARRAY } from '../utils/empties';\nimport isFunction from '../utils/isFunction';\nimport flatten from '../utils/flatten';\nimport type { Interpolation, RuleSet, Styles } from '../types';\n\n/**\n * Used when flattening object styles to determine if we should\n * expand an array of styles.\n */\nconst addTag = arg => {\n  if (Array.isArray(arg)) {\n    // eslint-disable-next-line no-param-reassign\n    arg.isCss = true;\n  }\n  return arg;\n};\n\nexport default function css(styles: Styles, ...interpolations: Array<Interpolation>): RuleSet {\n  if (isFunction(styles) || isPlainObject(styles)) {\n    // $FlowFixMe\n    return addTag(flatten(interleave(EMPTY_ARRAY, [styles, ...interpolations])));\n  }\n\n  if (interpolations.length === 0 && styles.length === 1 && typeof styles[0] === 'string') {\n    // $FlowFixMe\n    return styles;\n  }\n\n  // $FlowFixMe\n  return addTag(flatten(interleave(styles, interpolations)));\n}\n","// @flow\n\nimport { useRef } from 'react';\n\nconst invalidHookCallRe = /invalid hook call/i;\nconst seen = new Set();\n\nexport const checkDynamicCreation = (displayName: string, componentId?: string) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const parsedIdString = componentId ? ` with the id of \"${componentId}\"` : '';\n    const message =\n      `The component ${displayName}${parsedIdString} has been created dynamically.\\n` +\n      \"You may see this warning because you've called styled inside another component.\\n\" +\n      'To resolve this only create new StyledComponents outside of any render method and function component.';\n\n    // If a hook is called outside of a component:\n    // React 17 and earlier throw an error\n    // React 18 and above use console.error\n\n    const originalConsoleError = console.error // eslint-disable-line no-console\n    try {\n      let didNotCallInvalidHook = true\n      /* $FlowIgnore[cannot-write] */\n      console.error = (consoleErrorMessage, ...consoleErrorArgs) => { // eslint-disable-line no-console\n      // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to\n      // be called outside of a React component.\n        if (invalidHookCallRe.test(consoleErrorMessage)) {\n          didNotCallInvalidHook = false\n          // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently\n          seen.delete(message);\n        } else {\n          originalConsoleError(consoleErrorMessage, ...consoleErrorArgs);\n        }\n      }\n      // We purposefully call `useRef` outside of a component and expect it to throw\n      // If it doesn't, then we're inside another component.\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRef();\n\n      if (didNotCallInvalidHook && !seen.has(message)) {\n        // eslint-disable-next-line no-console\n        console.warn(message);\n        seen.add(message);\n      }\n    } catch (error) {\n      // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to\n      // be called outside of a React component.\n      if (invalidHookCallRe.test(error.message)) {\n        // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently\n        seen.delete(message);\n      }\n    } finally {\n      /* $FlowIgnore[cannot-write] */\n      console.error = originalConsoleError; // eslint-disable-line no-console\n    }\n  }\n};\n","// @flow\nimport { EMPTY_OBJECT } from './empties';\n\ntype Props = {\n  theme?: any,\n};\n\nexport default (props: Props, providedTheme: any, defaultProps: any = EMPTY_OBJECT) => {\n  return (props.theme !== defaultProps.theme && props.theme) || providedTheme || defaultProps.theme;\n};\n","// @flow\n\n// Source: https://www.w3.org/TR/cssom-1/#serialize-an-identifier\n// Control characters and non-letter first symbols are not supported\nconst escapeRegex = /[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~-]+/g;\n\nconst dashesAtEnds = /(^-|-$)/g;\n\n/**\n * TODO: Explore using CSS.escape when it becomes more available\n * in evergreen browsers.\n */\nexport default function escape(str: string): string {\n  return (\n    str\n      // Replace all possible CSS selectors\n      .replace(escapeRegex, '-')\n\n      // Remove extraneous hyphens at the start and end\n      .replace(dashesAtEnds, '')\n  );\n}\n","// @flow\n/* eslint-disable */\nimport generateAlphabeticName from './generateAlphabeticName';\nimport { hash } from './hash';\n\nexport default (str: string): string => {\n  return generateAlphabeticName(hash(str) >>> 0);\n};\n","// @flow\nimport type { IStyledComponent } from '../types';\n\nexport default function isTag(target: $PropertyType<IStyledComponent, 'target'>): boolean %checks {\n  return (\n    typeof target === 'string' &&\n    (process.env.NODE_ENV !== 'production'\n      ? target.charAt(0) === target.charAt(0).toLowerCase()\n      : true)\n  );\n}\n","/* eslint-disable */\n/**\n  mixin-deep; https://github.com/jonschlinkert/mixin-deep\n  Inlined such that it will be consistently transpiled to an IE-compatible syntax.\n\n  The MIT License (MIT)\n\n  Copyright (c) 2014-present, Jon Schlinkert.\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nconst isObject = val => {\n  return (\n    typeof val === 'function' || (typeof val === 'object' && val !== null && !Array.isArray(val))\n  );\n};\n\nconst isValidKey = key => {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n};\n\nfunction mixin(target, val, key) {\n  const obj = target[key];\n  if (isObject(val) && isObject(obj)) {\n    mixinDeep(obj, val);\n  } else {\n    target[key] = val;\n  }\n}\n\nexport default function mixinDeep(target, ...rest) {\n  for (const obj of rest) {\n    if (isObject(obj)) {\n      for (const key in obj) {\n        if (isValidKey(key)) {\n          mixin(target, obj[key], key);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n","// @flow\nimport React, { useContext, useMemo, type Element, type Context } from 'react';\nimport throwStyledError from '../utils/error';\nimport isFunction from '../utils/isFunction';\n\nexport type Theme = { [key: string]: mixed };\n\ntype ThemeArgument = Theme | ((outerTheme?: Theme) => Theme);\n\ntype Props = {\n  children?: Element<any>,\n  theme: ThemeArgument,\n};\n\nexport const ThemeContext: Context<Theme | void> = React.createContext();\n\nexport const ThemeConsumer = ThemeContext.Consumer;\n\nfunction mergeTheme(theme: ThemeArgument, outerTheme?: Theme): Theme {\n  if (!theme) {\n    return throwStyledError(14);\n  }\n\n  if (isFunction(theme)) {\n    const mergedTheme = theme(outerTheme);\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      (mergedTheme === null || Array.isArray(mergedTheme) || typeof mergedTheme !== 'object')\n    ) {\n      return throwStyledError(7);\n    }\n\n    return mergedTheme;\n  }\n\n  if (Array.isArray(theme) || typeof theme !== 'object') {\n    return throwStyledError(8);\n  }\n\n  return outerTheme ? { ...outerTheme, ...theme } : theme;\n}\n\n/**\n * Provide a theme to an entire react component tree via context\n */\nexport default function ThemeProvider(props: Props) {\n  const outerTheme = useContext(ThemeContext);\n  const themeContext = useMemo(() => mergeTheme(props.theme, outerTheme), [\n    props.theme,\n    outerTheme,\n  ]);\n\n  if (!props.children) {\n    return null;\n  }\n\n  return <ThemeContext.Provider value={themeContext}>{props.children}</ThemeContext.Provider>;\n}\n","// @flow\nimport validAttr from '@emotion/is-prop-valid';\nimport hoist from 'hoist-non-react-statics';\nimport React, { createElement, type Ref, useContext, useDebugValue } from 'react';\nimport { SC_VERSION } from '../constants';\nimport type {\n  Attrs,\n  IStyledComponent,\n  IStyledStatics,\n  RuleSet,\n  ShouldForwardProp,\n  Target,\n} from '../types';\nimport { checkDynamicCreation } from '../utils/checkDynamicCreation';\nimport createWarnTooManyClasses from '../utils/createWarnTooManyClasses';\nimport determineTheme from '../utils/determineTheme';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from '../utils/empties';\nimport escape from '../utils/escape';\nimport generateComponentId from '../utils/generateComponentId';\nimport generateDisplayName from '../utils/generateDisplayName';\nimport getComponentName from '../utils/getComponentName';\nimport isFunction from '../utils/isFunction';\nimport isStyledComponent from '../utils/isStyledComponent';\nimport isTag from '../utils/isTag';\nimport joinStrings from '../utils/joinStrings';\nimport merge from '../utils/mixinDeep';\nimport ComponentStyle from './ComponentStyle';\nimport { useStyleSheet, useStylis } from './StyleSheetManager';\nimport { ThemeContext } from './ThemeProvider';\n\nconst identifiers = {};\n\n/* We depend on components having unique IDs */\nfunction generateId(displayName?: string, parentComponentId?: string) {\n  const name = typeof displayName !== 'string' ? 'sc' : escape(displayName);\n  // Ensure that no displayName can lead to duplicate componentIds\n  identifiers[name] = (identifiers[name] || 0) + 1;\n\n  const componentId = `${name}-${generateComponentId(\n    // SC_VERSION gives us isolation between multiple runtimes on the page at once\n    // this is improved further with use of the babel plugin \"namespace\" feature\n    SC_VERSION + name + identifiers[name]\n  )}`;\n\n  return parentComponentId ? `${parentComponentId}-${componentId}` : componentId;\n}\n\nfunction useResolvedAttrs<Config>(theme: any = EMPTY_OBJECT, props: Config, attrs: Attrs) {\n  // NOTE: can't memoize this\n  // returns [context, resolvedAttrs]\n  // where resolvedAttrs is only the things injected by the attrs themselves\n  const context = { ...props, theme };\n  const resolvedAttrs = {};\n\n  attrs.forEach(attrDef => {\n    let resolvedAttrDef = attrDef;\n    let key;\n\n    if (isFunction(resolvedAttrDef)) {\n      resolvedAttrDef = resolvedAttrDef(context);\n    }\n\n    /* eslint-disable guard-for-in */\n    for (key in resolvedAttrDef) {\n      context[key] = resolvedAttrs[key] =\n        key === 'className'\n          ? joinStrings(resolvedAttrs[key], resolvedAttrDef[key])\n          : resolvedAttrDef[key];\n    }\n    /* eslint-enable guard-for-in */\n  });\n\n  return [context, resolvedAttrs];\n}\n\nfunction useInjectedStyle<T>(\n  componentStyle: ComponentStyle,\n  isStatic: boolean,\n  resolvedAttrs: T,\n  warnTooManyClasses?: $Call<typeof createWarnTooManyClasses, string, string>\n) {\n  const styleSheet = useStyleSheet();\n  const stylis = useStylis();\n\n  const className = isStatic\n    ? componentStyle.generateAndInjectStyles(EMPTY_OBJECT, styleSheet, stylis)\n    : componentStyle.generateAndInjectStyles(resolvedAttrs, styleSheet, stylis);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  if (process.env.NODE_ENV !== 'production') useDebugValue(className);\n\n  if (process.env.NODE_ENV !== 'production' && !isStatic && warnTooManyClasses) {\n    warnTooManyClasses(className);\n  }\n\n  return className;\n}\n\nfunction useStyledComponentImpl(\n  forwardedComponent: IStyledComponent,\n  props: Object,\n  forwardedRef: Ref<any>,\n  isStatic: boolean\n) {\n  const {\n    attrs: componentAttrs,\n    componentStyle,\n    defaultProps,\n    foldedComponentIds,\n    shouldForwardProp,\n    styledComponentId,\n    target,\n  } = forwardedComponent;\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  if (process.env.NODE_ENV !== 'production') useDebugValue(styledComponentId);\n\n  // NOTE: the non-hooks version only subscribes to this when !componentStyle.isStatic,\n  // but that'd be against the rules-of-hooks. We could be naughty and do it anyway as it\n  // should be an immutable value, but behave for now.\n  const theme = determineTheme(props, useContext(ThemeContext), defaultProps);\n\n  const [context, attrs] = useResolvedAttrs(theme || EMPTY_OBJECT, props, componentAttrs);\n\n  const generatedClassName = useInjectedStyle(\n    componentStyle,\n    isStatic,\n    context,\n    process.env.NODE_ENV !== 'production' ? forwardedComponent.warnTooManyClasses : undefined\n  );\n\n  const refToForward = forwardedRef;\n\n  const elementToBeCreated: Target = attrs.$as || props.$as || attrs.as || props.as || target;\n\n  const isTargetTag = isTag(elementToBeCreated);\n  const computedProps = attrs !== props ? { ...props, ...attrs } : props;\n  const propsForElement = {};\n\n  // eslint-disable-next-line guard-for-in\n  for (const key in computedProps) {\n    if (key[0] === '$' || key === 'as') continue;\n    else if (key === 'forwardedAs') {\n      propsForElement.as = computedProps[key];\n    } else if (\n      shouldForwardProp\n        ? shouldForwardProp(key, validAttr, elementToBeCreated)\n        : isTargetTag\n        ? validAttr(key)\n        : true\n    ) {\n      // Don't pass through non HTML tags through to HTML elements\n      propsForElement[key] = computedProps[key];\n    }\n  }\n\n  if (props.style && attrs.style !== props.style) {\n    propsForElement.style = { ...props.style, ...attrs.style };\n  }\n\n  propsForElement.className = Array.prototype\n    .concat(\n      foldedComponentIds,\n      styledComponentId,\n      generatedClassName !== styledComponentId ? generatedClassName : null,\n      props.className,\n      attrs.className\n    )\n    .filter(Boolean)\n    .join(' ');\n\n  propsForElement.ref = refToForward;\n\n  return createElement(elementToBeCreated, propsForElement);\n}\n\nexport default function createStyledComponent(\n  target: $PropertyType<IStyledComponent, 'target'>,\n  options: {\n    attrs?: Attrs,\n    componentId: string,\n    displayName?: string,\n    parentComponentId?: string,\n    shouldForwardProp?: ShouldForwardProp,\n  },\n  rules: RuleSet\n) {\n  const isTargetStyledComp = isStyledComponent(target);\n  const isCompositeComponent = !isTag(target);\n\n  const {\n    attrs = EMPTY_ARRAY,\n    componentId = generateId(options.displayName, options.parentComponentId),\n    displayName = generateDisplayName(target),\n  } = options;\n\n  const styledComponentId =\n    options.displayName && options.componentId\n      ? `${escape(options.displayName)}-${options.componentId}`\n      : options.componentId || componentId;\n\n  // fold the underlying StyledComponent attrs up (implicit extend)\n  const finalAttrs =\n    isTargetStyledComp && ((target: any): IStyledComponent).attrs\n      ? Array.prototype.concat(((target: any): IStyledComponent).attrs, attrs).filter(Boolean)\n      : attrs;\n\n  // eslint-disable-next-line prefer-destructuring\n  let shouldForwardProp = options.shouldForwardProp;\n\n  if (isTargetStyledComp && target.shouldForwardProp) {\n    if (options.shouldForwardProp) {\n      // compose nested shouldForwardProp calls\n      shouldForwardProp = (prop, filterFn, elementToBeCreated) =>\n        ((((target: any): IStyledComponent).shouldForwardProp: any): ShouldForwardProp)(\n          prop,\n          filterFn,\n          elementToBeCreated\n        ) &&\n        ((options.shouldForwardProp: any): ShouldForwardProp)(prop, filterFn, elementToBeCreated);\n    } else {\n      // eslint-disable-next-line prefer-destructuring\n      shouldForwardProp = ((target: any): IStyledComponent).shouldForwardProp;\n    }\n  }\n\n  const componentStyle = new ComponentStyle(\n    rules,\n    styledComponentId,\n    isTargetStyledComp ? ((target: Object).componentStyle: ComponentStyle) : undefined\n  );\n\n  // statically styled-components don't need to build an execution context object,\n  // and shouldn't be increasing the number of class names\n  const isStatic = componentStyle.isStatic && attrs.length === 0;\n\n  /**\n   * forwardRef creates a new interim component, which we'll take advantage of\n   * instead of extending ParentComponent to create _another_ interim class\n   */\n  let WrappedStyledComponent: IStyledComponent;\n\n  const forwardRef = (props, ref) =>\n    // eslint-disable-next-line\n    useStyledComponentImpl(WrappedStyledComponent, props, ref, isStatic);\n\n  forwardRef.displayName = displayName;\n\n  WrappedStyledComponent = ((React.forwardRef(forwardRef): any): IStyledComponent);\n  WrappedStyledComponent.attrs = finalAttrs;\n  WrappedStyledComponent.componentStyle = componentStyle;\n  WrappedStyledComponent.displayName = displayName;\n  WrappedStyledComponent.shouldForwardProp = shouldForwardProp;\n\n  // this static is used to preserve the cascade of static classes for component selector\n  // purposes; this is especially important with usage of the css prop\n  WrappedStyledComponent.foldedComponentIds = isTargetStyledComp\n    ? Array.prototype.concat(\n        ((target: any): IStyledComponent).foldedComponentIds,\n        ((target: any): IStyledComponent).styledComponentId\n      )\n    : EMPTY_ARRAY;\n\n  WrappedStyledComponent.styledComponentId = styledComponentId;\n\n  // fold the underlying StyledComponent target up since we folded the styles\n  WrappedStyledComponent.target = isTargetStyledComp\n    ? ((target: any): IStyledComponent).target\n    : target;\n\n  WrappedStyledComponent.withComponent = function withComponent(tag: Target) {\n    const { componentId: previousComponentId, ...optionsToCopy } = options;\n\n    const newComponentId =\n      previousComponentId &&\n      `${previousComponentId}-${isTag(tag) ? tag : escape(getComponentName(tag))}`;\n\n    const newOptions = {\n      ...optionsToCopy,\n      attrs: finalAttrs,\n      componentId: newComponentId,\n    };\n\n    return createStyledComponent(tag, newOptions, rules);\n  };\n\n  Object.defineProperty(WrappedStyledComponent, 'defaultProps', {\n    get() {\n      return this._foldedDefaultProps;\n    },\n\n    set(obj) {\n      this._foldedDefaultProps = isTargetStyledComp\n        ? merge({}, ((target: any): IStyledComponent).defaultProps, obj)\n        : obj;\n    },\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    checkDynamicCreation(displayName, styledComponentId);\n\n    WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(\n      displayName,\n      styledComponentId\n    );\n  }\n\n  WrappedStyledComponent.toString = () => `.${WrappedStyledComponent.styledComponentId}`;\n\n  if (isCompositeComponent) {\n    hoist<\n      IStyledStatics,\n      $PropertyType<IStyledComponent, 'target'>,\n      { [key: $Keys<IStyledStatics>]: true }\n    >(WrappedStyledComponent, ((target: any): $PropertyType<IStyledComponent, 'target'>), {\n      // all SC-specific things should not be hoisted\n      attrs: true,\n      componentStyle: true,\n      displayName: true,\n      foldedComponentIds: true,\n      shouldForwardProp: true,\n      styledComponentId: true,\n      target: true,\n      withComponent: true,\n    });\n  }\n\n  return WrappedStyledComponent;\n}\n","// @flow\nimport type { IStyledComponent } from '../types';\nimport getComponentName from './getComponentName';\nimport isTag from './isTag';\n\nexport default function generateDisplayName(\n  target: $PropertyType<IStyledComponent, 'target'>\n): string {\n  return isTag(target) ? `styled.${target}` : `Styled(${getComponentName(target)})`;\n}\n","/**\n * Convenience function for joining strings to form className chains\n */\nexport default function joinStrings(a: ?String, b: ?String): ?String {\n  return a && b ? `${a} ${b}` : a || b;\n}\n","// @flow\n// Thanks to ReactDOMFactories for this handy list!\n\nexport default [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'marker',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'textPath',\n  'tspan',\n];\n","// @flow\nimport constructWithOptions from './constructWithOptions';\nimport StyledComponent from '../models/StyledComponent';\nimport domElements from '../utils/domElements';\n\nimport type { Target } from '../types';\n\nconst styled = (tag: Target) => constructWithOptions(StyledComponent, tag);\n\n// Shorthands for all valid HTML Elements\ndomElements.forEach(domElement => {\n  styled[domElement] = styled(domElement);\n});\n\nexport default styled;\n","// @flow\nimport { isValidElementType } from 'react-is';\nimport css from './css';\nimport throwStyledError from '../utils/error';\nimport { EMPTY_OBJECT } from '../utils/empties';\n\nimport type { Target } from '../types';\n\nexport default function constructWithOptions(\n  componentConstructor: Function,\n  tag: Target,\n  options: Object = EMPTY_OBJECT\n) {\n  if (!isValidElementType(tag)) {\n    return throwStyledError(1, String(tag));\n  }\n\n  /* This is callable directly as a template function */\n  // $FlowFixMe: Not typed to avoid destructuring arguments\n  const templateFunction = (...args) => componentConstructor(tag, options, css(...args));\n\n  /* If config methods are called, wrap up a new template function and merge options */\n  templateFunction.withConfig = config =>\n    constructWithOptions(componentConstructor, tag, { ...options, ...config });\n\n  /* Modify/inject new props at runtime */\n  templateFunction.attrs = attrs =>\n    constructWithOptions(componentConstructor, tag, {\n      ...options,\n      attrs: Array.prototype.concat(options.attrs, attrs).filter(Boolean),\n    });\n\n  return templateFunction;\n}\n","// @flow\nimport StyleSheet from '../sheet';\nimport type { RuleSet, Stringifier } from '../types';\nimport flatten from '../utils/flatten';\nimport isStaticRules from '../utils/isStaticRules';\n\nexport default class GlobalStyle {\n  componentId: string;\n\n  isStatic: boolean;\n\n  rules: RuleSet;\n\n  constructor(rules: RuleSet, componentId: string) {\n    this.rules = rules;\n    this.componentId = componentId;\n    this.isStatic = isStaticRules(rules);\n\n    // pre-register the first instance to ensure global styles\n    // load before component ones\n    StyleSheet.registerId(this.componentId + 1);\n  }\n\n  createStyles(\n    instance: number,\n    executionContext: Object,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ) {\n    const flatCSS = flatten(this.rules, executionContext, styleSheet, stylis);\n    const css = stylis(flatCSS.join(''), '');\n    const id = this.componentId + instance;\n\n    // NOTE: We use the id as a name as well, since these rules never change\n    styleSheet.insertRules(id, id, css);\n  }\n\n  removeStyles(instance: number, styleSheet: StyleSheet) {\n    styleSheet.clearRules(this.componentId + instance);\n  }\n\n  renderStyles(\n    instance: number,\n    executionContext: Object,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ) {\n    if (instance > 2) StyleSheet.registerId(this.componentId + instance);\n\n    // NOTE: Remove old styles, then inject the new ones\n    this.removeStyles(instance, styleSheet);\n    this.createStyles(instance, executionContext, styleSheet, stylis);\n  }\n}\n","// @flow\nimport React, { useContext, useLayoutEffect, useRef } from 'react';\nimport { STATIC_EXECUTION_CONTEXT } from '../constants';\nimport GlobalStyle from '../models/GlobalStyle';\nimport { useStyleSheet, useStylis } from '../models/StyleSheetManager';\nimport { ThemeContext } from '../models/ThemeProvider';\nimport type { Interpolation } from '../types';\nimport { checkDynamicCreation } from '../utils/checkDynamicCreation';\nimport determineTheme from '../utils/determineTheme';\nimport generateComponentId from '../utils/generateComponentId';\nimport css from './css';\n\ndeclare var __SERVER__: boolean;\n\ntype GlobalStyleComponentPropsType = Object;\n\nexport default function createGlobalStyle(\n  strings: Array<string>,\n  ...interpolations: Array<Interpolation>\n) {\n  const rules = css(strings, ...interpolations);\n  const styledComponentId = `sc-global-${generateComponentId(JSON.stringify(rules))}`;\n  const globalStyle = new GlobalStyle(rules, styledComponentId);\n\n  if (process.env.NODE_ENV !== 'production') {\n    checkDynamicCreation(styledComponentId);\n  }\n\n  function GlobalStyleComponent(props: GlobalStyleComponentPropsType) {\n    const styleSheet = useStyleSheet();\n    const stylis = useStylis();\n    const theme = useContext(ThemeContext);\n    const instanceRef = useRef(styleSheet.allocateGSInstance(styledComponentId));\n\n    const instance = instanceRef.current;\n\n    if (process.env.NODE_ENV !== 'production' && React.Children.count(props.children)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `The global style component ${styledComponentId} was given child JSX. createGlobalStyle does not render children.`\n      );\n    }\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      rules.some(rule => typeof rule === 'string' && rule.indexOf('@import') !== -1)\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app.`\n      );\n    }\n\n    if (styleSheet.server) {\n      renderStyles(instance, props, styleSheet, theme, stylis);\n    }\n\n    if (!__SERVER__) {\n      // this conditional is fine because it is compiled away for the relevant builds during minification,\n      // resulting in a single unguarded hook call\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useLayoutEffect(() => {\n        if (!styleSheet.server) {\n          renderStyles(instance, props, styleSheet, theme, stylis);\n          return () => globalStyle.removeStyles(instance, styleSheet);\n        }\n      }, [instance, props, styleSheet, theme, stylis]);\n    }\n\n    return null;\n  }\n\n  function renderStyles(instance, props, styleSheet, theme, stylis) {\n    if (globalStyle.isStatic) {\n      globalStyle.renderStyles(instance, STATIC_EXECUTION_CONTEXT, styleSheet, stylis);\n    } else {\n      const context = {\n        ...props,\n        theme: determineTheme(props, theme, GlobalStyleComponent.defaultProps),\n      };\n\n      globalStyle.renderStyles(instance, context, styleSheet, stylis);\n    }\n  }\n\n  // $FlowFixMe\n  return React.memo(GlobalStyleComponent);\n}\n","// @flow\n\nimport css from './css';\nimport generateComponentId from '../utils/generateComponentId';\nimport Keyframes from '../models/Keyframes';\n\nimport type { Interpolation, Styles } from '../types';\n\nexport default function keyframes(\n  strings: Styles,\n  ...interpolations: Array<Interpolation>\n): Keyframes {\n  /* Warning if you've used keyframes on React Native */\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative'\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.'\n    );\n  }\n\n  const rules = css(strings, ...interpolations).join('');\n  const name = generateComponentId(rules);\n  return new Keyframes(name, rules);\n}\n","// @flow\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { IS_BROWSER, SC_ATTR, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport throwStyledError from '../utils/error';\nimport getNonce from '../utils/nonce';\nimport StyleSheet from '../sheet';\nimport StyleSheetManager from './StyleSheetManager';\n\ndeclare var __SERVER__: boolean;\n\nconst CLOSING_TAG_R = /^\\s*<\\/[a-z]/i;\n\nexport default class ServerStyleSheet {\n  isStreaming: boolean;\n\n  instance: StyleSheet;\n\n  sealed: boolean;\n\n  constructor() {\n    this.instance = new StyleSheet({ isServer: true });\n    this.sealed = false;\n  }\n\n  _emitSheetCSS = (): string => {\n    const css = this.instance.toString();\n    if (!css) return '';\n\n    const nonce = getNonce();\n    const attrs = [nonce && `nonce=\"${nonce}\"`, `${SC_ATTR}=\"true\"`, `${SC_ATTR_VERSION}=\"${SC_VERSION}\"`];\n    const htmlAttr = attrs.filter(Boolean).join(' ');\n\n    return `<style ${htmlAttr}>${css}</style>`;\n  };\n\n  collectStyles(children: any) {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    return <StyleSheetManager sheet={this.instance}>{children}</StyleSheetManager>;\n  }\n\n  getStyleTags = (): string => {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    return this._emitSheetCSS();\n  };\n\n  getStyleElement = () => {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    const props = {\n      [SC_ATTR]: '',\n      [SC_ATTR_VERSION]: SC_VERSION,\n      dangerouslySetInnerHTML: {\n        __html: this.instance.toString(),\n      },\n    };\n\n    const nonce = getNonce();\n    if (nonce) {\n      (props: any).nonce = nonce;\n    }\n\n    // v4 returned an array for this fn, so we'll do the same for v5 for backward compat\n    return [<style {...props} key=\"sc-0-0\" />];\n  };\n\n  // eslint-disable-next-line consistent-return\n  interleaveWithNodeStream(input: any) {\n    if (!__SERVER__ || IS_BROWSER) {\n      return throwStyledError(3);\n    } else if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    if (__SERVER__) {\n      this.seal();\n\n      // eslint-disable-next-line global-require\n      const { Readable, Transform } = require('stream');\n\n      const readableStream: Readable = input;\n      const { instance: sheet, _emitSheetCSS } = this;\n\n      const transformer = new Transform({\n        transform: function appendStyleChunks(chunk, /* encoding */ _, callback) {\n          // Get the chunk and retrieve the sheet's CSS as an HTML chunk,\n          // then reset its rules so we get only new ones for the next chunk\n          const renderedHtml = chunk.toString();\n          const html = _emitSheetCSS();\n\n          sheet.clearTag();\n\n          // prepend style html to chunk, unless the start of the chunk is a\n          // closing tag in which case append right after that\n          if (CLOSING_TAG_R.test(renderedHtml)) {\n            const endOfClosingTag = renderedHtml.indexOf('>') + 1;\n            const before = renderedHtml.slice(0, endOfClosingTag);\n            const after = renderedHtml.slice(endOfClosingTag);\n\n            this.push(before + html + after);\n          } else {\n            this.push(html + renderedHtml);\n          }\n\n          callback();\n        },\n      });\n\n      readableStream.on('error', err => {\n        // forward the error to the transform stream\n        transformer.emit('error', err);\n      });\n\n      return readableStream.pipe(transformer);\n    }\n  }\n\n  seal = () => {\n    this.sealed = true;\n  };\n}\n","// @flow\n/* Import singletons */\nimport isStyledComponent from './utils/isStyledComponent';\nimport css from './constructors/css';\nimport createGlobalStyle from './constructors/createGlobalStyle';\nimport keyframes from './constructors/keyframes';\nimport ServerStyleSheet from './models/ServerStyleSheet';\nimport { SC_VERSION } from './constants';\n\nimport StyleSheetManager, {\n  StyleSheetContext,\n  StyleSheetConsumer,\n} from './models/StyleSheetManager';\n\n/* Import components */\nimport ThemeProvider, { ThemeContext, ThemeConsumer } from './models/ThemeProvider';\n\n/* Import Higher Order Components */\nimport withTheme from './hoc/withTheme';\n\n/* Import hooks */\nimport useTheme from './hooks/useTheme';\n\ndeclare var __SERVER__: boolean;\n\n/* Warning if you've imported this file on React Native */\nif (\n  process.env.NODE_ENV !== 'production' &&\n  typeof navigator !== 'undefined' &&\n  navigator.product === 'ReactNative'\n) {\n  // eslint-disable-next-line no-console\n  console.warn(\n    \"It looks like you've imported 'styled-components' on React Native.\\n\" +\n      \"Perhaps you're looking to import 'styled-components/native'?\\n\" +\n      'Read more about this at https://www.styled-components.com/docs/basics#react-native'\n  );\n}\n\n/* Warning if there are several instances of styled-components */\nif (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test' && typeof window !== 'undefined') {\n  window['__styled-components-init__'] = window['__styled-components-init__'] || 0;\n\n  if (window['__styled-components-init__'] === 1) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      \"It looks like there are several instances of 'styled-components' initialized in this application. \" +\n        'This may cause dynamic styles to not render properly, errors during the rehydration process, ' +\n        'a missing theme prop, and makes your application bigger without good reason.\\n\\n' +\n        'See https://s-c.sh/2BAXzed for more info.'\n    );\n  }\n\n  window['__styled-components-init__'] += 1;\n}\n\n/* Export everything */\nexport * from './secretInternals';\nexport {\n  createGlobalStyle,\n  css,\n  isStyledComponent,\n  keyframes,\n  ServerStyleSheet,\n  StyleSheetConsumer,\n  StyleSheetContext,\n  StyleSheetManager,\n  ThemeConsumer,\n  ThemeContext,\n  ThemeProvider,\n  useTheme,\n  SC_VERSION as version,\n  withTheme,\n};\n","import { system, get } from '@styled-system/core';\n\nvar isNumber = function isNumber(n) {\n  return typeof n === 'number' && !isNaN(n);\n};\n\nvar getWidth = function getWidth(n, scale) {\n  return get(scale, n, !isNumber(n) || n > 1 ? n : n * 100 + '%');\n};\n\nvar config = {\n  width: {\n    property: 'width',\n    scale: 'sizes',\n    transform: getWidth\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes'\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes'\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes'\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes'\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes'\n  },\n  size: {\n    properties: ['width', 'height'],\n    scale: 'sizes'\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true\n};\nexport var layout = system(config);\nexport default layout;\n","import { system } from '@styled-system/core';\nvar config = {\n  color: {\n    property: 'color',\n    scale: 'colors'\n  },\n  backgroundColor: {\n    property: 'backgroundColor',\n    scale: 'colors'\n  },\n  opacity: true\n};\nconfig.bg = config.backgroundColor;\nexport var color = system(config);\nexport default color;\n","import { system } from '@styled-system/core';\nvar defaults = {\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72]\n};\nvar config = {\n  fontFamily: {\n    property: 'fontFamily',\n    scale: 'fonts'\n  },\n  fontSize: {\n    property: 'fontSize',\n    scale: 'fontSizes',\n    defaultScale: defaults.fontSizes\n  },\n  fontWeight: {\n    property: 'fontWeight',\n    scale: 'fontWeights'\n  },\n  lineHeight: {\n    property: 'lineHeight',\n    scale: 'lineHeights'\n  },\n  letterSpacing: {\n    property: 'letterSpacing',\n    scale: 'letterSpacings'\n  },\n  textAlign: true,\n  fontStyle: true\n};\nexport var typography = system(config);\nexport default typography;\n","import { system } from '@styled-system/core';\nvar config = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n  // item\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: true,\n  justifySelf: true,\n  alignSelf: true,\n  order: true\n};\nexport var flexbox = system(config);\nexport default flexbox;\n","import { system } from '@styled-system/core';\nvar defaults = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512]\n};\nvar config = {\n  gridGap: {\n    property: 'gridGap',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  gridColumnGap: {\n    property: 'gridColumnGap',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  gridRowGap: {\n    property: 'gridRowGap',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  gridColumn: true,\n  gridRow: true,\n  gridAutoFlow: true,\n  gridAutoColumns: true,\n  gridAutoRows: true,\n  gridTemplateColumns: true,\n  gridTemplateRows: true,\n  gridTemplateAreas: true,\n  gridArea: true\n};\nexport var grid = system(config);\nexport default grid;\n","import { system } from '@styled-system/core';\nvar config = {\n  border: {\n    property: 'border',\n    scale: 'borders'\n  },\n  borderWidth: {\n    property: 'borderWidth',\n    scale: 'borderWidths'\n  },\n  borderStyle: {\n    property: 'borderStyle',\n    scale: 'borderStyles'\n  },\n  borderColor: {\n    property: 'borderColor',\n    scale: 'colors'\n  },\n  borderRadius: {\n    property: 'borderRadius',\n    scale: 'radii'\n  },\n  borderTop: {\n    property: 'borderTop',\n    scale: 'borders'\n  },\n  borderTopLeftRadius: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii'\n  },\n  borderTopRightRadius: {\n    property: 'borderTopRightRadius',\n    scale: 'radii'\n  },\n  borderRight: {\n    property: 'borderRight',\n    scale: 'borders'\n  },\n  borderBottom: {\n    property: 'borderBottom',\n    scale: 'borders'\n  },\n  borderBottomLeftRadius: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii'\n  },\n  borderBottomRightRadius: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii'\n  },\n  borderLeft: {\n    property: 'borderLeft',\n    scale: 'borders'\n  },\n  borderX: {\n    properties: ['borderLeft', 'borderRight'],\n    scale: 'borders'\n  },\n  borderY: {\n    properties: ['borderTop', 'borderBottom'],\n    scale: 'borders'\n  }\n};\nconfig.borderTopWidth = {\n  property: 'borderTopWidth',\n  scale: 'borderWidths'\n};\nconfig.borderTopColor = {\n  property: 'borderTopColor',\n  scale: 'colors'\n};\nconfig.borderTopStyle = {\n  property: 'borderTopStyle',\n  scale: 'borderStyles'\n};\nconfig.borderTopLeftRadius = {\n  property: 'borderTopLeftRadius',\n  scale: 'radii'\n};\nconfig.borderTopRightRadius = {\n  property: 'borderTopRightRadius',\n  scale: 'radii'\n};\nconfig.borderBottomWidth = {\n  property: 'borderBottomWidth',\n  scale: 'borderWidths'\n};\nconfig.borderBottomColor = {\n  property: 'borderBottomColor',\n  scale: 'colors'\n};\nconfig.borderBottomStyle = {\n  property: 'borderBottomStyle',\n  scale: 'borderStyles'\n};\nconfig.borderBottomLeftRadius = {\n  property: 'borderBottomLeftRadius',\n  scale: 'radii'\n};\nconfig.borderBottomRightRadius = {\n  property: 'borderBottomRightRadius',\n  scale: 'radii'\n};\nconfig.borderLeftWidth = {\n  property: 'borderLeftWidth',\n  scale: 'borderWidths'\n};\nconfig.borderLeftColor = {\n  property: 'borderLeftColor',\n  scale: 'colors'\n};\nconfig.borderLeftStyle = {\n  property: 'borderLeftStyle',\n  scale: 'borderStyles'\n};\nconfig.borderRightWidth = {\n  property: 'borderRightWidth',\n  scale: 'borderWidths'\n};\nconfig.borderRightColor = {\n  property: 'borderRightColor',\n  scale: 'colors'\n};\nconfig.borderRightStyle = {\n  property: 'borderRightStyle',\n  scale: 'borderStyles'\n};\nexport var border = system(config);\nexport default border;\n","import { system } from '@styled-system/core';\nvar config = {\n  background: true,\n  backgroundImage: true,\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true\n};\nconfig.bgImage = config.backgroundImage;\nconfig.bgSize = config.backgroundSize;\nconfig.bgPosition = config.backgroundPosition;\nconfig.bgRepeat = config.backgroundRepeat;\nexport var background = system(config);\nexport default background;\n","import { system } from '@styled-system/core';\nvar defaults = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512]\n};\nvar config = {\n  position: true,\n  zIndex: {\n    property: 'zIndex',\n    scale: 'zIndices'\n  },\n  top: {\n    property: 'top',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  right: {\n    property: 'right',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  bottom: {\n    property: 'bottom',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  left: {\n    property: 'left',\n    scale: 'space',\n    defaultScale: defaults.space\n  }\n};\nexport var position = system(config);\nexport default position;\n","import { get, system, compose } from '@styled-system/core';\nvar defaults = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512]\n};\n\nvar isNumber = function isNumber(n) {\n  return typeof n === 'number' && !isNaN(n);\n};\n\nvar getMargin = function getMargin(n, scale) {\n  if (!isNumber(n)) {\n    return get(scale, n, n);\n  }\n\n  var isNegative = n < 0;\n  var absolute = Math.abs(n);\n  var value = get(scale, absolute, absolute);\n\n  if (!isNumber(value)) {\n    return isNegative ? '-' + value : value;\n  }\n\n  return value * (isNegative ? -1 : 1);\n};\n\nvar configs = {};\nconfigs.margin = {\n  margin: {\n    property: 'margin',\n    scale: 'space',\n    transform: getMargin,\n    defaultScale: defaults.space\n  },\n  marginTop: {\n    property: 'marginTop',\n    scale: 'space',\n    transform: getMargin,\n    defaultScale: defaults.space\n  },\n  marginRight: {\n    property: 'marginRight',\n    scale: 'space',\n    transform: getMargin,\n    defaultScale: defaults.space\n  },\n  marginBottom: {\n    property: 'marginBottom',\n    scale: 'space',\n    transform: getMargin,\n    defaultScale: defaults.space\n  },\n  marginLeft: {\n    property: 'marginLeft',\n    scale: 'space',\n    transform: getMargin,\n    defaultScale: defaults.space\n  },\n  marginX: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transform: getMargin,\n    defaultScale: defaults.space\n  },\n  marginY: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transform: getMargin,\n    defaultScale: defaults.space\n  }\n};\nconfigs.margin.m = configs.margin.margin;\nconfigs.margin.mt = configs.margin.marginTop;\nconfigs.margin.mr = configs.margin.marginRight;\nconfigs.margin.mb = configs.margin.marginBottom;\nconfigs.margin.ml = configs.margin.marginLeft;\nconfigs.margin.mx = configs.margin.marginX;\nconfigs.margin.my = configs.margin.marginY;\nconfigs.padding = {\n  padding: {\n    property: 'padding',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  paddingTop: {\n    property: 'paddingTop',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  paddingRight: {\n    property: 'paddingRight',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  paddingBottom: {\n    property: 'paddingBottom',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  paddingLeft: {\n    property: 'paddingLeft',\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  paddingX: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space',\n    defaultScale: defaults.space\n  },\n  paddingY: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space',\n    defaultScale: defaults.space\n  }\n};\nconfigs.padding.p = configs.padding.padding;\nconfigs.padding.pt = configs.padding.paddingTop;\nconfigs.padding.pr = configs.padding.paddingRight;\nconfigs.padding.pb = configs.padding.paddingBottom;\nconfigs.padding.pl = configs.padding.paddingLeft;\nconfigs.padding.px = configs.padding.paddingX;\nconfigs.padding.py = configs.padding.paddingY;\nexport var margin = system(configs.margin);\nexport var padding = system(configs.padding);\nexport var space = compose(margin, padding);\nexport default space;\n","import { system } from '@styled-system/core';\nexport var shadow = system({\n  boxShadow: {\n    property: 'boxShadow',\n    scale: 'shadows'\n  },\n  textShadow: {\n    property: 'textShadow',\n    scale: 'shadows'\n  }\n});\nexport default shadow;\n","import { get, createParser } from '@styled-system/core';\nimport css from '@styled-system/css';\nexport var variant = function variant(_ref) {\n  var _config;\n\n  var scale = _ref.scale,\n      _ref$prop = _ref.prop,\n      prop = _ref$prop === void 0 ? 'variant' : _ref$prop,\n      _ref$variants = _ref.variants,\n      variants = _ref$variants === void 0 ? {} : _ref$variants,\n      key = _ref.key;\n  var sx;\n\n  if (Object.keys(variants).length) {\n    sx = function sx(value, scale, props) {\n      return css(get(scale, value, null))(props.theme);\n    };\n  } else {\n    sx = function sx(value, scale) {\n      return get(scale, value, null);\n    };\n  }\n\n  sx.scale = scale || key;\n  sx.defaults = variants;\n  var config = (_config = {}, _config[prop] = sx, _config);\n  var parser = createParser(config);\n  return parser;\n};\nexport default variant;\nexport var buttonStyle = variant({\n  key: 'buttons'\n});\nexport var textStyle = variant({\n  key: 'textStyles',\n  prop: 'textStyle'\n});\nexport var colorStyle = variant({\n  key: 'colorStyles',\n  prop: 'colors'\n});\n","import { createStyleFunction, createParser } from '@styled-system/core'; // v4 api shims\n\nimport layout from '@styled-system/layout';\nimport color from '@styled-system/color';\nimport typography from '@styled-system/typography';\nimport flexbox from '@styled-system/flexbox';\nimport grid from '@styled-system/grid';\nimport border from '@styled-system/border';\nimport background from '@styled-system/background';\nimport position from '@styled-system/position';\nexport { get, createParser, createStyleFunction, compose, system } from '@styled-system/core';\nexport { margin, padding, space } from '@styled-system/space';\nexport { color } from '@styled-system/color';\nexport { layout } from '@styled-system/layout';\nexport { typography } from '@styled-system/typography';\nexport { flexbox } from '@styled-system/flexbox';\nexport { border } from '@styled-system/border';\nexport { background } from '@styled-system/background';\nexport { position } from '@styled-system/position';\nexport { grid } from '@styled-system/grid';\nexport { shadow } from '@styled-system/shadow';\nexport { default as boxShadow, default as textShadow } from '@styled-system/shadow';\nexport { variant, buttonStyle, textStyle, colorStyle } from '@styled-system/variant';\nvar width = layout.width,\n    height = layout.height,\n    minWidth = layout.minWidth,\n    minHeight = layout.minHeight,\n    maxWidth = layout.maxWidth,\n    maxHeight = layout.maxHeight,\n    size = layout.size,\n    verticalAlign = layout.verticalAlign,\n    display = layout.display,\n    overflow = layout.overflow,\n    overflowX = layout.overflowX,\n    overflowY = layout.overflowY;\nvar opacity = color.opacity;\nvar fontSize = typography.fontSize,\n    fontFamily = typography.fontFamily,\n    fontWeight = typography.fontWeight,\n    lineHeight = typography.lineHeight,\n    textAlign = typography.textAlign,\n    fontStyle = typography.fontStyle,\n    letterSpacing = typography.letterSpacing;\nvar alignItems = flexbox.alignItems,\n    alignContent = flexbox.alignContent,\n    justifyItems = flexbox.justifyItems,\n    justifyContent = flexbox.justifyContent,\n    flexWrap = flexbox.flexWrap,\n    flexDirection = flexbox.flexDirection,\n    flex = flexbox.flex,\n    flexGrow = flexbox.flexGrow,\n    flexShrink = flexbox.flexShrink,\n    flexBasis = flexbox.flexBasis,\n    justifySelf = flexbox.justifySelf,\n    alignSelf = flexbox.alignSelf,\n    order = flexbox.order;\nvar gridGap = grid.gridGap,\n    gridColumnGap = grid.gridColumnGap,\n    gridRowGap = grid.gridRowGap,\n    gridColumn = grid.gridColumn,\n    gridRow = grid.gridRow,\n    gridAutoFlow = grid.gridAutoFlow,\n    gridAutoColumns = grid.gridAutoColumns,\n    gridAutoRows = grid.gridAutoRows,\n    gridTemplateColumns = grid.gridTemplateColumns,\n    gridTemplateRows = grid.gridTemplateRows,\n    gridTemplateAreas = grid.gridTemplateAreas,\n    gridArea = grid.gridArea;\nvar borderWidth = border.borderWidth,\n    borderStyle = border.borderStyle,\n    borderColor = border.borderColor,\n    borderTop = border.borderTop,\n    borderRight = border.borderRight,\n    borderBottom = border.borderBottom,\n    borderLeft = border.borderLeft,\n    borderRadius = border.borderRadius;\nvar backgroundImage = background.backgroundImage,\n    backgroundSize = background.backgroundSize,\n    backgroundPosition = background.backgroundPosition,\n    backgroundRepeat = background.backgroundRepeat;\nvar zIndex = position.zIndex,\n    top = position.top,\n    right = position.right,\n    bottom = position.bottom,\n    left = position.left;\nexport { default as borders } from '@styled-system/border';\nexport { width, height, minWidth, minHeight, maxWidth, maxHeight, size, verticalAlign, display, overflow, overflowX, overflowY // color\n, opacity // typography\n, fontSize, fontFamily, fontWeight, lineHeight, textAlign, fontStyle, letterSpacing // flexbox\n, alignItems, alignContent, justifyItems, justifyContent, flexWrap, flexDirection, flex, flexGrow, flexShrink, flexBasis, justifySelf, alignSelf, order // grid\n, gridGap, gridColumnGap, gridRowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea // border\n, borderWidth, borderStyle, borderColor, borderTop, borderRight, borderBottom, borderLeft, borderRadius // background\n, backgroundImage, backgroundSize, backgroundPosition, backgroundRepeat // position\n, zIndex, top, right, bottom, left }; // v4 style API shim\n\nexport var style = function style(_ref) {\n  var prop = _ref.prop,\n      cssProperty = _ref.cssProperty,\n      alias = _ref.alias,\n      key = _ref.key,\n      transformValue = _ref.transformValue,\n      scale = _ref.scale,\n      properties = _ref.properties;\n  var config = {};\n  config[prop] = createStyleFunction({\n    properties: properties,\n    property: cssProperty || prop,\n    scale: key,\n    defaultScale: scale,\n    transform: transformValue\n  });\n  if (alias) config[alias] = config[prop];\n  var parse = createParser(config);\n  return parse;\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {gitHubTokenPersistence, gitHubUsername} from './github/gitHubCredentials';\nimport {Link, Text} from '@primer/react';\nimport {useCallback} from 'react';\nimport {useRecoilStateLoadable, useRecoilValueLoadable} from 'recoil';\n\nexport default function Username(): React.ReactElement | null {\n  const username = useRecoilValueLoadable(gitHubUsername).valueMaybe();\n  const [tokenPersistenceLoadable, setToken] = useRecoilStateLoadable(gitHubTokenPersistence);\n  const onLogout = useCallback(() => setToken(null), [setToken]);\n\n  switch (tokenPersistenceLoadable.state) {\n    case 'hasValue': {\n      const {contents: token} = tokenPersistenceLoadable;\n      if (username != null && token != null) {\n        return (\n          <>\n            <Text fontWeight=\"bold\">{username}</Text>\n            {' | '}\n            <Link as=\"button\" onClick={onLogout}>\n              Logout\n            </Link>\n          </>\n        );\n      } else if (token != null) {\n        // we have a token but no username: we still offer the logout button\n        return (\n          <>\n            <Link as=\"button\" onClick={onLogout}>\n              Logout\n            </Link>\n          </>\n        );\n      }\n    }\n  }\n\n  return null;\n}\n","import styled, { css } from 'styled-components';\nimport { get } from './constants';\nimport sx from './sx';\nconst Header = styled.div.withConfig({\n  displayName: \"Header\",\n  componentId: \"sc-11fu6rh-0\"\n})([\"z-index:32;display:flex;padding:\", \";font-size:\", \";line-height:\", \";color:\", \";background-color:\", \";align-items:center;flex-wrap:nowrap;\", \";\"], get('space.3'), get('fontSizes.1'), get('lineHeights.default'), get('colors.header.text'), get('colors.header.bg'), sx);\nconst HeaderItem = styled.div.withConfig({\n  displayName: \"Header__HeaderItem\",\n  componentId: \"sc-11fu6rh-1\"\n})([\"display:flex;margin-right:\", \";align-self:stretch;align-items:center;flex-wrap:nowrap;\", \";\", \";\"], get('space.3'), ({\n  full\n}) => full && css([\"flex:auto;\"]), sx);\nHeaderItem.displayName = 'Header.Item';\nconst HeaderLink = styled.a.attrs(({\n  to\n}) => {\n  const isReactRouter = typeof to === 'string';\n\n  if (isReactRouter) {\n    // according to their docs, NavLink supports aria-current:\n    // https://reacttraining.com/react-router/web/api/NavLink/aria-current-string\n    return {\n      'aria-current': 'page'\n    };\n  } else {\n    return {};\n  }\n}).withConfig({\n  displayName: \"Header__HeaderLink\",\n  componentId: \"sc-11fu6rh-2\"\n})([\"font-weight:\", \";color:\", \";white-space:nowrap;cursor:pointer;text-decoration:none;display:flex;align-items:center;&:hover,&:focus{color:\", \";}\", \";\"], get('fontWeights.bold'), get('colors.header.logo'), get('colors.header.text'), sx);\nHeaderLink.displayName = 'Header.Link';\nexport default Object.assign(Header, {\n  Link: HeaderLink,\n  Item: HeaderItem\n});","import styled from 'styled-components';\nimport sx from './sx';\nconst VisuallyHidden = styled.span.withConfig({\n  displayName: \"_VisuallyHidden__VisuallyHidden\",\n  componentId: \"sc-11jhm7a-0\"\n})([\"\", \"\"], props => {\n  if (props.isVisible) {\n    return sx;\n  }\n\n  return `\n        position: absolute;\n        width: 1px;\n        height: 1px;\n        padding: 0;\n        margin: -1px;\n        overflow: hidden;\n        clip: rect(0, 0, 0, 0);\n        white-space: nowrap;\n        border-width: 0;\n    `;\n});\nVisuallyHidden.defaultProps = {\n  isVisible: false\n};\nexport default VisuallyHidden;","import React, { useCallback, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { variant } from 'styled-system';\nimport { Box, Spinner, Text } from '.';\nimport { get } from './constants';\nimport { useProvidedStateOrCreate } from './hooks';\nimport sx from './sx';\nimport VisuallyHidden from './_VisuallyHidden';\nconst TRANSITION_DURATION = '80ms';\nconst EASE_OUT_QUAD_CURVE = 'cubic-bezier(0.5, 1, 0.89, 1)';\nconst sizeVariants = variant({\n  prop: 'size',\n  variants: {\n    small: {\n      height: '24px',\n      width: '48px'\n    }\n  }\n});\n\nconst CircleIcon = ({\n  size\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  width: size === 'small' ? '12' : '16',\n  height: size === 'small' ? '12' : '16',\n  viewBox: \"0 0 16 16\",\n  fill: \"currentColor\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M8 12.5a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9ZM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12Z\"\n}));\n\nCircleIcon.displayName = \"CircleIcon\";\n\nconst LineIcon = ({\n  size\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  width: size === 'small' ? '12' : '16',\n  height: size === 'small' ? '12' : '16',\n  viewBox: \"0 0 16 16\",\n  fill: \"currentColor\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M8 2a.75.75 0 0 1 .75.75v11.5a.75.75 0 0 1-1.5 0V2.75A.75.75 0 0 1 8 2Z\"\n}));\n\nLineIcon.displayName = \"LineIcon\";\nconst SwitchButton = styled.button.withConfig({\n  displayName: \"ToggleSwitch__SwitchButton\",\n  componentId: \"sc-om7zet-0\"\n})([\"vertical-align:middle;cursor:pointer;user-select:none;appearance:none;text-decoration:none;padding:0;transition-property:background-color,border-color;transition-duration:\", \";transition-timing-function:\", \";border-radius:\", \";border-style:solid;border-width:1px;display:block;height:32px;width:64px;outline-offset:2px;position:relative;overflow:hidden;@media (pointer:coarse){&:before{content:'';position:absolute;left:0;right:0;transform:translateY(-50%);top:50%;min-height:44px;}}@media (prefers-reduced-motion){transition:none;*{transition:none;}}\", \" \", \" \", \"\"], TRANSITION_DURATION, EASE_OUT_QUAD_CURVE, get('radii.2'), props => {\n  if (props.disabled) {\n    return css([\"background-color:\", \";border-color:\", \";cursor:not-allowed;transition-property:none;\"], get('colors.canvas.subtle'), get('colors.border.subtle'));\n  }\n\n  if (props.checked) {\n    return css([\"background-color:\", \";border-color:\", \";&:hover,&:focus:focus-visible{background-color:\", \";}&:active,&:active:focus-visible{background-color:\", \";}\"], get('colors.switchTrack.checked.bg'), get('colors.switchTrack.checked.border'), get('colors.switchTrack.checked.hoverBg'), get('colors.switchTrack.checked.activeBg'));\n  } else {\n    return css([\"background-color:\", \";border-color:\", \";&:hover,&:focus:focus-visible{.Toggle-knob{background-color:\", \";}}&:active,&:active:focus-visible{.Toggle-knob{background-color:\", \";}}\"], get('colors.switchTrack.bg'), get('colors.switchTrack.border'), get('colors.btn.hoverBg'), get('colors.btn.activeBg'));\n  }\n}, sx, sizeVariants);\nconst ToggleKnob = styled.div.withConfig({\n  displayName: \"ToggleSwitch__ToggleKnob\",\n  componentId: \"sc-om7zet-1\"\n})([\"background-color:\", \";border-width:1px;border-style:solid;border-color:\", \";border-radius:calc(\", \" - 1px);box-shadow:\", \";width:50%;position:absolute;top:-1px;bottom:-1px;transition-property:transform;transition-duration:\", \";transition-timing-function:\", \";transform:\", \";z-index:1;@media (prefers-reduced-motion){transition:none;}\", \"\"], get('colors.btn.bg'), props => props.disabled ? get('colors.border.default') : get('colors.switchTrack.border'), get('radii.2'), props => {\n  var _props$theme, _props$theme$shadows, _props$theme2, _props$theme2$shadows;\n\n  return props.disabled ? 'none' : `${(_props$theme = props.theme) === null || _props$theme === void 0 ? void 0 : (_props$theme$shadows = _props$theme.shadows) === null || _props$theme$shadows === void 0 ? void 0 : _props$theme$shadows.shadow.medium}, ${(_props$theme2 = props.theme) === null || _props$theme2 === void 0 ? void 0 : (_props$theme2$shadows = _props$theme2.shadows) === null || _props$theme2$shadows === void 0 ? void 0 : _props$theme2$shadows.btn.insetShadow}`;\n}, TRANSITION_DURATION, EASE_OUT_QUAD_CURVE, props => `translateX(${props.checked ? 'calc(100% + 1px)' : '-1px'})`, props => {\n  if (props.checked) {\n    return css([\"background-color:\", \";border-color:\", \";box-shadow:\", \";\"], props.disabled ? get('colors.switchKnob.checked.disabledBg') : get('colors.switchKnob.checked.bg'), props.disabled ? get('colors.switchKnob.checked.disabledBg') : get('colors.switchKnob.checked.bg'), get('shadows.shadow.small'));\n  }\n});\nconst hiddenTextStyles = {\n  visibility: 'hidden',\n  height: 0\n};\n\nconst Switch = ({\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  defaultChecked,\n  disabled,\n  loading,\n  checked,\n  onChange,\n  onClick,\n  size,\n  statusLabelPosition,\n  sx: sxProp\n}) => {\n  const isControlled = typeof checked !== 'undefined';\n  const [isOn, setIsOn] = useProvidedStateOrCreate(checked, onChange, Boolean(defaultChecked));\n  const acceptsInteraction = !disabled && !loading;\n  const handleToggleClick = useCallback(e => {\n    if (!isControlled) {\n      setIsOn(!isOn);\n    }\n\n    onClick && onClick(e);\n  }, [onClick, isControlled, isOn, setIsOn]);\n  useEffect(() => {\n    if (onChange && isControlled) {\n      onChange(Boolean(checked));\n    }\n  }, [onChange, checked, isControlled]);\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    flexDirection: statusLabelPosition === 'start' ? 'row' : 'row-reverse',\n    sx: sxProp\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }) : null, /*#__PURE__*/React.createElement(Text, {\n    color: acceptsInteraction ? 'fg.default' : 'fg.muted',\n    fontSize: size === 'small' ? 0 : 1,\n    mx: 2,\n    \"aria-hidden\": \"true\",\n    sx: {\n      position: 'relative'\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    textAlign: \"right\",\n    sx: isOn ? null : hiddenTextStyles\n  }, \"On\"), /*#__PURE__*/React.createElement(Box, {\n    textAlign: \"right\",\n    sx: isOn ? hiddenTextStyles : null\n  }, \"Off\")), /*#__PURE__*/React.createElement(SwitchButton, {\n    onClick: handleToggleClick,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-checked\": isOn,\n    \"aria-disabled\": !acceptsInteraction,\n    role: \"switch\",\n    checked: isOn,\n    size: size,\n    disabled: !acceptsInteraction\n  }, /*#__PURE__*/React.createElement(VisuallyHidden, null, isOn ? 'On' : 'Off'), /*#__PURE__*/React.createElement(Box, {\n    \"aria-hidden\": \"true\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"50%\",\n    color: acceptsInteraction ? 'accent.fg' : 'fg.subtle',\n    lineHeight: \"0\",\n    sx: {\n      transform: `translateX(${isOn ? '0' : '-100%'})`,\n      transitionProperty: 'transform',\n      transitionDuration: TRANSITION_DURATION\n    }\n  }, /*#__PURE__*/React.createElement(LineIcon, {\n    size: size\n  })), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"50%\",\n    color: acceptsInteraction ? 'fg.default' : 'fg.subtle',\n    lineHeight: \"0\",\n    sx: {\n      transform: `translateX(${isOn ? '100%' : '0'})`,\n      transitionProperty: 'transform',\n      transitionDuration: TRANSITION_DURATION\n    }\n  }, /*#__PURE__*/React.createElement(CircleIcon, {\n    size: size\n  }))), /*#__PURE__*/React.createElement(ToggleKnob, {\n    \"aria-hidden\": \"true\",\n    className: \"Toggle-knob\",\n    disabled: !acceptsInteraction,\n    checked: isOn\n  })));\n};\n\nSwitch.displayName = \"Switch\";\nSwitch.defaultProps = {\n  statusLabelPosition: 'start',\n  size: 'medium'\n};\nexport default Switch;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {GitHubOrgAndRepo} from './recoil';\n\nimport Link from './Link';\nimport URLFor from './URLFor';\nimport Username from './Username';\nimport {APP_HEADER_HEIGHT} from './constants';\nimport {primerColorMode} from './themeState';\nimport {HomeIcon} from '@primer/octicons-react';\nimport {Box, Header, Text, ToggleSwitch} from '@primer/react';\nimport {useCallback} from 'react';\nimport {useRecoilState} from 'recoil';\n\ntype Props = {\n  orgAndRepo: GitHubOrgAndRepo | null;\n};\n\nexport default function AppHeader({orgAndRepo}: Props): React.ReactElement {\n  return (\n    <Header\n      sx={{\n        fontSize: 2,\n        height: APP_HEADER_HEIGHT,\n        justifyContent: 'space-between',\n      }}>\n      <Header.Item>\n        <Box pr={2}>\n          <Link href=\"/\">\n            <HomeIcon size=\"medium\" aria-label=\"homepage\" />\n          </Link>\n        </Box>\n        <Box>{orgAndRepo != null && <PullsLink {...orgAndRepo} />}</Box>\n      </Header.Item>\n      <Header.Item>\n        <Box>\n          <ThemeSelector />\n          <Username />\n        </Box>\n      </Header.Item>\n    </Header>\n  );\n}\n\nfunction PullsLink({org, repo}: {org: string; repo: string}) {\n  return (\n    <Link href={URLFor.project({org, repo})}>\n      <Text color=\"fg.onEmphasis\" fontWeight=\"bold\">\n        {org}\n        {' / '}\n        {repo}\n      </Text>\n    </Link>\n  );\n}\n\nfunction ThemeSelector() {\n  const [colorMode, setColorMode] = useRecoilState(primerColorMode);\n  const checked = colorMode === 'night';\n  const onClick = useCallback(() => {\n    setColorMode(colorMode === 'night' ? 'day' : 'night');\n  }, [colorMode, setColorMode]);\n  // sx trick to hide label taken from https://github.com/primer/react/issues/2078\n  const sx = {'> [aria-hidden]': {display: 'none'}};\n  return (\n    <Text>\n      <span id=\"theme-switch-label\">Dark Mode</span>:{' '}\n      <ToggleSwitch\n        checked={checked}\n        onClick={onClick}\n        size=\"small\"\n        aria-labelledby=\"theme-switch-label\"\n        sx={sx}\n      />{' '}\n    </Text>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {Link as PrimerLink, Text} from '@primer/react';\n\ntype LinkProps = {\n  href: string;\n  children: React.ReactNode;\n};\n\nlet CustomLinkElement: React.FunctionComponent<LinkProps & {style: React.CSSProperties}> | null =\n  null;\n\nexport function setCustomLinkElement(component: React.FunctionComponent) {\n  CustomLinkElement = component;\n}\n\n/*\n * Internal Link component that can be overridden at run time, which makes it\n * possible to inject react-router's Link component such that it is a peer\n * dependency rather than a direct dependency. This component should be\n * preferred over @primer/react's Link throughout the app.\n *\n * Note that setCustomLinkElement() should be called before any of the\n * components in this app are rendered if it is going to be used at all.\n */\nconst Link: React.FunctionComponent<LinkProps> = ({href, children}): React.ReactElement => {\n  const isExternalLink = !href.startsWith('/');\n  if (CustomLinkElement == null || isExternalLink) {\n    return (\n      <PrimerLink href={href} target={isExternalLink ? '_blank' : undefined}>\n        {children}\n      </PrimerLink>\n    );\n  } else {\n    // Note that the <Link> component in Primer is just a vanilla anchor element\n    // with additional styling:\n    // https://github.dev/primer/react/blob/8ce0eb92d23e2d46760e8b77900e10e7c04da43e/src/Link.tsx\n    // We approximate the styling here and can add full support for\n    // StyledLinkProps, as necessary.\n    const sx = {\n      color: 'accent.fg',\n      ':hover': {\n        textDecoration: 'underline',\n      },\n    };\n\n    // Note that we use a Primer <Text> with the sx attribute to wrap the\n    // children because we need to leverage Primer to ensure :hover is honored.\n    // Though it turns out that we cannot override text-decoration in a child\n    // of an <a>, so we must also specify the style on CustomLinkElement:\n    // https://stackoverflow.com/questions/5434819/cannot-undo-text-decoration-for-child-elements\n    return (\n      <CustomLinkElement href={href} style={{textDecoration: 'none'}}>\n        <Text sx={sx}>{children}</Text>\n      </CustomLinkElement>\n    );\n  }\n};\n\nexport default Link;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {GitObjectID} from './github/types';\n\nfunction commit({org, repo, oid}: {org: string; repo: string; oid: GitObjectID}): string {\n  return `/${org}/${repo}/commit/${oid}`;\n}\n\nfunction project({org, repo}: {org: string; repo: string}): string {\n  return `/${org}/${repo}`;\n}\n\nfunction pullRequest({org, repo, number}: {org: string; repo: string; number: number}): string {\n  return `/${org}/${repo}/pull/${number}`;\n}\n\nfunction pulls({org, repo}: {org: string; repo: string}): string {\n  return `/${org}/${repo}/pulls`;\n}\n\nfunction defaultAvatar(): string {\n  return 'https://avatars.githubusercontent.com/github';\n}\n\nexport default {\n  commit,\n  project,\n  pullRequest,\n  pulls,\n  defaultAvatar,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const APP_HEADER_HEIGHT = 60;\n\nexport const CURSOR_POINTER = {cursor: 'pointer'};\n\n/**\n * GitHub diffs appear to include 3 lines of context. This is especially\n * important when mapping line number to \"position\".\n */\nexport const NUM_LINES_OF_CONTEXT = 3;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {BroadcastMessage} from './broadcast';\nimport type {\n  DiffAndTokenizeParams,\n  DiffAndTokenizeResponse,\n  LineRangeParams,\n  LineRangeResponse,\n  LineToPositionParams,\n  Message,\n  Response,\n  Result,\n} from './diffServiceWorker';\nimport type {LineToPosition} from './lineToPosition';\nimport type {SupportedPrimerColorMode} from './themeState';\n\nimport {\n  AVAILABILITY_METHOD,\n  createDiffServiceBroadcastChannel,\n  createWorkerName,\n  parseWorkerIndex,\n} from './broadcast';\nimport {atom, selector, selectorFamily} from 'recoil';\nimport {unwrap} from 'shared/utils';\n\nexport const lineToPosition = selectorFamily<LineToPosition, LineToPositionParams>({\n  key: 'lineToPosition',\n  get:\n    (params: LineToPositionParams) =>\n    ({get}) => {\n      const worker = get(diffServiceClient);\n      const message: Message = {\n        id: worker.nextID(),\n        method: 'lineToPosition',\n        params,\n      };\n      return worker.sendMessage(message) as Promise<LineToPosition>;\n    },\n});\n\n/**\n * Request the colorMap to use with the specified SupportedPrimerColorMode for\n * use with `updateTextMateGrammarCSS()`.\n */\nexport const colorMap = selectorFamily<string[], SupportedPrimerColorMode>({\n  key: 'colorMap',\n  get:\n    (colorMode: SupportedPrimerColorMode) =>\n    ({get}) => {\n      const worker = get(diffServiceClient);\n      const message: Message = {\n        id: worker.nextID(),\n        method: 'colorMap',\n        params: {colorMode},\n      };\n      return worker.sendMessage(message) as Promise<string[]>;\n    },\n});\n\nexport const diffAndTokenize = selectorFamily<DiffAndTokenizeResponse, DiffAndTokenizeParams>({\n  key: 'diffAndTokenize',\n  get:\n    (params: DiffAndTokenizeParams) =>\n    ({get}) => {\n      const worker = get(diffServiceClient);\n      const message: Message = {\n        id: worker.nextID(),\n        method: 'diffAndTokenize',\n        params,\n      };\n      return worker.sendMessage(message) as Promise<DiffAndTokenizeResponse>;\n    },\n});\n\nexport const lineRange = selectorFamily<string[], LineRangeParams>({\n  key: 'lineRange',\n  get:\n    (params: LineRangeParams) =>\n    ({get}) => {\n      const worker = get(diffServiceClient);\n      const message: Message = {\n        id: worker.nextID(),\n        method: 'lineRange',\n        params,\n      };\n      const promise = worker.sendMessage(message) as Promise<LineRangeResponse>;\n      return promise.then(({unsplitLines, notFound, isBinary}) => {\n        if (unsplitLines != null) {\n          return unsplitLines.split('\\n');\n        } else if (notFound) {\n          // eslint-disable-next-line no-console\n          console.error(`blob ${params.oid} not found for lineRange`);\n        } else if (isBinary) {\n          // eslint-disable-next-line no-console\n          console.error(`blob ${params.oid} is binary, no lineRange`);\n        }\n        return [];\n      });\n    },\n});\n\n/**\n * Client that is paired with an instance of `diffServiceWorker`. Takes\n * responsibility for pairing requests and responses to the Web Worker, making\n * the result available as a Promise to the caller.\n */\nclass DiffServiceClient {\n  private worker: SharedWorker;\n  private pendingRequests: Map<number, (result: Result) => void> = new Map();\n\n  constructor(workerName: string) {\n    this.worker = new SharedWorker(new URL('./diffServiceWorker.ts', import.meta.url), {\n      name: workerName,\n    });\n    this.worker.port.onmessage = event => this.onmessage(event);\n    // eslint-disable-next-line no-console\n    this.worker.port.onmessageerror = event => console.error(event);\n  }\n\n  private onmessage({data}: {data: Response}) {\n    const {id, ok, err} = data;\n    const handler = this.pendingRequests.get(id);\n    if (handler == null) {\n      // eslint-disable-next-line no-console\n      console.error(`no handler found for ${id}: multiple responses sent?`);\n      return;\n    }\n\n    this.pendingRequests.delete(id);\n    handler({ok, err});\n  }\n\n  private once(id: number, onresponse: (response: Result) => void) {\n    this.pendingRequests.set(id, onresponse);\n  }\n\n  sendMessage(message: Message): Promise<unknown> {\n    const {id} = message;\n    const promise = new Promise((resolve, reject) => {\n      this.once(id, (result: Result) => {\n        const {ok, err} = result;\n        if (err != null) {\n          reject(err);\n        } else {\n          resolve(ok);\n        }\n      });\n    });\n    this.worker.port.postMessage(message);\n    return promise;\n  }\n}\n\n/** This might be too many, but we'll try it out... */\nconst MAX_SERVICE_WORKERS = 6;\n\nclass WorkerPool {\n  /** Used to get updates about the availability of SharedWorkers. */\n  private broadcast: BroadcastChannel;\n\n  /**\n   * Due to the nature of how notifications from the BroadastChannel work, it\n   * is possible for the workers array to contain \"holes\" if, for example, the\n   * first availability notification is for worker #2 and then this.workers[2]\n   * will be set, but [0] and [1] will be undefined.\n   */\n  private workers: Array<undefined | {client: DiffServiceClient; available: boolean}> = [];\n\n  /**\n   * Messages that are waiting for a SharedWorker to become available in order\n   * to be sent. The response from sendMessage() should be passed to resolve or\n   * reject, as appropriate.\n   */\n  private pendingMessages: {\n    message: Message;\n    resolve: (value: unknown) => void;\n    reject: (error: Error) => void;\n  }[] = [];\n\n  /**\n   * Used by this.nextID() to ensure each message sent from the pool gets a\n   * unique ID so it can be paired with the response.\n   */\n  private requestID = 0;\n\n  constructor() {\n    this.broadcast = createDiffServiceBroadcastChannel();\n    this.broadcast.onmessage = (event: MessageEvent) => this.onBroadcastMessageReceived(event);\n  }\n\n  private onBroadcastMessageReceived({data}: MessageEvent) {\n    const message = data as BroadcastMessage;\n    if (message.method !== AVAILABILITY_METHOD) {\n      return;\n    }\n\n    const {workerName, available} = message;\n    const index = parseWorkerIndex(workerName);\n    if (index == null) {\n      // eslint-disable-next-line no-console\n      console.error(`could not parse worker index: ${workerName}`);\n      return;\n    }\n\n    const worker = this.workers[index];\n    if (worker !== undefined) {\n      worker.available = available;\n    } else {\n      this.workers[index] = {client: new DiffServiceClient(workerName), available};\n    }\n\n    if (available && this.pendingMessages.length > 0) {\n      this.trySendingPendingMessage();\n    }\n  }\n\n  sendMessage(message: Message): Promise<unknown> {\n    // For now, we use a simple round-robin scheduler.\n    // We could certainly do much better here:\n    // - keeping track of idle workers when deciding who to assign to\n    // - resizing the pool based on demand\n    // - worker affinity based on scopeName\n    const client = this.findAvailableClient();\n    if (client != null) {\n      return client.sendMessage(message);\n    }\n\n    // No available workers! Add the message to the `pendingMessages` list and\n    // request a new one if we haven't hit MAX_SERVICE_WORKERS.\n    let resolve: ((value: unknown) => void) | null = null;\n    let reject: ((error: Error) => void) | null = null;\n    const promise = new Promise((_resolve, _reject) => {\n      resolve = _resolve;\n      reject = _reject;\n    });\n\n    this.pendingMessages.push({\n      message,\n      resolve: unwrap<(value: unknown) => void>(resolve),\n      reject: unwrap<(error: Error) => void>(reject),\n    });\n\n    // Note it is possible that there are \"holes\" in this.workers, e.g.,\n    // this.workers[0] is undefined while this.workers[1] is set, but\n    // unavailable. In all likelihood, this.workers[0] *exists*, but we have\n    // not received an initial availability update yet. If this is the case, we\n    // try to fill the hole before extending this.workers.\n    let workerIndex = this.workers.findIndex(val => val === undefined);\n    if (workerIndex === -1) {\n      const numWorkers = this.workers.length;\n      if (numWorkers < MAX_SERVICE_WORKERS) {\n        workerIndex = numWorkers;\n      }\n    }\n\n    if (workerIndex !== -1) {\n      const workerName = createWorkerName(workerIndex);\n      // While it is possible that the ServiceWorker was already created by\n      // another browser tab and is available, we initially assume it is\n      // unavailable, but we request it to publish its availability.\n      const client = new DiffServiceClient(workerName);\n      this.workers[workerIndex] = {client, available: false};\n      client.sendMessage({method: 'publishAvailabilty', id: -1, params: null});\n    }\n\n    return promise;\n  }\n\n  private trySendingPendingMessage(): void {\n    const client = this.findAvailableClient();\n    if (client == null) {\n      return;\n    }\n\n    const pendingMessage = this.pendingMessages.shift();\n    if (pendingMessage === undefined) {\n      return;\n    }\n\n    const {message, resolve, reject} = pendingMessage;\n    client.sendMessage(message).then(resolve, reject);\n  }\n\n  private findAvailableClient(): DiffServiceClient | null {\n    for (const worker of this.workers) {\n      if (worker !== undefined && worker.available) {\n        return worker.client;\n      }\n    }\n    return null;\n  }\n\n  nextID(): number {\n    return ++this.requestID;\n  }\n}\n\nconst diffServiceClient = atom<WorkerPool>({\n  key: 'diffServiceClient',\n  default: selector({\n    key: 'diffServiceClient/default',\n    get: () => new WorkerPool(),\n    dangerouslyAllowMutability: true,\n  }),\n  // WorkerPool contains mutable collections.\n  dangerouslyAllowMutability: true,\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n * The SharedWorkers running the code for diffServiceWorker.ts broadcast their\n * availability to the host page via a BroadcastChannel. This file codifies the\n * protocol for the channel.\n */\n\nexport const AVAILABILITY_METHOD = 'diff-service-availability';\n\n/** Union type with one variant, as only one message type is currently used. */\nexport type BroadcastMessage = {\n  method: typeof AVAILABILITY_METHOD;\n  workerName: string;\n  available: boolean;\n};\n\n/**\n * Use this to create the BroadcastChannel to ensure the name is specified\n * consistently on both ends of the channel.\n */\nexport function createDiffServiceBroadcastChannel(): BroadcastChannel {\n  return new BroadcastChannel('diff-service');\n}\n\n/** When creating new SharedWorkers, the index should start at 0. */\nexport function createWorkerName(index: number) {\n  return `diff-service-worker-${index}`;\n}\n\nexport function parseWorkerIndex(workerName: string): number | null {\n  const match = workerName.match(/^diff-service-worker-(\\d+)$/);\n  return match != null ? parseInt(match[1], 10) : null;\n}\n","export type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A (potentially binary) string encoded using base64. */\n  Base64String: string;\n  /**\n   * Represents non-fractional signed whole numeric values. Since the value may\n   * exceed the size of a 32-bit integer, it's encoded as a string.\n   */\n  BigInt: string;\n  /** An ISO-8601 encoded date string. */\n  Date: string;\n  /** An ISO-8601 encoded UTC date string. */\n  DateTime: string;\n  /** A Git object ID. */\n  GitObjectID: string;\n  /** A fully qualified reference name (e.g. `refs/heads/master`). */\n  GitRefname: string;\n  /** Git SSH string */\n  GitSSHRemote: string;\n  /** An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC. */\n  GitTimestamp: string;\n  /** A string containing HTML code. */\n  HTML: string;\n  /** An ISO-8601 encoded UTC date string with millisecond precision. */\n  PreciseDateTime: string;\n  /** An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string. */\n  URI: string;\n  /** A valid x509 certificate string */\n  X509Certificate: string;\n};\n\n/** Autogenerated input type of AbortQueuedMigrations */\nexport type AbortQueuedMigrationsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the organization that is running the migrations. */\n  ownerId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AbortQueuedMigrations */\nexport type AbortQueuedMigrationsPayload = {\n  __typename?: 'AbortQueuedMigrationsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** Did the operation succeed? */\n  success?: Maybe<Scalars['Boolean']>;\n};\n\n/** Autogenerated input type of AcceptEnterpriseAdministratorInvitation */\nexport type AcceptEnterpriseAdministratorInvitationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The id of the invitation being accepted */\n  invitationId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AcceptEnterpriseAdministratorInvitation */\nexport type AcceptEnterpriseAdministratorInvitationPayload = {\n  __typename?: 'AcceptEnterpriseAdministratorInvitationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The invitation that was accepted. */\n  invitation?: Maybe<EnterpriseAdministratorInvitation>;\n  /** A message confirming the result of accepting an administrator invitation. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of AcceptTopicSuggestion */\nexport type AcceptTopicSuggestionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The name of the suggested topic. */\n  name: Scalars['String'];\n  /** The Node ID of the repository. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AcceptTopicSuggestion */\nexport type AcceptTopicSuggestionPayload = {\n  __typename?: 'AcceptTopicSuggestionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The accepted topic. */\n  topic?: Maybe<Topic>;\n};\n\n/** Represents an object which can take actions on GitHub. Typically a User or Bot. */\nexport type Actor = {\n  /** A URL pointing to the actor's public avatar. */\n  avatarUrl: Scalars['URI'];\n  /** The username of the actor. */\n  login: Scalars['String'];\n  /** The HTTP path for this actor. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this actor. */\n  url: Scalars['URI'];\n};\n\n\n/** Represents an object which can take actions on GitHub. Typically a User or Bot. */\nexport type ActorAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n/** Location information for an actor */\nexport type ActorLocation = {\n  __typename?: 'ActorLocation';\n  /** City */\n  city?: Maybe<Scalars['String']>;\n  /** Country name */\n  country?: Maybe<Scalars['String']>;\n  /** Country code */\n  countryCode?: Maybe<Scalars['String']>;\n  /** Region name */\n  region?: Maybe<Scalars['String']>;\n  /** Region or state code */\n  regionCode?: Maybe<Scalars['String']>;\n};\n\n/** The actor's type. */\nexport enum ActorType {\n  /** Indicates a team actor. */\n  Team = 'TEAM',\n  /** Indicates a user actor. */\n  User = 'USER'\n}\n\n/** Autogenerated input type of AddAssigneesToAssignable */\nexport type AddAssigneesToAssignableInput = {\n  /** The id of the assignable object to add assignees to. */\n  assignableId: Scalars['ID'];\n  /** The id of users to add as assignees. */\n  assigneeIds: Array<Scalars['ID']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of AddAssigneesToAssignable */\nexport type AddAssigneesToAssignablePayload = {\n  __typename?: 'AddAssigneesToAssignablePayload';\n  /** The item that was assigned. */\n  assignable?: Maybe<Assignable>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of AddComment */\nexport type AddCommentInput = {\n  /** The contents of the comment. */\n  body: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the subject to modify. */\n  subjectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AddComment */\nexport type AddCommentPayload = {\n  __typename?: 'AddCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The edge from the subject's comment connection. */\n  commentEdge?: Maybe<IssueCommentEdge>;\n  /** The subject */\n  subject?: Maybe<Node>;\n  /** The edge from the subject's timeline connection. */\n  timelineEdge?: Maybe<IssueTimelineItemEdge>;\n};\n\n/** Autogenerated input type of AddDiscussionComment */\nexport type AddDiscussionCommentInput = {\n  /** The contents of the comment. */\n  body: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the discussion to comment on. */\n  discussionId: Scalars['ID'];\n  /** The Node ID of the discussion comment within this discussion to reply to. */\n  replyToId?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of AddDiscussionComment */\nexport type AddDiscussionCommentPayload = {\n  __typename?: 'AddDiscussionCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The newly created discussion comment. */\n  comment?: Maybe<DiscussionComment>;\n};\n\n/** Autogenerated input type of AddDiscussionPollVote */\nexport type AddDiscussionPollVoteInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the discussion poll option to vote for. */\n  pollOptionId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AddDiscussionPollVote */\nexport type AddDiscussionPollVotePayload = {\n  __typename?: 'AddDiscussionPollVotePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The poll option that a vote was added to. */\n  pollOption?: Maybe<DiscussionPollOption>;\n};\n\n/** Autogenerated input type of AddEnterpriseOrganizationMember */\nexport type AddEnterpriseOrganizationMemberInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise which owns the organization. */\n  enterpriseId: Scalars['ID'];\n  /** The ID of the organization the users will be added to. */\n  organizationId: Scalars['ID'];\n  /** The role to assign the users in the organization */\n  role?: InputMaybe<OrganizationMemberRole>;\n  /** The IDs of the enterprise members to add. */\n  userIds: Array<Scalars['ID']>;\n};\n\n/** Autogenerated return type of AddEnterpriseOrganizationMember */\nexport type AddEnterpriseOrganizationMemberPayload = {\n  __typename?: 'AddEnterpriseOrganizationMemberPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The users who were added to the organization. */\n  users?: Maybe<Array<User>>;\n};\n\n/** Autogenerated input type of AddEnterpriseSupportEntitlement */\nexport type AddEnterpriseSupportEntitlementInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Enterprise which the admin belongs to. */\n  enterpriseId: Scalars['ID'];\n  /** The login of a member who will receive the support entitlement. */\n  login: Scalars['String'];\n};\n\n/** Autogenerated return type of AddEnterpriseSupportEntitlement */\nexport type AddEnterpriseSupportEntitlementPayload = {\n  __typename?: 'AddEnterpriseSupportEntitlementPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** A message confirming the result of adding the support entitlement. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of AddLabelsToLabelable */\nexport type AddLabelsToLabelableInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ids of the labels to add. */\n  labelIds: Array<Scalars['ID']>;\n  /** The id of the labelable object to add labels to. */\n  labelableId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AddLabelsToLabelable */\nexport type AddLabelsToLabelablePayload = {\n  __typename?: 'AddLabelsToLabelablePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The item that was labeled. */\n  labelable?: Maybe<Labelable>;\n};\n\n/** Autogenerated input type of AddProjectCard */\nexport type AddProjectCardInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The content of the card. Must be a member of the ProjectCardItem union */\n  contentId?: InputMaybe<Scalars['ID']>;\n  /** The note on the card. */\n  note?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the ProjectColumn. */\n  projectColumnId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AddProjectCard */\nexport type AddProjectCardPayload = {\n  __typename?: 'AddProjectCardPayload';\n  /** The edge from the ProjectColumn's card connection. */\n  cardEdge?: Maybe<ProjectCardEdge>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The ProjectColumn */\n  projectColumn?: Maybe<ProjectColumn>;\n};\n\n/** Autogenerated input type of AddProjectColumn */\nexport type AddProjectColumnInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The name of the column. */\n  name: Scalars['String'];\n  /** The Node ID of the project. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AddProjectColumn */\nexport type AddProjectColumnPayload = {\n  __typename?: 'AddProjectColumnPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The edge from the project's column connection. */\n  columnEdge?: Maybe<ProjectColumnEdge>;\n  /** The project */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of AddProjectV2DraftIssue */\nexport type AddProjectV2DraftIssueInput = {\n  /** The IDs of the assignees of the draft issue. */\n  assigneeIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The body of the draft issue. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Project to add the draft issue to. */\n  projectId: Scalars['ID'];\n  /**\n   * The title of the draft issue. A project item can also be created by providing\n   * the URL of an Issue or Pull Request if you have access.\n   */\n  title: Scalars['String'];\n};\n\n/** Autogenerated return type of AddProjectV2DraftIssue */\nexport type AddProjectV2DraftIssuePayload = {\n  __typename?: 'AddProjectV2DraftIssuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The draft issue added to the project. */\n  projectItem?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of AddProjectV2ItemById */\nexport type AddProjectV2ItemByIdInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The id of the Issue or Pull Request to add. */\n  contentId: Scalars['ID'];\n  /** The ID of the Project to add the item to. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AddProjectV2ItemById */\nexport type AddProjectV2ItemByIdPayload = {\n  __typename?: 'AddProjectV2ItemByIdPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The item added to the project. */\n  item?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of AddPullRequestReviewComment */\nexport type AddPullRequestReviewCommentInput = {\n  /**\n   * The text of the comment. This field is required\n   *\n   * **Upcoming Change on 2023-10-01 UTC**\n   * **Description:** `body` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n   * **Reason:** We are deprecating the addPullRequestReviewComment mutation\n   */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /**\n   * The SHA of the commit to comment on.\n   *\n   * **Upcoming Change on 2023-10-01 UTC**\n   * **Description:** `commitOID` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n   * **Reason:** We are deprecating the addPullRequestReviewComment mutation\n   */\n  commitOID?: InputMaybe<Scalars['GitObjectID']>;\n  /**\n   * The comment id to reply to.\n   *\n   * **Upcoming Change on 2023-10-01 UTC**\n   * **Description:** `inReplyTo` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n   * **Reason:** We are deprecating the addPullRequestReviewComment mutation\n   */\n  inReplyTo?: InputMaybe<Scalars['ID']>;\n  /**\n   * The relative path of the file to comment on.\n   *\n   * **Upcoming Change on 2023-10-01 UTC**\n   * **Description:** `path` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n   * **Reason:** We are deprecating the addPullRequestReviewComment mutation\n   */\n  path?: InputMaybe<Scalars['String']>;\n  /**\n   * The line index in the diff to comment on.\n   *\n   * **Upcoming Change on 2023-10-01 UTC**\n   * **Description:** `position` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n   * **Reason:** We are deprecating the addPullRequestReviewComment mutation\n   */\n  position?: InputMaybe<Scalars['Int']>;\n  /**\n   * The node ID of the pull request reviewing\n   *\n   * **Upcoming Change on 2023-10-01 UTC**\n   * **Description:** `pullRequestId` will be removed. use\n   * addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n   * **Reason:** We are deprecating the addPullRequestReviewComment mutation\n   */\n  pullRequestId?: InputMaybe<Scalars['ID']>;\n  /**\n   * The Node ID of the review to modify.\n   *\n   * **Upcoming Change on 2023-10-01 UTC**\n   * **Description:** `pullRequestReviewId` will be removed. use\n   * addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n   * **Reason:** We are deprecating the addPullRequestReviewComment mutation\n   */\n  pullRequestReviewId?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of AddPullRequestReviewComment */\nexport type AddPullRequestReviewCommentPayload = {\n  __typename?: 'AddPullRequestReviewCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The newly created comment. */\n  comment?: Maybe<PullRequestReviewComment>;\n  /** The edge from the review's comment connection. */\n  commentEdge?: Maybe<PullRequestReviewCommentEdge>;\n};\n\n/** Autogenerated input type of AddPullRequestReview */\nexport type AddPullRequestReviewInput = {\n  /** The contents of the review body comment. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /**\n   * The review line comments.\n   *\n   * **Upcoming Change on 2023-10-01 UTC**\n   * **Description:** `comments` will be removed. use the `threads` argument instead\n   * **Reason:** We are deprecating comment fields that use diff-relative positioning\n   */\n  comments?: InputMaybe<Array<InputMaybe<DraftPullRequestReviewComment>>>;\n  /** The commit OID the review pertains to. */\n  commitOID?: InputMaybe<Scalars['GitObjectID']>;\n  /** The event to perform on the pull request review. */\n  event?: InputMaybe<PullRequestReviewEvent>;\n  /** The Node ID of the pull request to modify. */\n  pullRequestId: Scalars['ID'];\n  /** The review line comment threads. */\n  threads?: InputMaybe<Array<InputMaybe<DraftPullRequestReviewThread>>>;\n};\n\n/** Autogenerated return type of AddPullRequestReview */\nexport type AddPullRequestReviewPayload = {\n  __typename?: 'AddPullRequestReviewPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The newly created pull request review. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n  /** The edge from the pull request's review connection. */\n  reviewEdge?: Maybe<PullRequestReviewEdge>;\n};\n\n/** Autogenerated input type of AddPullRequestReviewThread */\nexport type AddPullRequestReviewThreadInput = {\n  /** Body of the thread's first comment. */\n  body: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /**\n   * The line of the blob to which the thread refers, required for line-level\n   * threads. The end of the line range for multi-line comments.\n   */\n  line?: InputMaybe<Scalars['Int']>;\n  /** Path to the file being commented on. */\n  path: Scalars['String'];\n  /** The node ID of the pull request reviewing */\n  pullRequestId?: InputMaybe<Scalars['ID']>;\n  /** The Node ID of the review to modify. */\n  pullRequestReviewId?: InputMaybe<Scalars['ID']>;\n  /** The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range. */\n  side?: InputMaybe<DiffSide>;\n  /** The first line of the range to which the comment refers. */\n  startLine?: InputMaybe<Scalars['Int']>;\n  /** The side of the diff on which the start line resides. */\n  startSide?: InputMaybe<DiffSide>;\n  /** The level at which the comments in the corresponding thread are targeted, can be a diff line or a file */\n  subjectType?: InputMaybe<PullRequestReviewThreadSubjectType>;\n};\n\n/** Autogenerated return type of AddPullRequestReviewThread */\nexport type AddPullRequestReviewThreadPayload = {\n  __typename?: 'AddPullRequestReviewThreadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The newly created thread. */\n  thread?: Maybe<PullRequestReviewThread>;\n};\n\n/** Autogenerated input type of AddReaction */\nexport type AddReactionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The name of the emoji to react with. */\n  content: ReactionContent;\n  /** The Node ID of the subject to modify. */\n  subjectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AddReaction */\nexport type AddReactionPayload = {\n  __typename?: 'AddReactionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The reaction object. */\n  reaction?: Maybe<Reaction>;\n  /** The reaction groups for the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** The reactable subject. */\n  subject?: Maybe<Reactable>;\n};\n\n/** Autogenerated input type of AddStar */\nexport type AddStarInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Starrable ID to star. */\n  starrableId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AddStar */\nexport type AddStarPayload = {\n  __typename?: 'AddStarPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The starrable. */\n  starrable?: Maybe<Starrable>;\n};\n\n/** Autogenerated input type of AddUpvote */\nexport type AddUpvoteInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the discussion or comment to upvote. */\n  subjectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AddUpvote */\nexport type AddUpvotePayload = {\n  __typename?: 'AddUpvotePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The votable subject. */\n  subject?: Maybe<Votable>;\n};\n\n/** Autogenerated input type of AddVerifiableDomain */\nexport type AddVerifiableDomainInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The URL of the domain */\n  domain: Scalars['URI'];\n  /** The ID of the owner to add the domain to */\n  ownerId: Scalars['ID'];\n};\n\n/** Autogenerated return type of AddVerifiableDomain */\nexport type AddVerifiableDomainPayload = {\n  __typename?: 'AddVerifiableDomainPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The verifiable domain that was added. */\n  domain?: Maybe<VerifiableDomain>;\n};\n\n/** Represents an 'added_to_merge_queue' event on a given pull request. */\nexport type AddedToMergeQueueEvent = Node & {\n  __typename?: 'AddedToMergeQueueEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The user who added this Pull Request to the merge queue */\n  enqueuer?: Maybe<User>;\n  id: Scalars['ID'];\n  /** The merge queue where this pull request was added to. */\n  mergeQueue?: Maybe<MergeQueue>;\n  /** PullRequest referenced by event. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'added_to_project' event on a given issue or pull request. */\nexport type AddedToProjectEvent = Node & {\n  __typename?: 'AddedToProjectEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** Project referenced by event. */\n  project?: Maybe<Project>;\n  /** Project card referenced by this project event. */\n  projectCard?: Maybe<ProjectCard>;\n  /** Column name referenced by this project event. */\n  projectColumnName: Scalars['String'];\n};\n\n/** Represents an announcement banner. */\nexport type AnnouncementBanner = {\n  /** The text of the announcement */\n  announcement?: Maybe<Scalars['String']>;\n  /** The expiration date of the announcement, if any */\n  announcementExpiresAt?: Maybe<Scalars['DateTime']>;\n  /** Whether the announcement can be dismissed by the user */\n  announcementUserDismissible?: Maybe<Scalars['Boolean']>;\n};\n\n/** A GitHub App. */\nexport type App = Node & {\n  __typename?: 'App';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The description of the app. */\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The IP addresses of the app. */\n  ipAllowListEntries: IpAllowListEntryConnection;\n  /** The hex color code, without the leading '#', for the logo background. */\n  logoBackgroundColor: Scalars['String'];\n  /** A URL pointing to the app's logo. */\n  logoUrl: Scalars['URI'];\n  /** The name of the app. */\n  name: Scalars['String'];\n  /** A slug based on the name of the app for use in URLs. */\n  slug: Scalars['String'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The URL to the app's homepage. */\n  url: Scalars['URI'];\n};\n\n\n/** A GitHub App. */\nexport type AppIpAllowListEntriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IpAllowListEntryOrder>;\n};\n\n\n/** A GitHub App. */\nexport type AppLogoUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of ApproveDeployments */\nexport type ApproveDeploymentsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Optional comment for approving deployments */\n  comment?: InputMaybe<Scalars['String']>;\n  /** The ids of environments to reject deployments */\n  environmentIds: Array<Scalars['ID']>;\n  /** The node ID of the workflow run containing the pending deployments. */\n  workflowRunId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ApproveDeployments */\nexport type ApproveDeploymentsPayload = {\n  __typename?: 'ApproveDeploymentsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The affected deployments. */\n  deployments?: Maybe<Array<Deployment>>;\n};\n\n/** Autogenerated input type of ApproveVerifiableDomain */\nexport type ApproveVerifiableDomainInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the verifiable domain to approve. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of ApproveVerifiableDomain */\nexport type ApproveVerifiableDomainPayload = {\n  __typename?: 'ApproveVerifiableDomainPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The verifiable domain that was approved. */\n  domain?: Maybe<VerifiableDomain>;\n};\n\n/** Autogenerated input type of ArchiveProjectV2Item */\nexport type ArchiveProjectV2ItemInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the ProjectV2Item to archive. */\n  itemId: Scalars['ID'];\n  /** The ID of the Project to archive the item from. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ArchiveProjectV2Item */\nexport type ArchiveProjectV2ItemPayload = {\n  __typename?: 'ArchiveProjectV2ItemPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The item archived from the project. */\n  item?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of ArchiveRepository */\nexport type ArchiveRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the repository to mark as archived. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ArchiveRepository */\nexport type ArchiveRepositoryPayload = {\n  __typename?: 'ArchiveRepositoryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The repository that was marked as archived. */\n  repository?: Maybe<Repository>;\n};\n\n/** An object that can have users assigned to it. */\nexport type Assignable = {\n  /** A list of Users assigned to this object. */\n  assignees: UserConnection;\n};\n\n\n/** An object that can have users assigned to it. */\nexport type AssignableAssigneesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Represents an 'assigned' event on any assignable object. */\nexport type AssignedEvent = Node & {\n  __typename?: 'AssignedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the assignable associated with the event. */\n  assignable: Assignable;\n  /** Identifies the user or mannequin that was assigned. */\n  assignee?: Maybe<Assignee>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /**\n   * Identifies the user who was assigned.\n   * @deprecated Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC.\n   */\n  user?: Maybe<User>;\n};\n\n/** Types that can be assigned to issues. */\nexport type Assignee = Bot | Mannequin | Organization | User;\n\n/** An entry in the audit log. */\nexport type AuditEntry = {\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Types that can initiate an audit log event. */\nexport type AuditEntryActor = Bot | Organization | User;\n\n/** Ordering options for Audit Log connections. */\nexport type AuditLogOrder = {\n  /** The ordering direction. */\n  direction?: InputMaybe<OrderDirection>;\n  /** The field to order Audit Logs by. */\n  field?: InputMaybe<AuditLogOrderField>;\n};\n\n/** Properties by which Audit Log connections can be ordered. */\nexport enum AuditLogOrderField {\n  /** Order audit log entries by timestamp */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** Represents a 'auto_merge_disabled' event on a given pull request. */\nexport type AutoMergeDisabledEvent = Node & {\n  __typename?: 'AutoMergeDisabledEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The user who disabled auto-merge for this Pull Request */\n  disabler?: Maybe<User>;\n  id: Scalars['ID'];\n  /** PullRequest referenced by event */\n  pullRequest?: Maybe<PullRequest>;\n  /** The reason auto-merge was disabled */\n  reason?: Maybe<Scalars['String']>;\n  /** The reason_code relating to why auto-merge was disabled */\n  reasonCode?: Maybe<Scalars['String']>;\n};\n\n/** Represents a 'auto_merge_enabled' event on a given pull request. */\nexport type AutoMergeEnabledEvent = Node & {\n  __typename?: 'AutoMergeEnabledEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The user who enabled auto-merge for this Pull Request */\n  enabler?: Maybe<User>;\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents an auto-merge request for a pull request */\nexport type AutoMergeRequest = {\n  __typename?: 'AutoMergeRequest';\n  /** The email address of the author of this auto-merge request. */\n  authorEmail?: Maybe<Scalars['String']>;\n  /**\n   * The commit message of the auto-merge request. If a merge queue is required by\n   * the base branch, this value will be set by the merge queue when merging.\n   */\n  commitBody?: Maybe<Scalars['String']>;\n  /**\n   * The commit title of the auto-merge request. If a merge queue is required by\n   * the base branch, this value will be set by the merge queue when merging\n   */\n  commitHeadline?: Maybe<Scalars['String']>;\n  /** When was this auto-merge request was enabled. */\n  enabledAt?: Maybe<Scalars['DateTime']>;\n  /** The actor who created the auto-merge request. */\n  enabledBy?: Maybe<Actor>;\n  /**\n   * The merge method of the auto-merge request. If a merge queue is required by\n   * the base branch, this value will be set by the merge queue when merging.\n   */\n  mergeMethod: PullRequestMergeMethod;\n  /** The pull request that this auto-merge request is set against. */\n  pullRequest: PullRequest;\n};\n\n/** Represents a 'auto_rebase_enabled' event on a given pull request. */\nexport type AutoRebaseEnabledEvent = Node & {\n  __typename?: 'AutoRebaseEnabledEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The user who enabled auto-merge (rebase) for this Pull Request */\n  enabler?: Maybe<User>;\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'auto_squash_enabled' event on a given pull request. */\nexport type AutoSquashEnabledEvent = Node & {\n  __typename?: 'AutoSquashEnabledEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The user who enabled auto-merge (squash) for this Pull Request */\n  enabler?: Maybe<User>;\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'automatic_base_change_failed' event on a given pull request. */\nexport type AutomaticBaseChangeFailedEvent = Node & {\n  __typename?: 'AutomaticBaseChangeFailedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** The new base for this PR */\n  newBase: Scalars['String'];\n  /** The old base for this PR */\n  oldBase: Scalars['String'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Represents a 'automatic_base_change_succeeded' event on a given pull request. */\nexport type AutomaticBaseChangeSucceededEvent = Node & {\n  __typename?: 'AutomaticBaseChangeSucceededEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** The new base for this PR */\n  newBase: Scalars['String'];\n  /** The old base for this PR */\n  oldBase: Scalars['String'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Represents a 'base_ref_changed' event on a given issue or pull request. */\nexport type BaseRefChangedEvent = Node & {\n  __typename?: 'BaseRefChangedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the name of the base ref for the pull request after it was changed. */\n  currentRefName: Scalars['String'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** Identifies the name of the base ref for the pull request before it was changed. */\n  previousRefName: Scalars['String'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Represents a 'base_ref_deleted' event on a given pull request. */\nexport type BaseRefDeletedEvent = Node & {\n  __typename?: 'BaseRefDeletedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the name of the Ref associated with the `base_ref_deleted` event. */\n  baseRefName?: Maybe<Scalars['String']>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'base_ref_force_pushed' event on a given pull request. */\nexport type BaseRefForcePushedEvent = Node & {\n  __typename?: 'BaseRefForcePushedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the after commit SHA for the 'base_ref_force_pushed' event. */\n  afterCommit?: Maybe<Commit>;\n  /** Identifies the before commit SHA for the 'base_ref_force_pushed' event. */\n  beforeCommit?: Maybe<Commit>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** Identifies the fully qualified ref name for the 'base_ref_force_pushed' event. */\n  ref?: Maybe<Ref>;\n};\n\n/** Represents a Git blame. */\nexport type Blame = {\n  __typename?: 'Blame';\n  /** The list of ranges from a Git blame. */\n  ranges: Array<BlameRange>;\n};\n\n/** Represents a range of information from a Git blame. */\nexport type BlameRange = {\n  __typename?: 'BlameRange';\n  /**\n   * Identifies the recency of the change, from 1 (new) to 10 (old). This is\n   * calculated as a 2-quantile and determines the length of distance between the\n   * median age of all the changes in the file and the recency of the current\n   * range's change.\n   */\n  age: Scalars['Int'];\n  /** Identifies the line author */\n  commit: Commit;\n  /** The ending line for the range */\n  endingLine: Scalars['Int'];\n  /** The starting line for the range */\n  startingLine: Scalars['Int'];\n};\n\n/** Represents a Git blob. */\nexport type Blob = GitObject & Node & {\n  __typename?: 'Blob';\n  /** An abbreviated version of the Git object ID */\n  abbreviatedOid: Scalars['String'];\n  /** Byte size of Blob object */\n  byteSize: Scalars['Int'];\n  /** The HTTP path for this Git object */\n  commitResourcePath: Scalars['URI'];\n  /** The HTTP URL for this Git object */\n  commitUrl: Scalars['URI'];\n  id: Scalars['ID'];\n  /** Indicates whether the Blob is binary or text. Returns null if unable to determine the encoding. */\n  isBinary?: Maybe<Scalars['Boolean']>;\n  /** Indicates whether the contents is truncated */\n  isTruncated: Scalars['Boolean'];\n  /** The Git object ID */\n  oid: Scalars['GitObjectID'];\n  /** The Repository the Git object belongs to */\n  repository: Repository;\n  /** UTF8 text data or null if the Blob is binary */\n  text?: Maybe<Scalars['String']>;\n};\n\n/** A special type of user which takes actions on behalf of GitHub Apps. */\nexport type Bot = Actor & Node & UniformResourceLocatable & {\n  __typename?: 'Bot';\n  /** A URL pointing to the GitHub App's public avatar. */\n  avatarUrl: Scalars['URI'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The username of the actor. */\n  login: Scalars['String'];\n  /** The HTTP path for this bot */\n  resourcePath: Scalars['URI'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this bot */\n  url: Scalars['URI'];\n};\n\n\n/** A special type of user which takes actions on behalf of GitHub Apps. */\nexport type BotAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n/** Types which can be actors for `BranchActorAllowance` objects. */\nexport type BranchActorAllowanceActor = App | Team | User;\n\n/** Parameters to be used for the branch_name_pattern rule */\nexport type BranchNamePatternParameters = {\n  __typename?: 'BranchNamePatternParameters';\n  /** How this rule will appear to users. */\n  name?: Maybe<Scalars['String']>;\n  /** If true, the rule will fail if the pattern matches. */\n  negate: Scalars['Boolean'];\n  /** The operator to use for matching. */\n  operator: Scalars['String'];\n  /** The pattern to match with. */\n  pattern: Scalars['String'];\n};\n\n/** Parameters to be used for the branch_name_pattern rule */\nexport type BranchNamePatternParametersInput = {\n  /** How this rule will appear to users. */\n  name?: InputMaybe<Scalars['String']>;\n  /** If true, the rule will fail if the pattern matches. */\n  negate?: InputMaybe<Scalars['Boolean']>;\n  /** The operator to use for matching. */\n  operator: Scalars['String'];\n  /** The pattern to match with. */\n  pattern: Scalars['String'];\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRule = Node & {\n  __typename?: 'BranchProtectionRule';\n  /** Can this branch be deleted. */\n  allowsDeletions: Scalars['Boolean'];\n  /** Are force pushes allowed on this branch. */\n  allowsForcePushes: Scalars['Boolean'];\n  /** Is branch creation a protected operation. */\n  blocksCreations: Scalars['Boolean'];\n  /** A list of conflicts matching branches protection rule and other branch protection rules */\n  branchProtectionRuleConflicts: BranchProtectionRuleConflictConnection;\n  /** A list of actors able to force push for this branch protection rule. */\n  bypassForcePushAllowances: BypassForcePushAllowanceConnection;\n  /** A list of actors able to bypass PRs for this branch protection rule. */\n  bypassPullRequestAllowances: BypassPullRequestAllowanceConnection;\n  /** The actor who created this branch protection rule. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** Will new commits pushed to matching branches dismiss pull request review approvals. */\n  dismissesStaleReviews: Scalars['Boolean'];\n  id: Scalars['ID'];\n  /** Can admins overwrite branch protection. */\n  isAdminEnforced: Scalars['Boolean'];\n  /**\n   * Whether users can pull changes from upstream when the branch is locked. Set to\n   * `true` to allow fork syncing. Set to `false` to prevent fork syncing.\n   */\n  lockAllowsFetchAndMerge: Scalars['Boolean'];\n  /** Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. */\n  lockBranch: Scalars['Boolean'];\n  /** Repository refs that are protected by this rule */\n  matchingRefs: RefConnection;\n  /** Identifies the protection rule pattern. */\n  pattern: Scalars['String'];\n  /** A list push allowances for this branch protection rule. */\n  pushAllowances: PushAllowanceConnection;\n  /** The repository associated with this branch protection rule. */\n  repository?: Maybe<Repository>;\n  /** Whether the most recent push must be approved by someone other than the person who pushed it */\n  requireLastPushApproval: Scalars['Boolean'];\n  /** Number of approving reviews required to update matching branches. */\n  requiredApprovingReviewCount?: Maybe<Scalars['Int']>;\n  /** List of required deployment environments that must be deployed successfully to update matching branches */\n  requiredDeploymentEnvironments?: Maybe<Array<Maybe<Scalars['String']>>>;\n  /** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n  requiredStatusCheckContexts?: Maybe<Array<Maybe<Scalars['String']>>>;\n  /** List of required status checks that must pass for commits to be accepted to matching branches. */\n  requiredStatusChecks?: Maybe<Array<RequiredStatusCheckDescription>>;\n  /** Are approving reviews required to update matching branches. */\n  requiresApprovingReviews: Scalars['Boolean'];\n  /** Are reviews from code owners required to update matching branches. */\n  requiresCodeOwnerReviews: Scalars['Boolean'];\n  /** Are commits required to be signed. */\n  requiresCommitSignatures: Scalars['Boolean'];\n  /** Are conversations required to be resolved before merging. */\n  requiresConversationResolution: Scalars['Boolean'];\n  /** Does this branch require deployment to specific environments before merging */\n  requiresDeployments: Scalars['Boolean'];\n  /** Are merge commits prohibited from being pushed to this branch. */\n  requiresLinearHistory: Scalars['Boolean'];\n  /** Are status checks required to update matching branches. */\n  requiresStatusChecks: Scalars['Boolean'];\n  /** Are branches required to be up to date before merging. */\n  requiresStrictStatusChecks: Scalars['Boolean'];\n  /** Is pushing to matching branches restricted. */\n  restrictsPushes: Scalars['Boolean'];\n  /** Is dismissal of pull request reviews restricted. */\n  restrictsReviewDismissals: Scalars['Boolean'];\n  /** A list review dismissal allowances for this branch protection rule. */\n  reviewDismissalAllowances: ReviewDismissalAllowanceConnection;\n};\n\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleBranchProtectionRuleConflictsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleBypassForcePushAllowancesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleBypassPullRequestAllowancesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleMatchingRefsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A branch protection rule. */\nexport type BranchProtectionRulePushAllowancesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleReviewDismissalAllowancesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** A conflict between two branch protection rules. */\nexport type BranchProtectionRuleConflict = {\n  __typename?: 'BranchProtectionRuleConflict';\n  /** Identifies the branch protection rule. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  /** Identifies the conflicting branch protection rule. */\n  conflictingBranchProtectionRule?: Maybe<BranchProtectionRule>;\n  /** Identifies the branch ref that has conflicting rules */\n  ref?: Maybe<Ref>;\n};\n\n/** The connection type for BranchProtectionRuleConflict. */\nexport type BranchProtectionRuleConflictConnection = {\n  __typename?: 'BranchProtectionRuleConflictConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<BranchProtectionRuleConflictEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<BranchProtectionRuleConflict>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type BranchProtectionRuleConflictEdge = {\n  __typename?: 'BranchProtectionRuleConflictEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<BranchProtectionRuleConflict>;\n};\n\n/** The connection type for BranchProtectionRule. */\nexport type BranchProtectionRuleConnection = {\n  __typename?: 'BranchProtectionRuleConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<BranchProtectionRuleEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<BranchProtectionRule>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type BranchProtectionRuleEdge = {\n  __typename?: 'BranchProtectionRuleEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<BranchProtectionRule>;\n};\n\n/**\n * Information about a sponsorship to make for a user or organization with a GitHub\n * Sponsors profile, as part of sponsoring many users or organizations at once.\n */\nexport type BulkSponsorship = {\n  /** The amount to pay to the sponsorable in US dollars. Valid values: 1-12000. */\n  amount: Scalars['Int'];\n  /** The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given. */\n  sponsorableId?: InputMaybe<Scalars['ID']>;\n  /** The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given. */\n  sponsorableLogin?: InputMaybe<Scalars['String']>;\n};\n\n/** Types that can represent a repository ruleset bypass actor. */\nexport type BypassActor = App | Team;\n\n/** A user, team, or app who has the ability to bypass a force push requirement on a protected branch. */\nexport type BypassForcePushAllowance = Node & {\n  __typename?: 'BypassForcePushAllowance';\n  /** The actor that can force push. */\n  actor?: Maybe<BranchActorAllowanceActor>;\n  /** Identifies the branch protection rule associated with the allowed user, team, or app. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  id: Scalars['ID'];\n};\n\n/** The connection type for BypassForcePushAllowance. */\nexport type BypassForcePushAllowanceConnection = {\n  __typename?: 'BypassForcePushAllowanceConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<BypassForcePushAllowanceEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<BypassForcePushAllowance>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type BypassForcePushAllowanceEdge = {\n  __typename?: 'BypassForcePushAllowanceEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<BypassForcePushAllowance>;\n};\n\n/** A user, team, or app who has the ability to bypass a pull request requirement on a protected branch. */\nexport type BypassPullRequestAllowance = Node & {\n  __typename?: 'BypassPullRequestAllowance';\n  /** The actor that can bypass. */\n  actor?: Maybe<BranchActorAllowanceActor>;\n  /** Identifies the branch protection rule associated with the allowed user, team, or app. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  id: Scalars['ID'];\n};\n\n/** The connection type for BypassPullRequestAllowance. */\nexport type BypassPullRequestAllowanceConnection = {\n  __typename?: 'BypassPullRequestAllowanceConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<BypassPullRequestAllowanceEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<BypassPullRequestAllowance>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type BypassPullRequestAllowanceEdge = {\n  __typename?: 'BypassPullRequestAllowanceEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<BypassPullRequestAllowance>;\n};\n\n/** The Common Vulnerability Scoring System */\nexport type Cvss = {\n  __typename?: 'CVSS';\n  /** The CVSS score associated with this advisory */\n  score: Scalars['Float'];\n  /** The CVSS vector string associated with this advisory */\n  vectorString?: Maybe<Scalars['String']>;\n};\n\n/** A common weakness enumeration */\nexport type Cwe = Node & {\n  __typename?: 'CWE';\n  /** The id of the CWE */\n  cweId: Scalars['String'];\n  /** A detailed description of this CWE */\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  /** The name of this CWE */\n  name: Scalars['String'];\n};\n\n/** The connection type for CWE. */\nexport type CweConnection = {\n  __typename?: 'CWEConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CweEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Cwe>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type CweEdge = {\n  __typename?: 'CWEEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Cwe>;\n};\n\n/** Autogenerated input type of CancelEnterpriseAdminInvitation */\nexport type CancelEnterpriseAdminInvitationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the pending enterprise administrator invitation. */\n  invitationId: Scalars['ID'];\n};\n\n/** Autogenerated return type of CancelEnterpriseAdminInvitation */\nexport type CancelEnterpriseAdminInvitationPayload = {\n  __typename?: 'CancelEnterpriseAdminInvitationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The invitation that was canceled. */\n  invitation?: Maybe<EnterpriseAdministratorInvitation>;\n  /** A message confirming the result of canceling an administrator invitation. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CancelSponsorship */\nexport type CancelSponsorshipInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /**\n   * The ID of the user or organization who is acting as the sponsor, paying for\n   * the sponsorship. Required if sponsorLogin is not given.\n   */\n  sponsorId?: InputMaybe<Scalars['ID']>;\n  /**\n   * The username of the user or organization who is acting as the sponsor, paying\n   * for the sponsorship. Required if sponsorId is not given.\n   */\n  sponsorLogin?: InputMaybe<Scalars['String']>;\n  /** The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given. */\n  sponsorableId?: InputMaybe<Scalars['ID']>;\n  /** The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given. */\n  sponsorableLogin?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CancelSponsorship */\nexport type CancelSponsorshipPayload = {\n  __typename?: 'CancelSponsorshipPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The tier that was being used at the time of cancellation. */\n  sponsorsTier?: Maybe<SponsorsTier>;\n};\n\n/** Autogenerated input type of ChangeUserStatus */\nexport type ChangeUserStatusInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The emoji to represent your status. Can either be a native Unicode emoji or an emoji name with colons, e.g., :grinning:. */\n  emoji?: InputMaybe<Scalars['String']>;\n  /** If set, the user status will not be shown after this date. */\n  expiresAt?: InputMaybe<Scalars['DateTime']>;\n  /** Whether this status should indicate you are not fully available on GitHub, e.g., you are away. */\n  limitedAvailability?: InputMaybe<Scalars['Boolean']>;\n  /** A short description of your current status. */\n  message?: InputMaybe<Scalars['String']>;\n  /**\n   * The ID of the organization whose members will be allowed to see the status. If\n   * omitted, the status will be publicly visible.\n   */\n  organizationId?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of ChangeUserStatus */\nexport type ChangeUserStatusPayload = {\n  __typename?: 'ChangeUserStatusPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** Your updated status. */\n  status?: Maybe<UserStatus>;\n};\n\n/** A single check annotation. */\nexport type CheckAnnotation = {\n  __typename?: 'CheckAnnotation';\n  /** The annotation's severity level. */\n  annotationLevel?: Maybe<CheckAnnotationLevel>;\n  /** The path to the file that this annotation was made on. */\n  blobUrl: Scalars['URI'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The position of this annotation. */\n  location: CheckAnnotationSpan;\n  /** The annotation's message. */\n  message: Scalars['String'];\n  /** The path that this annotation was made on. */\n  path: Scalars['String'];\n  /** Additional information about the annotation. */\n  rawDetails?: Maybe<Scalars['String']>;\n  /** The annotation's title */\n  title?: Maybe<Scalars['String']>;\n};\n\n/** The connection type for CheckAnnotation. */\nexport type CheckAnnotationConnection = {\n  __typename?: 'CheckAnnotationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CheckAnnotationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CheckAnnotation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Information from a check run analysis to specific lines of code. */\nexport type CheckAnnotationData = {\n  /** Represents an annotation's information level */\n  annotationLevel: CheckAnnotationLevel;\n  /** The location of the annotation */\n  location: CheckAnnotationRange;\n  /** A short description of the feedback for these lines of code. */\n  message: Scalars['String'];\n  /** The path of the file to add an annotation to. */\n  path: Scalars['String'];\n  /** Details about this annotation. */\n  rawDetails?: InputMaybe<Scalars['String']>;\n  /** The title that represents the annotation. */\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** An edge in a connection. */\nexport type CheckAnnotationEdge = {\n  __typename?: 'CheckAnnotationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<CheckAnnotation>;\n};\n\n/** Represents an annotation's information level. */\nexport enum CheckAnnotationLevel {\n  /** An annotation indicating an inescapable error. */\n  Failure = 'FAILURE',\n  /** An annotation indicating some information. */\n  Notice = 'NOTICE',\n  /** An annotation indicating an ignorable error. */\n  Warning = 'WARNING'\n}\n\n/** A character position in a check annotation. */\nexport type CheckAnnotationPosition = {\n  __typename?: 'CheckAnnotationPosition';\n  /** Column number (1 indexed). */\n  column?: Maybe<Scalars['Int']>;\n  /** Line number (1 indexed). */\n  line: Scalars['Int'];\n};\n\n/** Information from a check run analysis to specific lines of code. */\nexport type CheckAnnotationRange = {\n  /** The ending column of the range. */\n  endColumn?: InputMaybe<Scalars['Int']>;\n  /** The ending line of the range. */\n  endLine: Scalars['Int'];\n  /** The starting column of the range. */\n  startColumn?: InputMaybe<Scalars['Int']>;\n  /** The starting line of the range. */\n  startLine: Scalars['Int'];\n};\n\n/** An inclusive pair of positions for a check annotation. */\nexport type CheckAnnotationSpan = {\n  __typename?: 'CheckAnnotationSpan';\n  /** End position (inclusive). */\n  end: CheckAnnotationPosition;\n  /** Start position (inclusive). */\n  start: CheckAnnotationPosition;\n};\n\n/** The possible states for a check suite or run conclusion. */\nexport enum CheckConclusionState {\n  /** The check suite or run requires action. */\n  ActionRequired = 'ACTION_REQUIRED',\n  /** The check suite or run has been cancelled. */\n  Cancelled = 'CANCELLED',\n  /** The check suite or run has failed. */\n  Failure = 'FAILURE',\n  /** The check suite or run was neutral. */\n  Neutral = 'NEUTRAL',\n  /** The check suite or run was skipped. */\n  Skipped = 'SKIPPED',\n  /** The check suite or run was marked stale by GitHub. Only GitHub can use this conclusion. */\n  Stale = 'STALE',\n  /** The check suite or run has failed at startup. */\n  StartupFailure = 'STARTUP_FAILURE',\n  /** The check suite or run has succeeded. */\n  Success = 'SUCCESS',\n  /** The check suite or run has timed out. */\n  TimedOut = 'TIMED_OUT'\n}\n\n/** A check run. */\nexport type CheckRun = Node & RequirableByPullRequest & UniformResourceLocatable & {\n  __typename?: 'CheckRun';\n  /** The check run's annotations */\n  annotations?: Maybe<CheckAnnotationConnection>;\n  /** The check suite that this run is a part of. */\n  checkSuite: CheckSuite;\n  /** Identifies the date and time when the check run was completed. */\n  completedAt?: Maybe<Scalars['DateTime']>;\n  /** The conclusion of the check run. */\n  conclusion?: Maybe<CheckConclusionState>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The corresponding deployment for this job, if any */\n  deployment?: Maybe<Deployment>;\n  /** The URL from which to find full details of the check run on the integrator's site. */\n  detailsUrl?: Maybe<Scalars['URI']>;\n  /** A reference for the check run on the integrator's system. */\n  externalId?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** Whether this is required to pass before merging for a specific pull request. */\n  isRequired: Scalars['Boolean'];\n  /** The name of the check for this check run. */\n  name: Scalars['String'];\n  /** Information about a pending deployment, if any, in this check run */\n  pendingDeploymentRequest?: Maybe<DeploymentRequest>;\n  /** The permalink to the check run summary. */\n  permalink: Scalars['URI'];\n  /** The repository associated with this check run. */\n  repository: Repository;\n  /** The HTTP path for this check run. */\n  resourcePath: Scalars['URI'];\n  /** Identifies the date and time when the check run was started. */\n  startedAt?: Maybe<Scalars['DateTime']>;\n  /** The current status of the check run. */\n  status: CheckStatusState;\n  /** The check run's steps */\n  steps?: Maybe<CheckStepConnection>;\n  /** A string representing the check run's summary */\n  summary?: Maybe<Scalars['String']>;\n  /** A string representing the check run's text */\n  text?: Maybe<Scalars['String']>;\n  /** A string representing the check run */\n  title?: Maybe<Scalars['String']>;\n  /** The HTTP URL for this check run. */\n  url: Scalars['URI'];\n};\n\n\n/** A check run. */\nexport type CheckRunAnnotationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A check run. */\nexport type CheckRunIsRequiredArgs = {\n  pullRequestId?: InputMaybe<Scalars['ID']>;\n  pullRequestNumber?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A check run. */\nexport type CheckRunStepsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  number?: InputMaybe<Scalars['Int']>;\n};\n\n/** Possible further actions the integrator can perform. */\nexport type CheckRunAction = {\n  /** A short explanation of what this action would do. */\n  description: Scalars['String'];\n  /** A reference for the action on the integrator's system. */\n  identifier: Scalars['String'];\n  /** The text to be displayed on a button in the web UI. */\n  label: Scalars['String'];\n};\n\n/** The connection type for CheckRun. */\nexport type CheckRunConnection = {\n  __typename?: 'CheckRunConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CheckRunEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CheckRun>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type CheckRunEdge = {\n  __typename?: 'CheckRunEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<CheckRun>;\n};\n\n/** The filters that are available when fetching check runs. */\nexport type CheckRunFilter = {\n  /** Filters the check runs created by this application ID. */\n  appId?: InputMaybe<Scalars['Int']>;\n  /** Filters the check runs by this name. */\n  checkName?: InputMaybe<Scalars['String']>;\n  /** Filters the check runs by this type. */\n  checkType?: InputMaybe<CheckRunType>;\n  /** Filters the check runs by these conclusions. */\n  conclusions?: InputMaybe<Array<CheckConclusionState>>;\n  /** Filters the check runs by this status. Superceded by statuses. */\n  status?: InputMaybe<CheckStatusState>;\n  /** Filters the check runs by this status. Overrides status. */\n  statuses?: InputMaybe<Array<CheckStatusState>>;\n};\n\n/** Descriptive details about the check run. */\nexport type CheckRunOutput = {\n  /** The annotations that are made as part of the check run. */\n  annotations?: InputMaybe<Array<CheckAnnotationData>>;\n  /** Images attached to the check run output displayed in the GitHub pull request UI. */\n  images?: InputMaybe<Array<CheckRunOutputImage>>;\n  /** The summary of the check run (supports Commonmark). */\n  summary: Scalars['String'];\n  /** The details of the check run (supports Commonmark). */\n  text?: InputMaybe<Scalars['String']>;\n  /** A title to provide for this check run. */\n  title: Scalars['String'];\n};\n\n/** Images attached to the check run output displayed in the GitHub pull request UI. */\nexport type CheckRunOutputImage = {\n  /** The alternative text for the image. */\n  alt: Scalars['String'];\n  /** A short image description. */\n  caption?: InputMaybe<Scalars['String']>;\n  /** The full URL of the image. */\n  imageUrl: Scalars['URI'];\n};\n\n/** The possible states of a check run in a status rollup. */\nexport enum CheckRunState {\n  /** The check run requires action. */\n  ActionRequired = 'ACTION_REQUIRED',\n  /** The check run has been cancelled. */\n  Cancelled = 'CANCELLED',\n  /** The check run has been completed. */\n  Completed = 'COMPLETED',\n  /** The check run has failed. */\n  Failure = 'FAILURE',\n  /** The check run is in progress. */\n  InProgress = 'IN_PROGRESS',\n  /** The check run was neutral. */\n  Neutral = 'NEUTRAL',\n  /** The check run is in pending state. */\n  Pending = 'PENDING',\n  /** The check run has been queued. */\n  Queued = 'QUEUED',\n  /** The check run was skipped. */\n  Skipped = 'SKIPPED',\n  /** The check run was marked stale by GitHub. Only GitHub can use this conclusion. */\n  Stale = 'STALE',\n  /** The check run has failed at startup. */\n  StartupFailure = 'STARTUP_FAILURE',\n  /** The check run has succeeded. */\n  Success = 'SUCCESS',\n  /** The check run has timed out. */\n  TimedOut = 'TIMED_OUT',\n  /** The check run is in waiting state. */\n  Waiting = 'WAITING'\n}\n\n/** Represents a count of the state of a check run. */\nexport type CheckRunStateCount = {\n  __typename?: 'CheckRunStateCount';\n  /** The number of check runs with this state. */\n  count: Scalars['Int'];\n  /** The state of a check run. */\n  state: CheckRunState;\n};\n\n/** The possible types of check runs. */\nexport enum CheckRunType {\n  /** Every check run available. */\n  All = 'ALL',\n  /** The latest check run. */\n  Latest = 'LATEST'\n}\n\n/** The possible states for a check suite or run status. */\nexport enum CheckStatusState {\n  /** The check suite or run has been completed. */\n  Completed = 'COMPLETED',\n  /** The check suite or run is in progress. */\n  InProgress = 'IN_PROGRESS',\n  /** The check suite or run is in pending state. */\n  Pending = 'PENDING',\n  /** The check suite or run has been queued. */\n  Queued = 'QUEUED',\n  /** The check suite or run has been requested. */\n  Requested = 'REQUESTED',\n  /** The check suite or run is in waiting state. */\n  Waiting = 'WAITING'\n}\n\n/** A single check step. */\nexport type CheckStep = {\n  __typename?: 'CheckStep';\n  /** Identifies the date and time when the check step was completed. */\n  completedAt?: Maybe<Scalars['DateTime']>;\n  /** The conclusion of the check step. */\n  conclusion?: Maybe<CheckConclusionState>;\n  /** A reference for the check step on the integrator's system. */\n  externalId?: Maybe<Scalars['String']>;\n  /** The step's name. */\n  name: Scalars['String'];\n  /** The index of the step in the list of steps of the parent check run. */\n  number: Scalars['Int'];\n  /** Number of seconds to completion. */\n  secondsToCompletion?: Maybe<Scalars['Int']>;\n  /** Identifies the date and time when the check step was started. */\n  startedAt?: Maybe<Scalars['DateTime']>;\n  /** The current status of the check step. */\n  status: CheckStatusState;\n};\n\n/** The connection type for CheckStep. */\nexport type CheckStepConnection = {\n  __typename?: 'CheckStepConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CheckStepEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CheckStep>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type CheckStepEdge = {\n  __typename?: 'CheckStepEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<CheckStep>;\n};\n\n/** A check suite. */\nexport type CheckSuite = Node & {\n  __typename?: 'CheckSuite';\n  /** The GitHub App which created this check suite. */\n  app?: Maybe<App>;\n  /** The name of the branch for this check suite. */\n  branch?: Maybe<Ref>;\n  /** The check runs associated with a check suite. */\n  checkRuns?: Maybe<CheckRunConnection>;\n  /** The commit for this check suite */\n  commit: Commit;\n  /** The conclusion of this check suite. */\n  conclusion?: Maybe<CheckConclusionState>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The user who triggered the check suite. */\n  creator?: Maybe<User>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** A list of open pull requests matching the check suite. */\n  matchingPullRequests?: Maybe<PullRequestConnection>;\n  /** The push that triggered this check suite. */\n  push?: Maybe<Push>;\n  /** The repository associated with this check suite. */\n  repository: Repository;\n  /** The HTTP path for this check suite */\n  resourcePath: Scalars['URI'];\n  /** The status of this check suite. */\n  status: CheckStatusState;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this check suite */\n  url: Scalars['URI'];\n  /** The workflow run associated with this check suite. */\n  workflowRun?: Maybe<WorkflowRun>;\n};\n\n\n/** A check suite. */\nexport type CheckSuiteCheckRunsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filterBy?: InputMaybe<CheckRunFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A check suite. */\nexport type CheckSuiteMatchingPullRequestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  baseRefName?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  headRefName?: InputMaybe<Scalars['String']>;\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n/** The auto-trigger preferences that are available for check suites. */\nexport type CheckSuiteAutoTriggerPreference = {\n  /** The node ID of the application that owns the check suite. */\n  appId: Scalars['ID'];\n  /** Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository. */\n  setting: Scalars['Boolean'];\n};\n\n/** The connection type for CheckSuite. */\nexport type CheckSuiteConnection = {\n  __typename?: 'CheckSuiteConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CheckSuiteEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CheckSuite>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type CheckSuiteEdge = {\n  __typename?: 'CheckSuiteEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<CheckSuite>;\n};\n\n/** The filters that are available when fetching check suites. */\nexport type CheckSuiteFilter = {\n  /** Filters the check suites created by this application ID. */\n  appId?: InputMaybe<Scalars['Int']>;\n  /** Filters the check suites by this name. */\n  checkName?: InputMaybe<Scalars['String']>;\n};\n\n/** An object which can have its data claimed or claim data from another. */\nexport type Claimable = Mannequin | User;\n\n/** Autogenerated input type of ClearLabelsFromLabelable */\nexport type ClearLabelsFromLabelableInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The id of the labelable object to clear the labels from. */\n  labelableId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ClearLabelsFromLabelable */\nexport type ClearLabelsFromLabelablePayload = {\n  __typename?: 'ClearLabelsFromLabelablePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The item that was unlabeled. */\n  labelable?: Maybe<Labelable>;\n};\n\n/** Autogenerated input type of ClearProjectV2ItemFieldValue */\nexport type ClearProjectV2ItemFieldValueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the field to be cleared. */\n  fieldId: Scalars['ID'];\n  /** The ID of the item to be cleared. */\n  itemId: Scalars['ID'];\n  /** The ID of the Project. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ClearProjectV2ItemFieldValue */\nexport type ClearProjectV2ItemFieldValuePayload = {\n  __typename?: 'ClearProjectV2ItemFieldValuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated item. */\n  projectV2Item?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of CloneProject */\nexport type CloneProjectInput = {\n  /** The description of the project. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Whether or not to clone the source project's workflows. */\n  includeWorkflows: Scalars['Boolean'];\n  /** The name of the project. */\n  name: Scalars['String'];\n  /** The visibility of the project, defaults to false (private). */\n  public?: InputMaybe<Scalars['Boolean']>;\n  /** The source project to clone. */\n  sourceId: Scalars['ID'];\n  /** The owner ID to create the project under. */\n  targetOwnerId: Scalars['ID'];\n};\n\n/** Autogenerated return type of CloneProject */\nexport type CloneProjectPayload = {\n  __typename?: 'CloneProjectPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The id of the JobStatus for populating cloned fields. */\n  jobStatusId?: Maybe<Scalars['String']>;\n  /** The new cloned project. */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of CloneTemplateRepository */\nexport type CloneTemplateRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** A short description of the new repository. */\n  description?: InputMaybe<Scalars['String']>;\n  /**\n   * Whether to copy all branches from the template to the new repository. Defaults\n   * to copying only the default branch of the template.\n   */\n  includeAllBranches?: InputMaybe<Scalars['Boolean']>;\n  /** The name of the new repository. */\n  name: Scalars['String'];\n  /** The ID of the owner for the new repository. */\n  ownerId: Scalars['ID'];\n  /** The Node ID of the template repository. */\n  repositoryId: Scalars['ID'];\n  /** Indicates the repository's visibility level. */\n  visibility: RepositoryVisibility;\n};\n\n/** Autogenerated return type of CloneTemplateRepository */\nexport type CloneTemplateRepositoryPayload = {\n  __typename?: 'CloneTemplateRepositoryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** An object that can be closed */\nexport type Closable = {\n  /** Indicates if the object is closed (definition of closed may depend on type) */\n  closed: Scalars['Boolean'];\n  /** Identifies the date and time when the object was closed. */\n  closedAt?: Maybe<Scalars['DateTime']>;\n  /** Indicates if the object can be closed by the viewer. */\n  viewerCanClose: Scalars['Boolean'];\n  /** Indicates if the object can be reopened by the viewer. */\n  viewerCanReopen: Scalars['Boolean'];\n};\n\n/** Autogenerated input type of CloseDiscussion */\nexport type CloseDiscussionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the discussion to be closed. */\n  discussionId: Scalars['ID'];\n  /** The reason why the discussion is being closed. */\n  reason?: InputMaybe<DiscussionCloseReason>;\n};\n\n/** Autogenerated return type of CloseDiscussion */\nexport type CloseDiscussionPayload = {\n  __typename?: 'CloseDiscussionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The discussion that was closed. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of CloseIssue */\nexport type CloseIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the issue to be closed. */\n  issueId: Scalars['ID'];\n  /** The reason the issue is to be closed. */\n  stateReason?: InputMaybe<IssueClosedStateReason>;\n};\n\n/** Autogenerated return type of CloseIssue */\nexport type CloseIssuePayload = {\n  __typename?: 'CloseIssuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The issue that was closed. */\n  issue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of ClosePullRequest */\nexport type ClosePullRequestInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the pull request to be closed. */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ClosePullRequest */\nexport type ClosePullRequestPayload = {\n  __typename?: 'ClosePullRequestPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The pull request that was closed. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'closed' event on any `Closable`. */\nexport type ClosedEvent = Node & UniformResourceLocatable & {\n  __typename?: 'ClosedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Object that was closed. */\n  closable: Closable;\n  /** Object which triggered the creation of this event. */\n  closer?: Maybe<Closer>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** The HTTP path for this closed event. */\n  resourcePath: Scalars['URI'];\n  /** The reason the issue state was changed to closed. */\n  stateReason?: Maybe<IssueStateReason>;\n  /** The HTTP URL for this closed event. */\n  url: Scalars['URI'];\n};\n\n/** The object which triggered a `ClosedEvent`. */\nexport type Closer = Commit | PullRequest;\n\n/** The Code of Conduct for a repository */\nexport type CodeOfConduct = Node & {\n  __typename?: 'CodeOfConduct';\n  /** The body of the Code of Conduct */\n  body?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The key for the Code of Conduct */\n  key: Scalars['String'];\n  /** The formal name of the Code of Conduct */\n  name: Scalars['String'];\n  /** The HTTP path for this Code of Conduct */\n  resourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for this Code of Conduct */\n  url?: Maybe<Scalars['URI']>;\n};\n\n/** Collaborators affiliation level with a subject. */\nexport enum CollaboratorAffiliation {\n  /** All collaborators the authenticated user can see. */\n  All = 'ALL',\n  /** All collaborators with permissions to an organization-owned subject, regardless of organization membership status. */\n  Direct = 'DIRECT',\n  /** All outside collaborators of an organization-owned subject. */\n  Outside = 'OUTSIDE'\n}\n\n/** Represents a comment. */\nexport type Comment = {\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the subject of the comment. */\n  authorAssociation: CommentAuthorAssociation;\n  /** The body as Markdown. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body rendered to text. */\n  bodyText: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n};\n\n\n/** Represents a comment. */\nexport type CommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** A comment author association with repository. */\nexport enum CommentAuthorAssociation {\n  /** Author has been invited to collaborate on the repository. */\n  Collaborator = 'COLLABORATOR',\n  /** Author has previously committed to the repository. */\n  Contributor = 'CONTRIBUTOR',\n  /** Author has not previously committed to GitHub. */\n  FirstTimer = 'FIRST_TIMER',\n  /** Author has not previously committed to the repository. */\n  FirstTimeContributor = 'FIRST_TIME_CONTRIBUTOR',\n  /** Author is a placeholder for an unclaimed user. */\n  Mannequin = 'MANNEQUIN',\n  /** Author is a member of the organization that owns the repository. */\n  Member = 'MEMBER',\n  /** Author has no association with the repository. */\n  None = 'NONE',\n  /** Author is the owner of the repository. */\n  Owner = 'OWNER'\n}\n\n/** The possible errors that will prevent a user from updating a comment. */\nexport enum CommentCannotUpdateReason {\n  /** Unable to create comment because repository is archived. */\n  Archived = 'ARCHIVED',\n  /** You cannot update this comment */\n  Denied = 'DENIED',\n  /** You must be the author or have write access to this repository to update this comment. */\n  InsufficientAccess = 'INSUFFICIENT_ACCESS',\n  /** Unable to create comment because issue is locked. */\n  Locked = 'LOCKED',\n  /** You must be logged in to update this comment. */\n  LoginRequired = 'LOGIN_REQUIRED',\n  /** Repository is under maintenance. */\n  Maintenance = 'MAINTENANCE',\n  /** At least one email address must be verified to update this comment. */\n  VerifiedEmailRequired = 'VERIFIED_EMAIL_REQUIRED'\n}\n\n/** Represents a 'comment_deleted' event on a given issue or pull request. */\nexport type CommentDeletedEvent = Node & {\n  __typename?: 'CommentDeletedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The user who authored the deleted comment. */\n  deletedCommentAuthor?: Maybe<Actor>;\n  id: Scalars['ID'];\n};\n\n/** Represents a Git commit. */\nexport type Commit = GitObject & Node & Subscribable & UniformResourceLocatable & {\n  __typename?: 'Commit';\n  /** An abbreviated version of the Git object ID */\n  abbreviatedOid: Scalars['String'];\n  /** The number of additions in this commit. */\n  additions: Scalars['Int'];\n  /**\n   * The merged Pull Request that introduced the commit to the repository. If the\n   * commit is not present in the default branch, additionally returns open Pull\n   * Requests associated with the commit\n   */\n  associatedPullRequests?: Maybe<PullRequestConnection>;\n  /** Authorship details of the commit. */\n  author?: Maybe<GitActor>;\n  /** Check if the committer and the author match. */\n  authoredByCommitter: Scalars['Boolean'];\n  /** The datetime when this commit was authored. */\n  authoredDate: Scalars['DateTime'];\n  /**\n   * The list of authors for this commit based on the git author and the Co-authored-by\n   * message trailer. The git author will always be first.\n   */\n  authors: GitActorConnection;\n  /** Fetches `git blame` information. */\n  blame: Blame;\n  /**\n   * We recommend using the `changedFilesIfAvailable` field instead of\n   * `changedFiles`, as `changedFiles` will cause your request to return an error\n   * if GitHub is unable to calculate the number of changed files.\n   * @deprecated `changedFiles` will be removed. Use `changedFilesIfAvailable` instead. Removal on 2023-01-01 UTC.\n   */\n  changedFiles: Scalars['Int'];\n  /**\n   * The number of changed files in this commit. If GitHub is unable to calculate\n   * the number of changed files (for example due to a timeout), this will return\n   * `null`. We recommend using this field instead of `changedFiles`.\n   */\n  changedFilesIfAvailable?: Maybe<Scalars['Int']>;\n  /** The check suites associated with a commit. */\n  checkSuites?: Maybe<CheckSuiteConnection>;\n  /** Comments made on the commit. */\n  comments: CommitCommentConnection;\n  /** The HTTP path for this Git object */\n  commitResourcePath: Scalars['URI'];\n  /** The HTTP URL for this Git object */\n  commitUrl: Scalars['URI'];\n  /** The datetime when this commit was committed. */\n  committedDate: Scalars['DateTime'];\n  /** Check if committed via GitHub web UI. */\n  committedViaWeb: Scalars['Boolean'];\n  /** Committer details of the commit. */\n  committer?: Maybe<GitActor>;\n  /** The number of deletions in this commit. */\n  deletions: Scalars['Int'];\n  /** The deployments associated with a commit. */\n  deployments?: Maybe<DeploymentConnection>;\n  /** The tree entry representing the file located at the given path. */\n  file?: Maybe<TreeEntry>;\n  /** The linear commit history starting from (and including) this commit, in the same order as `git log`. */\n  history: CommitHistoryConnection;\n  id: Scalars['ID'];\n  /** The Git commit message */\n  message: Scalars['String'];\n  /** The Git commit message body */\n  messageBody: Scalars['String'];\n  /** The commit message body rendered to HTML. */\n  messageBodyHTML: Scalars['HTML'];\n  /** The Git commit message headline */\n  messageHeadline: Scalars['String'];\n  /** The commit message headline rendered to HTML. */\n  messageHeadlineHTML: Scalars['HTML'];\n  /** The Git object ID */\n  oid: Scalars['GitObjectID'];\n  /** The organization this commit was made on behalf of. */\n  onBehalfOf?: Maybe<Organization>;\n  /** The parents of a commit. */\n  parents: CommitConnection;\n  /**\n   * The datetime when this commit was pushed.\n   * @deprecated `pushedDate` is no longer supported. Removal on 2023-07-01 UTC.\n   */\n  pushedDate?: Maybe<Scalars['DateTime']>;\n  /** The Repository this commit belongs to */\n  repository: Repository;\n  /** The HTTP path for this commit */\n  resourcePath: Scalars['URI'];\n  /** Commit signing information, if present. */\n  signature?: Maybe<GitSignature>;\n  /** Status information for this commit */\n  status?: Maybe<Status>;\n  /** Check and Status rollup information for this commit. */\n  statusCheckRollup?: Maybe<StatusCheckRollup>;\n  /** Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file. */\n  submodules: SubmoduleConnection;\n  /**\n   * Returns a URL to download a tarball archive for a repository.\n   * Note: For private repositories, these links are temporary and expire after five minutes.\n   */\n  tarballUrl: Scalars['URI'];\n  /** Commit's root Tree */\n  tree: Tree;\n  /** The HTTP path for the tree of this commit */\n  treeResourcePath: Scalars['URI'];\n  /** The HTTP URL for the tree of this commit */\n  treeUrl: Scalars['URI'];\n  /** The HTTP URL for this commit */\n  url: Scalars['URI'];\n  /** Check if the viewer is able to change their subscription status for the repository. */\n  viewerCanSubscribe: Scalars['Boolean'];\n  /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n  viewerSubscription?: Maybe<SubscriptionState>;\n  /**\n   * Returns a URL to download a zipball archive for a repository.\n   * Note: For private repositories, these links are temporary and expire after five minutes.\n   */\n  zipballUrl: Scalars['URI'];\n};\n\n\n/** Represents a Git commit. */\nexport type CommitAssociatedPullRequestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PullRequestOrder>;\n};\n\n\n/** Represents a Git commit. */\nexport type CommitAuthorsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** Represents a Git commit. */\nexport type CommitBlameArgs = {\n  path: Scalars['String'];\n};\n\n\n/** Represents a Git commit. */\nexport type CommitCheckSuitesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filterBy?: InputMaybe<CheckSuiteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** Represents a Git commit. */\nexport type CommitCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** Represents a Git commit. */\nexport type CommitDeploymentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  environments?: InputMaybe<Array<Scalars['String']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<DeploymentOrder>;\n};\n\n\n/** Represents a Git commit. */\nexport type CommitFileArgs = {\n  path: Scalars['String'];\n};\n\n\n/** Represents a Git commit. */\nexport type CommitHistoryArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  author?: InputMaybe<CommitAuthor>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  path?: InputMaybe<Scalars['String']>;\n  since?: InputMaybe<Scalars['GitTimestamp']>;\n  until?: InputMaybe<Scalars['GitTimestamp']>;\n};\n\n\n/** Represents a Git commit. */\nexport type CommitParentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** Represents a Git commit. */\nexport type CommitSubmodulesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Specifies an author for filtering Git commits. */\nexport type CommitAuthor = {\n  /** Email addresses to filter by. Commits authored by any of the specified email addresses will be returned. */\n  emails?: InputMaybe<Array<Scalars['String']>>;\n  /**\n   * ID of a User to filter by. If non-null, only commits authored by this user\n   * will be returned. This field takes precedence over emails.\n   */\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n/** Parameters to be used for the commit_author_email_pattern rule */\nexport type CommitAuthorEmailPatternParameters = {\n  __typename?: 'CommitAuthorEmailPatternParameters';\n  /** How this rule will appear to users. */\n  name?: Maybe<Scalars['String']>;\n  /** If true, the rule will fail if the pattern matches. */\n  negate: Scalars['Boolean'];\n  /** The operator to use for matching. */\n  operator: Scalars['String'];\n  /** The pattern to match with. */\n  pattern: Scalars['String'];\n};\n\n/** Parameters to be used for the commit_author_email_pattern rule */\nexport type CommitAuthorEmailPatternParametersInput = {\n  /** How this rule will appear to users. */\n  name?: InputMaybe<Scalars['String']>;\n  /** If true, the rule will fail if the pattern matches. */\n  negate?: InputMaybe<Scalars['Boolean']>;\n  /** The operator to use for matching. */\n  operator: Scalars['String'];\n  /** The pattern to match with. */\n  pattern: Scalars['String'];\n};\n\n/** Represents a comment on a given Commit. */\nexport type CommitComment = Comment & Deletable & Minimizable & Node & Reactable & RepositoryNode & Updatable & UpdatableComment & {\n  __typename?: 'CommitComment';\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the subject of the comment. */\n  authorAssociation: CommentAuthorAssociation;\n  /** Identifies the comment body. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body rendered to text. */\n  bodyText: Scalars['String'];\n  /** Identifies the commit associated with the comment, if the commit exists. */\n  commit?: Maybe<Commit>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** Returns whether or not a comment has been minimized. */\n  isMinimized: Scalars['Boolean'];\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /**\n   * Returns why the comment was minimized. One of `abuse`, `off-topic`,\n   * `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and\n   * formatting of these values differs from the inputs to the `MinimizeComment` mutation.\n   */\n  minimizedReason?: Maybe<Scalars['String']>;\n  /** Identifies the file path associated with the comment. */\n  path?: Maybe<Scalars['String']>;\n  /** Identifies the line position associated with the comment. */\n  position?: Maybe<Scalars['Int']>;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** The repository associated with this node. */\n  repository: Repository;\n  /** The HTTP path permalink for this commit comment. */\n  resourcePath: Scalars['URI'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL permalink for this commit comment. */\n  url: Scalars['URI'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n  /** Check if the current viewer can minimize this object. */\n  viewerCanMinimize: Scalars['Boolean'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n};\n\n\n/** Represents a comment on a given Commit. */\nexport type CommitCommentReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** Represents a comment on a given Commit. */\nexport type CommitCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for CommitComment. */\nexport type CommitCommentConnection = {\n  __typename?: 'CommitCommentConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CommitCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CommitComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type CommitCommentEdge = {\n  __typename?: 'CommitCommentEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<CommitComment>;\n};\n\n/** A thread of comments on a commit. */\nexport type CommitCommentThread = Node & RepositoryNode & {\n  __typename?: 'CommitCommentThread';\n  /** The comments that exist in this thread. */\n  comments: CommitCommentConnection;\n  /** The commit the comments were made on. */\n  commit?: Maybe<Commit>;\n  id: Scalars['ID'];\n  /** The file the comments were made on. */\n  path?: Maybe<Scalars['String']>;\n  /** The position in the diff for the commit that the comment was made on. */\n  position?: Maybe<Scalars['Int']>;\n  /** The repository associated with this node. */\n  repository: Repository;\n};\n\n\n/** A thread of comments on a commit. */\nexport type CommitCommentThreadCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for Commit. */\nexport type CommitConnection = {\n  __typename?: 'CommitConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CommitEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Commit>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Ordering options for commit contribution connections. */\nexport type CommitContributionOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field by which to order commit contributions. */\n  field: CommitContributionOrderField;\n};\n\n/** Properties by which commit contribution connections can be ordered. */\nexport enum CommitContributionOrderField {\n  /** Order commit contributions by how many commits they represent. */\n  CommitCount = 'COMMIT_COUNT',\n  /** Order commit contributions by when they were made. */\n  OccurredAt = 'OCCURRED_AT'\n}\n\n/** This aggregates commits made by a user within one repository. */\nexport type CommitContributionsByRepository = {\n  __typename?: 'CommitContributionsByRepository';\n  /** The commit contributions, each representing a day. */\n  contributions: CreatedCommitContributionConnection;\n  /** The repository in which the commits were made. */\n  repository: Repository;\n  /** The HTTP path for the user's commits to the repository in this time range. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for the user's commits to the repository in this time range. */\n  url: Scalars['URI'];\n};\n\n\n/** This aggregates commits made by a user within one repository. */\nexport type CommitContributionsByRepositoryContributionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<CommitContributionOrder>;\n};\n\n/** An edge in a connection. */\nexport type CommitEdge = {\n  __typename?: 'CommitEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Commit>;\n};\n\n/** The connection type for Commit. */\nexport type CommitHistoryConnection = {\n  __typename?: 'CommitHistoryConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CommitEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Commit>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A message to include with a new commit */\nexport type CommitMessage = {\n  /** The body of the message. */\n  body?: InputMaybe<Scalars['String']>;\n  /** The headline of the message. */\n  headline: Scalars['String'];\n};\n\n/** Parameters to be used for the commit_message_pattern rule */\nexport type CommitMessagePatternParameters = {\n  __typename?: 'CommitMessagePatternParameters';\n  /** How this rule will appear to users. */\n  name?: Maybe<Scalars['String']>;\n  /** If true, the rule will fail if the pattern matches. */\n  negate: Scalars['Boolean'];\n  /** The operator to use for matching. */\n  operator: Scalars['String'];\n  /** The pattern to match with. */\n  pattern: Scalars['String'];\n};\n\n/** Parameters to be used for the commit_message_pattern rule */\nexport type CommitMessagePatternParametersInput = {\n  /** How this rule will appear to users. */\n  name?: InputMaybe<Scalars['String']>;\n  /** If true, the rule will fail if the pattern matches. */\n  negate?: InputMaybe<Scalars['Boolean']>;\n  /** The operator to use for matching. */\n  operator: Scalars['String'];\n  /** The pattern to match with. */\n  pattern: Scalars['String'];\n};\n\n/**\n * A git ref for a commit to be appended to.\n *\n * The ref must be a branch, i.e. its fully qualified name must start\n * with `refs/heads/` (although the input is not required to be fully\n * qualified).\n *\n * The Ref may be specified by its global node ID or by the\n * `repositoryNameWithOwner` and `branchName`.\n *\n * ### Examples\n *\n * Specify a branch using a global node ID:\n *\n *     { \"id\": \"MDM6UmVmMTpyZWZzL2hlYWRzL21haW4=\" }\n *\n * Specify a branch using `repositoryNameWithOwner` and `branchName`:\n *\n *     {\n *       \"repositoryNameWithOwner\": \"github/graphql-client\",\n *       \"branchName\": \"main\"\n *     }\n */\nexport type CommittableBranch = {\n  /** The unqualified name of the branch to append the commit to. */\n  branchName?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the Ref to be updated. */\n  id?: InputMaybe<Scalars['ID']>;\n  /** The nameWithOwner of the repository to commit to. */\n  repositoryNameWithOwner?: InputMaybe<Scalars['String']>;\n};\n\n/** Parameters to be used for the committer_email_pattern rule */\nexport type CommitterEmailPatternParameters = {\n  __typename?: 'CommitterEmailPatternParameters';\n  /** How this rule will appear to users. */\n  name?: Maybe<Scalars['String']>;\n  /** If true, the rule will fail if the pattern matches. */\n  negate: Scalars['Boolean'];\n  /** The operator to use for matching. */\n  operator: Scalars['String'];\n  /** The pattern to match with. */\n  pattern: Scalars['String'];\n};\n\n/** Parameters to be used for the committer_email_pattern rule */\nexport type CommitterEmailPatternParametersInput = {\n  /** How this rule will appear to users. */\n  name?: InputMaybe<Scalars['String']>;\n  /** If true, the rule will fail if the pattern matches. */\n  negate?: InputMaybe<Scalars['Boolean']>;\n  /** The operator to use for matching. */\n  operator: Scalars['String'];\n  /** The pattern to match with. */\n  pattern: Scalars['String'];\n};\n\n/** Represents a comparison between two commit revisions. */\nexport type Comparison = Node & {\n  __typename?: 'Comparison';\n  /** The number of commits ahead of the base branch. */\n  aheadBy: Scalars['Int'];\n  /** The base revision of this comparison. */\n  baseTarget: GitObject;\n  /** The number of commits behind the base branch. */\n  behindBy: Scalars['Int'];\n  /** The commits which compose this comparison. */\n  commits: ComparisonCommitConnection;\n  /** The head revision of this comparison. */\n  headTarget: GitObject;\n  id: Scalars['ID'];\n  /** The status of this comparison. */\n  status: ComparisonStatus;\n};\n\n\n/** Represents a comparison between two commit revisions. */\nexport type ComparisonCommitsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for Commit. */\nexport type ComparisonCommitConnection = {\n  __typename?: 'ComparisonCommitConnection';\n  /** The total count of authors and co-authors across all commits. */\n  authorCount: Scalars['Int'];\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CommitEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Commit>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** The status of a git comparison between two refs. */\nexport enum ComparisonStatus {\n  /** The head ref is ahead of the base ref. */\n  Ahead = 'AHEAD',\n  /** The head ref is behind the base ref. */\n  Behind = 'BEHIND',\n  /** The head ref is both ahead and behind of the base ref, indicating git history has diverged. */\n  Diverged = 'DIVERGED',\n  /** The head ref and base ref are identical. */\n  Identical = 'IDENTICAL'\n}\n\n/** Represents a 'connected' event on a given issue or pull request. */\nexport type ConnectedEvent = Node & {\n  __typename?: 'ConnectedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Reference originated in a different repository. */\n  isCrossRepository: Scalars['Boolean'];\n  /** Issue or pull request that made the reference. */\n  source: ReferencedSubject;\n  /** Issue or pull request which was connected. */\n  subject: ReferencedSubject;\n};\n\n/** Represents a contribution a user made on GitHub, such as opening an issue. */\nexport type Contribution = {\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   */\n  isRestricted: Scalars['Boolean'];\n  /** When this contribution was made. */\n  occurredAt: Scalars['DateTime'];\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this contribution. */\n  url: Scalars['URI'];\n  /** The user who made this contribution. */\n  user: User;\n};\n\n/** A calendar of contributions made on GitHub by a user. */\nexport type ContributionCalendar = {\n  __typename?: 'ContributionCalendar';\n  /** A list of hex color codes used in this calendar. The darker the color, the more contributions it represents. */\n  colors: Array<Scalars['String']>;\n  /** Determine if the color set was chosen because it's currently Halloween. */\n  isHalloween: Scalars['Boolean'];\n  /** A list of the months of contributions in this calendar. */\n  months: Array<ContributionCalendarMonth>;\n  /** The count of total contributions in the calendar. */\n  totalContributions: Scalars['Int'];\n  /** A list of the weeks of contributions in this calendar. */\n  weeks: Array<ContributionCalendarWeek>;\n};\n\n/** Represents a single day of contributions on GitHub by a user. */\nexport type ContributionCalendarDay = {\n  __typename?: 'ContributionCalendarDay';\n  /** The hex color code that represents how many contributions were made on this day compared to others in the calendar. */\n  color: Scalars['String'];\n  /** How many contributions were made by the user on this day. */\n  contributionCount: Scalars['Int'];\n  /**\n   * Indication of contributions, relative to other days. Can be used to indicate\n   * which color to represent this day on a calendar.\n   */\n  contributionLevel: ContributionLevel;\n  /** The day this square represents. */\n  date: Scalars['Date'];\n  /** A number representing which day of the week this square represents, e.g., 1 is Monday. */\n  weekday: Scalars['Int'];\n};\n\n/** A month of contributions in a user's contribution graph. */\nexport type ContributionCalendarMonth = {\n  __typename?: 'ContributionCalendarMonth';\n  /** The date of the first day of this month. */\n  firstDay: Scalars['Date'];\n  /** The name of the month. */\n  name: Scalars['String'];\n  /** How many weeks started in this month. */\n  totalWeeks: Scalars['Int'];\n  /** The year the month occurred in. */\n  year: Scalars['Int'];\n};\n\n/** A week of contributions in a user's contribution graph. */\nexport type ContributionCalendarWeek = {\n  __typename?: 'ContributionCalendarWeek';\n  /** The days of contributions in this week. */\n  contributionDays: Array<ContributionCalendarDay>;\n  /** The date of the earliest square in this week. */\n  firstDay: Scalars['Date'];\n};\n\n/** Varying levels of contributions from none to many. */\nexport enum ContributionLevel {\n  /** Lowest 25% of days of contributions. */\n  FirstQuartile = 'FIRST_QUARTILE',\n  /** Highest 25% of days of contributions. More contributions than the third quartile. */\n  FourthQuartile = 'FOURTH_QUARTILE',\n  /** No contributions occurred. */\n  None = 'NONE',\n  /** Second lowest 25% of days of contributions. More contributions than the first quartile. */\n  SecondQuartile = 'SECOND_QUARTILE',\n  /** Second highest 25% of days of contributions. More contributions than second quartile, less than the fourth quartile. */\n  ThirdQuartile = 'THIRD_QUARTILE'\n}\n\n/** Ordering options for contribution connections. */\nexport type ContributionOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollection = {\n  __typename?: 'ContributionsCollection';\n  /** Commit contributions made by the user, grouped by repository. */\n  commitContributionsByRepository: Array<CommitContributionsByRepository>;\n  /** A calendar of this user's contributions on GitHub. */\n  contributionCalendar: ContributionCalendar;\n  /** The years the user has been making contributions with the most recent year first. */\n  contributionYears: Array<Scalars['Int']>;\n  /** Determine if this collection's time span ends in the current month. */\n  doesEndInCurrentMonth: Scalars['Boolean'];\n  /**\n   * The date of the first restricted contribution the user made in this time\n   * period. Can only be non-null when the user has enabled private contribution counts.\n   */\n  earliestRestrictedContributionDate?: Maybe<Scalars['Date']>;\n  /** The ending date and time of this collection. */\n  endedAt: Scalars['DateTime'];\n  /**\n   * The first issue the user opened on GitHub. This will be null if that issue was\n   * opened outside the collection's time range and ignoreTimeRange is false. If\n   * the issue is not visible but the user has opted to show private contributions,\n   * a RestrictedContribution will be returned.\n   */\n  firstIssueContribution?: Maybe<CreatedIssueOrRestrictedContribution>;\n  /**\n   * The first pull request the user opened on GitHub. This will be null if that\n   * pull request was opened outside the collection's time range and\n   * ignoreTimeRange is not true. If the pull request is not visible but the user\n   * has opted to show private contributions, a RestrictedContribution will be returned.\n   */\n  firstPullRequestContribution?: Maybe<CreatedPullRequestOrRestrictedContribution>;\n  /**\n   * The first repository the user created on GitHub. This will be null if that\n   * first repository was created outside the collection's time range and\n   * ignoreTimeRange is false. If the repository is not visible, then a\n   * RestrictedContribution is returned.\n   */\n  firstRepositoryContribution?: Maybe<CreatedRepositoryOrRestrictedContribution>;\n  /** Does the user have any more activity in the timeline that occurred prior to the collection's time range? */\n  hasActivityInThePast: Scalars['Boolean'];\n  /** Determine if there are any contributions in this collection. */\n  hasAnyContributions: Scalars['Boolean'];\n  /**\n   * Determine if the user made any contributions in this time frame whose details\n   * are not visible because they were made in a private repository. Can only be\n   * true if the user enabled private contribution counts.\n   */\n  hasAnyRestrictedContributions: Scalars['Boolean'];\n  /** Whether or not the collector's time span is all within the same day. */\n  isSingleDay: Scalars['Boolean'];\n  /** A list of issues the user opened. */\n  issueContributions: CreatedIssueContributionConnection;\n  /** Issue contributions made by the user, grouped by repository. */\n  issueContributionsByRepository: Array<IssueContributionsByRepository>;\n  /**\n   * When the user signed up for GitHub. This will be null if that sign up date\n   * falls outside the collection's time range and ignoreTimeRange is false.\n   */\n  joinedGitHubContribution?: Maybe<JoinedGitHubContribution>;\n  /**\n   * The date of the most recent restricted contribution the user made in this time\n   * period. Can only be non-null when the user has enabled private contribution counts.\n   */\n  latestRestrictedContributionDate?: Maybe<Scalars['Date']>;\n  /**\n   * When this collection's time range does not include any activity from the user, use this\n   * to get a different collection from an earlier time range that does have activity.\n   */\n  mostRecentCollectionWithActivity?: Maybe<ContributionsCollection>;\n  /**\n   * Returns a different contributions collection from an earlier time range than this one\n   * that does not have any contributions.\n   */\n  mostRecentCollectionWithoutActivity?: Maybe<ContributionsCollection>;\n  /**\n   * The issue the user opened on GitHub that received the most comments in the specified\n   * time frame.\n   */\n  popularIssueContribution?: Maybe<CreatedIssueContribution>;\n  /**\n   * The pull request the user opened on GitHub that received the most comments in the\n   * specified time frame.\n   */\n  popularPullRequestContribution?: Maybe<CreatedPullRequestContribution>;\n  /** Pull request contributions made by the user. */\n  pullRequestContributions: CreatedPullRequestContributionConnection;\n  /** Pull request contributions made by the user, grouped by repository. */\n  pullRequestContributionsByRepository: Array<PullRequestContributionsByRepository>;\n  /**\n   * Pull request review contributions made by the user. Returns the most recently\n   * submitted review for each PR reviewed by the user.\n   */\n  pullRequestReviewContributions: CreatedPullRequestReviewContributionConnection;\n  /** Pull request review contributions made by the user, grouped by repository. */\n  pullRequestReviewContributionsByRepository: Array<PullRequestReviewContributionsByRepository>;\n  /** A list of repositories owned by the user that the user created in this time range. */\n  repositoryContributions: CreatedRepositoryContributionConnection;\n  /**\n   * A count of contributions made by the user that the viewer cannot access. Only\n   * non-zero when the user has chosen to share their private contribution counts.\n   */\n  restrictedContributionsCount: Scalars['Int'];\n  /** The beginning date and time of this collection. */\n  startedAt: Scalars['DateTime'];\n  /** How many commits were made by the user in this time span. */\n  totalCommitContributions: Scalars['Int'];\n  /** How many issues the user opened. */\n  totalIssueContributions: Scalars['Int'];\n  /** How many pull requests the user opened. */\n  totalPullRequestContributions: Scalars['Int'];\n  /** How many pull request reviews the user left. */\n  totalPullRequestReviewContributions: Scalars['Int'];\n  /** How many different repositories the user committed to. */\n  totalRepositoriesWithContributedCommits: Scalars['Int'];\n  /** How many different repositories the user opened issues in. */\n  totalRepositoriesWithContributedIssues: Scalars['Int'];\n  /** How many different repositories the user left pull request reviews in. */\n  totalRepositoriesWithContributedPullRequestReviews: Scalars['Int'];\n  /** How many different repositories the user opened pull requests in. */\n  totalRepositoriesWithContributedPullRequests: Scalars['Int'];\n  /** How many repositories the user created. */\n  totalRepositoryContributions: Scalars['Int'];\n  /** The user who made the contributions in this collection. */\n  user: User;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionCommitContributionsByRepositoryArgs = {\n  maxRepositories?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionIssueContributionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  excludeFirst?: InputMaybe<Scalars['Boolean']>;\n  excludePopular?: InputMaybe<Scalars['Boolean']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionIssueContributionsByRepositoryArgs = {\n  excludeFirst?: InputMaybe<Scalars['Boolean']>;\n  excludePopular?: InputMaybe<Scalars['Boolean']>;\n  maxRepositories?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestContributionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  excludeFirst?: InputMaybe<Scalars['Boolean']>;\n  excludePopular?: InputMaybe<Scalars['Boolean']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestContributionsByRepositoryArgs = {\n  excludeFirst?: InputMaybe<Scalars['Boolean']>;\n  excludePopular?: InputMaybe<Scalars['Boolean']>;\n  maxRepositories?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestReviewContributionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestReviewContributionsByRepositoryArgs = {\n  maxRepositories?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionRepositoryContributionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  excludeFirst?: InputMaybe<Scalars['Boolean']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalIssueContributionsArgs = {\n  excludeFirst?: InputMaybe<Scalars['Boolean']>;\n  excludePopular?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalPullRequestContributionsArgs = {\n  excludeFirst?: InputMaybe<Scalars['Boolean']>;\n  excludePopular?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalRepositoriesWithContributedIssuesArgs = {\n  excludeFirst?: InputMaybe<Scalars['Boolean']>;\n  excludePopular?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalRepositoriesWithContributedPullRequestsArgs = {\n  excludeFirst?: InputMaybe<Scalars['Boolean']>;\n  excludePopular?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalRepositoryContributionsArgs = {\n  excludeFirst?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Autogenerated input type of ConvertProjectCardNoteToIssue */\nexport type ConvertProjectCardNoteToIssueInput = {\n  /** The body of the newly created issue. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ProjectCard ID to convert. */\n  projectCardId: Scalars['ID'];\n  /** The ID of the repository to create the issue in. */\n  repositoryId: Scalars['ID'];\n  /** The title of the newly created issue. Defaults to the card's note text. */\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of ConvertProjectCardNoteToIssue */\nexport type ConvertProjectCardNoteToIssuePayload = {\n  __typename?: 'ConvertProjectCardNoteToIssuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated ProjectCard. */\n  projectCard?: Maybe<ProjectCard>;\n};\n\n/** Autogenerated input type of ConvertPullRequestToDraft */\nexport type ConvertPullRequestToDraftInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the pull request to convert to draft */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ConvertPullRequestToDraft */\nexport type ConvertPullRequestToDraftPayload = {\n  __typename?: 'ConvertPullRequestToDraftPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The pull request that is now a draft. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'convert_to_draft' event on a given pull request. */\nexport type ConvertToDraftEvent = Node & UniformResourceLocatable & {\n  __typename?: 'ConvertToDraftEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** The HTTP path for this convert to draft event. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this convert to draft event. */\n  url: Scalars['URI'];\n};\n\n/** Represents a 'converted_note_to_issue' event on a given issue or pull request. */\nexport type ConvertedNoteToIssueEvent = Node & {\n  __typename?: 'ConvertedNoteToIssueEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** Project referenced by event. */\n  project?: Maybe<Project>;\n  /** Project card referenced by this project event. */\n  projectCard?: Maybe<ProjectCard>;\n  /** Column name referenced by this project event. */\n  projectColumnName: Scalars['String'];\n};\n\n/** Represents a 'converted_to_discussion' event on a given issue. */\nexport type ConvertedToDiscussionEvent = Node & {\n  __typename?: 'ConvertedToDiscussionEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The discussion that the issue was converted into. */\n  discussion?: Maybe<Discussion>;\n  id: Scalars['ID'];\n};\n\n/** Autogenerated input type of CopyProjectV2 */\nexport type CopyProjectV2Input = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Include draft issues in the new project */\n  includeDraftIssues?: InputMaybe<Scalars['Boolean']>;\n  /** The owner ID of the new project. */\n  ownerId: Scalars['ID'];\n  /** The ID of the source Project to copy. */\n  projectId: Scalars['ID'];\n  /** The title of the project. */\n  title: Scalars['String'];\n};\n\n/** Autogenerated return type of CopyProjectV2 */\nexport type CopyProjectV2Payload = {\n  __typename?: 'CopyProjectV2Payload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The copied project. */\n  projectV2?: Maybe<ProjectV2>;\n};\n\n/** Autogenerated input type of CreateAttributionInvitation */\nexport type CreateAttributionInvitationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the owner scoping the reattributable data. */\n  ownerId: Scalars['ID'];\n  /** The Node ID of the account owning the data to reattribute. */\n  sourceId: Scalars['ID'];\n  /** The Node ID of the account which may claim the data. */\n  targetId: Scalars['ID'];\n};\n\n/** Autogenerated return type of CreateAttributionInvitation */\nexport type CreateAttributionInvitationPayload = {\n  __typename?: 'CreateAttributionInvitationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The owner scoping the reattributable data. */\n  owner?: Maybe<Organization>;\n  /** The account owning the data to reattribute. */\n  source?: Maybe<Claimable>;\n  /** The account which may claim the data. */\n  target?: Maybe<Claimable>;\n};\n\n/** Autogenerated input type of CreateBranchProtectionRule */\nexport type CreateBranchProtectionRuleInput = {\n  /** Can this branch be deleted. */\n  allowsDeletions?: InputMaybe<Scalars['Boolean']>;\n  /** Are force pushes allowed on this branch. */\n  allowsForcePushes?: InputMaybe<Scalars['Boolean']>;\n  /** Is branch creation a protected operation. */\n  blocksCreations?: InputMaybe<Scalars['Boolean']>;\n  /** A list of User, Team, or App IDs allowed to bypass force push targeting matching branches. */\n  bypassForcePushActorIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches. */\n  bypassPullRequestActorIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Will new commits pushed to matching branches dismiss pull request review approvals. */\n  dismissesStaleReviews?: InputMaybe<Scalars['Boolean']>;\n  /** Can admins overwrite branch protection. */\n  isAdminEnforced?: InputMaybe<Scalars['Boolean']>;\n  /**\n   * Whether users can pull changes from upstream when the branch is locked. Set to\n   * `true` to allow fork syncing. Set to `false` to prevent fork syncing.\n   */\n  lockAllowsFetchAndMerge?: InputMaybe<Scalars['Boolean']>;\n  /** Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. */\n  lockBranch?: InputMaybe<Scalars['Boolean']>;\n  /** The glob-like pattern used to determine matching branches. */\n  pattern: Scalars['String'];\n  /** A list of User, Team, or App IDs allowed to push to matching branches. */\n  pushActorIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The global relay id of the repository in which a new branch protection rule should be created in. */\n  repositoryId: Scalars['ID'];\n  /** Whether the most recent push must be approved by someone other than the person who pushed it */\n  requireLastPushApproval?: InputMaybe<Scalars['Boolean']>;\n  /** Number of approving reviews required to update matching branches. */\n  requiredApprovingReviewCount?: InputMaybe<Scalars['Int']>;\n  /** The list of required deployment environments */\n  requiredDeploymentEnvironments?: InputMaybe<Array<Scalars['String']>>;\n  /** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n  requiredStatusCheckContexts?: InputMaybe<Array<Scalars['String']>>;\n  /** The list of required status checks */\n  requiredStatusChecks?: InputMaybe<Array<RequiredStatusCheckInput>>;\n  /** Are approving reviews required to update matching branches. */\n  requiresApprovingReviews?: InputMaybe<Scalars['Boolean']>;\n  /** Are reviews from code owners required to update matching branches. */\n  requiresCodeOwnerReviews?: InputMaybe<Scalars['Boolean']>;\n  /** Are commits required to be signed. */\n  requiresCommitSignatures?: InputMaybe<Scalars['Boolean']>;\n  /** Are conversations required to be resolved before merging. */\n  requiresConversationResolution?: InputMaybe<Scalars['Boolean']>;\n  /** Are successful deployments required before merging. */\n  requiresDeployments?: InputMaybe<Scalars['Boolean']>;\n  /** Are merge commits prohibited from being pushed to this branch. */\n  requiresLinearHistory?: InputMaybe<Scalars['Boolean']>;\n  /** Are status checks required to update matching branches. */\n  requiresStatusChecks?: InputMaybe<Scalars['Boolean']>;\n  /** Are branches required to be up to date before merging. */\n  requiresStrictStatusChecks?: InputMaybe<Scalars['Boolean']>;\n  /** Is pushing to matching branches restricted. */\n  restrictsPushes?: InputMaybe<Scalars['Boolean']>;\n  /** Is dismissal of pull request reviews restricted. */\n  restrictsReviewDismissals?: InputMaybe<Scalars['Boolean']>;\n  /** A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches. */\n  reviewDismissalActorIds?: InputMaybe<Array<Scalars['ID']>>;\n};\n\n/** Autogenerated return type of CreateBranchProtectionRule */\nexport type CreateBranchProtectionRulePayload = {\n  __typename?: 'CreateBranchProtectionRulePayload';\n  /** The newly created BranchProtectionRule. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateCheckRun */\nexport type CreateCheckRunInput = {\n  /** Possible further actions the integrator can perform, which a user may trigger. */\n  actions?: InputMaybe<Array<CheckRunAction>>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The time that the check run finished. */\n  completedAt?: InputMaybe<Scalars['DateTime']>;\n  /** The final conclusion of the check. */\n  conclusion?: InputMaybe<CheckConclusionState>;\n  /** The URL of the integrator's site that has the full details of the check. */\n  detailsUrl?: InputMaybe<Scalars['URI']>;\n  /** A reference for the run on the integrator's system. */\n  externalId?: InputMaybe<Scalars['String']>;\n  /** The SHA of the head commit. */\n  headSha: Scalars['GitObjectID'];\n  /** The name of the check. */\n  name: Scalars['String'];\n  /** Descriptive details about the run. */\n  output?: InputMaybe<CheckRunOutput>;\n  /** The node ID of the repository. */\n  repositoryId: Scalars['ID'];\n  /** The time that the check run began. */\n  startedAt?: InputMaybe<Scalars['DateTime']>;\n  /** The current status. */\n  status?: InputMaybe<RequestableCheckStatusState>;\n};\n\n/** Autogenerated return type of CreateCheckRun */\nexport type CreateCheckRunPayload = {\n  __typename?: 'CreateCheckRunPayload';\n  /** The newly created check run. */\n  checkRun?: Maybe<CheckRun>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateCheckSuite */\nexport type CreateCheckSuiteInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The SHA of the head commit. */\n  headSha: Scalars['GitObjectID'];\n  /** The Node ID of the repository. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of CreateCheckSuite */\nexport type CreateCheckSuitePayload = {\n  __typename?: 'CreateCheckSuitePayload';\n  /** The newly created check suite. */\n  checkSuite?: Maybe<CheckSuite>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateCommitOnBranch */\nexport type CreateCommitOnBranchInput = {\n  /** The Ref to be updated.  Must be a branch. */\n  branch: CommittableBranch;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The git commit oid expected at the head of the branch prior to the commit */\n  expectedHeadOid: Scalars['GitObjectID'];\n  /** A description of changes to files in this commit. */\n  fileChanges?: InputMaybe<FileChanges>;\n  /** The commit message the be included with the commit. */\n  message: CommitMessage;\n};\n\n/** Autogenerated return type of CreateCommitOnBranch */\nexport type CreateCommitOnBranchPayload = {\n  __typename?: 'CreateCommitOnBranchPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new commit. */\n  commit?: Maybe<Commit>;\n  /** The ref which has been updated to point to the new commit. */\n  ref?: Maybe<Ref>;\n};\n\n/** Autogenerated input type of CreateDeployment */\nexport type CreateDeploymentInput = {\n  /** Attempt to automatically merge the default branch into the requested ref, defaults to true. */\n  autoMerge?: InputMaybe<Scalars['Boolean']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Short description of the deployment. */\n  description?: InputMaybe<Scalars['String']>;\n  /** Name for the target deployment environment. */\n  environment?: InputMaybe<Scalars['String']>;\n  /** JSON payload with extra information about the deployment. */\n  payload?: InputMaybe<Scalars['String']>;\n  /** The node ID of the ref to be deployed. */\n  refId: Scalars['ID'];\n  /** The node ID of the repository. */\n  repositoryId: Scalars['ID'];\n  /**\n   * The status contexts to verify against commit status checks. To bypass required\n   * contexts, pass an empty array. Defaults to all unique contexts.\n   */\n  requiredContexts?: InputMaybe<Array<Scalars['String']>>;\n  /** Specifies a task to execute. */\n  task?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDeployment */\nexport type CreateDeploymentPayload = {\n  __typename?: 'CreateDeploymentPayload';\n  /** True if the default branch has been auto-merged into the deployment ref. */\n  autoMerged?: Maybe<Scalars['Boolean']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new deployment. */\n  deployment?: Maybe<Deployment>;\n};\n\n/** Autogenerated input type of CreateDeploymentStatus */\nexport type CreateDeploymentStatusInput = {\n  /**\n   * Adds a new inactive status to all non-transient, non-production environment\n   * deployments with the same repository and environment name as the created\n   * status's deployment.\n   */\n  autoInactive?: InputMaybe<Scalars['Boolean']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The node ID of the deployment. */\n  deploymentId: Scalars['ID'];\n  /** A short description of the status. Maximum length of 140 characters. */\n  description?: InputMaybe<Scalars['String']>;\n  /** If provided, updates the environment of the deploy. Otherwise, does not modify the environment. */\n  environment?: InputMaybe<Scalars['String']>;\n  /** Sets the URL for accessing your environment. */\n  environmentUrl?: InputMaybe<Scalars['String']>;\n  /**\n   * The log URL to associate with this status.       This URL should contain\n   * output to keep the user updated while the task is running       or serve as\n   * historical information for what happened in the deployment.\n   */\n  logUrl?: InputMaybe<Scalars['String']>;\n  /** The state of the deployment. */\n  state: DeploymentStatusState;\n};\n\n/** Autogenerated return type of CreateDeploymentStatus */\nexport type CreateDeploymentStatusPayload = {\n  __typename?: 'CreateDeploymentStatusPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new deployment status. */\n  deploymentStatus?: Maybe<DeploymentStatus>;\n};\n\n/** Autogenerated input type of CreateDiscussion */\nexport type CreateDiscussionInput = {\n  /** The body of the discussion. */\n  body: Scalars['String'];\n  /** The id of the discussion category to associate with this discussion. */\n  categoryId: Scalars['ID'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The id of the repository on which to create the discussion. */\n  repositoryId: Scalars['ID'];\n  /** The title of the discussion. */\n  title: Scalars['String'];\n};\n\n/** Autogenerated return type of CreateDiscussion */\nexport type CreateDiscussionPayload = {\n  __typename?: 'CreateDiscussionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The discussion that was just created. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of CreateEnterpriseOrganization */\nexport type CreateEnterpriseOrganizationInput = {\n  /** The logins for the administrators of the new organization. */\n  adminLogins: Array<Scalars['String']>;\n  /** The email used for sending billing receipts. */\n  billingEmail: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise owning the new organization. */\n  enterpriseId: Scalars['ID'];\n  /** The login of the new organization. */\n  login: Scalars['String'];\n  /** The profile name of the new organization. */\n  profileName: Scalars['String'];\n};\n\n/** Autogenerated return type of CreateEnterpriseOrganization */\nexport type CreateEnterpriseOrganizationPayload = {\n  __typename?: 'CreateEnterpriseOrganizationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise that owns the created organization. */\n  enterprise?: Maybe<Enterprise>;\n  /** The organization that was created. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of CreateEnvironment */\nexport type CreateEnvironmentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The name of the environment. */\n  name: Scalars['String'];\n  /** The node ID of the repository. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of CreateEnvironment */\nexport type CreateEnvironmentPayload = {\n  __typename?: 'CreateEnvironmentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new or existing environment. */\n  environment?: Maybe<Environment>;\n};\n\n/** Autogenerated input type of CreateIpAllowListEntry */\nexport type CreateIpAllowListEntryInput = {\n  /** An IP address or range of addresses in CIDR notation. */\n  allowListValue: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Whether the IP allow list entry is active when an IP allow list is enabled. */\n  isActive: Scalars['Boolean'];\n  /** An optional name for the IP allow list entry. */\n  name?: InputMaybe<Scalars['String']>;\n  /** The ID of the owner for which to create the new IP allow list entry. */\n  ownerId: Scalars['ID'];\n};\n\n/** Autogenerated return type of CreateIpAllowListEntry */\nexport type CreateIpAllowListEntryPayload = {\n  __typename?: 'CreateIpAllowListEntryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The IP allow list entry that was created. */\n  ipAllowListEntry?: Maybe<IpAllowListEntry>;\n};\n\n/** Autogenerated input type of CreateIssue */\nexport type CreateIssueInput = {\n  /** The Node ID for the user assignee for this issue. */\n  assigneeIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The body for the issue description. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The name of an issue template in the repository, assigns labels and assignees from the template to the issue */\n  issueTemplate?: InputMaybe<Scalars['String']>;\n  /** An array of Node IDs of labels for this issue. */\n  labelIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The Node ID of the milestone for this issue. */\n  milestoneId?: InputMaybe<Scalars['ID']>;\n  /** An array of Node IDs for projects associated with this issue. */\n  projectIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars['ID'];\n  /** The title for the issue. */\n  title: Scalars['String'];\n};\n\n/** Autogenerated return type of CreateIssue */\nexport type CreateIssuePayload = {\n  __typename?: 'CreateIssuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new issue. */\n  issue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of CreateLabel */\nexport type CreateLabelInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** A 6 character hex code, without the leading #, identifying the color of the label. */\n  color: Scalars['String'];\n  /** A brief description of the label, such as its purpose. */\n  description?: InputMaybe<Scalars['String']>;\n  /** The name of the label. */\n  name: Scalars['String'];\n  /** The Node ID of the repository. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of CreateLabel */\nexport type CreateLabelPayload = {\n  __typename?: 'CreateLabelPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new label. */\n  label?: Maybe<Label>;\n};\n\n/** Autogenerated input type of CreateLinkedBranch */\nexport type CreateLinkedBranchInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the issue to link to. */\n  issueId: Scalars['ID'];\n  /** The name of the new branch. Defaults to issue number and title. */\n  name?: InputMaybe<Scalars['String']>;\n  /** The commit SHA to base the new branch on. */\n  oid: Scalars['GitObjectID'];\n  /** ID of the repository to create the branch in. Defaults to the issue repository. */\n  repositoryId?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of CreateLinkedBranch */\nexport type CreateLinkedBranchPayload = {\n  __typename?: 'CreateLinkedBranchPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new branch issue reference. */\n  linkedBranch?: Maybe<LinkedBranch>;\n};\n\n/** Autogenerated input type of CreateMigrationSource */\nexport type CreateMigrationSourceInput = {\n  /** The migration source access token. */\n  accessToken?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The GitHub personal access token of the user importing to the target repository. */\n  githubPat?: InputMaybe<Scalars['String']>;\n  /** The migration source name. */\n  name: Scalars['String'];\n  /** The ID of the organization that will own the migration source. */\n  ownerId: Scalars['ID'];\n  /** The migration source type. */\n  type: MigrationSourceType;\n  /** The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`. */\n  url?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateMigrationSource */\nexport type CreateMigrationSourcePayload = {\n  __typename?: 'CreateMigrationSourcePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The created migration source. */\n  migrationSource?: Maybe<MigrationSource>;\n};\n\n/** Autogenerated input type of CreateProject */\nexport type CreateProjectInput = {\n  /** The description of project. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The name of project. */\n  name: Scalars['String'];\n  /** The owner ID to create the project under. */\n  ownerId: Scalars['ID'];\n  /** A list of repository IDs to create as linked repositories for the project */\n  repositoryIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The name of the GitHub-provided template. */\n  template?: InputMaybe<ProjectTemplate>;\n};\n\n/** Autogenerated return type of CreateProject */\nexport type CreateProjectPayload = {\n  __typename?: 'CreateProjectPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new project. */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of CreateProjectV2Field */\nexport type CreateProjectV2FieldInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The data type of the field. */\n  dataType: ProjectV2CustomFieldType;\n  /** The name of the field. */\n  name: Scalars['String'];\n  /** The ID of the Project to create the field in. */\n  projectId: Scalars['ID'];\n  /** Options for a single select field. At least one value is required if data_type is SINGLE_SELECT */\n  singleSelectOptions?: InputMaybe<Array<ProjectV2SingleSelectFieldOptionInput>>;\n};\n\n/** Autogenerated return type of CreateProjectV2Field */\nexport type CreateProjectV2FieldPayload = {\n  __typename?: 'CreateProjectV2FieldPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new field. */\n  projectV2Field?: Maybe<ProjectV2FieldConfiguration>;\n};\n\n/** Autogenerated input type of CreateProjectV2 */\nexport type CreateProjectV2Input = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The owner ID to create the project under. */\n  ownerId: Scalars['ID'];\n  /** The repository to link the project to. */\n  repositoryId?: InputMaybe<Scalars['ID']>;\n  /** The team to link the project to. The team will be granted read permissions. */\n  teamId?: InputMaybe<Scalars['ID']>;\n  /** The title of the project. */\n  title: Scalars['String'];\n};\n\n/** Autogenerated return type of CreateProjectV2 */\nexport type CreateProjectV2Payload = {\n  __typename?: 'CreateProjectV2Payload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new project. */\n  projectV2?: Maybe<ProjectV2>;\n};\n\n/** Autogenerated input type of CreatePullRequest */\nexport type CreatePullRequestInput = {\n  /**\n   * The name of the branch you want your changes pulled into. This should be an existing branch\n   * on the current repository. You cannot update the base branch on a pull request to point\n   * to another repository.\n   */\n  baseRefName: Scalars['String'];\n  /** The contents of the pull request. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Indicates whether this pull request should be a draft. */\n  draft?: InputMaybe<Scalars['Boolean']>;\n  /**\n   * The name of the branch where your changes are implemented. For cross-repository pull requests\n   * in the same network, namespace `head_ref_name` with a user like this: `username:branch`.\n   */\n  headRefName: Scalars['String'];\n  /** The Node ID of the head repository. */\n  headRepositoryId?: InputMaybe<Scalars['ID']>;\n  /** Indicates whether maintainers can modify the pull request. */\n  maintainerCanModify?: InputMaybe<Scalars['Boolean']>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars['ID'];\n  /** The title of the pull request. */\n  title: Scalars['String'];\n};\n\n/** Autogenerated return type of CreatePullRequest */\nexport type CreatePullRequestPayload = {\n  __typename?: 'CreatePullRequestPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new pull request. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of CreateRef */\nexport type CreateRefInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The fully qualified name of the new Ref (ie: `refs/heads/my_new_branch`). */\n  name: Scalars['String'];\n  /** The GitObjectID that the new Ref shall target. Must point to a commit. */\n  oid: Scalars['GitObjectID'];\n  /** The Node ID of the Repository to create the Ref in. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of CreateRef */\nexport type CreateRefPayload = {\n  __typename?: 'CreateRefPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The newly created ref. */\n  ref?: Maybe<Ref>;\n};\n\n/** Autogenerated input type of CreateRepository */\nexport type CreateRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** A short description of the new repository. */\n  description?: InputMaybe<Scalars['String']>;\n  /** Indicates if the repository should have the issues feature enabled. */\n  hasIssuesEnabled?: InputMaybe<Scalars['Boolean']>;\n  /** Indicates if the repository should have the wiki feature enabled. */\n  hasWikiEnabled?: InputMaybe<Scalars['Boolean']>;\n  /** The URL for a web page about this repository. */\n  homepageUrl?: InputMaybe<Scalars['URI']>;\n  /** The name of the new repository. */\n  name: Scalars['String'];\n  /** The ID of the owner for the new repository. */\n  ownerId?: InputMaybe<Scalars['ID']>;\n  /**\n   * When an organization is specified as the owner, this ID identifies the team\n   * that should be granted access to the new repository.\n   */\n  teamId?: InputMaybe<Scalars['ID']>;\n  /**\n   * Whether this repository should be marked as a template such that anyone who\n   * can access it can create new repositories with the same files and directory structure.\n   */\n  template?: InputMaybe<Scalars['Boolean']>;\n  /** Indicates the repository's visibility level. */\n  visibility: RepositoryVisibility;\n};\n\n/** Autogenerated return type of CreateRepository */\nexport type CreateRepositoryPayload = {\n  __typename?: 'CreateRepositoryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of CreateRepositoryRuleset */\nexport type CreateRepositoryRulesetInput = {\n  /** A list of Team or App IDs allowed to bypass rules in this ruleset. */\n  bypassActorIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The bypass mode for this ruleset */\n  bypassMode?: InputMaybe<RuleBypassMode>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The set of conditions for this ruleset */\n  conditions: RepositoryRuleConditionsInput;\n  /** The enforcement level for this ruleset */\n  enforcement: RuleEnforcement;\n  /** The name of the ruleset. */\n  name: Scalars['String'];\n  /** The list of rules for this ruleset */\n  rules?: InputMaybe<Array<RepositoryRuleInput>>;\n  /** The global relay id of the source in which a new ruleset should be created in. */\n  sourceId: Scalars['ID'];\n  /** The target of the ruleset. */\n  target?: InputMaybe<RepositoryRulesetTarget>;\n};\n\n/** Autogenerated return type of CreateRepositoryRuleset */\nexport type CreateRepositoryRulesetPayload = {\n  __typename?: 'CreateRepositoryRulesetPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The newly created Ruleset. */\n  ruleset?: Maybe<RepositoryRuleset>;\n};\n\n/** Autogenerated input type of CreateSponsorsListing */\nexport type CreateSponsorsListingInput = {\n  /**\n   * The country or region where the sponsorable's bank account is located.\n   * Required if fiscalHostLogin is not specified, ignored when fiscalHostLogin is specified.\n   */\n  billingCountryOrRegionCode?: InputMaybe<SponsorsCountryOrRegionCode>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /**\n   * The email address we should use to contact you about the GitHub Sponsors\n   * profile being created. This will not be shared publicly. Must be a verified\n   * email address already on your GitHub account. Only relevant when the\n   * sponsorable is yourself. Defaults to your primary email address on file if omitted.\n   */\n  contactEmail?: InputMaybe<Scalars['String']>;\n  /**\n   * The username of the supported fiscal host's GitHub organization, if you want\n   * to receive sponsorship payouts through a fiscal host rather than directly to a\n   * bank account. For example, 'Open-Source-Collective' for Open Source Collective\n   * or 'numfocus' for numFOCUS. Case insensitive. See https://docs.github.com/sponsors/receiving-sponsorships-through-github-sponsors/using-a-fiscal-host-to-receive-github-sponsors-payouts\n   * for more information.\n   */\n  fiscalHostLogin?: InputMaybe<Scalars['String']>;\n  /**\n   * The URL for your profile page on the fiscal host's website, e.g.,\n   * https://opencollective.com/babel or https://numfocus.org/project/bokeh.\n   * Required if fiscalHostLogin is specified.\n   */\n  fiscallyHostedProjectProfileUrl?: InputMaybe<Scalars['String']>;\n  /**\n   * Provide an introduction to serve as the main focus that appears on your GitHub\n   * Sponsors profile. It's a great opportunity to help potential sponsors learn\n   * more about you, your work, and why their sponsorship is important to you.\n   * GitHub-flavored Markdown is supported.\n   */\n  fullDescription?: InputMaybe<Scalars['String']>;\n  /**\n   * The country or region where the sponsorable resides. This is for tax purposes.\n   * Required if the sponsorable is yourself, ignored when sponsorableLogin\n   * specifies an organization.\n   */\n  residenceCountryOrRegionCode?: InputMaybe<SponsorsCountryOrRegionCode>;\n  /**\n   * The username of the organization to create a GitHub Sponsors profile for, if\n   * desired. Defaults to creating a GitHub Sponsors profile for the authenticated\n   * user if omitted.\n   */\n  sponsorableLogin?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSponsorsListing */\nexport type CreateSponsorsListingPayload = {\n  __typename?: 'CreateSponsorsListingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new GitHub Sponsors profile. */\n  sponsorsListing?: Maybe<SponsorsListing>;\n};\n\n/** Autogenerated input type of CreateSponsorsTier */\nexport type CreateSponsorsTierInput = {\n  /** The value of the new tier in US dollars. Valid values: 1-12000. */\n  amount: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** A description of what this tier is, what perks sponsors might receive, what a sponsorship at this tier means for you, etc. */\n  description: Scalars['String'];\n  /** Whether sponsorships using this tier should happen monthly/yearly or just once. */\n  isRecurring?: InputMaybe<Scalars['Boolean']>;\n  /**\n   * Whether to make the tier available immediately for sponsors to choose.\n   * Defaults to creating a draft tier that will not be publicly visible.\n   */\n  publish?: InputMaybe<Scalars['Boolean']>;\n  /**\n   * Optional ID of the private repository that sponsors at this tier should gain\n   * read-only access to. Must be owned by an organization.\n   */\n  repositoryId?: InputMaybe<Scalars['ID']>;\n  /**\n   * Optional name of the private repository that sponsors at this tier should gain\n   * read-only access to. Must be owned by an organization. Necessary if\n   * repositoryOwnerLogin is given. Will be ignored if repositoryId is given.\n   */\n  repositoryName?: InputMaybe<Scalars['String']>;\n  /**\n   * Optional login of the organization owner of the private repository that\n   * sponsors at this tier should gain read-only access to. Necessary if\n   * repositoryName is given. Will be ignored if repositoryId is given.\n   */\n  repositoryOwnerLogin?: InputMaybe<Scalars['String']>;\n  /**\n   * The ID of the user or organization who owns the GitHub Sponsors profile.\n   * Defaults to the current user if omitted and sponsorableLogin is not given.\n   */\n  sponsorableId?: InputMaybe<Scalars['ID']>;\n  /**\n   * The username of the user or organization who owns the GitHub Sponsors profile.\n   * Defaults to the current user if omitted and sponsorableId is not given.\n   */\n  sponsorableLogin?: InputMaybe<Scalars['String']>;\n  /** Optional message new sponsors at this tier will receive. */\n  welcomeMessage?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSponsorsTier */\nexport type CreateSponsorsTierPayload = {\n  __typename?: 'CreateSponsorsTierPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new tier. */\n  sponsorsTier?: Maybe<SponsorsTier>;\n};\n\n/** Autogenerated input type of CreateSponsorship */\nexport type CreateSponsorshipInput = {\n  /** The amount to pay to the sponsorable in US dollars. Required if a tierId is not specified. Valid values: 1-12000. */\n  amount?: InputMaybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Whether the sponsorship should happen monthly/yearly or just this one time. Required if a tierId is not specified. */\n  isRecurring?: InputMaybe<Scalars['Boolean']>;\n  /**\n   * Specify whether others should be able to see that the sponsor is sponsoring\n   * the sponsorable. Public visibility still does not reveal which tier is used.\n   */\n  privacyLevel?: InputMaybe<SponsorshipPrivacy>;\n  /** Whether the sponsor should receive email updates from the sponsorable. */\n  receiveEmails?: InputMaybe<Scalars['Boolean']>;\n  /**\n   * The ID of the user or organization who is acting as the sponsor, paying for\n   * the sponsorship. Required if sponsorLogin is not given.\n   */\n  sponsorId?: InputMaybe<Scalars['ID']>;\n  /**\n   * The username of the user or organization who is acting as the sponsor, paying\n   * for the sponsorship. Required if sponsorId is not given.\n   */\n  sponsorLogin?: InputMaybe<Scalars['String']>;\n  /** The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given. */\n  sponsorableId?: InputMaybe<Scalars['ID']>;\n  /** The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given. */\n  sponsorableLogin?: InputMaybe<Scalars['String']>;\n  /** The ID of one of sponsorable's existing tiers to sponsor at. Required if amount is not specified. */\n  tierId?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of CreateSponsorship */\nexport type CreateSponsorshipPayload = {\n  __typename?: 'CreateSponsorshipPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The sponsorship that was started. */\n  sponsorship?: Maybe<Sponsorship>;\n};\n\n/** Autogenerated input type of CreateSponsorships */\nexport type CreateSponsorshipsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /**\n   * Specify whether others should be able to see that the sponsor is sponsoring\n   * the sponsorables. Public visibility still does not reveal the dollar value of\n   * the sponsorship.\n   */\n  privacyLevel?: InputMaybe<SponsorshipPrivacy>;\n  /** Whether the sponsor should receive email updates from the sponsorables. */\n  receiveEmails?: InputMaybe<Scalars['Boolean']>;\n  /** The username of the user or organization who is acting as the sponsor, paying for the sponsorships. */\n  sponsorLogin: Scalars['String'];\n  /** The list of maintainers to sponsor and for how much apiece. */\n  sponsorships: Array<BulkSponsorship>;\n};\n\n/** Autogenerated return type of CreateSponsorships */\nexport type CreateSponsorshipsPayload = {\n  __typename?: 'CreateSponsorshipsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The users and organizations who received a sponsorship. */\n  sponsorables?: Maybe<Array<Sponsorable>>;\n};\n\n/** Autogenerated input type of CreateTeamDiscussionComment */\nexport type CreateTeamDiscussionCommentInput = {\n  /** The content of the comment. */\n  body: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the discussion to which the comment belongs. */\n  discussionId: Scalars['ID'];\n};\n\n/** Autogenerated return type of CreateTeamDiscussionComment */\nexport type CreateTeamDiscussionCommentPayload = {\n  __typename?: 'CreateTeamDiscussionCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new comment. */\n  teamDiscussionComment?: Maybe<TeamDiscussionComment>;\n};\n\n/** Autogenerated input type of CreateTeamDiscussion */\nexport type CreateTeamDiscussionInput = {\n  /** The content of the discussion. */\n  body: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /**\n   * If true, restricts the visibility of this discussion to team members and\n   * organization admins. If false or not specified, allows any organization member\n   * to view this discussion.\n   */\n  private?: InputMaybe<Scalars['Boolean']>;\n  /** The ID of the team to which the discussion belongs. */\n  teamId: Scalars['ID'];\n  /** The title of the discussion. */\n  title: Scalars['String'];\n};\n\n/** Autogenerated return type of CreateTeamDiscussion */\nexport type CreateTeamDiscussionPayload = {\n  __typename?: 'CreateTeamDiscussionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new discussion. */\n  teamDiscussion?: Maybe<TeamDiscussion>;\n};\n\n/** Represents the contribution a user made by committing to a repository. */\nexport type CreatedCommitContribution = Contribution & {\n  __typename?: 'CreatedCommitContribution';\n  /** How many commits were made on this day to this repository by the user. */\n  commitCount: Scalars['Int'];\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   */\n  isRestricted: Scalars['Boolean'];\n  /** When this contribution was made. */\n  occurredAt: Scalars['DateTime'];\n  /** The repository the user made a commit in. */\n  repository: Repository;\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this contribution. */\n  url: Scalars['URI'];\n  /** The user who made this contribution. */\n  user: User;\n};\n\n/** The connection type for CreatedCommitContribution. */\nexport type CreatedCommitContributionConnection = {\n  __typename?: 'CreatedCommitContributionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CreatedCommitContributionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CreatedCommitContribution>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of commits across days and repositories in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type CreatedCommitContributionEdge = {\n  __typename?: 'CreatedCommitContributionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<CreatedCommitContribution>;\n};\n\n/** Represents the contribution a user made on GitHub by opening an issue. */\nexport type CreatedIssueContribution = Contribution & {\n  __typename?: 'CreatedIssueContribution';\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   */\n  isRestricted: Scalars['Boolean'];\n  /** The issue that was opened. */\n  issue: Issue;\n  /** When this contribution was made. */\n  occurredAt: Scalars['DateTime'];\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this contribution. */\n  url: Scalars['URI'];\n  /** The user who made this contribution. */\n  user: User;\n};\n\n/** The connection type for CreatedIssueContribution. */\nexport type CreatedIssueContributionConnection = {\n  __typename?: 'CreatedIssueContributionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CreatedIssueContributionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CreatedIssueContribution>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type CreatedIssueContributionEdge = {\n  __typename?: 'CreatedIssueContributionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<CreatedIssueContribution>;\n};\n\n/** Represents either a issue the viewer can access or a restricted contribution. */\nexport type CreatedIssueOrRestrictedContribution = CreatedIssueContribution | RestrictedContribution;\n\n/** Represents the contribution a user made on GitHub by opening a pull request. */\nexport type CreatedPullRequestContribution = Contribution & {\n  __typename?: 'CreatedPullRequestContribution';\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   */\n  isRestricted: Scalars['Boolean'];\n  /** When this contribution was made. */\n  occurredAt: Scalars['DateTime'];\n  /** The pull request that was opened. */\n  pullRequest: PullRequest;\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this contribution. */\n  url: Scalars['URI'];\n  /** The user who made this contribution. */\n  user: User;\n};\n\n/** The connection type for CreatedPullRequestContribution. */\nexport type CreatedPullRequestContributionConnection = {\n  __typename?: 'CreatedPullRequestContributionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CreatedPullRequestContributionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CreatedPullRequestContribution>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type CreatedPullRequestContributionEdge = {\n  __typename?: 'CreatedPullRequestContributionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<CreatedPullRequestContribution>;\n};\n\n/** Represents either a pull request the viewer can access or a restricted contribution. */\nexport type CreatedPullRequestOrRestrictedContribution = CreatedPullRequestContribution | RestrictedContribution;\n\n/** Represents the contribution a user made by leaving a review on a pull request. */\nexport type CreatedPullRequestReviewContribution = Contribution & {\n  __typename?: 'CreatedPullRequestReviewContribution';\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   */\n  isRestricted: Scalars['Boolean'];\n  /** When this contribution was made. */\n  occurredAt: Scalars['DateTime'];\n  /** The pull request the user reviewed. */\n  pullRequest: PullRequest;\n  /** The review the user left on the pull request. */\n  pullRequestReview: PullRequestReview;\n  /** The repository containing the pull request that the user reviewed. */\n  repository: Repository;\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this contribution. */\n  url: Scalars['URI'];\n  /** The user who made this contribution. */\n  user: User;\n};\n\n/** The connection type for CreatedPullRequestReviewContribution. */\nexport type CreatedPullRequestReviewContributionConnection = {\n  __typename?: 'CreatedPullRequestReviewContributionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CreatedPullRequestReviewContributionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CreatedPullRequestReviewContribution>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type CreatedPullRequestReviewContributionEdge = {\n  __typename?: 'CreatedPullRequestReviewContributionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<CreatedPullRequestReviewContribution>;\n};\n\n/** Represents the contribution a user made on GitHub by creating a repository. */\nexport type CreatedRepositoryContribution = Contribution & {\n  __typename?: 'CreatedRepositoryContribution';\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   */\n  isRestricted: Scalars['Boolean'];\n  /** When this contribution was made. */\n  occurredAt: Scalars['DateTime'];\n  /** The repository that was created. */\n  repository: Repository;\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this contribution. */\n  url: Scalars['URI'];\n  /** The user who made this contribution. */\n  user: User;\n};\n\n/** The connection type for CreatedRepositoryContribution. */\nexport type CreatedRepositoryContributionConnection = {\n  __typename?: 'CreatedRepositoryContributionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<CreatedRepositoryContributionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<CreatedRepositoryContribution>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type CreatedRepositoryContributionEdge = {\n  __typename?: 'CreatedRepositoryContributionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<CreatedRepositoryContribution>;\n};\n\n/** Represents either a repository the viewer can access or a restricted contribution. */\nexport type CreatedRepositoryOrRestrictedContribution = CreatedRepositoryContribution | RestrictedContribution;\n\n/** Represents a mention made by one issue or pull request to another. */\nexport type CrossReferencedEvent = Node & UniformResourceLocatable & {\n  __typename?: 'CrossReferencedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Reference originated in a different repository. */\n  isCrossRepository: Scalars['Boolean'];\n  /** Identifies when the reference was made. */\n  referencedAt: Scalars['DateTime'];\n  /** The HTTP path for this pull request. */\n  resourcePath: Scalars['URI'];\n  /** Issue or pull request that made the reference. */\n  source: ReferencedSubject;\n  /** Issue or pull request to which the reference was made. */\n  target: ReferencedSubject;\n  /** The HTTP URL for this pull request. */\n  url: Scalars['URI'];\n  /** Checks if the target will be closed when the source is merged. */\n  willCloseTarget: Scalars['Boolean'];\n};\n\n/** Autogenerated input type of DeclineTopicSuggestion */\nexport type DeclineTopicSuggestionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The name of the suggested topic. */\n  name: Scalars['String'];\n  /** The reason why the suggested topic is declined. */\n  reason: TopicSuggestionDeclineReason;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeclineTopicSuggestion */\nexport type DeclineTopicSuggestionPayload = {\n  __typename?: 'DeclineTopicSuggestionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The declined topic. */\n  topic?: Maybe<Topic>;\n};\n\n/** The possible base permissions for repositories. */\nexport enum DefaultRepositoryPermissionField {\n  /** Can read, write, and administrate repos by default */\n  Admin = 'ADMIN',\n  /** No access */\n  None = 'NONE',\n  /** Can read repos by default */\n  Read = 'READ',\n  /** Can read and write repos by default */\n  Write = 'WRITE'\n}\n\n/** Entities that can be deleted. */\nexport type Deletable = {\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n};\n\n/** Autogenerated input type of DeleteBranchProtectionRule */\nexport type DeleteBranchProtectionRuleInput = {\n  /** The global relay id of the branch protection rule to be deleted. */\n  branchProtectionRuleId: Scalars['ID'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteBranchProtectionRule */\nexport type DeleteBranchProtectionRulePayload = {\n  __typename?: 'DeleteBranchProtectionRulePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of DeleteDeployment */\nexport type DeleteDeploymentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the deployment to be deleted. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteDeployment */\nexport type DeleteDeploymentPayload = {\n  __typename?: 'DeleteDeploymentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of DeleteDiscussionComment */\nexport type DeleteDiscussionCommentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node id of the discussion comment to delete. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteDiscussionComment */\nexport type DeleteDiscussionCommentPayload = {\n  __typename?: 'DeleteDiscussionCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The discussion comment that was just deleted. */\n  comment?: Maybe<DiscussionComment>;\n};\n\n/** Autogenerated input type of DeleteDiscussion */\nexport type DeleteDiscussionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The id of the discussion to delete. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteDiscussion */\nexport type DeleteDiscussionPayload = {\n  __typename?: 'DeleteDiscussionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The discussion that was just deleted. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of DeleteEnvironment */\nexport type DeleteEnvironmentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the environment to be deleted. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteEnvironment */\nexport type DeleteEnvironmentPayload = {\n  __typename?: 'DeleteEnvironmentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of DeleteIpAllowListEntry */\nexport type DeleteIpAllowListEntryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the IP allow list entry to delete. */\n  ipAllowListEntryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteIpAllowListEntry */\nexport type DeleteIpAllowListEntryPayload = {\n  __typename?: 'DeleteIpAllowListEntryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The IP allow list entry that was deleted. */\n  ipAllowListEntry?: Maybe<IpAllowListEntry>;\n};\n\n/** Autogenerated input type of DeleteIssueComment */\nexport type DeleteIssueCommentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the comment to delete. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteIssueComment */\nexport type DeleteIssueCommentPayload = {\n  __typename?: 'DeleteIssueCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of DeleteIssue */\nexport type DeleteIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the issue to delete. */\n  issueId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteIssue */\nexport type DeleteIssuePayload = {\n  __typename?: 'DeleteIssuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The repository the issue belonged to */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of DeleteLabel */\nexport type DeleteLabelInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the label to be deleted. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteLabel */\nexport type DeleteLabelPayload = {\n  __typename?: 'DeleteLabelPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of DeleteLinkedBranch */\nexport type DeleteLinkedBranchInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the linked branch */\n  linkedBranchId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteLinkedBranch */\nexport type DeleteLinkedBranchPayload = {\n  __typename?: 'DeleteLinkedBranchPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The issue the linked branch was unlinked from. */\n  issue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of DeletePackageVersion */\nexport type DeletePackageVersionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the package version to be deleted. */\n  packageVersionId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeletePackageVersion */\nexport type DeletePackageVersionPayload = {\n  __typename?: 'DeletePackageVersionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** Whether or not the operation succeeded. */\n  success?: Maybe<Scalars['Boolean']>;\n};\n\n/** Autogenerated input type of DeleteProjectCard */\nexport type DeleteProjectCardInput = {\n  /** The id of the card to delete. */\n  cardId: Scalars['ID'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteProjectCard */\nexport type DeleteProjectCardPayload = {\n  __typename?: 'DeleteProjectCardPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The column the deleted card was in. */\n  column?: Maybe<ProjectColumn>;\n  /** The deleted card ID. */\n  deletedCardId?: Maybe<Scalars['ID']>;\n};\n\n/** Autogenerated input type of DeleteProjectColumn */\nexport type DeleteProjectColumnInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The id of the column to delete. */\n  columnId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteProjectColumn */\nexport type DeleteProjectColumnPayload = {\n  __typename?: 'DeleteProjectColumnPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The deleted column ID. */\n  deletedColumnId?: Maybe<Scalars['ID']>;\n  /** The project the deleted column was in. */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of DeleteProject */\nexport type DeleteProjectInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Project ID to update. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteProject */\nexport type DeleteProjectPayload = {\n  __typename?: 'DeleteProjectPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The repository or organization the project was removed from. */\n  owner?: Maybe<ProjectOwner>;\n};\n\n/** Autogenerated input type of DeleteProjectV2Field */\nexport type DeleteProjectV2FieldInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the field to delete. */\n  fieldId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteProjectV2Field */\nexport type DeleteProjectV2FieldPayload = {\n  __typename?: 'DeleteProjectV2FieldPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The deleted field. */\n  projectV2Field?: Maybe<ProjectV2FieldConfiguration>;\n};\n\n/** Autogenerated input type of DeleteProjectV2 */\nexport type DeleteProjectV2Input = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Project to delete. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated input type of DeleteProjectV2Item */\nexport type DeleteProjectV2ItemInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the item to be removed. */\n  itemId: Scalars['ID'];\n  /** The ID of the Project from which the item should be removed. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteProjectV2Item */\nexport type DeleteProjectV2ItemPayload = {\n  __typename?: 'DeleteProjectV2ItemPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The ID of the deleted item. */\n  deletedItemId?: Maybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of DeleteProjectV2 */\nexport type DeleteProjectV2Payload = {\n  __typename?: 'DeleteProjectV2Payload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The deleted Project. */\n  projectV2?: Maybe<ProjectV2>;\n};\n\n/** Autogenerated input type of DeleteProjectV2Workflow */\nexport type DeleteProjectV2WorkflowInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the workflow to be removed. */\n  workflowId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteProjectV2Workflow */\nexport type DeleteProjectV2WorkflowPayload = {\n  __typename?: 'DeleteProjectV2WorkflowPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The ID of the deleted workflow. */\n  deletedWorkflowId?: Maybe<Scalars['ID']>;\n  /** The project the deleted workflow was in. */\n  projectV2?: Maybe<ProjectV2>;\n};\n\n/** Autogenerated input type of DeletePullRequestReviewComment */\nexport type DeletePullRequestReviewCommentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the comment to delete. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeletePullRequestReviewComment */\nexport type DeletePullRequestReviewCommentPayload = {\n  __typename?: 'DeletePullRequestReviewCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The pull request review the deleted comment belonged to. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n  /** The deleted pull request review comment. */\n  pullRequestReviewComment?: Maybe<PullRequestReviewComment>;\n};\n\n/** Autogenerated input type of DeletePullRequestReview */\nexport type DeletePullRequestReviewInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the pull request review to delete. */\n  pullRequestReviewId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeletePullRequestReview */\nexport type DeletePullRequestReviewPayload = {\n  __typename?: 'DeletePullRequestReviewPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The deleted pull request review. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** Autogenerated input type of DeleteRef */\nexport type DeleteRefInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the Ref to be deleted. */\n  refId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteRef */\nexport type DeleteRefPayload = {\n  __typename?: 'DeleteRefPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of DeleteRepositoryRuleset */\nexport type DeleteRepositoryRulesetInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The global relay id of the repository ruleset to be deleted. */\n  repositoryRulesetId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteRepositoryRuleset */\nexport type DeleteRepositoryRulesetPayload = {\n  __typename?: 'DeleteRepositoryRulesetPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of DeleteTeamDiscussionComment */\nexport type DeleteTeamDiscussionCommentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the comment to delete. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteTeamDiscussionComment */\nexport type DeleteTeamDiscussionCommentPayload = {\n  __typename?: 'DeleteTeamDiscussionCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of DeleteTeamDiscussion */\nexport type DeleteTeamDiscussionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The discussion ID to delete. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteTeamDiscussion */\nexport type DeleteTeamDiscussionPayload = {\n  __typename?: 'DeleteTeamDiscussionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of DeleteVerifiableDomain */\nexport type DeleteVerifiableDomainInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the verifiable domain to delete. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DeleteVerifiableDomain */\nexport type DeleteVerifiableDomainPayload = {\n  __typename?: 'DeleteVerifiableDomainPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The owning account from which the domain was deleted. */\n  owner?: Maybe<VerifiableDomainOwner>;\n};\n\n/** Represents a 'demilestoned' event on a given issue or pull request. */\nexport type DemilestonedEvent = Node & {\n  __typename?: 'DemilestonedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Identifies the milestone title associated with the 'demilestoned' event. */\n  milestoneTitle: Scalars['String'];\n  /** Object referenced by event. */\n  subject: MilestoneItem;\n};\n\n/** A Dependabot Update for a dependency in a repository */\nexport type DependabotUpdate = RepositoryNode & {\n  __typename?: 'DependabotUpdate';\n  /** The error from a dependency update */\n  error?: Maybe<DependabotUpdateError>;\n  /** The associated pull request */\n  pullRequest?: Maybe<PullRequest>;\n  /** The repository associated with this node. */\n  repository: Repository;\n};\n\n/** An error produced from a Dependabot Update */\nexport type DependabotUpdateError = {\n  __typename?: 'DependabotUpdateError';\n  /** The body of the error */\n  body: Scalars['String'];\n  /** The error code */\n  errorType: Scalars['String'];\n  /** The title of the error */\n  title: Scalars['String'];\n};\n\n/** A dependency manifest entry */\nexport type DependencyGraphDependency = {\n  __typename?: 'DependencyGraphDependency';\n  /** Does the dependency itself have dependencies? */\n  hasDependencies: Scalars['Boolean'];\n  /**\n   * The original name of the package, as it appears in the manifest.\n   * @deprecated `packageLabel` will be removed. Use normalized `packageName` field instead. Removal on 2022-10-01 UTC.\n   */\n  packageLabel: Scalars['String'];\n  /** The dependency package manager */\n  packageManager?: Maybe<Scalars['String']>;\n  /** The name of the package in the canonical form used by the package manager. */\n  packageName: Scalars['String'];\n  /** The repository containing the package */\n  repository?: Maybe<Repository>;\n  /** The dependency version requirements */\n  requirements: Scalars['String'];\n};\n\n/** The connection type for DependencyGraphDependency. */\nexport type DependencyGraphDependencyConnection = {\n  __typename?: 'DependencyGraphDependencyConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DependencyGraphDependencyEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DependencyGraphDependency>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DependencyGraphDependencyEdge = {\n  __typename?: 'DependencyGraphDependencyEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DependencyGraphDependency>;\n};\n\n/** The possible ecosystems of a dependency graph package. */\nexport enum DependencyGraphEcosystem {\n  /** GitHub Actions */\n  Actions = 'ACTIONS',\n  /** PHP packages hosted at packagist.org */\n  Composer = 'COMPOSER',\n  /** Go modules */\n  Go = 'GO',\n  /** Java artifacts hosted at the Maven central repository */\n  Maven = 'MAVEN',\n  /** JavaScript packages hosted at npmjs.com */\n  Npm = 'NPM',\n  /** .NET packages hosted at the NuGet Gallery */\n  Nuget = 'NUGET',\n  /** Python packages hosted at PyPI.org */\n  Pip = 'PIP',\n  /** Dart packages hosted at pub.dev */\n  Pub = 'PUB',\n  /** Ruby gems hosted at RubyGems.org */\n  Rubygems = 'RUBYGEMS',\n  /** Rust crates */\n  Rust = 'RUST'\n}\n\n/** Dependency manifest for a repository */\nexport type DependencyGraphManifest = Node & {\n  __typename?: 'DependencyGraphManifest';\n  /** Path to view the manifest file blob */\n  blobPath: Scalars['String'];\n  /** A list of manifest dependencies */\n  dependencies?: Maybe<DependencyGraphDependencyConnection>;\n  /** The number of dependencies listed in the manifest */\n  dependenciesCount?: Maybe<Scalars['Int']>;\n  /** Is the manifest too big to parse? */\n  exceedsMaxSize: Scalars['Boolean'];\n  /** Fully qualified manifest filename */\n  filename: Scalars['String'];\n  id: Scalars['ID'];\n  /** Were we able to parse the manifest? */\n  parseable: Scalars['Boolean'];\n  /** The repository containing the manifest */\n  repository: Repository;\n};\n\n\n/** Dependency manifest for a repository */\nexport type DependencyGraphManifestDependenciesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DependencyGraphManifest. */\nexport type DependencyGraphManifestConnection = {\n  __typename?: 'DependencyGraphManifestConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DependencyGraphManifestEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DependencyGraphManifest>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DependencyGraphManifestEdge = {\n  __typename?: 'DependencyGraphManifestEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DependencyGraphManifest>;\n};\n\n/** A repository deploy key. */\nexport type DeployKey = Node & {\n  __typename?: 'DeployKey';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** The deploy key. */\n  key: Scalars['String'];\n  /** Whether or not the deploy key is read only. */\n  readOnly: Scalars['Boolean'];\n  /** The deploy key title. */\n  title: Scalars['String'];\n  /** Whether or not the deploy key has been verified. */\n  verified: Scalars['Boolean'];\n};\n\n/** The connection type for DeployKey. */\nexport type DeployKeyConnection = {\n  __typename?: 'DeployKeyConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeployKeyEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeployKey>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DeployKeyEdge = {\n  __typename?: 'DeployKeyEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeployKey>;\n};\n\n/** Represents a 'deployed' event on a given pull request. */\nexport type DeployedEvent = Node & {\n  __typename?: 'DeployedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The deployment associated with the 'deployed' event. */\n  deployment: Deployment;\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** The ref associated with the 'deployed' event. */\n  ref?: Maybe<Ref>;\n};\n\n/** Represents triggered deployment instance. */\nexport type Deployment = Node & {\n  __typename?: 'Deployment';\n  /** Identifies the commit sha of the deployment. */\n  commit?: Maybe<Commit>;\n  /** Identifies the oid of the deployment commit, even if the commit has been deleted. */\n  commitOid: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the actor who triggered the deployment. */\n  creator: Actor;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The deployment description. */\n  description?: Maybe<Scalars['String']>;\n  /** The latest environment to which this deployment was made. */\n  environment?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The latest environment to which this deployment was made. */\n  latestEnvironment?: Maybe<Scalars['String']>;\n  /** The latest status of this deployment. */\n  latestStatus?: Maybe<DeploymentStatus>;\n  /** The original environment to which this deployment was made. */\n  originalEnvironment?: Maybe<Scalars['String']>;\n  /** Extra information that a deployment system might need. */\n  payload?: Maybe<Scalars['String']>;\n  /** Identifies the Ref of the deployment, if the deployment was created by ref. */\n  ref?: Maybe<Ref>;\n  /** Identifies the repository associated with the deployment. */\n  repository: Repository;\n  /** The current state of the deployment. */\n  state?: Maybe<DeploymentState>;\n  /** A list of statuses associated with the deployment. */\n  statuses?: Maybe<DeploymentStatusConnection>;\n  /** The deployment task. */\n  task?: Maybe<Scalars['String']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n\n/** Represents triggered deployment instance. */\nexport type DeploymentStatusesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for Deployment. */\nexport type DeploymentConnection = {\n  __typename?: 'DeploymentConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Deployment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DeploymentEdge = {\n  __typename?: 'DeploymentEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Deployment>;\n};\n\n/** Represents a 'deployment_environment_changed' event on a given pull request. */\nexport type DeploymentEnvironmentChangedEvent = Node & {\n  __typename?: 'DeploymentEnvironmentChangedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The deployment status that updated the deployment environment. */\n  deploymentStatus: DeploymentStatus;\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Ordering options for deployment connections */\nexport type DeploymentOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order deployments by. */\n  field: DeploymentOrderField;\n};\n\n/** Properties by which deployment connections can be ordered. */\nexport enum DeploymentOrderField {\n  /** Order collection by creation time */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** A protection rule. */\nexport type DeploymentProtectionRule = {\n  __typename?: 'DeploymentProtectionRule';\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The teams or users that can review the deployment */\n  reviewers: DeploymentReviewerConnection;\n  /** The timeout in minutes for this protection rule. */\n  timeout: Scalars['Int'];\n  /** The type of protection rule. */\n  type: DeploymentProtectionRuleType;\n};\n\n\n/** A protection rule. */\nexport type DeploymentProtectionRuleReviewersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DeploymentProtectionRule. */\nexport type DeploymentProtectionRuleConnection = {\n  __typename?: 'DeploymentProtectionRuleConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentProtectionRuleEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeploymentProtectionRule>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DeploymentProtectionRuleEdge = {\n  __typename?: 'DeploymentProtectionRuleEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeploymentProtectionRule>;\n};\n\n/** The possible protection rule types. */\nexport enum DeploymentProtectionRuleType {\n  /** Required reviewers */\n  RequiredReviewers = 'REQUIRED_REVIEWERS',\n  /** Wait timer */\n  WaitTimer = 'WAIT_TIMER'\n}\n\n/** A request to deploy a workflow run to an environment. */\nexport type DeploymentRequest = {\n  __typename?: 'DeploymentRequest';\n  /** Whether or not the current user can approve the deployment */\n  currentUserCanApprove: Scalars['Boolean'];\n  /** The target environment of the deployment */\n  environment: Environment;\n  /** The teams or users that can review the deployment */\n  reviewers: DeploymentReviewerConnection;\n  /** The wait timer in minutes configured in the environment */\n  waitTimer: Scalars['Int'];\n  /** The wait timer in minutes configured in the environment */\n  waitTimerStartedAt?: Maybe<Scalars['DateTime']>;\n};\n\n\n/** A request to deploy a workflow run to an environment. */\nexport type DeploymentRequestReviewersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DeploymentRequest. */\nexport type DeploymentRequestConnection = {\n  __typename?: 'DeploymentRequestConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentRequestEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeploymentRequest>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DeploymentRequestEdge = {\n  __typename?: 'DeploymentRequestEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeploymentRequest>;\n};\n\n/** A deployment review. */\nexport type DeploymentReview = Node & {\n  __typename?: 'DeploymentReview';\n  /** The comment the user left. */\n  comment: Scalars['String'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The environments approved or rejected */\n  environments: EnvironmentConnection;\n  id: Scalars['ID'];\n  /** The decision of the user. */\n  state: DeploymentReviewState;\n  /** The user that reviewed the deployment. */\n  user: User;\n};\n\n\n/** A deployment review. */\nexport type DeploymentReviewEnvironmentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DeploymentReview. */\nexport type DeploymentReviewConnection = {\n  __typename?: 'DeploymentReviewConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentReviewEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeploymentReview>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DeploymentReviewEdge = {\n  __typename?: 'DeploymentReviewEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeploymentReview>;\n};\n\n/** The possible states for a deployment review. */\nexport enum DeploymentReviewState {\n  /** The deployment was approved. */\n  Approved = 'APPROVED',\n  /** The deployment was rejected. */\n  Rejected = 'REJECTED'\n}\n\n/** Users and teams. */\nexport type DeploymentReviewer = Team | User;\n\n/** The connection type for DeploymentReviewer. */\nexport type DeploymentReviewerConnection = {\n  __typename?: 'DeploymentReviewerConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentReviewerEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeploymentReviewer>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DeploymentReviewerEdge = {\n  __typename?: 'DeploymentReviewerEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeploymentReviewer>;\n};\n\n/** The possible states in which a deployment can be. */\nexport enum DeploymentState {\n  /** The pending deployment was not updated after 30 minutes. */\n  Abandoned = 'ABANDONED',\n  /** The deployment is currently active. */\n  Active = 'ACTIVE',\n  /** An inactive transient deployment. */\n  Destroyed = 'DESTROYED',\n  /** The deployment experienced an error. */\n  Error = 'ERROR',\n  /** The deployment has failed. */\n  Failure = 'FAILURE',\n  /** The deployment is inactive. */\n  Inactive = 'INACTIVE',\n  /** The deployment is in progress. */\n  InProgress = 'IN_PROGRESS',\n  /** The deployment is pending. */\n  Pending = 'PENDING',\n  /** The deployment has queued */\n  Queued = 'QUEUED',\n  /** The deployment was successful. */\n  Success = 'SUCCESS',\n  /** The deployment is waiting. */\n  Waiting = 'WAITING'\n}\n\n/** Describes the status of a given deployment attempt. */\nexport type DeploymentStatus = Node & {\n  __typename?: 'DeploymentStatus';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the actor who triggered the deployment. */\n  creator: Actor;\n  /** Identifies the deployment associated with status. */\n  deployment: Deployment;\n  /** Identifies the description of the deployment. */\n  description?: Maybe<Scalars['String']>;\n  /** Identifies the environment of the deployment at the time of this deployment status */\n  environment?: Maybe<Scalars['String']>;\n  /** Identifies the environment URL of the deployment. */\n  environmentUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** Identifies the log URL of the deployment. */\n  logUrl?: Maybe<Scalars['URI']>;\n  /** Identifies the current state of the deployment. */\n  state: DeploymentStatusState;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The connection type for DeploymentStatus. */\nexport type DeploymentStatusConnection = {\n  __typename?: 'DeploymentStatusConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DeploymentStatusEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DeploymentStatus>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DeploymentStatusEdge = {\n  __typename?: 'DeploymentStatusEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DeploymentStatus>;\n};\n\n/** The possible states for a deployment status. */\nexport enum DeploymentStatusState {\n  /** The deployment experienced an error. */\n  Error = 'ERROR',\n  /** The deployment has failed. */\n  Failure = 'FAILURE',\n  /** The deployment is inactive. */\n  Inactive = 'INACTIVE',\n  /** The deployment is in progress. */\n  InProgress = 'IN_PROGRESS',\n  /** The deployment is pending. */\n  Pending = 'PENDING',\n  /** The deployment is queued */\n  Queued = 'QUEUED',\n  /** The deployment was successful. */\n  Success = 'SUCCESS',\n  /** The deployment is waiting. */\n  Waiting = 'WAITING'\n}\n\n/** Autogenerated input type of DequeuePullRequest */\nexport type DequeuePullRequestInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the pull request to be dequeued. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of DequeuePullRequest */\nexport type DequeuePullRequestPayload = {\n  __typename?: 'DequeuePullRequestPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The merge queue entry of the dequeued pull request. */\n  mergeQueueEntry?: Maybe<MergeQueueEntry>;\n};\n\n/** The possible sides of a diff. */\nexport enum DiffSide {\n  /** The left side of the diff. */\n  Left = 'LEFT',\n  /** The right side of the diff. */\n  Right = 'RIGHT'\n}\n\n/** Autogenerated input type of DisablePullRequestAutoMerge */\nexport type DisablePullRequestAutoMergeInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the pull request to disable auto merge on. */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DisablePullRequestAutoMerge */\nexport type DisablePullRequestAutoMergePayload = {\n  __typename?: 'DisablePullRequestAutoMergePayload';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The pull request auto merge was disabled on. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'disconnected' event on a given issue or pull request. */\nexport type DisconnectedEvent = Node & {\n  __typename?: 'DisconnectedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Reference originated in a different repository. */\n  isCrossRepository: Scalars['Boolean'];\n  /** Issue or pull request from which the issue was disconnected. */\n  source: ReferencedSubject;\n  /** Issue or pull request which was disconnected. */\n  subject: ReferencedSubject;\n};\n\n/** A discussion in a repository. */\nexport type Discussion = Closable & Comment & Deletable & Labelable & Lockable & Node & Reactable & RepositoryNode & Subscribable & Updatable & Votable & {\n  __typename?: 'Discussion';\n  /** Reason that the conversation was locked. */\n  activeLockReason?: Maybe<LockReason>;\n  /** The comment chosen as this discussion's answer, if any. */\n  answer?: Maybe<DiscussionComment>;\n  /** The time when a user chose this discussion's answer, if answered. */\n  answerChosenAt?: Maybe<Scalars['DateTime']>;\n  /** The user who chose this discussion's answer, if answered. */\n  answerChosenBy?: Maybe<Actor>;\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the subject of the comment. */\n  authorAssociation: CommentAuthorAssociation;\n  /** The main text of the discussion post. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body rendered to text. */\n  bodyText: Scalars['String'];\n  /** The category for this discussion. */\n  category: DiscussionCategory;\n  /** Indicates if the object is closed (definition of closed may depend on type) */\n  closed: Scalars['Boolean'];\n  /** Identifies the date and time when the object was closed. */\n  closedAt?: Maybe<Scalars['DateTime']>;\n  /** The replies to the discussion. */\n  comments: DiscussionCommentConnection;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** A list of labels associated with the object. */\n  labels?: Maybe<LabelConnection>;\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /** `true` if the object is locked */\n  locked: Scalars['Boolean'];\n  /** The number identifying this discussion within the repository. */\n  number: Scalars['Int'];\n  /** The poll associated with this discussion, if one exists. */\n  poll?: Maybe<DiscussionPoll>;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** The repository associated with this node. */\n  repository: Repository;\n  /** The path for this discussion. */\n  resourcePath: Scalars['URI'];\n  /** Identifies the reason for the discussion's state. */\n  stateReason?: Maybe<DiscussionStateReason>;\n  /** The title of this discussion. */\n  title: Scalars['String'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** Number of upvotes that this subject has received. */\n  upvoteCount: Scalars['Int'];\n  /** The URL for this discussion. */\n  url: Scalars['URI'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Indicates if the object can be closed by the viewer. */\n  viewerCanClose: Scalars['Boolean'];\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n  /** Indicates if the object can be reopened by the viewer. */\n  viewerCanReopen: Scalars['Boolean'];\n  /** Check if the viewer is able to change their subscription status for the repository. */\n  viewerCanSubscribe: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** Whether or not the current user can add or remove an upvote on this subject. */\n  viewerCanUpvote: Scalars['Boolean'];\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n  /** Whether or not the current user has already upvoted this subject. */\n  viewerHasUpvoted: Scalars['Boolean'];\n  /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n  viewerSubscription?: Maybe<SubscriptionState>;\n};\n\n\n/** A discussion in a repository. */\nexport type DiscussionCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A discussion in a repository. */\nexport type DiscussionLabelsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LabelOrder>;\n};\n\n\n/** A discussion in a repository. */\nexport type DiscussionReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** A discussion in a repository. */\nexport type DiscussionUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** A category for discussions in a repository. */\nexport type DiscussionCategory = Node & RepositoryNode & {\n  __typename?: 'DiscussionCategory';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** A description of this category. */\n  description?: Maybe<Scalars['String']>;\n  /** An emoji representing this category. */\n  emoji: Scalars['String'];\n  /** This category's emoji rendered as HTML. */\n  emojiHTML: Scalars['HTML'];\n  id: Scalars['ID'];\n  /** Whether or not discussions in this category support choosing an answer with the markDiscussionCommentAsAnswer mutation. */\n  isAnswerable: Scalars['Boolean'];\n  /** The name of this category. */\n  name: Scalars['String'];\n  /** The repository associated with this node. */\n  repository: Repository;\n  /** The slug of this category. */\n  slug: Scalars['String'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The connection type for DiscussionCategory. */\nexport type DiscussionCategoryConnection = {\n  __typename?: 'DiscussionCategoryConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DiscussionCategoryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DiscussionCategory>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DiscussionCategoryEdge = {\n  __typename?: 'DiscussionCategoryEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DiscussionCategory>;\n};\n\n/** The possible reasons for closing a discussion. */\nexport enum DiscussionCloseReason {\n  /** The discussion is a duplicate of another */\n  Duplicate = 'DUPLICATE',\n  /** The discussion is no longer relevant */\n  Outdated = 'OUTDATED',\n  /** The discussion has been resolved */\n  Resolved = 'RESOLVED'\n}\n\n/** A comment on a discussion. */\nexport type DiscussionComment = Comment & Deletable & Minimizable & Node & Reactable & Updatable & UpdatableComment & Votable & {\n  __typename?: 'DiscussionComment';\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the subject of the comment. */\n  authorAssociation: CommentAuthorAssociation;\n  /** The body as Markdown. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body rendered to text. */\n  bodyText: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The time when this replied-to comment was deleted */\n  deletedAt?: Maybe<Scalars['DateTime']>;\n  /** The discussion this comment was created in */\n  discussion?: Maybe<Discussion>;\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** Has this comment been chosen as the answer of its discussion? */\n  isAnswer: Scalars['Boolean'];\n  /** Returns whether or not a comment has been minimized. */\n  isMinimized: Scalars['Boolean'];\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /**\n   * Returns why the comment was minimized. One of `abuse`, `off-topic`,\n   * `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and\n   * formatting of these values differs from the inputs to the `MinimizeComment` mutation.\n   */\n  minimizedReason?: Maybe<Scalars['String']>;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** The threaded replies to this comment. */\n  replies: DiscussionCommentConnection;\n  /** The discussion comment this comment is a reply to */\n  replyTo?: Maybe<DiscussionComment>;\n  /** The path for this discussion comment. */\n  resourcePath: Scalars['URI'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** Number of upvotes that this subject has received. */\n  upvoteCount: Scalars['Int'];\n  /** The URL for this discussion comment. */\n  url: Scalars['URI'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n  /** Can the current user mark this comment as an answer? */\n  viewerCanMarkAsAnswer: Scalars['Boolean'];\n  /** Check if the current viewer can minimize this object. */\n  viewerCanMinimize: Scalars['Boolean'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n  /** Can the current user unmark this comment as an answer? */\n  viewerCanUnmarkAsAnswer: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** Whether or not the current user can add or remove an upvote on this subject. */\n  viewerCanUpvote: Scalars['Boolean'];\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n  /** Whether or not the current user has already upvoted this subject. */\n  viewerHasUpvoted: Scalars['Boolean'];\n};\n\n\n/** A comment on a discussion. */\nexport type DiscussionCommentReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** A comment on a discussion. */\nexport type DiscussionCommentRepliesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A comment on a discussion. */\nexport type DiscussionCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DiscussionComment. */\nexport type DiscussionCommentConnection = {\n  __typename?: 'DiscussionCommentConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DiscussionCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DiscussionComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DiscussionCommentEdge = {\n  __typename?: 'DiscussionCommentEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DiscussionComment>;\n};\n\n/** The connection type for Discussion. */\nexport type DiscussionConnection = {\n  __typename?: 'DiscussionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DiscussionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Discussion>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DiscussionEdge = {\n  __typename?: 'DiscussionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Discussion>;\n};\n\n/** Ways in which lists of discussions can be ordered upon return. */\nexport type DiscussionOrder = {\n  /** The direction in which to order discussions by the specified field. */\n  direction: OrderDirection;\n  /** The field by which to order discussions. */\n  field: DiscussionOrderField;\n};\n\n/** Properties by which discussion connections can be ordered. */\nexport enum DiscussionOrderField {\n  /** Order discussions by creation time. */\n  CreatedAt = 'CREATED_AT',\n  /** Order discussions by most recent modification time. */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** A poll for a discussion. */\nexport type DiscussionPoll = Node & {\n  __typename?: 'DiscussionPoll';\n  /** The discussion that this poll belongs to. */\n  discussion?: Maybe<Discussion>;\n  id: Scalars['ID'];\n  /** The options for this poll. */\n  options?: Maybe<DiscussionPollOptionConnection>;\n  /** The question that is being asked by this poll. */\n  question: Scalars['String'];\n  /** The total number of votes that have been cast for this poll. */\n  totalVoteCount: Scalars['Int'];\n  /** Indicates if the viewer has permission to vote in this poll. */\n  viewerCanVote: Scalars['Boolean'];\n  /** Indicates if the viewer has voted for any option in this poll. */\n  viewerHasVoted: Scalars['Boolean'];\n};\n\n\n/** A poll for a discussion. */\nexport type DiscussionPollOptionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<DiscussionPollOptionOrder>;\n};\n\n/** An option for a discussion poll. */\nexport type DiscussionPollOption = Node & {\n  __typename?: 'DiscussionPollOption';\n  id: Scalars['ID'];\n  /** The text for this option. */\n  option: Scalars['String'];\n  /** The discussion poll that this option belongs to. */\n  poll?: Maybe<DiscussionPoll>;\n  /** The total number of votes that have been cast for this option. */\n  totalVoteCount: Scalars['Int'];\n  /** Indicates if the viewer has voted for this option in the poll. */\n  viewerHasVoted: Scalars['Boolean'];\n};\n\n/** The connection type for DiscussionPollOption. */\nexport type DiscussionPollOptionConnection = {\n  __typename?: 'DiscussionPollOptionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DiscussionPollOptionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DiscussionPollOption>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type DiscussionPollOptionEdge = {\n  __typename?: 'DiscussionPollOptionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DiscussionPollOption>;\n};\n\n/** Ordering options for discussion poll option connections. */\nexport type DiscussionPollOptionOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order poll options by. */\n  field: DiscussionPollOptionOrderField;\n};\n\n/** Properties by which discussion poll option connections can be ordered. */\nexport enum DiscussionPollOptionOrderField {\n  /** Order poll options by the order that the poll author specified when creating the poll. */\n  AuthoredOrder = 'AUTHORED_ORDER',\n  /** Order poll options by the number of votes it has. */\n  VoteCount = 'VOTE_COUNT'\n}\n\n/** The possible states of a discussion. */\nexport enum DiscussionState {\n  /** A discussion that has been closed */\n  Closed = 'CLOSED',\n  /** A discussion that is open */\n  Open = 'OPEN'\n}\n\n/** The possible state reasons of a discussion. */\nexport enum DiscussionStateReason {\n  /** The discussion is a duplicate of another */\n  Duplicate = 'DUPLICATE',\n  /** The discussion is no longer relevant */\n  Outdated = 'OUTDATED',\n  /** The discussion was reopened */\n  Reopened = 'REOPENED',\n  /** The discussion has been resolved */\n  Resolved = 'RESOLVED'\n}\n\n/** Autogenerated input type of DismissPullRequestReview */\nexport type DismissPullRequestReviewInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The contents of the pull request review dismissal message. */\n  message: Scalars['String'];\n  /** The Node ID of the pull request review to modify. */\n  pullRequestReviewId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DismissPullRequestReview */\nexport type DismissPullRequestReviewPayload = {\n  __typename?: 'DismissPullRequestReviewPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The dismissed pull request review. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** The possible reasons that a Dependabot alert was dismissed. */\nexport enum DismissReason {\n  /** A fix has already been started */\n  FixStarted = 'FIX_STARTED',\n  /** This alert is inaccurate or incorrect */\n  Inaccurate = 'INACCURATE',\n  /** Vulnerable code is not actually used */\n  NotUsed = 'NOT_USED',\n  /** No bandwidth to fix this */\n  NoBandwidth = 'NO_BANDWIDTH',\n  /** Risk is tolerable to this project */\n  TolerableRisk = 'TOLERABLE_RISK'\n}\n\n/** Autogenerated input type of DismissRepositoryVulnerabilityAlert */\nexport type DismissRepositoryVulnerabilityAlertInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The reason the Dependabot alert is being dismissed. */\n  dismissReason: DismissReason;\n  /** The Dependabot alert ID to dismiss. */\n  repositoryVulnerabilityAlertId: Scalars['ID'];\n};\n\n/** Autogenerated return type of DismissRepositoryVulnerabilityAlert */\nexport type DismissRepositoryVulnerabilityAlertPayload = {\n  __typename?: 'DismissRepositoryVulnerabilityAlertPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The Dependabot alert that was dismissed */\n  repositoryVulnerabilityAlert?: Maybe<RepositoryVulnerabilityAlert>;\n};\n\n/** A draft issue within a project. */\nexport type DraftIssue = Node & {\n  __typename?: 'DraftIssue';\n  /** A list of users to assigned to this draft issue. */\n  assignees: UserConnection;\n  /** The body of the draft issue. */\n  body: Scalars['String'];\n  /** The body of the draft issue rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body of the draft issue rendered to text. */\n  bodyText: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who created this draft issue. */\n  creator?: Maybe<Actor>;\n  id: Scalars['ID'];\n  /** List of items linked with the draft issue (currently draft issue can be linked to only one item). */\n  projectV2Items: ProjectV2ItemConnection;\n  /** Projects that link to this draft issue (currently draft issue can be linked to only one project). */\n  projectsV2: ProjectV2Connection;\n  /** The title of the draft issue */\n  title: Scalars['String'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n\n/** A draft issue within a project. */\nexport type DraftIssueAssigneesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A draft issue within a project. */\nexport type DraftIssueProjectV2ItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A draft issue within a project. */\nexport type DraftIssueProjectsV2Args = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Specifies a review comment to be left with a Pull Request Review. */\nexport type DraftPullRequestReviewComment = {\n  /** Body of the comment to leave. */\n  body: Scalars['String'];\n  /** Path to the file being commented on. */\n  path: Scalars['String'];\n  /** Position in the file to leave a comment on. */\n  position: Scalars['Int'];\n};\n\n/** Specifies a review comment thread to be left with a Pull Request Review. */\nexport type DraftPullRequestReviewThread = {\n  /** Body of the comment to leave. */\n  body: Scalars['String'];\n  /** The line of the blob to which the thread refers. The end of the line range for multi-line comments. */\n  line: Scalars['Int'];\n  /** Path to the file being commented on. */\n  path: Scalars['String'];\n  /** The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range. */\n  side?: InputMaybe<DiffSide>;\n  /** The first line of the range to which the comment refers. */\n  startLine?: InputMaybe<Scalars['Int']>;\n  /** The side of the diff on which the start line resides. */\n  startSide?: InputMaybe<DiffSide>;\n};\n\n/** Autogenerated input type of EnablePullRequestAutoMerge */\nexport type EnablePullRequestAutoMergeInput = {\n  /** The email address to associate with this merge. */\n  authorEmail?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /**\n   * Commit body to use for the commit when the PR is mergable; if omitted, a\n   * default message will be used. NOTE: when merging with a merge queue any input\n   * value for commit message is ignored.\n   */\n  commitBody?: InputMaybe<Scalars['String']>;\n  /**\n   * Commit headline to use for the commit when the PR is mergable; if omitted, a\n   * default message will be used. NOTE: when merging with a merge queue any input\n   * value for commit headline is ignored.\n   */\n  commitHeadline?: InputMaybe<Scalars['String']>;\n  /** The expected head OID of the pull request. */\n  expectedHeadOid?: InputMaybe<Scalars['GitObjectID']>;\n  /**\n   * The merge method to use. If omitted, defaults to `MERGE`. NOTE: when merging\n   * with a merge queue any input value for merge method is ignored.\n   */\n  mergeMethod?: InputMaybe<PullRequestMergeMethod>;\n  /** ID of the pull request to enable auto-merge on. */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of EnablePullRequestAutoMerge */\nexport type EnablePullRequestAutoMergePayload = {\n  __typename?: 'EnablePullRequestAutoMergePayload';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The pull request auto-merge was enabled on. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of EnqueuePullRequest */\nexport type EnqueuePullRequestInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The expected head OID of the pull request. */\n  expectedHeadOid?: InputMaybe<Scalars['GitObjectID']>;\n  /** Add the pull request to the front of the queue. */\n  jump?: InputMaybe<Scalars['Boolean']>;\n  /** The ID of the pull request to enqueue. */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of EnqueuePullRequest */\nexport type EnqueuePullRequestPayload = {\n  __typename?: 'EnqueuePullRequestPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The merge queue entry for the enqueued pull request. */\n  mergeQueueEntry?: Maybe<MergeQueueEntry>;\n};\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type Enterprise = AnnouncementBanner & Node & {\n  __typename?: 'Enterprise';\n  /** The text of the announcement */\n  announcement?: Maybe<Scalars['String']>;\n  /** The expiration date of the announcement, if any */\n  announcementExpiresAt?: Maybe<Scalars['DateTime']>;\n  /** Whether the announcement can be dismissed by the user */\n  announcementUserDismissible?: Maybe<Scalars['Boolean']>;\n  /** A URL pointing to the enterprise's public avatar. */\n  avatarUrl: Scalars['URI'];\n  /** Enterprise billing information visible to enterprise billing managers. */\n  billingInfo?: Maybe<EnterpriseBillingInfo>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The description of the enterprise. */\n  description?: Maybe<Scalars['String']>;\n  /** The description of the enterprise as HTML. */\n  descriptionHTML: Scalars['HTML'];\n  id: Scalars['ID'];\n  /** The location of the enterprise. */\n  location?: Maybe<Scalars['String']>;\n  /** A list of users who are members of this enterprise. */\n  members: EnterpriseMemberConnection;\n  /** The name of the enterprise. */\n  name: Scalars['String'];\n  /** A list of organizations that belong to this enterprise. */\n  organizations: OrganizationConnection;\n  /**\n   * Enterprise information visible to enterprise owners or enterprise owners'\n   * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n   */\n  ownerInfo?: Maybe<EnterpriseOwnerInfo>;\n  /** The HTTP path for this enterprise. */\n  resourcePath: Scalars['URI'];\n  /** The URL-friendly identifier for the enterprise. */\n  slug: Scalars['String'];\n  /** The HTTP URL for this enterprise. */\n  url: Scalars['URI'];\n  /** Is the current viewer an admin of this enterprise? */\n  viewerIsAdmin: Scalars['Boolean'];\n  /** The URL of the enterprise website. */\n  websiteUrl?: Maybe<Scalars['URI']>;\n};\n\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type EnterpriseAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type EnterpriseMembersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  deployment?: InputMaybe<EnterpriseUserDeployment>;\n  first?: InputMaybe<Scalars['Int']>;\n  hasTwoFactorEnabled?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<EnterpriseMemberOrder>;\n  organizationLogins?: InputMaybe<Array<Scalars['String']>>;\n  query?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<EnterpriseUserAccountMembershipRole>;\n};\n\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type EnterpriseOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  query?: InputMaybe<Scalars['String']>;\n  viewerOrganizationRole?: InputMaybe<RoleInOrganization>;\n};\n\n/** The connection type for User. */\nexport type EnterpriseAdministratorConnection = {\n  __typename?: 'EnterpriseAdministratorConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseAdministratorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A User who is an administrator of an enterprise. */\nexport type EnterpriseAdministratorEdge = {\n  __typename?: 'EnterpriseAdministratorEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<User>;\n  /** The role of the administrator. */\n  role: EnterpriseAdministratorRole;\n};\n\n/** An invitation for a user to become an owner or billing manager of an enterprise. */\nexport type EnterpriseAdministratorInvitation = Node & {\n  __typename?: 'EnterpriseAdministratorInvitation';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The email of the person who was invited to the enterprise. */\n  email?: Maybe<Scalars['String']>;\n  /** The enterprise the invitation is for. */\n  enterprise: Enterprise;\n  id: Scalars['ID'];\n  /** The user who was invited to the enterprise. */\n  invitee?: Maybe<User>;\n  /** The user who created the invitation. */\n  inviter?: Maybe<User>;\n  /** The invitee's pending role in the enterprise (owner or billing_manager). */\n  role: EnterpriseAdministratorRole;\n};\n\n/** The connection type for EnterpriseAdministratorInvitation. */\nexport type EnterpriseAdministratorInvitationConnection = {\n  __typename?: 'EnterpriseAdministratorInvitationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseAdministratorInvitationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseAdministratorInvitation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseAdministratorInvitationEdge = {\n  __typename?: 'EnterpriseAdministratorInvitationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseAdministratorInvitation>;\n};\n\n/** Ordering options for enterprise administrator invitation connections */\nexport type EnterpriseAdministratorInvitationOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order enterprise administrator invitations by. */\n  field: EnterpriseAdministratorInvitationOrderField;\n};\n\n/** Properties by which enterprise administrator invitation connections can be ordered. */\nexport enum EnterpriseAdministratorInvitationOrderField {\n  /** Order enterprise administrator member invitations by creation time */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** The possible administrator roles in an enterprise account. */\nexport enum EnterpriseAdministratorRole {\n  /** Represents a billing manager of the enterprise account. */\n  BillingManager = 'BILLING_MANAGER',\n  /** Represents an owner of the enterprise account. */\n  Owner = 'OWNER'\n}\n\n/** The possible values for the enterprise allow private repository forking policy value. */\nexport enum EnterpriseAllowPrivateRepositoryForkingPolicyValue {\n  /** Members can fork a repository to an organization within this enterprise. */\n  EnterpriseOrganizations = 'ENTERPRISE_ORGANIZATIONS',\n  /** Members can fork a repository to their enterprise-managed user account or an organization inside this enterprise. */\n  EnterpriseOrganizationsUserAccounts = 'ENTERPRISE_ORGANIZATIONS_USER_ACCOUNTS',\n  /** Members can fork a repository to their user account or an organization, either inside or outside of this enterprise. */\n  Everywhere = 'EVERYWHERE',\n  /** Members can fork a repository only within the same organization (intra-org). */\n  SameOrganization = 'SAME_ORGANIZATION',\n  /** Members can fork a repository to their user account or within the same organization. */\n  SameOrganizationUserAccounts = 'SAME_ORGANIZATION_USER_ACCOUNTS',\n  /** Members can fork a repository to their user account. */\n  UserAccounts = 'USER_ACCOUNTS'\n}\n\n/** Metadata for an audit entry containing enterprise account information. */\nexport type EnterpriseAuditEntryData = {\n  /** The HTTP path for this enterprise. */\n  enterpriseResourcePath?: Maybe<Scalars['URI']>;\n  /** The slug of the enterprise. */\n  enterpriseSlug?: Maybe<Scalars['String']>;\n  /** The HTTP URL for this enterprise. */\n  enterpriseUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Enterprise billing information visible to enterprise billing managers and owners. */\nexport type EnterpriseBillingInfo = {\n  __typename?: 'EnterpriseBillingInfo';\n  /** The number of licenseable users/emails across the enterprise. */\n  allLicensableUsersCount: Scalars['Int'];\n  /** The number of data packs used by all organizations owned by the enterprise. */\n  assetPacks: Scalars['Int'];\n  /** The bandwidth quota in GB for all organizations owned by the enterprise. */\n  bandwidthQuota: Scalars['Float'];\n  /** The bandwidth usage in GB for all organizations owned by the enterprise. */\n  bandwidthUsage: Scalars['Float'];\n  /** The bandwidth usage as a percentage of the bandwidth quota. */\n  bandwidthUsagePercentage: Scalars['Int'];\n  /** The storage quota in GB for all organizations owned by the enterprise. */\n  storageQuota: Scalars['Float'];\n  /** The storage usage in GB for all organizations owned by the enterprise. */\n  storageUsage: Scalars['Float'];\n  /** The storage usage as a percentage of the storage quota. */\n  storageUsagePercentage: Scalars['Int'];\n  /** The number of available licenses across all owned organizations based on the unique number of billable users. */\n  totalAvailableLicenses: Scalars['Int'];\n  /** The total number of licenses allocated. */\n  totalLicenses: Scalars['Int'];\n};\n\n/** The possible values for the enterprise base repository permission setting. */\nexport enum EnterpriseDefaultRepositoryPermissionSettingValue {\n  /** Organization members will be able to clone, pull, push, and add new collaborators to all organization repositories. */\n  Admin = 'ADMIN',\n  /** Organization members will only be able to clone and pull public repositories. */\n  None = 'NONE',\n  /** Organizations in the enterprise choose base repository permissions for their members. */\n  NoPolicy = 'NO_POLICY',\n  /** Organization members will be able to clone and pull all organization repositories. */\n  Read = 'READ',\n  /** Organization members will be able to clone, pull, and push all organization repositories. */\n  Write = 'WRITE'\n}\n\n/** The possible values for an enabled/disabled enterprise setting. */\nexport enum EnterpriseEnabledDisabledSettingValue {\n  /** The setting is disabled for organizations in the enterprise. */\n  Disabled = 'DISABLED',\n  /** The setting is enabled for organizations in the enterprise. */\n  Enabled = 'ENABLED',\n  /** There is no policy set for organizations in the enterprise. */\n  NoPolicy = 'NO_POLICY'\n}\n\n/** The possible values for an enabled/no policy enterprise setting. */\nexport enum EnterpriseEnabledSettingValue {\n  /** The setting is enabled for organizations in the enterprise. */\n  Enabled = 'ENABLED',\n  /** There is no policy set for organizations in the enterprise. */\n  NoPolicy = 'NO_POLICY'\n}\n\n/** The connection type for OrganizationInvitation. */\nexport type EnterpriseFailedInvitationConnection = {\n  __typename?: 'EnterpriseFailedInvitationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseFailedInvitationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<OrganizationInvitation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n  /** Identifies the total count of unique users in the connection. */\n  totalUniqueUserCount: Scalars['Int'];\n};\n\n/** A failed invitation to be a member in an enterprise organization. */\nexport type EnterpriseFailedInvitationEdge = {\n  __typename?: 'EnterpriseFailedInvitationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<OrganizationInvitation>;\n};\n\n/**\n * An identity provider configured to provision identities for an enterprise.\n * Visible to enterprise owners or enterprise owners' personal access tokens\n * (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseIdentityProvider = Node & {\n  __typename?: 'EnterpriseIdentityProvider';\n  /** The digest algorithm used to sign SAML requests for the identity provider. */\n  digestMethod?: Maybe<SamlDigestAlgorithm>;\n  /** The enterprise this identity provider belongs to. */\n  enterprise?: Maybe<Enterprise>;\n  /** ExternalIdentities provisioned by this identity provider. */\n  externalIdentities: ExternalIdentityConnection;\n  id: Scalars['ID'];\n  /** The x509 certificate used by the identity provider to sign assertions and responses. */\n  idpCertificate?: Maybe<Scalars['X509Certificate']>;\n  /** The Issuer Entity ID for the SAML identity provider. */\n  issuer?: Maybe<Scalars['String']>;\n  /** Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable. */\n  recoveryCodes?: Maybe<Array<Scalars['String']>>;\n  /** The signature algorithm used to sign SAML requests for the identity provider. */\n  signatureMethod?: Maybe<SamlSignatureAlgorithm>;\n  /** The URL endpoint for the identity provider's SAML SSO. */\n  ssoUrl?: Maybe<Scalars['URI']>;\n};\n\n\n/**\n * An identity provider configured to provision identities for an enterprise.\n * Visible to enterprise owners or enterprise owners' personal access tokens\n * (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseIdentityProviderExternalIdentitiesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  login?: InputMaybe<Scalars['String']>;\n  membersOnly?: InputMaybe<Scalars['Boolean']>;\n  userName?: InputMaybe<Scalars['String']>;\n};\n\n/** An object that is a member of an enterprise. */\nexport type EnterpriseMember = EnterpriseUserAccount | User;\n\n/** The connection type for EnterpriseMember. */\nexport type EnterpriseMemberConnection = {\n  __typename?: 'EnterpriseMemberConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseMemberEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseMember>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A User who is a member of an enterprise through one or more organizations. */\nexport type EnterpriseMemberEdge = {\n  __typename?: 'EnterpriseMemberEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseMember>;\n};\n\n/** Ordering options for enterprise member connections. */\nexport type EnterpriseMemberOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order enterprise members by. */\n  field: EnterpriseMemberOrderField;\n};\n\n/** Properties by which enterprise member connections can be ordered. */\nexport enum EnterpriseMemberOrderField {\n  /** Order enterprise members by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order enterprise members by login */\n  Login = 'LOGIN'\n}\n\n/** The possible values for the enterprise members can create repositories setting. */\nexport enum EnterpriseMembersCanCreateRepositoriesSettingValue {\n  /** Members will be able to create public and private repositories. */\n  All = 'ALL',\n  /** Members will not be able to create public or private repositories. */\n  Disabled = 'DISABLED',\n  /** Organization administrators choose whether to allow members to create repositories. */\n  NoPolicy = 'NO_POLICY',\n  /** Members will be able to create only private repositories. */\n  Private = 'PRIVATE',\n  /** Members will be able to create only public repositories. */\n  Public = 'PUBLIC'\n}\n\n/** The possible values for the members can make purchases setting. */\nexport enum EnterpriseMembersCanMakePurchasesSettingValue {\n  /** The setting is disabled for organizations in the enterprise. */\n  Disabled = 'DISABLED',\n  /** The setting is enabled for organizations in the enterprise. */\n  Enabled = 'ENABLED'\n}\n\n/** The connection type for Organization. */\nexport type EnterpriseOrganizationMembershipConnection = {\n  __typename?: 'EnterpriseOrganizationMembershipConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseOrganizationMembershipEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Organization>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An enterprise organization that a user is a member of. */\nexport type EnterpriseOrganizationMembershipEdge = {\n  __typename?: 'EnterpriseOrganizationMembershipEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Organization>;\n  /** The role of the user in the enterprise membership. */\n  role: EnterpriseUserAccountMembershipRole;\n};\n\n/** The connection type for User. */\nexport type EnterpriseOutsideCollaboratorConnection = {\n  __typename?: 'EnterpriseOutsideCollaboratorConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseOutsideCollaboratorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A User who is an outside collaborator of an enterprise through one or more organizations. */\nexport type EnterpriseOutsideCollaboratorEdge = {\n  __typename?: 'EnterpriseOutsideCollaboratorEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<User>;\n  /** The enterprise organization repositories this user is a member of. */\n  repositories: EnterpriseRepositoryInfoConnection;\n};\n\n\n/** A User who is an outside collaborator of an enterprise through one or more organizations. */\nexport type EnterpriseOutsideCollaboratorEdgeRepositoriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n};\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfo = {\n  __typename?: 'EnterpriseOwnerInfo';\n  /** A list of all of the administrators for this enterprise. */\n  admins: EnterpriseAdministratorConnection;\n  /** A list of users in the enterprise who currently have two-factor authentication disabled. */\n  affiliatedUsersWithTwoFactorDisabled: UserConnection;\n  /** Whether or not affiliated users with two-factor authentication disabled exist in the enterprise. */\n  affiliatedUsersWithTwoFactorDisabledExist: Scalars['Boolean'];\n  /** The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise. */\n  allowPrivateRepositoryForkingSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided private repository forking setting value. */\n  allowPrivateRepositoryForkingSettingOrganizations: OrganizationConnection;\n  /** The value for the allow private repository forking policy on the enterprise. */\n  allowPrivateRepositoryForkingSettingPolicyValue?: Maybe<EnterpriseAllowPrivateRepositoryForkingPolicyValue>;\n  /** The setting value for base repository permissions for organizations in this enterprise. */\n  defaultRepositoryPermissionSetting: EnterpriseDefaultRepositoryPermissionSettingValue;\n  /** A list of enterprise organizations configured with the provided base repository permission. */\n  defaultRepositoryPermissionSettingOrganizations: OrganizationConnection;\n  /**\n   * A list of domains owned by the enterprise. Visible to enterprise owners or\n   * enterprise owners' personal access tokens (classic) with admin:enterprise scope.\n   */\n  domains: VerifiableDomainConnection;\n  /** Enterprise Server installations owned by the enterprise. */\n  enterpriseServerInstallations: EnterpriseServerInstallationConnection;\n  /** A list of failed invitations in the enterprise. */\n  failedInvitations: EnterpriseFailedInvitationConnection;\n  /** The setting value for whether the enterprise has an IP allow list enabled. */\n  ipAllowListEnabledSetting: IpAllowListEnabledSettingValue;\n  /**\n   * The IP addresses that are allowed to access resources owned by the enterprise.\n   * Visible to enterprise owners or enterprise owners' personal access tokens\n   * (classic) with admin:enterprise scope.\n   */\n  ipAllowListEntries: IpAllowListEntryConnection;\n  /** The setting value for whether the enterprise has IP allow list configuration for installed GitHub Apps enabled. */\n  ipAllowListForInstalledAppsEnabledSetting: IpAllowListForInstalledAppsEnabledSettingValue;\n  /** Whether or not the base repository permission is currently being updated. */\n  isUpdatingDefaultRepositoryPermission: Scalars['Boolean'];\n  /** Whether the two-factor authentication requirement is currently being enforced. */\n  isUpdatingTwoFactorRequirement: Scalars['Boolean'];\n  /**\n   * The setting value for whether organization members with admin permissions on a\n   * repository can change repository visibility.\n   */\n  membersCanChangeRepositoryVisibilitySetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided can change repository visibility setting value. */\n  membersCanChangeRepositoryVisibilitySettingOrganizations: OrganizationConnection;\n  /** The setting value for whether members of organizations in the enterprise can create internal repositories. */\n  membersCanCreateInternalRepositoriesSetting?: Maybe<Scalars['Boolean']>;\n  /** The setting value for whether members of organizations in the enterprise can create private repositories. */\n  membersCanCreatePrivateRepositoriesSetting?: Maybe<Scalars['Boolean']>;\n  /** The setting value for whether members of organizations in the enterprise can create public repositories. */\n  membersCanCreatePublicRepositoriesSetting?: Maybe<Scalars['Boolean']>;\n  /** The setting value for whether members of organizations in the enterprise can create repositories. */\n  membersCanCreateRepositoriesSetting?: Maybe<EnterpriseMembersCanCreateRepositoriesSettingValue>;\n  /** A list of enterprise organizations configured with the provided repository creation setting value. */\n  membersCanCreateRepositoriesSettingOrganizations: OrganizationConnection;\n  /** The setting value for whether members with admin permissions for repositories can delete issues. */\n  membersCanDeleteIssuesSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided members can delete issues setting value. */\n  membersCanDeleteIssuesSettingOrganizations: OrganizationConnection;\n  /** The setting value for whether members with admin permissions for repositories can delete or transfer repositories. */\n  membersCanDeleteRepositoriesSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided members can delete repositories setting value. */\n  membersCanDeleteRepositoriesSettingOrganizations: OrganizationConnection;\n  /** The setting value for whether members of organizations in the enterprise can invite outside collaborators. */\n  membersCanInviteCollaboratorsSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided members can invite collaborators setting value. */\n  membersCanInviteCollaboratorsSettingOrganizations: OrganizationConnection;\n  /** Indicates whether members of this enterprise's organizations can purchase additional services for those organizations. */\n  membersCanMakePurchasesSetting: EnterpriseMembersCanMakePurchasesSettingValue;\n  /** The setting value for whether members with admin permissions for repositories can update protected branches. */\n  membersCanUpdateProtectedBranchesSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided members can update protected branches setting value. */\n  membersCanUpdateProtectedBranchesSettingOrganizations: OrganizationConnection;\n  /** The setting value for whether members can view dependency insights. */\n  membersCanViewDependencyInsightsSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided members can view dependency insights setting value. */\n  membersCanViewDependencyInsightsSettingOrganizations: OrganizationConnection;\n  /** Indicates if email notification delivery for this enterprise is restricted to verified or approved domains. */\n  notificationDeliveryRestrictionEnabledSetting: NotificationRestrictionSettingValue;\n  /** The OIDC Identity Provider for the enterprise. */\n  oidcProvider?: Maybe<OidcProvider>;\n  /** The setting value for whether organization projects are enabled for organizations in this enterprise. */\n  organizationProjectsSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided organization projects setting value. */\n  organizationProjectsSettingOrganizations: OrganizationConnection;\n  /** A list of outside collaborators across the repositories in the enterprise. */\n  outsideCollaborators: EnterpriseOutsideCollaboratorConnection;\n  /** A list of pending administrator invitations for the enterprise. */\n  pendingAdminInvitations: EnterpriseAdministratorInvitationConnection;\n  /** A list of pending collaborator invitations across the repositories in the enterprise. */\n  pendingCollaboratorInvitations: RepositoryInvitationConnection;\n  /** A list of pending member invitations for organizations in the enterprise. */\n  pendingMemberInvitations: EnterprisePendingMemberInvitationConnection;\n  /** The setting value for whether repository projects are enabled in this enterprise. */\n  repositoryProjectsSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided repository projects setting value. */\n  repositoryProjectsSettingOrganizations: OrganizationConnection;\n  /** The SAML Identity Provider for the enterprise. */\n  samlIdentityProvider?: Maybe<EnterpriseIdentityProvider>;\n  /** A list of enterprise organizations configured with the SAML single sign-on setting value. */\n  samlIdentityProviderSettingOrganizations: OrganizationConnection;\n  /** A list of members with a support entitlement. */\n  supportEntitlements: EnterpriseMemberConnection;\n  /** The setting value for whether team discussions are enabled for organizations in this enterprise. */\n  teamDiscussionsSetting: EnterpriseEnabledDisabledSettingValue;\n  /** A list of enterprise organizations configured with the provided team discussions setting value. */\n  teamDiscussionsSettingOrganizations: OrganizationConnection;\n  /** The setting value for whether the enterprise requires two-factor authentication for its organizations and users. */\n  twoFactorRequiredSetting: EnterpriseEnabledSettingValue;\n  /** A list of enterprise organizations configured with the two-factor authentication setting value. */\n  twoFactorRequiredSettingOrganizations: OrganizationConnection;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoAdminsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  hasTwoFactorEnabled?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<EnterpriseMemberOrder>;\n  organizationLogins?: InputMaybe<Array<Scalars['String']>>;\n  query?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<EnterpriseAdministratorRole>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoAffiliatedUsersWithTwoFactorDisabledArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoAllowPrivateRepositoryForkingSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoDefaultRepositoryPermissionSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: DefaultRepositoryPermissionField;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoDomainsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  isApproved?: InputMaybe<Scalars['Boolean']>;\n  isVerified?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<VerifiableDomainOrder>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoEnterpriseServerInstallationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  connectedOnly?: InputMaybe<Scalars['Boolean']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<EnterpriseServerInstallationOrder>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoFailedInvitationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoIpAllowListEntriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IpAllowListEntryOrder>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoMembersCanChangeRepositoryVisibilitySettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoMembersCanCreateRepositoriesSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: OrganizationMembersCanCreateRepositoriesSettingValue;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoMembersCanDeleteIssuesSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoMembersCanDeleteRepositoriesSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoMembersCanInviteCollaboratorsSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoMembersCanUpdateProtectedBranchesSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoMembersCanViewDependencyInsightsSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoOrganizationProjectsSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoOutsideCollaboratorsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  hasTwoFactorEnabled?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  login?: InputMaybe<Scalars['String']>;\n  orderBy?: InputMaybe<EnterpriseMemberOrder>;\n  organizationLogins?: InputMaybe<Array<Scalars['String']>>;\n  query?: InputMaybe<Scalars['String']>;\n  visibility?: InputMaybe<RepositoryVisibility>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoPendingAdminInvitationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<EnterpriseAdministratorInvitationOrder>;\n  query?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<EnterpriseAdministratorRole>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoPendingCollaboratorInvitationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryInvitationOrder>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoPendingMemberInvitationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  invitationSource?: InputMaybe<OrganizationInvitationSource>;\n  last?: InputMaybe<Scalars['Int']>;\n  organizationLogins?: InputMaybe<Array<Scalars['String']>>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoRepositoryProjectsSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoSamlIdentityProviderSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: IdentityProviderConfigurationState;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoSupportEntitlementsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<EnterpriseMemberOrder>;\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoTeamDiscussionsSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n\n/**\n * Enterprise information visible to enterprise owners or enterprise owners'\n * personal access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type EnterpriseOwnerInfoTwoFactorRequiredSettingOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  value: Scalars['Boolean'];\n};\n\n/** The connection type for OrganizationInvitation. */\nexport type EnterprisePendingMemberInvitationConnection = {\n  __typename?: 'EnterprisePendingMemberInvitationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterprisePendingMemberInvitationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<OrganizationInvitation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n  /** Identifies the total count of unique users in the connection. */\n  totalUniqueUserCount: Scalars['Int'];\n};\n\n/** An invitation to be a member in an enterprise organization. */\nexport type EnterprisePendingMemberInvitationEdge = {\n  __typename?: 'EnterprisePendingMemberInvitationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<OrganizationInvitation>;\n};\n\n/** A subset of repository information queryable from an enterprise. */\nexport type EnterpriseRepositoryInfo = Node & {\n  __typename?: 'EnterpriseRepositoryInfo';\n  id: Scalars['ID'];\n  /** Identifies if the repository is private or internal. */\n  isPrivate: Scalars['Boolean'];\n  /** The repository's name. */\n  name: Scalars['String'];\n  /** The repository's name with owner. */\n  nameWithOwner: Scalars['String'];\n};\n\n/** The connection type for EnterpriseRepositoryInfo. */\nexport type EnterpriseRepositoryInfoConnection = {\n  __typename?: 'EnterpriseRepositoryInfoConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseRepositoryInfoEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseRepositoryInfo>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseRepositoryInfoEdge = {\n  __typename?: 'EnterpriseRepositoryInfoEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseRepositoryInfo>;\n};\n\n/** An Enterprise Server installation. */\nexport type EnterpriseServerInstallation = Node & {\n  __typename?: 'EnterpriseServerInstallation';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The customer name to which the Enterprise Server installation belongs. */\n  customerName: Scalars['String'];\n  /** The host name of the Enterprise Server installation. */\n  hostName: Scalars['String'];\n  id: Scalars['ID'];\n  /** Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect. */\n  isConnected: Scalars['Boolean'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** User accounts on this Enterprise Server installation. */\n  userAccounts: EnterpriseServerUserAccountConnection;\n  /** User accounts uploads for the Enterprise Server installation. */\n  userAccountsUploads: EnterpriseServerUserAccountsUploadConnection;\n};\n\n\n/** An Enterprise Server installation. */\nexport type EnterpriseServerInstallationUserAccountsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<EnterpriseServerUserAccountOrder>;\n};\n\n\n/** An Enterprise Server installation. */\nexport type EnterpriseServerInstallationUserAccountsUploadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<EnterpriseServerUserAccountsUploadOrder>;\n};\n\n/** The connection type for EnterpriseServerInstallation. */\nexport type EnterpriseServerInstallationConnection = {\n  __typename?: 'EnterpriseServerInstallationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseServerInstallationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseServerInstallation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerInstallationEdge = {\n  __typename?: 'EnterpriseServerInstallationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseServerInstallation>;\n};\n\n/** The connection type for EnterpriseServerInstallation. */\nexport type EnterpriseServerInstallationMembershipConnection = {\n  __typename?: 'EnterpriseServerInstallationMembershipConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseServerInstallationMembershipEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseServerInstallation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An Enterprise Server installation that a user is a member of. */\nexport type EnterpriseServerInstallationMembershipEdge = {\n  __typename?: 'EnterpriseServerInstallationMembershipEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseServerInstallation>;\n  /** The role of the user in the enterprise membership. */\n  role: EnterpriseUserAccountMembershipRole;\n};\n\n/** Ordering options for Enterprise Server installation connections. */\nexport type EnterpriseServerInstallationOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order Enterprise Server installations by. */\n  field: EnterpriseServerInstallationOrderField;\n};\n\n/** Properties by which Enterprise Server installation connections can be ordered. */\nexport enum EnterpriseServerInstallationOrderField {\n  /** Order Enterprise Server installations by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order Enterprise Server installations by customer name */\n  CustomerName = 'CUSTOMER_NAME',\n  /** Order Enterprise Server installations by host name */\n  HostName = 'HOST_NAME'\n}\n\n/** A user account on an Enterprise Server installation. */\nexport type EnterpriseServerUserAccount = Node & {\n  __typename?: 'EnterpriseServerUserAccount';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** User emails belonging to this user account. */\n  emails: EnterpriseServerUserAccountEmailConnection;\n  /** The Enterprise Server installation on which this user account exists. */\n  enterpriseServerInstallation: EnterpriseServerInstallation;\n  id: Scalars['ID'];\n  /** Whether the user account is a site administrator on the Enterprise Server installation. */\n  isSiteAdmin: Scalars['Boolean'];\n  /** The login of the user account on the Enterprise Server installation. */\n  login: Scalars['String'];\n  /** The profile name of the user account on the Enterprise Server installation. */\n  profileName?: Maybe<Scalars['String']>;\n  /** The date and time when the user account was created on the Enterprise Server installation. */\n  remoteCreatedAt: Scalars['DateTime'];\n  /** The ID of the user account on the Enterprise Server installation. */\n  remoteUserId: Scalars['Int'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n\n/** A user account on an Enterprise Server installation. */\nexport type EnterpriseServerUserAccountEmailsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<EnterpriseServerUserAccountEmailOrder>;\n};\n\n/** The connection type for EnterpriseServerUserAccount. */\nexport type EnterpriseServerUserAccountConnection = {\n  __typename?: 'EnterpriseServerUserAccountConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseServerUserAccountEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseServerUserAccount>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerUserAccountEdge = {\n  __typename?: 'EnterpriseServerUserAccountEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseServerUserAccount>;\n};\n\n/** An email belonging to a user account on an Enterprise Server installation. */\nexport type EnterpriseServerUserAccountEmail = Node & {\n  __typename?: 'EnterpriseServerUserAccountEmail';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The email address. */\n  email: Scalars['String'];\n  id: Scalars['ID'];\n  /** Indicates whether this is the primary email of the associated user account. */\n  isPrimary: Scalars['Boolean'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The user account to which the email belongs. */\n  userAccount: EnterpriseServerUserAccount;\n};\n\n/** The connection type for EnterpriseServerUserAccountEmail. */\nexport type EnterpriseServerUserAccountEmailConnection = {\n  __typename?: 'EnterpriseServerUserAccountEmailConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseServerUserAccountEmailEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseServerUserAccountEmail>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerUserAccountEmailEdge = {\n  __typename?: 'EnterpriseServerUserAccountEmailEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseServerUserAccountEmail>;\n};\n\n/** Ordering options for Enterprise Server user account email connections. */\nexport type EnterpriseServerUserAccountEmailOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order emails by. */\n  field: EnterpriseServerUserAccountEmailOrderField;\n};\n\n/** Properties by which Enterprise Server user account email connections can be ordered. */\nexport enum EnterpriseServerUserAccountEmailOrderField {\n  /** Order emails by email */\n  Email = 'EMAIL'\n}\n\n/** Ordering options for Enterprise Server user account connections. */\nexport type EnterpriseServerUserAccountOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order user accounts by. */\n  field: EnterpriseServerUserAccountOrderField;\n};\n\n/** Properties by which Enterprise Server user account connections can be ordered. */\nexport enum EnterpriseServerUserAccountOrderField {\n  /** Order user accounts by login */\n  Login = 'LOGIN',\n  /** Order user accounts by creation time on the Enterprise Server installation */\n  RemoteCreatedAt = 'REMOTE_CREATED_AT'\n}\n\n/** A user accounts upload from an Enterprise Server installation. */\nexport type EnterpriseServerUserAccountsUpload = Node & {\n  __typename?: 'EnterpriseServerUserAccountsUpload';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The enterprise to which this upload belongs. */\n  enterprise: Enterprise;\n  /** The Enterprise Server installation for which this upload was generated. */\n  enterpriseServerInstallation: EnterpriseServerInstallation;\n  id: Scalars['ID'];\n  /** The name of the file uploaded. */\n  name: Scalars['String'];\n  /** The synchronization state of the upload */\n  syncState: EnterpriseServerUserAccountsUploadSyncState;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The connection type for EnterpriseServerUserAccountsUpload. */\nexport type EnterpriseServerUserAccountsUploadConnection = {\n  __typename?: 'EnterpriseServerUserAccountsUploadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnterpriseServerUserAccountsUploadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<EnterpriseServerUserAccountsUpload>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerUserAccountsUploadEdge = {\n  __typename?: 'EnterpriseServerUserAccountsUploadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<EnterpriseServerUserAccountsUpload>;\n};\n\n/** Ordering options for Enterprise Server user accounts upload connections. */\nexport type EnterpriseServerUserAccountsUploadOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order user accounts uploads by. */\n  field: EnterpriseServerUserAccountsUploadOrderField;\n};\n\n/** Properties by which Enterprise Server user accounts upload connections can be ordered. */\nexport enum EnterpriseServerUserAccountsUploadOrderField {\n  /** Order user accounts uploads by creation time */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** Synchronization state of the Enterprise Server user accounts upload */\nexport enum EnterpriseServerUserAccountsUploadSyncState {\n  /** The synchronization of the upload failed. */\n  Failure = 'FAILURE',\n  /** The synchronization of the upload is pending. */\n  Pending = 'PENDING',\n  /** The synchronization of the upload succeeded. */\n  Success = 'SUCCESS'\n}\n\n/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */\nexport type EnterpriseUserAccount = Actor & Node & {\n  __typename?: 'EnterpriseUserAccount';\n  /** A URL pointing to the enterprise user account's public avatar. */\n  avatarUrl: Scalars['URI'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The enterprise in which this user account exists. */\n  enterprise: Enterprise;\n  /** A list of Enterprise Server installations this user is a member of. */\n  enterpriseInstallations: EnterpriseServerInstallationMembershipConnection;\n  id: Scalars['ID'];\n  /** An identifier for the enterprise user account, a login or email address */\n  login: Scalars['String'];\n  /** The name of the enterprise user account */\n  name?: Maybe<Scalars['String']>;\n  /** A list of enterprise organizations this user is a member of. */\n  organizations: EnterpriseOrganizationMembershipConnection;\n  /** The HTTP path for this user. */\n  resourcePath: Scalars['URI'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this user. */\n  url: Scalars['URI'];\n  /** The user within the enterprise. */\n  user?: Maybe<User>;\n};\n\n\n/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */\nexport type EnterpriseUserAccountAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */\nexport type EnterpriseUserAccountEnterpriseInstallationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<EnterpriseServerInstallationOrder>;\n  query?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<EnterpriseUserAccountMembershipRole>;\n};\n\n\n/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */\nexport type EnterpriseUserAccountOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n  query?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<EnterpriseUserAccountMembershipRole>;\n};\n\n/** The possible roles for enterprise membership. */\nexport enum EnterpriseUserAccountMembershipRole {\n  /** The user is a member of an organization in the enterprise. */\n  Member = 'MEMBER',\n  /** The user is an owner of an organization in the enterprise. */\n  Owner = 'OWNER',\n  /**\n   * The user is not an owner of the enterprise, and not a member or owner of any\n   * organizations in the enterprise; only for EMU-enabled enterprises.\n   */\n  Unaffiliated = 'UNAFFILIATED'\n}\n\n/** The possible GitHub Enterprise deployments where this user can exist. */\nexport enum EnterpriseUserDeployment {\n  /** The user is part of a GitHub Enterprise Cloud deployment. */\n  Cloud = 'CLOUD',\n  /** The user is part of a GitHub Enterprise Server deployment. */\n  Server = 'SERVER'\n}\n\n/** An environment. */\nexport type Environment = Node & {\n  __typename?: 'Environment';\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The name of the environment */\n  name: Scalars['String'];\n  /** The protection rules defined for this environment */\n  protectionRules: DeploymentProtectionRuleConnection;\n};\n\n\n/** An environment. */\nexport type EnvironmentProtectionRulesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for Environment. */\nexport type EnvironmentConnection = {\n  __typename?: 'EnvironmentConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EnvironmentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Environment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type EnvironmentEdge = {\n  __typename?: 'EnvironmentEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Environment>;\n};\n\n/**\n * An external identity provisioned by SAML SSO or SCIM. If SAML is configured on\n * the organization, the external identity is visible to (1) organization owners,\n * (2) organization owners' personal access tokens (classic) with read:org or\n * admin:org scope, (3) GitHub App with an installation token with read or write\n * access to members. If SAML is configured on the enterprise, the external\n * identity is visible to (1) enterprise owners, (2) enterprise owners' personal\n * access tokens (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type ExternalIdentity = Node & {\n  __typename?: 'ExternalIdentity';\n  /** The GUID for this identity */\n  guid: Scalars['String'];\n  id: Scalars['ID'];\n  /** Organization invitation for this SCIM-provisioned external identity */\n  organizationInvitation?: Maybe<OrganizationInvitation>;\n  /** SAML Identity attributes */\n  samlIdentity?: Maybe<ExternalIdentitySamlAttributes>;\n  /** SCIM Identity attributes */\n  scimIdentity?: Maybe<ExternalIdentityScimAttributes>;\n  /** User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member. */\n  user?: Maybe<User>;\n};\n\n/** An attribute for the External Identity attributes collection */\nexport type ExternalIdentityAttribute = {\n  __typename?: 'ExternalIdentityAttribute';\n  /** The attribute metadata as JSON */\n  metadata?: Maybe<Scalars['String']>;\n  /** The attribute name */\n  name: Scalars['String'];\n  /** The attribute value */\n  value: Scalars['String'];\n};\n\n/** The connection type for ExternalIdentity. */\nexport type ExternalIdentityConnection = {\n  __typename?: 'ExternalIdentityConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ExternalIdentityEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ExternalIdentity>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ExternalIdentityEdge = {\n  __typename?: 'ExternalIdentityEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ExternalIdentity>;\n};\n\n/** SAML attributes for the External Identity */\nexport type ExternalIdentitySamlAttributes = {\n  __typename?: 'ExternalIdentitySamlAttributes';\n  /** SAML Identity attributes */\n  attributes: Array<ExternalIdentityAttribute>;\n  /** The emails associated with the SAML identity */\n  emails?: Maybe<Array<UserEmailMetadata>>;\n  /** Family name of the SAML identity */\n  familyName?: Maybe<Scalars['String']>;\n  /** Given name of the SAML identity */\n  givenName?: Maybe<Scalars['String']>;\n  /** The groups linked to this identity in IDP */\n  groups?: Maybe<Array<Scalars['String']>>;\n  /** The NameID of the SAML identity */\n  nameId?: Maybe<Scalars['String']>;\n  /** The userName of the SAML identity */\n  username?: Maybe<Scalars['String']>;\n};\n\n/** SCIM attributes for the External Identity */\nexport type ExternalIdentityScimAttributes = {\n  __typename?: 'ExternalIdentityScimAttributes';\n  /** The emails associated with the SCIM identity */\n  emails?: Maybe<Array<UserEmailMetadata>>;\n  /** Family name of the SCIM identity */\n  familyName?: Maybe<Scalars['String']>;\n  /** Given name of the SCIM identity */\n  givenName?: Maybe<Scalars['String']>;\n  /** The groups linked to this identity in IDP */\n  groups?: Maybe<Array<Scalars['String']>>;\n  /** The userName of the SCIM identity */\n  username?: Maybe<Scalars['String']>;\n};\n\n/**\n * A command to add a file at the given path with the given contents as part of a\n * commit.  Any existing file at that that path will be replaced.\n */\nexport type FileAddition = {\n  /** The base64 encoded contents of the file */\n  contents: Scalars['Base64String'];\n  /** The path in the repository where the file will be located */\n  path: Scalars['String'];\n};\n\n/**\n * A description of a set of changes to a file tree to be made as part of\n * a git commit, modeled as zero or more file `additions` and zero or more\n * file `deletions`.\n *\n * Both fields are optional; omitting both will produce a commit with no\n * file changes.\n *\n * `deletions` and `additions` describe changes to files identified\n * by their path in the git tree using unix-style path separators, i.e.\n * `/`.  The root of a git tree is an empty string, so paths are not\n * slash-prefixed.\n *\n * `path` values must be unique across all `additions` and `deletions`\n * provided.  Any duplication will result in a validation error.\n *\n * ### Encoding\n *\n * File contents must be provided in full for each `FileAddition`.\n *\n * The `contents` of a `FileAddition` must be encoded using RFC 4648\n * compliant base64, i.e. correct padding is required and no characters\n * outside the standard alphabet may be used.  Invalid base64\n * encoding will be rejected with a validation error.\n *\n * The encoded contents may be binary.\n *\n * For text files, no assumptions are made about the character encoding of\n * the file contents (after base64 decoding).  No charset transcoding or\n * line-ending normalization will be performed; it is the client's\n * responsibility to manage the character encoding of files they provide.\n * However, for maximum compatibility we recommend using UTF-8 encoding\n * and ensuring that all files in a repository use a consistent\n * line-ending convention (`\\n` or `\\r\\n`), and that all files end\n * with a newline.\n *\n * ### Modeling file changes\n *\n * Each of the the five types of conceptual changes that can be made in a\n * git commit can be described using the `FileChanges` type as follows:\n *\n * 1. New file addition: create file `hello world\\n` at path `docs/README.txt`:\n *\n *        {\n *          \"additions\" [\n *            {\n *              \"path\": \"docs/README.txt\",\n *              \"contents\": base64encode(\"hello world\\n\")\n *            }\n *          ]\n *        }\n *\n * 2. Existing file modification: change existing `docs/README.txt` to have new\n *    content `new content here\\n`:\n *\n *        {\n *          \"additions\" [\n *            {\n *              \"path\": \"docs/README.txt\",\n *              \"contents\": base64encode(\"new content here\\n\")\n *            }\n *          ]\n *        }\n *\n * 3. Existing file deletion: remove existing file `docs/README.txt`.\n *    Note that the path is required to exist -- specifying a\n *    path that does not exist on the given branch will abort the\n *    commit and return an error.\n *\n *        {\n *          \"deletions\" [\n *            {\n *              \"path\": \"docs/README.txt\"\n *            }\n *          ]\n *        }\n *\n *\n * 4. File rename with no changes: rename `docs/README.txt` with\n *    previous content `hello world\\n` to the same content at\n *    `newdocs/README.txt`:\n *\n *        {\n *          \"deletions\" [\n *            {\n *              \"path\": \"docs/README.txt\",\n *            }\n *          ],\n *          \"additions\" [\n *            {\n *              \"path\": \"newdocs/README.txt\",\n *              \"contents\": base64encode(\"hello world\\n\")\n *            }\n *          ]\n *        }\n *\n *\n * 5. File rename with changes: rename `docs/README.txt` with\n *    previous content `hello world\\n` to a file at path\n *    `newdocs/README.txt` with content `new contents\\n`:\n *\n *        {\n *          \"deletions\" [\n *            {\n *              \"path\": \"docs/README.txt\",\n *            }\n *          ],\n *          \"additions\" [\n *            {\n *              \"path\": \"newdocs/README.txt\",\n *              \"contents\": base64encode(\"new contents\\n\")\n *            }\n *          ]\n *        }\n */\nexport type FileChanges = {\n  /** File to add or change. */\n  additions?: InputMaybe<Array<FileAddition>>;\n  /** Files to delete. */\n  deletions?: InputMaybe<Array<FileDeletion>>;\n};\n\n/** A command to delete the file at the given path as part of a commit. */\nexport type FileDeletion = {\n  /** The path to delete */\n  path: Scalars['String'];\n};\n\n/** The possible viewed states of a file . */\nexport enum FileViewedState {\n  /** The file has new changes since last viewed. */\n  Dismissed = 'DISMISSED',\n  /** The file has not been marked as viewed. */\n  Unviewed = 'UNVIEWED',\n  /** The file has been marked as viewed. */\n  Viewed = 'VIEWED'\n}\n\n/** Autogenerated input type of FollowOrganization */\nexport type FollowOrganizationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the organization to follow. */\n  organizationId: Scalars['ID'];\n};\n\n/** Autogenerated return type of FollowOrganization */\nexport type FollowOrganizationPayload = {\n  __typename?: 'FollowOrganizationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The organization that was followed. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of FollowUser */\nexport type FollowUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the user to follow. */\n  userId: Scalars['ID'];\n};\n\n/** Autogenerated return type of FollowUser */\nexport type FollowUserPayload = {\n  __typename?: 'FollowUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The user that was followed. */\n  user?: Maybe<User>;\n};\n\n/** The connection type for User. */\nexport type FollowerConnection = {\n  __typename?: 'FollowerConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<UserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** The connection type for User. */\nexport type FollowingConnection = {\n  __typename?: 'FollowingConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<UserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A funding platform link for a repository. */\nexport type FundingLink = {\n  __typename?: 'FundingLink';\n  /** The funding platform this link is for. */\n  platform: FundingPlatform;\n  /** The configured URL for this funding link. */\n  url: Scalars['URI'];\n};\n\n/** The possible funding platforms for repository funding links. */\nexport enum FundingPlatform {\n  /** Community Bridge funding platform. */\n  CommunityBridge = 'COMMUNITY_BRIDGE',\n  /** Custom funding platform. */\n  Custom = 'CUSTOM',\n  /** GitHub funding platform. */\n  Github = 'GITHUB',\n  /** IssueHunt funding platform. */\n  Issuehunt = 'ISSUEHUNT',\n  /** Ko-fi funding platform. */\n  KoFi = 'KO_FI',\n  /** LFX Crowdfunding funding platform. */\n  LfxCrowdfunding = 'LFX_CROWDFUNDING',\n  /** Liberapay funding platform. */\n  Liberapay = 'LIBERAPAY',\n  /** Open Collective funding platform. */\n  OpenCollective = 'OPEN_COLLECTIVE',\n  /** Otechie funding platform. */\n  Otechie = 'OTECHIE',\n  /** Patreon funding platform. */\n  Patreon = 'PATREON',\n  /** Tidelift funding platform. */\n  Tidelift = 'TIDELIFT'\n}\n\n/** A generic hovercard context with a message and icon */\nexport type GenericHovercardContext = HovercardContext & {\n  __typename?: 'GenericHovercardContext';\n  /** A string describing this context */\n  message: Scalars['String'];\n  /** An octicon to accompany this context */\n  octicon: Scalars['String'];\n};\n\n/** A Gist. */\nexport type Gist = Node & Starrable & UniformResourceLocatable & {\n  __typename?: 'Gist';\n  /** A list of comments associated with the gist */\n  comments: GistCommentConnection;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The gist description. */\n  description?: Maybe<Scalars['String']>;\n  /** The files in this gist. */\n  files?: Maybe<Array<Maybe<GistFile>>>;\n  /** A list of forks associated with the gist */\n  forks: GistConnection;\n  id: Scalars['ID'];\n  /** Identifies if the gist is a fork. */\n  isFork: Scalars['Boolean'];\n  /** Whether the gist is public or not. */\n  isPublic: Scalars['Boolean'];\n  /** The gist name. */\n  name: Scalars['String'];\n  /** The gist owner. */\n  owner?: Maybe<RepositoryOwner>;\n  /** Identifies when the gist was last pushed to. */\n  pushedAt?: Maybe<Scalars['DateTime']>;\n  /** The HTML path to this resource. */\n  resourcePath: Scalars['URI'];\n  /** Returns a count of how many stargazers there are on this object */\n  stargazerCount: Scalars['Int'];\n  /** A list of users who have starred this starrable. */\n  stargazers: StargazerConnection;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this Gist. */\n  url: Scalars['URI'];\n  /** Returns a boolean indicating whether the viewing user has starred this starrable. */\n  viewerHasStarred: Scalars['Boolean'];\n};\n\n\n/** A Gist. */\nexport type GistCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A Gist. */\nexport type GistFilesArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  oid?: InputMaybe<Scalars['GitObjectID']>;\n};\n\n\n/** A Gist. */\nexport type GistForksArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GistOrder>;\n};\n\n\n/** A Gist. */\nexport type GistStargazersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<StarOrder>;\n};\n\n/** Represents a comment on an Gist. */\nexport type GistComment = Comment & Deletable & Minimizable & Node & Updatable & UpdatableComment & {\n  __typename?: 'GistComment';\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the gist. */\n  authorAssociation: CommentAuthorAssociation;\n  /** Identifies the comment body. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body rendered to text. */\n  bodyText: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  /** The associated gist. */\n  gist: Gist;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** Returns whether or not a comment has been minimized. */\n  isMinimized: Scalars['Boolean'];\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /**\n   * Returns why the comment was minimized. One of `abuse`, `off-topic`,\n   * `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and\n   * formatting of these values differs from the inputs to the `MinimizeComment` mutation.\n   */\n  minimizedReason?: Maybe<Scalars['String']>;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n  /** Check if the current viewer can minimize this object. */\n  viewerCanMinimize: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n};\n\n\n/** Represents a comment on an Gist. */\nexport type GistCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for GistComment. */\nexport type GistCommentConnection = {\n  __typename?: 'GistCommentConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<GistCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<GistComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type GistCommentEdge = {\n  __typename?: 'GistCommentEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<GistComment>;\n};\n\n/** The connection type for Gist. */\nexport type GistConnection = {\n  __typename?: 'GistConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<GistEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Gist>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type GistEdge = {\n  __typename?: 'GistEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Gist>;\n};\n\n/** A file in a gist. */\nexport type GistFile = {\n  __typename?: 'GistFile';\n  /** The file name encoded to remove characters that are invalid in URL paths. */\n  encodedName?: Maybe<Scalars['String']>;\n  /** The gist file encoding. */\n  encoding?: Maybe<Scalars['String']>;\n  /** The file extension from the file name. */\n  extension?: Maybe<Scalars['String']>;\n  /** Indicates if this file is an image. */\n  isImage: Scalars['Boolean'];\n  /** Whether the file's contents were truncated. */\n  isTruncated: Scalars['Boolean'];\n  /** The programming language this file is written in. */\n  language?: Maybe<Language>;\n  /** The gist file name. */\n  name?: Maybe<Scalars['String']>;\n  /** The gist file size in bytes. */\n  size?: Maybe<Scalars['Int']>;\n  /** UTF8 text data or null if the file is binary */\n  text?: Maybe<Scalars['String']>;\n};\n\n\n/** A file in a gist. */\nexport type GistFileTextArgs = {\n  truncate?: InputMaybe<Scalars['Int']>;\n};\n\n/** Ordering options for gist connections */\nexport type GistOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order repositories by. */\n  field: GistOrderField;\n};\n\n/** Properties by which gist connections can be ordered. */\nexport enum GistOrderField {\n  /** Order gists by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order gists by push time */\n  PushedAt = 'PUSHED_AT',\n  /** Order gists by update time */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** The privacy of a Gist */\nexport enum GistPrivacy {\n  /** Gists that are public and secret */\n  All = 'ALL',\n  /** Public */\n  Public = 'PUBLIC',\n  /** Secret */\n  Secret = 'SECRET'\n}\n\n/** Represents an actor in a Git commit (ie. an author or committer). */\nexport type GitActor = {\n  __typename?: 'GitActor';\n  /** A URL pointing to the author's public avatar. */\n  avatarUrl: Scalars['URI'];\n  /** The timestamp of the Git action (authoring or committing). */\n  date?: Maybe<Scalars['GitTimestamp']>;\n  /** The email in the Git commit. */\n  email?: Maybe<Scalars['String']>;\n  /** The name in the Git commit. */\n  name?: Maybe<Scalars['String']>;\n  /** The GitHub user corresponding to the email field. Null if no such user exists. */\n  user?: Maybe<User>;\n};\n\n\n/** Represents an actor in a Git commit (ie. an author or committer). */\nexport type GitActorAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for GitActor. */\nexport type GitActorConnection = {\n  __typename?: 'GitActorConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<GitActorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<GitActor>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type GitActorEdge = {\n  __typename?: 'GitActorEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<GitActor>;\n};\n\n/** Represents information about the GitHub instance. */\nexport type GitHubMetadata = {\n  __typename?: 'GitHubMetadata';\n  /** Returns a String that's a SHA of `github-services` */\n  gitHubServicesSha: Scalars['GitObjectID'];\n  /** IP addresses that users connect to for git operations */\n  gitIpAddresses?: Maybe<Array<Scalars['String']>>;\n  /** IP addresses that service hooks are sent from */\n  hookIpAddresses?: Maybe<Array<Scalars['String']>>;\n  /** IP addresses that the importer connects from */\n  importerIpAddresses?: Maybe<Array<Scalars['String']>>;\n  /** Whether or not users are verified */\n  isPasswordAuthenticationVerifiable: Scalars['Boolean'];\n  /** IP addresses for GitHub Pages' A records */\n  pagesIpAddresses?: Maybe<Array<Scalars['String']>>;\n};\n\n/** Represents a Git object. */\nexport type GitObject = {\n  /** An abbreviated version of the Git object ID */\n  abbreviatedOid: Scalars['String'];\n  /** The HTTP path for this Git object */\n  commitResourcePath: Scalars['URI'];\n  /** The HTTP URL for this Git object */\n  commitUrl: Scalars['URI'];\n  id: Scalars['ID'];\n  /** The Git object ID */\n  oid: Scalars['GitObjectID'];\n  /** The Repository the Git object belongs to */\n  repository: Repository;\n};\n\n/** Information about a signature (GPG or S/MIME) on a Commit or Tag. */\nexport type GitSignature = {\n  /** Email used to sign this object. */\n  email: Scalars['String'];\n  /** True if the signature is valid and verified by GitHub. */\n  isValid: Scalars['Boolean'];\n  /** Payload for GPG signing object. Raw ODB object without the signature header. */\n  payload: Scalars['String'];\n  /** ASCII-armored signature header from object. */\n  signature: Scalars['String'];\n  /** GitHub user corresponding to the email signing this commit. */\n  signer?: Maybe<User>;\n  /**\n   * The state of this signature. `VALID` if signature is valid and verified by\n   * GitHub, otherwise represents reason why signature is considered invalid.\n   */\n  state: GitSignatureState;\n  /** True if the signature was made with GitHub's signing key. */\n  wasSignedByGitHub: Scalars['Boolean'];\n};\n\n/** The state of a Git signature. */\nexport enum GitSignatureState {\n  /** The signing certificate or its chain could not be verified */\n  BadCert = 'BAD_CERT',\n  /** Invalid email used for signing */\n  BadEmail = 'BAD_EMAIL',\n  /** Signing key expired */\n  ExpiredKey = 'EXPIRED_KEY',\n  /** Internal error - the GPG verification service misbehaved */\n  GpgverifyError = 'GPGVERIFY_ERROR',\n  /** Internal error - the GPG verification service is unavailable at the moment */\n  GpgverifyUnavailable = 'GPGVERIFY_UNAVAILABLE',\n  /** Invalid signature */\n  Invalid = 'INVALID',\n  /** Malformed signature */\n  MalformedSig = 'MALFORMED_SIG',\n  /** The usage flags for the key that signed this don't allow signing */\n  NotSigningKey = 'NOT_SIGNING_KEY',\n  /** Email used for signing not known to GitHub */\n  NoUser = 'NO_USER',\n  /** Valid signature, though certificate revocation check failed */\n  OcspError = 'OCSP_ERROR',\n  /** Valid signature, pending certificate revocation checking */\n  OcspPending = 'OCSP_PENDING',\n  /** One or more certificates in chain has been revoked */\n  OcspRevoked = 'OCSP_REVOKED',\n  /** Key used for signing not known to GitHub */\n  UnknownKey = 'UNKNOWN_KEY',\n  /** Unknown signature type */\n  UnknownSigType = 'UNKNOWN_SIG_TYPE',\n  /** Unsigned */\n  Unsigned = 'UNSIGNED',\n  /** Email used for signing unverified on GitHub */\n  UnverifiedEmail = 'UNVERIFIED_EMAIL',\n  /** Valid signature and verified by GitHub */\n  Valid = 'VALID'\n}\n\n/** Represents a GPG signature on a Commit or Tag. */\nexport type GpgSignature = GitSignature & {\n  __typename?: 'GpgSignature';\n  /** Email used to sign this object. */\n  email: Scalars['String'];\n  /** True if the signature is valid and verified by GitHub. */\n  isValid: Scalars['Boolean'];\n  /** Hex-encoded ID of the key that signed this object. */\n  keyId?: Maybe<Scalars['String']>;\n  /** Payload for GPG signing object. Raw ODB object without the signature header. */\n  payload: Scalars['String'];\n  /** ASCII-armored signature header from object. */\n  signature: Scalars['String'];\n  /** GitHub user corresponding to the email signing this commit. */\n  signer?: Maybe<User>;\n  /**\n   * The state of this signature. `VALID` if signature is valid and verified by\n   * GitHub, otherwise represents reason why signature is considered invalid.\n   */\n  state: GitSignatureState;\n  /** True if the signature was made with GitHub's signing key. */\n  wasSignedByGitHub: Scalars['Boolean'];\n};\n\n/** Autogenerated input type of GrantEnterpriseOrganizationsMigratorRole */\nexport type GrantEnterpriseOrganizationsMigratorRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise to which all organizations managed by it will be granted the migrator role. */\n  enterpriseId: Scalars['ID'];\n  /** The login of the user to grant the migrator role */\n  login: Scalars['String'];\n};\n\n/** Autogenerated return type of GrantEnterpriseOrganizationsMigratorRole */\nexport type GrantEnterpriseOrganizationsMigratorRolePayload = {\n  __typename?: 'GrantEnterpriseOrganizationsMigratorRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The organizations that had the migrator role applied to for the given user. */\n  organizations?: Maybe<OrganizationConnection>;\n};\n\n\n/** Autogenerated return type of GrantEnterpriseOrganizationsMigratorRole */\nexport type GrantEnterpriseOrganizationsMigratorRolePayloadOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of GrantMigratorRole */\nexport type GrantMigratorRoleInput = {\n  /** The user login or Team slug to grant the migrator role. */\n  actor: Scalars['String'];\n  /** Specifies the type of the actor, can be either USER or TEAM. */\n  actorType: ActorType;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the organization that the user/team belongs to. */\n  organizationId: Scalars['ID'];\n};\n\n/** Autogenerated return type of GrantMigratorRole */\nexport type GrantMigratorRolePayload = {\n  __typename?: 'GrantMigratorRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** Did the operation succeed? */\n  success?: Maybe<Scalars['Boolean']>;\n};\n\n/** Represents a 'head_ref_deleted' event on a given pull request. */\nexport type HeadRefDeletedEvent = Node & {\n  __typename?: 'HeadRefDeletedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the Ref associated with the `head_ref_deleted` event. */\n  headRef?: Maybe<Ref>;\n  /** Identifies the name of the Ref associated with the `head_ref_deleted` event. */\n  headRefName: Scalars['String'];\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Represents a 'head_ref_force_pushed' event on a given pull request. */\nexport type HeadRefForcePushedEvent = Node & {\n  __typename?: 'HeadRefForcePushedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the after commit SHA for the 'head_ref_force_pushed' event. */\n  afterCommit?: Maybe<Commit>;\n  /** Identifies the before commit SHA for the 'head_ref_force_pushed' event. */\n  beforeCommit?: Maybe<Commit>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** Identifies the fully qualified ref name for the 'head_ref_force_pushed' event. */\n  ref?: Maybe<Ref>;\n};\n\n/** Represents a 'head_ref_restored' event on a given pull request. */\nexport type HeadRefRestoredEvent = Node & {\n  __typename?: 'HeadRefRestoredEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n};\n\n/** Detail needed to display a hovercard for a user */\nexport type Hovercard = {\n  __typename?: 'Hovercard';\n  /** Each of the contexts for this hovercard */\n  contexts: Array<HovercardContext>;\n};\n\n/** An individual line of a hovercard */\nexport type HovercardContext = {\n  /** A string describing this context */\n  message: Scalars['String'];\n  /** An octicon to accompany this context */\n  octicon: Scalars['String'];\n};\n\n/** The possible states in which authentication can be configured with an identity provider. */\nexport enum IdentityProviderConfigurationState {\n  /** Authentication with an identity provider is configured but not enforced. */\n  Configured = 'CONFIGURED',\n  /** Authentication with an identity provider is configured and enforced. */\n  Enforced = 'ENFORCED',\n  /** Authentication with an identity provider is not configured. */\n  Unconfigured = 'UNCONFIGURED'\n}\n\n/** Autogenerated input type of ImportProject */\nexport type ImportProjectInput = {\n  /** The description of Project. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** A list of columns containing issues and pull requests. */\n  columnImports: Array<ProjectColumnImport>;\n  /** The name of Project. */\n  name: Scalars['String'];\n  /** The name of the Organization or User to create the Project under. */\n  ownerName: Scalars['String'];\n  /** Whether the Project is public or not. */\n  public?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Autogenerated return type of ImportProject */\nexport type ImportProjectPayload = {\n  __typename?: 'ImportProjectPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new Project! */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of InviteEnterpriseAdmin */\nexport type InviteEnterpriseAdminInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The email of the person to invite as an administrator. */\n  email?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise to which you want to invite an administrator. */\n  enterpriseId: Scalars['ID'];\n  /** The login of a user to invite as an administrator. */\n  invitee?: InputMaybe<Scalars['String']>;\n  /** The role of the administrator. */\n  role?: InputMaybe<EnterpriseAdministratorRole>;\n};\n\n/** Autogenerated return type of InviteEnterpriseAdmin */\nexport type InviteEnterpriseAdminPayload = {\n  __typename?: 'InviteEnterpriseAdminPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The created enterprise administrator invitation. */\n  invitation?: Maybe<EnterpriseAdministratorInvitation>;\n};\n\n/** The possible values for the IP allow list enabled setting. */\nexport enum IpAllowListEnabledSettingValue {\n  /** The setting is disabled for the owner. */\n  Disabled = 'DISABLED',\n  /** The setting is enabled for the owner. */\n  Enabled = 'ENABLED'\n}\n\n/** An IP address or range of addresses that is allowed to access an owner's resources. */\nexport type IpAllowListEntry = Node & {\n  __typename?: 'IpAllowListEntry';\n  /** A single IP address or range of IP addresses in CIDR notation. */\n  allowListValue: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Whether the entry is currently active. */\n  isActive: Scalars['Boolean'];\n  /** The name of the IP allow list entry. */\n  name?: Maybe<Scalars['String']>;\n  /** The owner of the IP allow list entry. */\n  owner: IpAllowListOwner;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The connection type for IpAllowListEntry. */\nexport type IpAllowListEntryConnection = {\n  __typename?: 'IpAllowListEntryConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<IpAllowListEntryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<IpAllowListEntry>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type IpAllowListEntryEdge = {\n  __typename?: 'IpAllowListEntryEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<IpAllowListEntry>;\n};\n\n/** Ordering options for IP allow list entry connections. */\nexport type IpAllowListEntryOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order IP allow list entries by. */\n  field: IpAllowListEntryOrderField;\n};\n\n/** Properties by which IP allow list entry connections can be ordered. */\nexport enum IpAllowListEntryOrderField {\n  /** Order IP allow list entries by the allow list value. */\n  AllowListValue = 'ALLOW_LIST_VALUE',\n  /** Order IP allow list entries by creation time. */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** The possible values for the IP allow list configuration for installed GitHub Apps setting. */\nexport enum IpAllowListForInstalledAppsEnabledSettingValue {\n  /** The setting is disabled for the owner. */\n  Disabled = 'DISABLED',\n  /** The setting is enabled for the owner. */\n  Enabled = 'ENABLED'\n}\n\n/** Types that can own an IP allow list. */\nexport type IpAllowListOwner = App | Enterprise | Organization;\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type Issue = Assignable & Closable & Comment & Deletable & Labelable & Lockable & Node & ProjectV2Owner & Reactable & RepositoryNode & Subscribable & UniformResourceLocatable & Updatable & UpdatableComment & {\n  __typename?: 'Issue';\n  /** Reason that the conversation was locked. */\n  activeLockReason?: Maybe<LockReason>;\n  /** A list of Users assigned to this object. */\n  assignees: UserConnection;\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the subject of the comment. */\n  authorAssociation: CommentAuthorAssociation;\n  /** Identifies the body of the issue. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The http path for this issue body */\n  bodyResourcePath: Scalars['URI'];\n  /** Identifies the body of the issue rendered to text. */\n  bodyText: Scalars['String'];\n  /** The http URL for this issue body */\n  bodyUrl: Scalars['URI'];\n  /** Indicates if the object is closed (definition of closed may depend on type) */\n  closed: Scalars['Boolean'];\n  /** Identifies the date and time when the object was closed. */\n  closedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of comments associated with the Issue. */\n  comments: IssueCommentConnection;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  /** Identifies the primary key from the database as a BigInt. */\n  fullDatabaseId?: Maybe<Scalars['BigInt']>;\n  /** The hovercard information for this issue */\n  hovercard: Hovercard;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** Indicates whether or not this issue is currently pinned to the repository issues list */\n  isPinned?: Maybe<Scalars['Boolean']>;\n  /** Is this issue read by the viewer */\n  isReadByViewer?: Maybe<Scalars['Boolean']>;\n  /** A list of labels associated with the object. */\n  labels?: Maybe<LabelConnection>;\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /** Branches linked to this issue. */\n  linkedBranches: LinkedBranchConnection;\n  /** `true` if the object is locked */\n  locked: Scalars['Boolean'];\n  /** Identifies the milestone associated with the issue. */\n  milestone?: Maybe<Milestone>;\n  /** Identifies the issue number. */\n  number: Scalars['Int'];\n  /** A list of Users that are participating in the Issue conversation. */\n  participants: UserConnection;\n  /** List of project cards associated with this issue. */\n  projectCards: ProjectCardConnection;\n  /** List of project items associated with this issue. */\n  projectItems: ProjectV2ItemConnection;\n  /** Find a project by number. */\n  projectV2?: Maybe<ProjectV2>;\n  /** A list of projects under the owner. */\n  projectsV2: ProjectV2Connection;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** The repository associated with this node. */\n  repository: Repository;\n  /** The HTTP path for this issue */\n  resourcePath: Scalars['URI'];\n  /** Identifies the state of the issue. */\n  state: IssueState;\n  /** Identifies the reason for the issue state. */\n  stateReason?: Maybe<IssueStateReason>;\n  /**\n   * A list of events, comments, commits, etc. associated with the issue.\n   * @deprecated `timeline` will be removed Use Issue.timelineItems instead. Removal on 2020-10-01 UTC.\n   */\n  timeline: IssueTimelineConnection;\n  /** A list of events, comments, commits, etc. associated with the issue. */\n  timelineItems: IssueTimelineItemsConnection;\n  /** Identifies the issue title. */\n  title: Scalars['String'];\n  /** Identifies the issue title rendered to HTML. */\n  titleHTML: Scalars['String'];\n  /** A list of issues that track this issue */\n  trackedInIssues: IssueConnection;\n  /** A list of issues tracked inside the current issue */\n  trackedIssues: IssueConnection;\n  /** The number of tracked issues for this issue */\n  trackedIssuesCount: Scalars['Int'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this issue */\n  url: Scalars['URI'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Indicates if the object can be closed by the viewer. */\n  viewerCanClose: Scalars['Boolean'];\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n  /** Indicates if the object can be reopened by the viewer. */\n  viewerCanReopen: Scalars['Boolean'];\n  /** Check if the viewer is able to change their subscription status for the repository. */\n  viewerCanSubscribe: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n  /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n  viewerSubscription?: Maybe<SubscriptionState>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueAssigneesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueCommentOrder>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueHovercardArgs = {\n  includeNotificationContexts?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueLabelsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LabelOrder>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueLinkedBranchesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueParticipantsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueProjectCardsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  archivedStates?: InputMaybe<Array<InputMaybe<ProjectCardArchivedState>>>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueProjectItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includeArchived?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueProjectV2Args = {\n  number: Scalars['Int'];\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueProjectsV2Args = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTimelineArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  since?: InputMaybe<Scalars['DateTime']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTimelineItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  itemTypes?: InputMaybe<Array<IssueTimelineItemsItemType>>;\n  last?: InputMaybe<Scalars['Int']>;\n  since?: InputMaybe<Scalars['DateTime']>;\n  skip?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTrackedInIssuesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTrackedIssuesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTrackedIssuesCountArgs = {\n  states?: InputMaybe<Array<InputMaybe<TrackedIssueStates>>>;\n};\n\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The possible state reasons of a closed issue. */\nexport enum IssueClosedStateReason {\n  /** An issue that has been closed as completed */\n  Completed = 'COMPLETED',\n  /** An issue that has been closed as not planned */\n  NotPlanned = 'NOT_PLANNED'\n}\n\n/** Represents a comment on an Issue. */\nexport type IssueComment = Comment & Deletable & Minimizable & Node & Reactable & RepositoryNode & Updatable & UpdatableComment & {\n  __typename?: 'IssueComment';\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the subject of the comment. */\n  authorAssociation: CommentAuthorAssociation;\n  /** The body as Markdown. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body rendered to text. */\n  bodyText: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  /** Identifies the primary key from the database as a BigInt. */\n  fullDatabaseId?: Maybe<Scalars['BigInt']>;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** Returns whether or not a comment has been minimized. */\n  isMinimized: Scalars['Boolean'];\n  /** Identifies the issue associated with the comment. */\n  issue: Issue;\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /**\n   * Returns why the comment was minimized. One of `abuse`, `off-topic`,\n   * `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and\n   * formatting of these values differs from the inputs to the `MinimizeComment` mutation.\n   */\n  minimizedReason?: Maybe<Scalars['String']>;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /**\n   * Returns the pull request associated with the comment, if this comment was made on a\n   * pull request.\n   */\n  pullRequest?: Maybe<PullRequest>;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** The repository associated with this node. */\n  repository: Repository;\n  /** The HTTP path for this issue comment */\n  resourcePath: Scalars['URI'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this issue comment */\n  url: Scalars['URI'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n  /** Check if the current viewer can minimize this object. */\n  viewerCanMinimize: Scalars['Boolean'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n};\n\n\n/** Represents a comment on an Issue. */\nexport type IssueCommentReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** Represents a comment on an Issue. */\nexport type IssueCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for IssueComment. */\nexport type IssueCommentConnection = {\n  __typename?: 'IssueCommentConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<IssueCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<IssueComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type IssueCommentEdge = {\n  __typename?: 'IssueCommentEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<IssueComment>;\n};\n\n/** Ways in which lists of issue comments can be ordered upon return. */\nexport type IssueCommentOrder = {\n  /** The direction in which to order issue comments by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order issue comments by. */\n  field: IssueCommentOrderField;\n};\n\n/** Properties by which issue comment connections can be ordered. */\nexport enum IssueCommentOrderField {\n  /** Order issue comments by update time */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** The connection type for Issue. */\nexport type IssueConnection = {\n  __typename?: 'IssueConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<IssueEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Issue>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** This aggregates issues opened by a user within one repository. */\nexport type IssueContributionsByRepository = {\n  __typename?: 'IssueContributionsByRepository';\n  /** The issue contributions. */\n  contributions: CreatedIssueContributionConnection;\n  /** The repository in which the issues were opened. */\n  repository: Repository;\n};\n\n\n/** This aggregates issues opened by a user within one repository. */\nexport type IssueContributionsByRepositoryContributionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n/** An edge in a connection. */\nexport type IssueEdge = {\n  __typename?: 'IssueEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Issue>;\n};\n\n/** Ways in which to filter lists of issues. */\nexport type IssueFilters = {\n  /**\n   * List issues assigned to given name. Pass in `null` for issues with no assigned\n   * user, and `*` for issues assigned to any user.\n   */\n  assignee?: InputMaybe<Scalars['String']>;\n  /** List issues created by given name. */\n  createdBy?: InputMaybe<Scalars['String']>;\n  /** List issues where the list of label names exist on the issue. */\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  /** List issues where the given name is mentioned in the issue. */\n  mentioned?: InputMaybe<Scalars['String']>;\n  /**\n   * List issues by given milestone argument. If an string representation of an\n   * integer is passed, it should refer to a milestone by its database ID. Pass in\n   * `null` for issues with no milestone, and `*` for issues that are assigned to any milestone.\n   */\n  milestone?: InputMaybe<Scalars['String']>;\n  /**\n   * List issues by given milestone argument. If an string representation of an\n   * integer is passed, it should refer to a milestone by its number field. Pass in\n   * `null` for issues with no milestone, and `*` for issues that are assigned to any milestone.\n   */\n  milestoneNumber?: InputMaybe<Scalars['String']>;\n  /** List issues that have been updated at or after the given date. */\n  since?: InputMaybe<Scalars['DateTime']>;\n  /** List issues filtered by the list of states given. */\n  states?: InputMaybe<Array<IssueState>>;\n  /** List issues subscribed to by viewer. */\n  viewerSubscribed?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Used for return value of Repository.issueOrPullRequest. */\nexport type IssueOrPullRequest = Issue | PullRequest;\n\n/** Ways in which lists of issues can be ordered upon return. */\nexport type IssueOrder = {\n  /** The direction in which to order issues by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order issues by. */\n  field: IssueOrderField;\n};\n\n/** Properties by which issue connections can be ordered. */\nexport enum IssueOrderField {\n  /** Order issues by comment count */\n  Comments = 'COMMENTS',\n  /** Order issues by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order issues by update time */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** The possible states of an issue. */\nexport enum IssueState {\n  /** An issue that has been closed */\n  Closed = 'CLOSED',\n  /** An issue that is still open */\n  Open = 'OPEN'\n}\n\n/** The possible state reasons of an issue. */\nexport enum IssueStateReason {\n  /** An issue that has been closed as completed */\n  Completed = 'COMPLETED',\n  /** An issue that has been closed as not planned */\n  NotPlanned = 'NOT_PLANNED',\n  /** An issue that has been reopened */\n  Reopened = 'REOPENED'\n}\n\n/** A repository issue template. */\nexport type IssueTemplate = {\n  __typename?: 'IssueTemplate';\n  /** The template purpose. */\n  about?: Maybe<Scalars['String']>;\n  /** The suggested assignees. */\n  assignees: UserConnection;\n  /** The suggested issue body. */\n  body?: Maybe<Scalars['String']>;\n  /** The template filename. */\n  filename: Scalars['String'];\n  /** The suggested issue labels */\n  labels?: Maybe<LabelConnection>;\n  /** The template name. */\n  name: Scalars['String'];\n  /** The suggested issue title. */\n  title?: Maybe<Scalars['String']>;\n};\n\n\n/** A repository issue template. */\nexport type IssueTemplateAssigneesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository issue template. */\nexport type IssueTemplateLabelsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LabelOrder>;\n};\n\n/** The connection type for IssueTimelineItem. */\nexport type IssueTimelineConnection = {\n  __typename?: 'IssueTimelineConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<IssueTimelineItemEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<IssueTimelineItem>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An item in an issue timeline */\nexport type IssueTimelineItem = AssignedEvent | ClosedEvent | Commit | CrossReferencedEvent | DemilestonedEvent | IssueComment | LabeledEvent | LockedEvent | MilestonedEvent | ReferencedEvent | RenamedTitleEvent | ReopenedEvent | SubscribedEvent | TransferredEvent | UnassignedEvent | UnlabeledEvent | UnlockedEvent | UnsubscribedEvent | UserBlockedEvent;\n\n/** An edge in a connection. */\nexport type IssueTimelineItemEdge = {\n  __typename?: 'IssueTimelineItemEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<IssueTimelineItem>;\n};\n\n/** An item in an issue timeline */\nexport type IssueTimelineItems = AddedToProjectEvent | AssignedEvent | ClosedEvent | CommentDeletedEvent | ConnectedEvent | ConvertedNoteToIssueEvent | ConvertedToDiscussionEvent | CrossReferencedEvent | DemilestonedEvent | DisconnectedEvent | IssueComment | LabeledEvent | LockedEvent | MarkedAsDuplicateEvent | MentionedEvent | MilestonedEvent | MovedColumnsInProjectEvent | PinnedEvent | ReferencedEvent | RemovedFromProjectEvent | RenamedTitleEvent | ReopenedEvent | SubscribedEvent | TransferredEvent | UnassignedEvent | UnlabeledEvent | UnlockedEvent | UnmarkedAsDuplicateEvent | UnpinnedEvent | UnsubscribedEvent | UserBlockedEvent;\n\n/** The connection type for IssueTimelineItems. */\nexport type IssueTimelineItemsConnection = {\n  __typename?: 'IssueTimelineItemsConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<IssueTimelineItemsEdge>>>;\n  /** Identifies the count of items after applying `before` and `after` filters. */\n  filteredCount: Scalars['Int'];\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<IssueTimelineItems>>>;\n  /** Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing. */\n  pageCount: Scalars['Int'];\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n  /** Identifies the date and time when the timeline was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** An edge in a connection. */\nexport type IssueTimelineItemsEdge = {\n  __typename?: 'IssueTimelineItemsEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<IssueTimelineItems>;\n};\n\n/** The possible item types found in a timeline. */\nexport enum IssueTimelineItemsItemType {\n  /** Represents a 'added_to_project' event on a given issue or pull request. */\n  AddedToProjectEvent = 'ADDED_TO_PROJECT_EVENT',\n  /** Represents an 'assigned' event on any assignable object. */\n  AssignedEvent = 'ASSIGNED_EVENT',\n  /** Represents a 'closed' event on any `Closable`. */\n  ClosedEvent = 'CLOSED_EVENT',\n  /** Represents a 'comment_deleted' event on a given issue or pull request. */\n  CommentDeletedEvent = 'COMMENT_DELETED_EVENT',\n  /** Represents a 'connected' event on a given issue or pull request. */\n  ConnectedEvent = 'CONNECTED_EVENT',\n  /** Represents a 'converted_note_to_issue' event on a given issue or pull request. */\n  ConvertedNoteToIssueEvent = 'CONVERTED_NOTE_TO_ISSUE_EVENT',\n  /** Represents a 'converted_to_discussion' event on a given issue. */\n  ConvertedToDiscussionEvent = 'CONVERTED_TO_DISCUSSION_EVENT',\n  /** Represents a mention made by one issue or pull request to another. */\n  CrossReferencedEvent = 'CROSS_REFERENCED_EVENT',\n  /** Represents a 'demilestoned' event on a given issue or pull request. */\n  DemilestonedEvent = 'DEMILESTONED_EVENT',\n  /** Represents a 'disconnected' event on a given issue or pull request. */\n  DisconnectedEvent = 'DISCONNECTED_EVENT',\n  /** Represents a comment on an Issue. */\n  IssueComment = 'ISSUE_COMMENT',\n  /** Represents a 'labeled' event on a given issue or pull request. */\n  LabeledEvent = 'LABELED_EVENT',\n  /** Represents a 'locked' event on a given issue or pull request. */\n  LockedEvent = 'LOCKED_EVENT',\n  /** Represents a 'marked_as_duplicate' event on a given issue or pull request. */\n  MarkedAsDuplicateEvent = 'MARKED_AS_DUPLICATE_EVENT',\n  /** Represents a 'mentioned' event on a given issue or pull request. */\n  MentionedEvent = 'MENTIONED_EVENT',\n  /** Represents a 'milestoned' event on a given issue or pull request. */\n  MilestonedEvent = 'MILESTONED_EVENT',\n  /** Represents a 'moved_columns_in_project' event on a given issue or pull request. */\n  MovedColumnsInProjectEvent = 'MOVED_COLUMNS_IN_PROJECT_EVENT',\n  /** Represents a 'pinned' event on a given issue or pull request. */\n  PinnedEvent = 'PINNED_EVENT',\n  /** Represents a 'referenced' event on a given `ReferencedSubject`. */\n  ReferencedEvent = 'REFERENCED_EVENT',\n  /** Represents a 'removed_from_project' event on a given issue or pull request. */\n  RemovedFromProjectEvent = 'REMOVED_FROM_PROJECT_EVENT',\n  /** Represents a 'renamed' event on a given issue or pull request */\n  RenamedTitleEvent = 'RENAMED_TITLE_EVENT',\n  /** Represents a 'reopened' event on any `Closable`. */\n  ReopenedEvent = 'REOPENED_EVENT',\n  /** Represents a 'subscribed' event on a given `Subscribable`. */\n  SubscribedEvent = 'SUBSCRIBED_EVENT',\n  /** Represents a 'transferred' event on a given issue or pull request. */\n  TransferredEvent = 'TRANSFERRED_EVENT',\n  /** Represents an 'unassigned' event on any assignable object. */\n  UnassignedEvent = 'UNASSIGNED_EVENT',\n  /** Represents an 'unlabeled' event on a given issue or pull request. */\n  UnlabeledEvent = 'UNLABELED_EVENT',\n  /** Represents an 'unlocked' event on a given issue or pull request. */\n  UnlockedEvent = 'UNLOCKED_EVENT',\n  /** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */\n  UnmarkedAsDuplicateEvent = 'UNMARKED_AS_DUPLICATE_EVENT',\n  /** Represents an 'unpinned' event on a given issue or pull request. */\n  UnpinnedEvent = 'UNPINNED_EVENT',\n  /** Represents an 'unsubscribed' event on a given `Subscribable`. */\n  UnsubscribedEvent = 'UNSUBSCRIBED_EVENT',\n  /** Represents a 'user_blocked' event on a given user. */\n  UserBlockedEvent = 'USER_BLOCKED_EVENT'\n}\n\n/** Represents a user signing up for a GitHub account. */\nexport type JoinedGitHubContribution = Contribution & {\n  __typename?: 'JoinedGitHubContribution';\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   */\n  isRestricted: Scalars['Boolean'];\n  /** When this contribution was made. */\n  occurredAt: Scalars['DateTime'];\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this contribution. */\n  url: Scalars['URI'];\n  /** The user who made this contribution. */\n  user: User;\n};\n\n/** A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository. */\nexport type Label = Node & {\n  __typename?: 'Label';\n  /** Identifies the label color. */\n  color: Scalars['String'];\n  /** Identifies the date and time when the label was created. */\n  createdAt?: Maybe<Scalars['DateTime']>;\n  /** A brief description of this label. */\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** Indicates whether or not this is a default label. */\n  isDefault: Scalars['Boolean'];\n  /** A list of issues associated with this label. */\n  issues: IssueConnection;\n  /** Identifies the label name. */\n  name: Scalars['String'];\n  /** A list of pull requests associated with this label. */\n  pullRequests: PullRequestConnection;\n  /** The repository associated with this label. */\n  repository: Repository;\n  /** The HTTP path for this label. */\n  resourcePath: Scalars['URI'];\n  /** Identifies the date and time when the label was last updated. */\n  updatedAt?: Maybe<Scalars['DateTime']>;\n  /** The HTTP URL for this label. */\n  url: Scalars['URI'];\n};\n\n\n/** A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository. */\nexport type LabelIssuesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filterBy?: InputMaybe<IssueFilters>;\n  first?: InputMaybe<Scalars['Int']>;\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<IssueState>>;\n};\n\n\n/** A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository. */\nexport type LabelPullRequestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  baseRefName?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  headRefName?: InputMaybe<Scalars['String']>;\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n/** The connection type for Label. */\nexport type LabelConnection = {\n  __typename?: 'LabelConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LabelEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Label>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type LabelEdge = {\n  __typename?: 'LabelEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Label>;\n};\n\n/** Ways in which lists of labels can be ordered upon return. */\nexport type LabelOrder = {\n  /** The direction in which to order labels by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order labels by. */\n  field: LabelOrderField;\n};\n\n/** Properties by which label connections can be ordered. */\nexport enum LabelOrderField {\n  /** Order labels by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order labels by name */\n  Name = 'NAME'\n}\n\n/** An object that can have labels assigned to it. */\nexport type Labelable = {\n  /** A list of labels associated with the object. */\n  labels?: Maybe<LabelConnection>;\n};\n\n\n/** An object that can have labels assigned to it. */\nexport type LabelableLabelsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LabelOrder>;\n};\n\n/** Represents a 'labeled' event on a given issue or pull request. */\nexport type LabeledEvent = Node & {\n  __typename?: 'LabeledEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Identifies the label associated with the 'labeled' event. */\n  label: Label;\n  /** Identifies the `Labelable` associated with the event. */\n  labelable: Labelable;\n};\n\n/** Represents a given language found in repositories. */\nexport type Language = Node & {\n  __typename?: 'Language';\n  /** The color defined for the current language. */\n  color?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The name of the current language. */\n  name: Scalars['String'];\n};\n\n/** A list of languages associated with the parent. */\nexport type LanguageConnection = {\n  __typename?: 'LanguageConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LanguageEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Language>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n  /** The total size in bytes of files written in that language. */\n  totalSize: Scalars['Int'];\n};\n\n/** Represents the language of a repository. */\nexport type LanguageEdge = {\n  __typename?: 'LanguageEdge';\n  cursor: Scalars['String'];\n  node: Language;\n  /** The number of bytes of code written in the language. */\n  size: Scalars['Int'];\n};\n\n/** Ordering options for language connections. */\nexport type LanguageOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order languages by. */\n  field: LanguageOrderField;\n};\n\n/** Properties by which language connections can be ordered. */\nexport enum LanguageOrderField {\n  /** Order languages by the size of all files containing the language */\n  Size = 'SIZE'\n}\n\n/** A repository's open source license */\nexport type License = Node & {\n  __typename?: 'License';\n  /** The full text of the license */\n  body: Scalars['String'];\n  /** The conditions set by the license */\n  conditions: Array<Maybe<LicenseRule>>;\n  /** A human-readable description of the license */\n  description?: Maybe<Scalars['String']>;\n  /** Whether the license should be featured */\n  featured: Scalars['Boolean'];\n  /** Whether the license should be displayed in license pickers */\n  hidden: Scalars['Boolean'];\n  id: Scalars['ID'];\n  /** Instructions on how to implement the license */\n  implementation?: Maybe<Scalars['String']>;\n  /** The lowercased SPDX ID of the license */\n  key: Scalars['String'];\n  /** The limitations set by the license */\n  limitations: Array<Maybe<LicenseRule>>;\n  /** The license full name specified by <https://spdx.org/licenses> */\n  name: Scalars['String'];\n  /** Customary short name if applicable (e.g, GPLv3) */\n  nickname?: Maybe<Scalars['String']>;\n  /** The permissions set by the license */\n  permissions: Array<Maybe<LicenseRule>>;\n  /** Whether the license is a pseudo-license placeholder (e.g., other, no-license) */\n  pseudoLicense: Scalars['Boolean'];\n  /** Short identifier specified by <https://spdx.org/licenses> */\n  spdxId?: Maybe<Scalars['String']>;\n  /** URL to the license on <https://choosealicense.com> */\n  url?: Maybe<Scalars['URI']>;\n};\n\n/** Describes a License's conditions, permissions, and limitations */\nexport type LicenseRule = {\n  __typename?: 'LicenseRule';\n  /** A description of the rule */\n  description: Scalars['String'];\n  /** The machine-readable rule key */\n  key: Scalars['String'];\n  /** The human-readable rule label */\n  label: Scalars['String'];\n};\n\n/** Autogenerated input type of LinkProjectV2ToRepository */\nexport type LinkProjectV2ToRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the project to link to the repository. */\n  projectId: Scalars['ID'];\n  /** The ID of the repository to link to the project. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of LinkProjectV2ToRepository */\nexport type LinkProjectV2ToRepositoryPayload = {\n  __typename?: 'LinkProjectV2ToRepositoryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The repository the project is linked to. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of LinkProjectV2ToTeam */\nexport type LinkProjectV2ToTeamInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the project to link to the team. */\n  projectId: Scalars['ID'];\n  /** The ID of the team to link to the project. */\n  teamId: Scalars['ID'];\n};\n\n/** Autogenerated return type of LinkProjectV2ToTeam */\nexport type LinkProjectV2ToTeamPayload = {\n  __typename?: 'LinkProjectV2ToTeamPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The team the project is linked to */\n  team?: Maybe<Team>;\n};\n\n/** Autogenerated input type of LinkRepositoryToProject */\nexport type LinkRepositoryToProjectInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Project to link to a Repository */\n  projectId: Scalars['ID'];\n  /** The ID of the Repository to link to a Project. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of LinkRepositoryToProject */\nexport type LinkRepositoryToProjectPayload = {\n  __typename?: 'LinkRepositoryToProjectPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The linked Project. */\n  project?: Maybe<Project>;\n  /** The linked Repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** A branch linked to an issue. */\nexport type LinkedBranch = Node & {\n  __typename?: 'LinkedBranch';\n  id: Scalars['ID'];\n  /** The branch's ref. */\n  ref?: Maybe<Ref>;\n};\n\n/** The connection type for LinkedBranch. */\nexport type LinkedBranchConnection = {\n  __typename?: 'LinkedBranchConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LinkedBranchEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<LinkedBranch>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type LinkedBranchEdge = {\n  __typename?: 'LinkedBranchEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<LinkedBranch>;\n};\n\n/** Autogenerated input type of LockLockable */\nexport type LockLockableInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** A reason for why the item will be locked. */\n  lockReason?: InputMaybe<LockReason>;\n  /** ID of the item to be locked. */\n  lockableId: Scalars['ID'];\n};\n\n/** Autogenerated return type of LockLockable */\nexport type LockLockablePayload = {\n  __typename?: 'LockLockablePayload';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The item that was locked. */\n  lockedRecord?: Maybe<Lockable>;\n};\n\n/** The possible reasons that an issue or pull request was locked. */\nexport enum LockReason {\n  /** The issue or pull request was locked because the conversation was off-topic. */\n  OffTopic = 'OFF_TOPIC',\n  /** The issue or pull request was locked because the conversation was resolved. */\n  Resolved = 'RESOLVED',\n  /** The issue or pull request was locked because the conversation was spam. */\n  Spam = 'SPAM',\n  /** The issue or pull request was locked because the conversation was too heated. */\n  TooHeated = 'TOO_HEATED'\n}\n\n/** An object that can be locked. */\nexport type Lockable = {\n  /** Reason that the conversation was locked. */\n  activeLockReason?: Maybe<LockReason>;\n  /** `true` if the object is locked */\n  locked: Scalars['Boolean'];\n};\n\n/** Represents a 'locked' event on a given issue or pull request. */\nexport type LockedEvent = Node & {\n  __typename?: 'LockedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Reason that the conversation was locked (optional). */\n  lockReason?: Maybe<LockReason>;\n  /** Object that was locked. */\n  lockable: Lockable;\n};\n\n/** A placeholder user for attribution of imported data on GitHub. */\nexport type Mannequin = Actor & Node & UniformResourceLocatable & {\n  __typename?: 'Mannequin';\n  /** A URL pointing to the GitHub App's public avatar. */\n  avatarUrl: Scalars['URI'];\n  /** The user that has claimed the data attributed to this mannequin. */\n  claimant?: Maybe<User>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The mannequin's email on the source instance. */\n  email?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The username of the actor. */\n  login: Scalars['String'];\n  /** The HTML path to this resource. */\n  resourcePath: Scalars['URI'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The URL to this resource. */\n  url: Scalars['URI'];\n};\n\n\n/** A placeholder user for attribution of imported data on GitHub. */\nexport type MannequinAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for Mannequin. */\nexport type MannequinConnection = {\n  __typename?: 'MannequinConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<MannequinEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Mannequin>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents a mannequin. */\nexport type MannequinEdge = {\n  __typename?: 'MannequinEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Mannequin>;\n};\n\n/** Ordering options for mannequins. */\nexport type MannequinOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order mannequins by. */\n  field: MannequinOrderField;\n};\n\n/** Properties by which mannequins can be ordered. */\nexport enum MannequinOrderField {\n  /** Order mannequins why when they were created. */\n  CreatedAt = 'CREATED_AT',\n  /** Order mannequins alphabetically by their source login. */\n  Login = 'LOGIN'\n}\n\n/** Autogenerated input type of MarkDiscussionCommentAsAnswer */\nexport type MarkDiscussionCommentAsAnswerInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the discussion comment to mark as an answer. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of MarkDiscussionCommentAsAnswer */\nexport type MarkDiscussionCommentAsAnswerPayload = {\n  __typename?: 'MarkDiscussionCommentAsAnswerPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The discussion that includes the chosen comment. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of MarkFileAsViewed */\nexport type MarkFileAsViewedInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The path of the file to mark as viewed */\n  path: Scalars['String'];\n  /** The Node ID of the pull request. */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of MarkFileAsViewed */\nexport type MarkFileAsViewedPayload = {\n  __typename?: 'MarkFileAsViewedPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated pull request. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of MarkProjectV2AsTemplate */\nexport type MarkProjectV2AsTemplateInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Project to mark as a template. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of MarkProjectV2AsTemplate */\nexport type MarkProjectV2AsTemplatePayload = {\n  __typename?: 'MarkProjectV2AsTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The project. */\n  projectV2?: Maybe<ProjectV2>;\n};\n\n/** Autogenerated input type of MarkPullRequestReadyForReview */\nexport type MarkPullRequestReadyForReviewInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the pull request to be marked as ready for review. */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of MarkPullRequestReadyForReview */\nexport type MarkPullRequestReadyForReviewPayload = {\n  __typename?: 'MarkPullRequestReadyForReviewPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The pull request that is ready for review. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'marked_as_duplicate' event on a given issue or pull request. */\nexport type MarkedAsDuplicateEvent = Node & {\n  __typename?: 'MarkedAsDuplicateEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** The authoritative issue or pull request which has been duplicated by another. */\n  canonical?: Maybe<IssueOrPullRequest>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The issue or pull request which has been marked as a duplicate of another. */\n  duplicate?: Maybe<IssueOrPullRequest>;\n  id: Scalars['ID'];\n  /** Canonical and duplicate belong to different repositories. */\n  isCrossRepository: Scalars['Boolean'];\n};\n\n/** A public description of a Marketplace category. */\nexport type MarketplaceCategory = Node & {\n  __typename?: 'MarketplaceCategory';\n  /** The category's description. */\n  description?: Maybe<Scalars['String']>;\n  /** The technical description of how apps listed in this category work with GitHub. */\n  howItWorks?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The category's name. */\n  name: Scalars['String'];\n  /** How many Marketplace listings have this as their primary category. */\n  primaryListingCount: Scalars['Int'];\n  /** The HTTP path for this Marketplace category. */\n  resourcePath: Scalars['URI'];\n  /** How many Marketplace listings have this as their secondary category. */\n  secondaryListingCount: Scalars['Int'];\n  /** The short name of the category used in its URL. */\n  slug: Scalars['String'];\n  /** The HTTP URL for this Marketplace category. */\n  url: Scalars['URI'];\n};\n\n/** A listing in the GitHub integration marketplace. */\nexport type MarketplaceListing = Node & {\n  __typename?: 'MarketplaceListing';\n  /** The GitHub App this listing represents. */\n  app?: Maybe<App>;\n  /** URL to the listing owner's company site. */\n  companyUrl?: Maybe<Scalars['URI']>;\n  /** The HTTP path for configuring access to the listing's integration or OAuth app */\n  configurationResourcePath: Scalars['URI'];\n  /** The HTTP URL for configuring access to the listing's integration or OAuth app */\n  configurationUrl: Scalars['URI'];\n  /** URL to the listing's documentation. */\n  documentationUrl?: Maybe<Scalars['URI']>;\n  /** The listing's detailed description. */\n  extendedDescription?: Maybe<Scalars['String']>;\n  /** The listing's detailed description rendered to HTML. */\n  extendedDescriptionHTML: Scalars['HTML'];\n  /** The listing's introductory description. */\n  fullDescription: Scalars['String'];\n  /** The listing's introductory description rendered to HTML. */\n  fullDescriptionHTML: Scalars['HTML'];\n  /** Does this listing have any plans with a free trial? */\n  hasPublishedFreeTrialPlans: Scalars['Boolean'];\n  /** Does this listing have a terms of service link? */\n  hasTermsOfService: Scalars['Boolean'];\n  /** Whether the creator of the app is a verified org */\n  hasVerifiedOwner: Scalars['Boolean'];\n  /** A technical description of how this app works with GitHub. */\n  howItWorks?: Maybe<Scalars['String']>;\n  /** The listing's technical description rendered to HTML. */\n  howItWorksHTML: Scalars['HTML'];\n  id: Scalars['ID'];\n  /** URL to install the product to the viewer's account or organization. */\n  installationUrl?: Maybe<Scalars['URI']>;\n  /** Whether this listing's app has been installed for the current viewer */\n  installedForViewer: Scalars['Boolean'];\n  /** Whether this listing has been removed from the Marketplace. */\n  isArchived: Scalars['Boolean'];\n  /**\n   * Whether this listing is still an editable draft that has not been submitted\n   * for review and is not publicly visible in the Marketplace.\n   */\n  isDraft: Scalars['Boolean'];\n  /** Whether the product this listing represents is available as part of a paid plan. */\n  isPaid: Scalars['Boolean'];\n  /** Whether this listing has been approved for display in the Marketplace. */\n  isPublic: Scalars['Boolean'];\n  /** Whether this listing has been rejected by GitHub for display in the Marketplace. */\n  isRejected: Scalars['Boolean'];\n  /** Whether this listing has been approved for unverified display in the Marketplace. */\n  isUnverified: Scalars['Boolean'];\n  /** Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace. */\n  isUnverifiedPending: Scalars['Boolean'];\n  /** Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace. */\n  isVerificationPendingFromDraft: Scalars['Boolean'];\n  /** Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace. */\n  isVerificationPendingFromUnverified: Scalars['Boolean'];\n  /** Whether this listing has been approved for verified display in the Marketplace. */\n  isVerified: Scalars['Boolean'];\n  /** The hex color code, without the leading '#', for the logo background. */\n  logoBackgroundColor: Scalars['String'];\n  /** URL for the listing's logo image. */\n  logoUrl?: Maybe<Scalars['URI']>;\n  /** The listing's full name. */\n  name: Scalars['String'];\n  /** The listing's very short description without a trailing period or ampersands. */\n  normalizedShortDescription: Scalars['String'];\n  /** URL to the listing's detailed pricing. */\n  pricingUrl?: Maybe<Scalars['URI']>;\n  /** The category that best describes the listing. */\n  primaryCategory: MarketplaceCategory;\n  /** URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL. */\n  privacyPolicyUrl: Scalars['URI'];\n  /** The HTTP path for the Marketplace listing. */\n  resourcePath: Scalars['URI'];\n  /** The URLs for the listing's screenshots. */\n  screenshotUrls: Array<Maybe<Scalars['String']>>;\n  /** An alternate category that describes the listing. */\n  secondaryCategory?: Maybe<MarketplaceCategory>;\n  /** The listing's very short description. */\n  shortDescription: Scalars['String'];\n  /** The short name of the listing used in its URL. */\n  slug: Scalars['String'];\n  /** URL to the listing's status page. */\n  statusUrl?: Maybe<Scalars['URI']>;\n  /** An email address for support for this listing's app. */\n  supportEmail?: Maybe<Scalars['String']>;\n  /**\n   * Either a URL or an email address for support for this listing's app, may\n   * return an empty string for listings that do not require a support URL.\n   */\n  supportUrl: Scalars['URI'];\n  /** URL to the listing's terms of service. */\n  termsOfServiceUrl?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the Marketplace listing. */\n  url: Scalars['URI'];\n  /** Can the current viewer add plans for this Marketplace listing. */\n  viewerCanAddPlans: Scalars['Boolean'];\n  /** Can the current viewer approve this Marketplace listing. */\n  viewerCanApprove: Scalars['Boolean'];\n  /** Can the current viewer delist this Marketplace listing. */\n  viewerCanDelist: Scalars['Boolean'];\n  /** Can the current viewer edit this Marketplace listing. */\n  viewerCanEdit: Scalars['Boolean'];\n  /**\n   * Can the current viewer edit the primary and secondary category of this\n   * Marketplace listing.\n   */\n  viewerCanEditCategories: Scalars['Boolean'];\n  /** Can the current viewer edit the plans for this Marketplace listing. */\n  viewerCanEditPlans: Scalars['Boolean'];\n  /**\n   * Can the current viewer return this Marketplace listing to draft state\n   * so it becomes editable again.\n   */\n  viewerCanRedraft: Scalars['Boolean'];\n  /**\n   * Can the current viewer reject this Marketplace listing by returning it to\n   * an editable draft state or rejecting it entirely.\n   */\n  viewerCanReject: Scalars['Boolean'];\n  /**\n   * Can the current viewer request this listing be reviewed for display in\n   * the Marketplace as verified.\n   */\n  viewerCanRequestApproval: Scalars['Boolean'];\n  /** Indicates whether the current user has an active subscription to this Marketplace listing. */\n  viewerHasPurchased: Scalars['Boolean'];\n  /**\n   * Indicates if the current user has purchased a subscription to this Marketplace listing\n   * for all of the organizations the user owns.\n   */\n  viewerHasPurchasedForAllOrganizations: Scalars['Boolean'];\n  /** Does the current viewer role allow them to administer this Marketplace listing. */\n  viewerIsListingAdmin: Scalars['Boolean'];\n};\n\n\n/** A listing in the GitHub integration marketplace. */\nexport type MarketplaceListingLogoUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n/** Look up Marketplace Listings */\nexport type MarketplaceListingConnection = {\n  __typename?: 'MarketplaceListingConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<MarketplaceListingEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<MarketplaceListing>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type MarketplaceListingEdge = {\n  __typename?: 'MarketplaceListingEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<MarketplaceListing>;\n};\n\n/** Entities that have members who can set status messages. */\nexport type MemberStatusable = {\n  /** Get the status messages members of this entity have set that are either public or visible only to the organization. */\n  memberStatuses: UserStatusConnection;\n};\n\n\n/** Entities that have members who can set status messages. */\nexport type MemberStatusableMemberStatusesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<UserStatusOrder>;\n};\n\n/** Audit log entry for a members_can_delete_repos.clear event. */\nexport type MembersCanDeleteReposClearAuditEntry = AuditEntry & EnterpriseAuditEntryData & Node & OrganizationAuditEntryData & {\n  __typename?: 'MembersCanDeleteReposClearAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The HTTP path for this enterprise. */\n  enterpriseResourcePath?: Maybe<Scalars['URI']>;\n  /** The slug of the enterprise. */\n  enterpriseSlug?: Maybe<Scalars['String']>;\n  /** The HTTP URL for this enterprise. */\n  enterpriseUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a members_can_delete_repos.disable event. */\nexport type MembersCanDeleteReposDisableAuditEntry = AuditEntry & EnterpriseAuditEntryData & Node & OrganizationAuditEntryData & {\n  __typename?: 'MembersCanDeleteReposDisableAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The HTTP path for this enterprise. */\n  enterpriseResourcePath?: Maybe<Scalars['URI']>;\n  /** The slug of the enterprise. */\n  enterpriseSlug?: Maybe<Scalars['String']>;\n  /** The HTTP URL for this enterprise. */\n  enterpriseUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a members_can_delete_repos.enable event. */\nexport type MembersCanDeleteReposEnableAuditEntry = AuditEntry & EnterpriseAuditEntryData & Node & OrganizationAuditEntryData & {\n  __typename?: 'MembersCanDeleteReposEnableAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The HTTP path for this enterprise. */\n  enterpriseResourcePath?: Maybe<Scalars['URI']>;\n  /** The slug of the enterprise. */\n  enterpriseSlug?: Maybe<Scalars['String']>;\n  /** The HTTP URL for this enterprise. */\n  enterpriseUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Represents a 'mentioned' event on a given issue or pull request. */\nexport type MentionedEvent = Node & {\n  __typename?: 'MentionedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n};\n\n/** Autogenerated input type of MergeBranch */\nexport type MergeBranchInput = {\n  /** The email address to associate with this commit. */\n  authorEmail?: InputMaybe<Scalars['String']>;\n  /** The name of the base branch that the provided head will be merged into. */\n  base: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Message to use for the merge commit. If omitted, a default will be used. */\n  commitMessage?: InputMaybe<Scalars['String']>;\n  /** The head to merge into the base branch. This can be a branch name or a commit GitObjectID. */\n  head: Scalars['String'];\n  /** The Node ID of the Repository containing the base branch that will be modified. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of MergeBranch */\nexport type MergeBranchPayload = {\n  __typename?: 'MergeBranchPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The resulting merge Commit. */\n  mergeCommit?: Maybe<Commit>;\n};\n\n/** The possible default commit messages for merges. */\nexport enum MergeCommitMessage {\n  /** Default to a blank commit message. */\n  Blank = 'BLANK',\n  /** Default to the pull request's body. */\n  PrBody = 'PR_BODY',\n  /** Default to the pull request's title. */\n  PrTitle = 'PR_TITLE'\n}\n\n/** The possible default commit titles for merges. */\nexport enum MergeCommitTitle {\n  /** Default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name). */\n  MergeMessage = 'MERGE_MESSAGE',\n  /** Default to the pull request's title. */\n  PrTitle = 'PR_TITLE'\n}\n\n/** Autogenerated input type of MergePullRequest */\nexport type MergePullRequestInput = {\n  /** The email address to associate with this merge. */\n  authorEmail?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Commit body to use for the merge commit; if omitted, a default message will be used */\n  commitBody?: InputMaybe<Scalars['String']>;\n  /** Commit headline to use for the merge commit; if omitted, a default message will be used. */\n  commitHeadline?: InputMaybe<Scalars['String']>;\n  /** OID that the pull request head ref must match to allow merge; if omitted, no check is performed. */\n  expectedHeadOid?: InputMaybe<Scalars['GitObjectID']>;\n  /** The merge method to use. If omitted, defaults to 'MERGE' */\n  mergeMethod?: InputMaybe<PullRequestMergeMethod>;\n  /** ID of the pull request to be merged. */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of MergePullRequest */\nexport type MergePullRequestPayload = {\n  __typename?: 'MergePullRequestPayload';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The pull request that was merged. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** The queue of pull request entries to be merged into a protected branch in a repository. */\nexport type MergeQueue = Node & {\n  __typename?: 'MergeQueue';\n  /** The configuration for this merge queue */\n  configuration?: Maybe<MergeQueueConfiguration>;\n  /** The entries in the queue */\n  entries?: Maybe<MergeQueueEntryConnection>;\n  id: Scalars['ID'];\n  /** The estimated time in seconds until a newly added entry would be merged */\n  nextEntryEstimatedTimeToMerge?: Maybe<Scalars['Int']>;\n  /** The repository this merge queue belongs to */\n  repository?: Maybe<Repository>;\n  /** The HTTP path for this merge queue */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this merge queue */\n  url: Scalars['URI'];\n};\n\n\n/** The queue of pull request entries to be merged into a protected branch in a repository. */\nexport type MergeQueueEntriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Configuration for a MergeQueue */\nexport type MergeQueueConfiguration = {\n  __typename?: 'MergeQueueConfiguration';\n  /** The amount of time in minutes to wait for a check response before considering it a failure. */\n  checkResponseTimeout?: Maybe<Scalars['Int']>;\n  /** The maximum number of entries to build at once. */\n  maximumEntriesToBuild?: Maybe<Scalars['Int']>;\n  /** The maximum number of entries to merge at once. */\n  maximumEntriesToMerge?: Maybe<Scalars['Int']>;\n  /** The merge method to use for this queue. */\n  mergeMethod?: Maybe<PullRequestMergeMethod>;\n  /** The strategy to use when merging entries. */\n  mergingStrategy?: Maybe<MergeQueueMergingStrategy>;\n  /** The minimum number of entries required to merge at once. */\n  minimumEntriesToMerge?: Maybe<Scalars['Int']>;\n  /**\n   * The amount of time in minutes to wait before ignoring the minumum number of\n   * entries in the queue requirement and merging a collection of entries\n   */\n  minimumEntriesToMergeWaitTime?: Maybe<Scalars['Int']>;\n};\n\n/** Entries in a MergeQueue */\nexport type MergeQueueEntry = Node & {\n  __typename?: 'MergeQueueEntry';\n  /** The base commit for this entry */\n  baseCommit?: Maybe<Commit>;\n  /** The date and time this entry was added to the merge queue */\n  enqueuedAt: Scalars['DateTime'];\n  /** The actor that enqueued this entry */\n  enqueuer: Actor;\n  /** The estimated time in seconds until this entry will be merged */\n  estimatedTimeToMerge?: Maybe<Scalars['Int']>;\n  /** The head commit for this entry */\n  headCommit?: Maybe<Commit>;\n  id: Scalars['ID'];\n  /** Whether this pull request should jump the queue */\n  jump: Scalars['Boolean'];\n  /** The merge queue that this entry belongs to */\n  mergeQueue?: Maybe<MergeQueue>;\n  /** The position of this entry in the queue */\n  position: Scalars['Int'];\n  /** The pull request that will be added to a merge group */\n  pullRequest?: Maybe<PullRequest>;\n  /** Does this pull request need to be deployed on its own */\n  solo: Scalars['Boolean'];\n  /** The state of this entry in the queue */\n  state: MergeQueueEntryState;\n};\n\n/** The connection type for MergeQueueEntry. */\nexport type MergeQueueEntryConnection = {\n  __typename?: 'MergeQueueEntryConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<MergeQueueEntryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<MergeQueueEntry>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type MergeQueueEntryEdge = {\n  __typename?: 'MergeQueueEntryEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<MergeQueueEntry>;\n};\n\n/** The possible states for a merge queue entry. */\nexport enum MergeQueueEntryState {\n  /** The entry is currently waiting for checks to pass. */\n  AwaitingChecks = 'AWAITING_CHECKS',\n  /** The entry is currently locked. */\n  Locked = 'LOCKED',\n  /** The entry is currently mergeable. */\n  Mergeable = 'MERGEABLE',\n  /** The entry is currently queued. */\n  Queued = 'QUEUED',\n  /** The entry is currently unmergeable. */\n  Unmergeable = 'UNMERGEABLE'\n}\n\n/** The possible merging strategies for a merge queue. */\nexport enum MergeQueueMergingStrategy {\n  /** Entries only allowed to merge if they are passing. */\n  Allgreen = 'ALLGREEN',\n  /** Failing Entires are allowed to merge if they are with a passing entry. */\n  Headgreen = 'HEADGREEN'\n}\n\n/** Detailed status information about a pull request merge. */\nexport enum MergeStateStatus {\n  /** The head ref is out of date. */\n  Behind = 'BEHIND',\n  /** The merge is blocked. */\n  Blocked = 'BLOCKED',\n  /** Mergeable and passing commit status. */\n  Clean = 'CLEAN',\n  /** The merge commit cannot be cleanly created. */\n  Dirty = 'DIRTY',\n  /**\n   * The merge is blocked due to the pull request being a draft.\n   * @deprecated DRAFT state will be removed from this enum and `isDraft` should be used instead Use PullRequest.isDraft instead. Removal on 2021-01-01 UTC.\n   */\n  Draft = 'DRAFT',\n  /** Mergeable with passing commit status and pre-receive hooks. */\n  HasHooks = 'HAS_HOOKS',\n  /** The state cannot currently be determined. */\n  Unknown = 'UNKNOWN',\n  /** Mergeable with non-passing commit status. */\n  Unstable = 'UNSTABLE'\n}\n\n/** Whether or not a PullRequest can be merged. */\nexport enum MergeableState {\n  /** The pull request cannot be merged due to merge conflicts. */\n  Conflicting = 'CONFLICTING',\n  /** The pull request can be merged. */\n  Mergeable = 'MERGEABLE',\n  /** The mergeability of the pull request is still being calculated. */\n  Unknown = 'UNKNOWN'\n}\n\n/** Represents a 'merged' event on a given pull request. */\nexport type MergedEvent = Node & UniformResourceLocatable & {\n  __typename?: 'MergedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the commit associated with the `merge` event. */\n  commit?: Maybe<Commit>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Identifies the Ref associated with the `merge` event. */\n  mergeRef?: Maybe<Ref>;\n  /** Identifies the name of the Ref associated with the `merge` event. */\n  mergeRefName: Scalars['String'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** The HTTP path for this merged event. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this merged event. */\n  url: Scalars['URI'];\n};\n\n/** Represents a GitHub Enterprise Importer (GEI) migration. */\nexport type Migration = {\n  /** The migration flag to continue on error. */\n  continueOnError: Scalars['Boolean'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['String']>;\n  /** The reason the migration failed. */\n  failureReason?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The URL for the migration log (expires 1 day after migration completes). */\n  migrationLogUrl?: Maybe<Scalars['URI']>;\n  /** The migration source. */\n  migrationSource: MigrationSource;\n  /** The target repository name. */\n  repositoryName: Scalars['String'];\n  /** The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`. */\n  sourceUrl: Scalars['URI'];\n  /** The migration state. */\n  state: MigrationState;\n  /**\n   * The number of warnings encountered for this migration. To review the warnings,\n   * check the [Migration Log](https://docs.github.com/en/migrations/using-github-enterprise-importer/completing-your-migration-with-github-enterprise-importer/accessing-your-migration-logs-for-github-enterprise-importer).\n   */\n  warningsCount: Scalars['Int'];\n};\n\n/** A GitHub Enterprise Importer (GEI) migration source. */\nexport type MigrationSource = Node & {\n  __typename?: 'MigrationSource';\n  id: Scalars['ID'];\n  /** The migration source name. */\n  name: Scalars['String'];\n  /** The migration source type. */\n  type: MigrationSourceType;\n  /** The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`. */\n  url: Scalars['URI'];\n};\n\n/** Represents the different GitHub Enterprise Importer (GEI) migration sources. */\nexport enum MigrationSourceType {\n  /** An Azure DevOps migration source. */\n  AzureDevops = 'AZURE_DEVOPS',\n  /** A Bitbucket Server migration source. */\n  BitbucketServer = 'BITBUCKET_SERVER',\n  /** A GitHub Migration API source. */\n  GithubArchive = 'GITHUB_ARCHIVE'\n}\n\n/** The GitHub Enterprise Importer (GEI) migration state. */\nexport enum MigrationState {\n  /** The migration has failed. */\n  Failed = 'FAILED',\n  /** The migration has invalid credentials. */\n  FailedValidation = 'FAILED_VALIDATION',\n  /** The migration is in progress. */\n  InProgress = 'IN_PROGRESS',\n  /** The migration has not started. */\n  NotStarted = 'NOT_STARTED',\n  /** The migration needs to have its credentials validated. */\n  PendingValidation = 'PENDING_VALIDATION',\n  /** The migration has been queued. */\n  Queued = 'QUEUED',\n  /** The migration has succeeded. */\n  Succeeded = 'SUCCEEDED'\n}\n\n/** Represents a Milestone object on a given repository. */\nexport type Milestone = Closable & Node & UniformResourceLocatable & {\n  __typename?: 'Milestone';\n  /** Indicates if the object is closed (definition of closed may depend on type) */\n  closed: Scalars['Boolean'];\n  /** Identifies the date and time when the object was closed. */\n  closedAt?: Maybe<Scalars['DateTime']>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the actor who created the milestone. */\n  creator?: Maybe<Actor>;\n  /** Identifies the description of the milestone. */\n  description?: Maybe<Scalars['String']>;\n  /** Identifies the due date of the milestone. */\n  dueOn?: Maybe<Scalars['DateTime']>;\n  id: Scalars['ID'];\n  /** A list of issues associated with the milestone. */\n  issues: IssueConnection;\n  /** Identifies the number of the milestone. */\n  number: Scalars['Int'];\n  /** Identifies the percentage complete for the milestone */\n  progressPercentage: Scalars['Float'];\n  /** A list of pull requests associated with the milestone. */\n  pullRequests: PullRequestConnection;\n  /** The repository associated with this milestone. */\n  repository: Repository;\n  /** The HTTP path for this milestone */\n  resourcePath: Scalars['URI'];\n  /** Identifies the state of the milestone. */\n  state: MilestoneState;\n  /** Identifies the title of the milestone. */\n  title: Scalars['String'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this milestone */\n  url: Scalars['URI'];\n  /** Indicates if the object can be closed by the viewer. */\n  viewerCanClose: Scalars['Boolean'];\n  /** Indicates if the object can be reopened by the viewer. */\n  viewerCanReopen: Scalars['Boolean'];\n};\n\n\n/** Represents a Milestone object on a given repository. */\nexport type MilestoneIssuesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filterBy?: InputMaybe<IssueFilters>;\n  first?: InputMaybe<Scalars['Int']>;\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<IssueState>>;\n};\n\n\n/** Represents a Milestone object on a given repository. */\nexport type MilestonePullRequestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  baseRefName?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  headRefName?: InputMaybe<Scalars['String']>;\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n/** The connection type for Milestone. */\nexport type MilestoneConnection = {\n  __typename?: 'MilestoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<MilestoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Milestone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type MilestoneEdge = {\n  __typename?: 'MilestoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Milestone>;\n};\n\n/** Types that can be inside a Milestone. */\nexport type MilestoneItem = Issue | PullRequest;\n\n/** Ordering options for milestone connections. */\nexport type MilestoneOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order milestones by. */\n  field: MilestoneOrderField;\n};\n\n/** Properties by which milestone connections can be ordered. */\nexport enum MilestoneOrderField {\n  /** Order milestones by when they were created. */\n  CreatedAt = 'CREATED_AT',\n  /** Order milestones by when they are due. */\n  DueDate = 'DUE_DATE',\n  /** Order milestones by their number. */\n  Number = 'NUMBER',\n  /** Order milestones by when they were last updated. */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** The possible states of a milestone. */\nexport enum MilestoneState {\n  /** A milestone that has been closed. */\n  Closed = 'CLOSED',\n  /** A milestone that is still open. */\n  Open = 'OPEN'\n}\n\n/** Represents a 'milestoned' event on a given issue or pull request. */\nexport type MilestonedEvent = Node & {\n  __typename?: 'MilestonedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Identifies the milestone title associated with the 'milestoned' event. */\n  milestoneTitle: Scalars['String'];\n  /** Object referenced by event. */\n  subject: MilestoneItem;\n};\n\n/** Entities that can be minimized. */\nexport type Minimizable = {\n  /** Returns whether or not a comment has been minimized. */\n  isMinimized: Scalars['Boolean'];\n  /**\n   * Returns why the comment was minimized. One of `abuse`, `off-topic`,\n   * `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and\n   * formatting of these values differs from the inputs to the `MinimizeComment` mutation.\n   */\n  minimizedReason?: Maybe<Scalars['String']>;\n  /** Check if the current viewer can minimize this object. */\n  viewerCanMinimize: Scalars['Boolean'];\n};\n\n/** Autogenerated input type of MinimizeComment */\nexport type MinimizeCommentInput = {\n  /** The classification of comment */\n  classifier: ReportedContentClassifiers;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the subject to modify. */\n  subjectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of MinimizeComment */\nexport type MinimizeCommentPayload = {\n  __typename?: 'MinimizeCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The comment that was minimized. */\n  minimizedComment?: Maybe<Minimizable>;\n};\n\n/** Autogenerated input type of MoveProjectCard */\nexport type MoveProjectCardInput = {\n  /** Place the new card after the card with this id. Pass null to place it at the top. */\n  afterCardId?: InputMaybe<Scalars['ID']>;\n  /** The id of the card to move. */\n  cardId: Scalars['ID'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The id of the column to move it into. */\n  columnId: Scalars['ID'];\n};\n\n/** Autogenerated return type of MoveProjectCard */\nexport type MoveProjectCardPayload = {\n  __typename?: 'MoveProjectCardPayload';\n  /** The new edge of the moved card. */\n  cardEdge?: Maybe<ProjectCardEdge>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of MoveProjectColumn */\nexport type MoveProjectColumnInput = {\n  /** Place the new column after the column with this id. Pass null to place it at the front. */\n  afterColumnId?: InputMaybe<Scalars['ID']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The id of the column to move. */\n  columnId: Scalars['ID'];\n};\n\n/** Autogenerated return type of MoveProjectColumn */\nexport type MoveProjectColumnPayload = {\n  __typename?: 'MoveProjectColumnPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new edge of the moved column. */\n  columnEdge?: Maybe<ProjectColumnEdge>;\n};\n\n/** Represents a 'moved_columns_in_project' event on a given issue or pull request. */\nexport type MovedColumnsInProjectEvent = Node & {\n  __typename?: 'MovedColumnsInProjectEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** Column name the issue or pull request was moved from. */\n  previousProjectColumnName: Scalars['String'];\n  /** Project referenced by event. */\n  project?: Maybe<Project>;\n  /** Project card referenced by this project event. */\n  projectCard?: Maybe<ProjectCard>;\n  /** Column name the issue or pull request was moved to. */\n  projectColumnName: Scalars['String'];\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** Clear all of a customer's queued migrations */\n  abortQueuedMigrations?: Maybe<AbortQueuedMigrationsPayload>;\n  /** Accepts a pending invitation for a user to become an administrator of an enterprise. */\n  acceptEnterpriseAdministratorInvitation?: Maybe<AcceptEnterpriseAdministratorInvitationPayload>;\n  /** Applies a suggested topic to the repository. */\n  acceptTopicSuggestion?: Maybe<AcceptTopicSuggestionPayload>;\n  /** Adds assignees to an assignable object. */\n  addAssigneesToAssignable?: Maybe<AddAssigneesToAssignablePayload>;\n  /** Adds a comment to an Issue or Pull Request. */\n  addComment?: Maybe<AddCommentPayload>;\n  /** Adds a comment to a Discussion, possibly as a reply to another comment. */\n  addDiscussionComment?: Maybe<AddDiscussionCommentPayload>;\n  /** Vote for an option in a discussion poll. */\n  addDiscussionPollVote?: Maybe<AddDiscussionPollVotePayload>;\n  /** Adds enterprise members to an organization within the enterprise. */\n  addEnterpriseOrganizationMember?: Maybe<AddEnterpriseOrganizationMemberPayload>;\n  /** Adds a support entitlement to an enterprise member. */\n  addEnterpriseSupportEntitlement?: Maybe<AddEnterpriseSupportEntitlementPayload>;\n  /** Adds labels to a labelable object. */\n  addLabelsToLabelable?: Maybe<AddLabelsToLabelablePayload>;\n  /** Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both. */\n  addProjectCard?: Maybe<AddProjectCardPayload>;\n  /** Adds a column to a Project. */\n  addProjectColumn?: Maybe<AddProjectColumnPayload>;\n  /** Creates a new draft issue and add it to a Project. */\n  addProjectV2DraftIssue?: Maybe<AddProjectV2DraftIssuePayload>;\n  /** Links an existing content instance to a Project. */\n  addProjectV2ItemById?: Maybe<AddProjectV2ItemByIdPayload>;\n  /** Adds a review to a Pull Request. */\n  addPullRequestReview?: Maybe<AddPullRequestReviewPayload>;\n  /** Adds a comment to a review. */\n  addPullRequestReviewComment?: Maybe<AddPullRequestReviewCommentPayload>;\n  /** Adds a new thread to a pending Pull Request Review. */\n  addPullRequestReviewThread?: Maybe<AddPullRequestReviewThreadPayload>;\n  /** Adds a reaction to a subject. */\n  addReaction?: Maybe<AddReactionPayload>;\n  /** Adds a star to a Starrable. */\n  addStar?: Maybe<AddStarPayload>;\n  /** Add an upvote to a discussion or discussion comment. */\n  addUpvote?: Maybe<AddUpvotePayload>;\n  /** Adds a verifiable domain to an owning account. */\n  addVerifiableDomain?: Maybe<AddVerifiableDomainPayload>;\n  /** Approve all pending deployments under one or more environments */\n  approveDeployments?: Maybe<ApproveDeploymentsPayload>;\n  /** Approve a verifiable domain for notification delivery. */\n  approveVerifiableDomain?: Maybe<ApproveVerifiableDomainPayload>;\n  /** Archives a ProjectV2Item */\n  archiveProjectV2Item?: Maybe<ArchiveProjectV2ItemPayload>;\n  /** Marks a repository as archived. */\n  archiveRepository?: Maybe<ArchiveRepositoryPayload>;\n  /** Cancels a pending invitation for an administrator to join an enterprise. */\n  cancelEnterpriseAdminInvitation?: Maybe<CancelEnterpriseAdminInvitationPayload>;\n  /** Cancel an active sponsorship. */\n  cancelSponsorship?: Maybe<CancelSponsorshipPayload>;\n  /** Update your status on GitHub. */\n  changeUserStatus?: Maybe<ChangeUserStatusPayload>;\n  /** Clears all labels from a labelable object. */\n  clearLabelsFromLabelable?: Maybe<ClearLabelsFromLabelablePayload>;\n  /**\n   * This mutation clears the value of a field for an item in a Project. Currently\n   * only text, number, date, assignees, labels, single-select, iteration and\n   * milestone fields are supported.\n   */\n  clearProjectV2ItemFieldValue?: Maybe<ClearProjectV2ItemFieldValuePayload>;\n  /** Creates a new project by cloning configuration from an existing project. */\n  cloneProject?: Maybe<CloneProjectPayload>;\n  /** Create a new repository with the same files and directory structure as a template repository. */\n  cloneTemplateRepository?: Maybe<CloneTemplateRepositoryPayload>;\n  /** Close a discussion. */\n  closeDiscussion?: Maybe<CloseDiscussionPayload>;\n  /** Close an issue. */\n  closeIssue?: Maybe<CloseIssuePayload>;\n  /** Close a pull request. */\n  closePullRequest?: Maybe<ClosePullRequestPayload>;\n  /** Convert a project note card to one associated with a newly created issue. */\n  convertProjectCardNoteToIssue?: Maybe<ConvertProjectCardNoteToIssuePayload>;\n  /** Converts a pull request to draft */\n  convertPullRequestToDraft?: Maybe<ConvertPullRequestToDraftPayload>;\n  /** Copy a project. */\n  copyProjectV2?: Maybe<CopyProjectV2Payload>;\n  /** Invites a user to claim reattributable data */\n  createAttributionInvitation?: Maybe<CreateAttributionInvitationPayload>;\n  /** Create a new branch protection rule */\n  createBranchProtectionRule?: Maybe<CreateBranchProtectionRulePayload>;\n  /** Create a check run. */\n  createCheckRun?: Maybe<CreateCheckRunPayload>;\n  /** Create a check suite */\n  createCheckSuite?: Maybe<CreateCheckSuitePayload>;\n  /**\n   * Appends a commit to the given branch as the authenticated user.\n   *\n   * This mutation creates a commit whose parent is the HEAD of the provided\n   * branch and also updates that branch to point to the new commit.\n   * It can be thought of as similar to `git commit`.\n   *\n   * ### Locating a Branch\n   *\n   * Commits are appended to a `branch` of type `Ref`.\n   * This must refer to a git branch (i.e.  the fully qualified path must\n   * begin with `refs/heads/`, although including this prefix is optional.\n   *\n   * Callers may specify the `branch` to commit to either by its global node\n   * ID or by passing both of `repositoryNameWithOwner` and `refName`.  For\n   * more details see the documentation for `CommittableBranch`.\n   *\n   * ### Describing Changes\n   *\n   * `fileChanges` are specified as a `FilesChanges` object describing\n   * `FileAdditions` and `FileDeletions`.\n   *\n   * Please see the documentation for `FileChanges` for more information on\n   * how to use this argument to describe any set of file changes.\n   *\n   * ### Authorship\n   *\n   * Similar to the web commit interface, this mutation does not support\n   * specifying the author or committer of the commit and will not add\n   * support for this in the future.\n   *\n   * A commit created by a successful execution of this mutation will be\n   * authored by the owner of the credential which authenticates the API\n   * request.  The committer will be identical to that of commits authored\n   * using the web interface.\n   *\n   * If you need full control over author and committer information, please\n   * use the Git Database REST API instead.\n   *\n   * ### Commit Signing\n   *\n   * Commits made using this mutation are automatically signed by GitHub if\n   * supported and will be marked as verified in the user interface.\n   */\n  createCommitOnBranch?: Maybe<CreateCommitOnBranchPayload>;\n  /** Creates a new deployment event. */\n  createDeployment?: Maybe<CreateDeploymentPayload>;\n  /** Create a deployment status. */\n  createDeploymentStatus?: Maybe<CreateDeploymentStatusPayload>;\n  /** Create a discussion. */\n  createDiscussion?: Maybe<CreateDiscussionPayload>;\n  /** Creates an organization as part of an enterprise account. */\n  createEnterpriseOrganization?: Maybe<CreateEnterpriseOrganizationPayload>;\n  /** Creates an environment or simply returns it if already exists. */\n  createEnvironment?: Maybe<CreateEnvironmentPayload>;\n  /** Creates a new IP allow list entry. */\n  createIpAllowListEntry?: Maybe<CreateIpAllowListEntryPayload>;\n  /** Creates a new issue. */\n  createIssue?: Maybe<CreateIssuePayload>;\n  /** Creates a new label. */\n  createLabel?: Maybe<CreateLabelPayload>;\n  /** Create a branch linked to an issue. */\n  createLinkedBranch?: Maybe<CreateLinkedBranchPayload>;\n  /** Creates a GitHub Enterprise Importer (GEI) migration source. */\n  createMigrationSource?: Maybe<CreateMigrationSourcePayload>;\n  /** Creates a new project. */\n  createProject?: Maybe<CreateProjectPayload>;\n  /** Creates a new project. */\n  createProjectV2?: Maybe<CreateProjectV2Payload>;\n  /** Create a new project field. */\n  createProjectV2Field?: Maybe<CreateProjectV2FieldPayload>;\n  /** Create a new pull request */\n  createPullRequest?: Maybe<CreatePullRequestPayload>;\n  /** Create a new Git Ref. */\n  createRef?: Maybe<CreateRefPayload>;\n  /** Create a new repository. */\n  createRepository?: Maybe<CreateRepositoryPayload>;\n  /** Create a repository ruleset */\n  createRepositoryRuleset?: Maybe<CreateRepositoryRulesetPayload>;\n  /** Create a GitHub Sponsors profile to allow others to sponsor you or your organization. */\n  createSponsorsListing?: Maybe<CreateSponsorsListingPayload>;\n  /** Create a new payment tier for your GitHub Sponsors profile. */\n  createSponsorsTier?: Maybe<CreateSponsorsTierPayload>;\n  /** Start a new sponsorship of a maintainer in GitHub Sponsors, or reactivate a past sponsorship. */\n  createSponsorship?: Maybe<CreateSponsorshipPayload>;\n  /**\n   * Make many one-time sponsorships for different sponsorable users or\n   * organizations at once. Can only sponsor those who have a public GitHub\n   * Sponsors profile.\n   */\n  createSponsorships?: Maybe<CreateSponsorshipsPayload>;\n  /** Creates a new team discussion. */\n  createTeamDiscussion?: Maybe<CreateTeamDiscussionPayload>;\n  /** Creates a new team discussion comment. */\n  createTeamDiscussionComment?: Maybe<CreateTeamDiscussionCommentPayload>;\n  /** Rejects a suggested topic for the repository. */\n  declineTopicSuggestion?: Maybe<DeclineTopicSuggestionPayload>;\n  /** Delete a branch protection rule */\n  deleteBranchProtectionRule?: Maybe<DeleteBranchProtectionRulePayload>;\n  /** Deletes a deployment. */\n  deleteDeployment?: Maybe<DeleteDeploymentPayload>;\n  /** Delete a discussion and all of its replies. */\n  deleteDiscussion?: Maybe<DeleteDiscussionPayload>;\n  /** Delete a discussion comment. If it has replies, wipe it instead. */\n  deleteDiscussionComment?: Maybe<DeleteDiscussionCommentPayload>;\n  /** Deletes an environment */\n  deleteEnvironment?: Maybe<DeleteEnvironmentPayload>;\n  /** Deletes an IP allow list entry. */\n  deleteIpAllowListEntry?: Maybe<DeleteIpAllowListEntryPayload>;\n  /** Deletes an Issue object. */\n  deleteIssue?: Maybe<DeleteIssuePayload>;\n  /** Deletes an IssueComment object. */\n  deleteIssueComment?: Maybe<DeleteIssueCommentPayload>;\n  /** Deletes a label. */\n  deleteLabel?: Maybe<DeleteLabelPayload>;\n  /** Unlink a branch from an issue. */\n  deleteLinkedBranch?: Maybe<DeleteLinkedBranchPayload>;\n  /** Delete a package version. */\n  deletePackageVersion?: Maybe<DeletePackageVersionPayload>;\n  /** Deletes a project. */\n  deleteProject?: Maybe<DeleteProjectPayload>;\n  /** Deletes a project card. */\n  deleteProjectCard?: Maybe<DeleteProjectCardPayload>;\n  /** Deletes a project column. */\n  deleteProjectColumn?: Maybe<DeleteProjectColumnPayload>;\n  /** Delete a project. */\n  deleteProjectV2?: Maybe<DeleteProjectV2Payload>;\n  /** Delete a project field. */\n  deleteProjectV2Field?: Maybe<DeleteProjectV2FieldPayload>;\n  /** Deletes an item from a Project. */\n  deleteProjectV2Item?: Maybe<DeleteProjectV2ItemPayload>;\n  /** Deletes a project workflow. */\n  deleteProjectV2Workflow?: Maybe<DeleteProjectV2WorkflowPayload>;\n  /** Deletes a pull request review. */\n  deletePullRequestReview?: Maybe<DeletePullRequestReviewPayload>;\n  /** Deletes a pull request review comment. */\n  deletePullRequestReviewComment?: Maybe<DeletePullRequestReviewCommentPayload>;\n  /** Delete a Git Ref. */\n  deleteRef?: Maybe<DeleteRefPayload>;\n  /** Delete a repository ruleset */\n  deleteRepositoryRuleset?: Maybe<DeleteRepositoryRulesetPayload>;\n  /** Deletes a team discussion. */\n  deleteTeamDiscussion?: Maybe<DeleteTeamDiscussionPayload>;\n  /** Deletes a team discussion comment. */\n  deleteTeamDiscussionComment?: Maybe<DeleteTeamDiscussionCommentPayload>;\n  /** Deletes a verifiable domain. */\n  deleteVerifiableDomain?: Maybe<DeleteVerifiableDomainPayload>;\n  /** Remove a pull request from the merge queue. */\n  dequeuePullRequest?: Maybe<DequeuePullRequestPayload>;\n  /** Disable auto merge on the given pull request */\n  disablePullRequestAutoMerge?: Maybe<DisablePullRequestAutoMergePayload>;\n  /** Dismisses an approved or rejected pull request review. */\n  dismissPullRequestReview?: Maybe<DismissPullRequestReviewPayload>;\n  /** Dismisses the Dependabot alert. */\n  dismissRepositoryVulnerabilityAlert?: Maybe<DismissRepositoryVulnerabilityAlertPayload>;\n  /** Enable the default auto-merge on a pull request. */\n  enablePullRequestAutoMerge?: Maybe<EnablePullRequestAutoMergePayload>;\n  /** Add a pull request to the merge queue. */\n  enqueuePullRequest?: Maybe<EnqueuePullRequestPayload>;\n  /** Follow an organization. */\n  followOrganization?: Maybe<FollowOrganizationPayload>;\n  /** Follow a user. */\n  followUser?: Maybe<FollowUserPayload>;\n  /** Grant the migrator role to a user for all organizations under an enterprise account. */\n  grantEnterpriseOrganizationsMigratorRole?: Maybe<GrantEnterpriseOrganizationsMigratorRolePayload>;\n  /** Grant the migrator role to a user or a team. */\n  grantMigratorRole?: Maybe<GrantMigratorRolePayload>;\n  /** Creates a new project by importing columns and a list of issues/PRs. */\n  importProject?: Maybe<ImportProjectPayload>;\n  /** Invite someone to become an administrator of the enterprise. */\n  inviteEnterpriseAdmin?: Maybe<InviteEnterpriseAdminPayload>;\n  /** Links a project to a repository. */\n  linkProjectV2ToRepository?: Maybe<LinkProjectV2ToRepositoryPayload>;\n  /** Links a project to a team. */\n  linkProjectV2ToTeam?: Maybe<LinkProjectV2ToTeamPayload>;\n  /** Creates a repository link for a project. */\n  linkRepositoryToProject?: Maybe<LinkRepositoryToProjectPayload>;\n  /** Lock a lockable object */\n  lockLockable?: Maybe<LockLockablePayload>;\n  /** Mark a discussion comment as the chosen answer for discussions in an answerable category. */\n  markDiscussionCommentAsAnswer?: Maybe<MarkDiscussionCommentAsAnswerPayload>;\n  /** Mark a pull request file as viewed */\n  markFileAsViewed?: Maybe<MarkFileAsViewedPayload>;\n  /** Mark a project as a template. Note that only projects which are owned by an Organization can be marked as a template. */\n  markProjectV2AsTemplate?: Maybe<MarkProjectV2AsTemplatePayload>;\n  /** Marks a pull request ready for review. */\n  markPullRequestReadyForReview?: Maybe<MarkPullRequestReadyForReviewPayload>;\n  /** Merge a head into a branch. */\n  mergeBranch?: Maybe<MergeBranchPayload>;\n  /** Merge a pull request. */\n  mergePullRequest?: Maybe<MergePullRequestPayload>;\n  /** Minimizes a comment on an Issue, Commit, Pull Request, or Gist */\n  minimizeComment?: Maybe<MinimizeCommentPayload>;\n  /** Moves a project card to another place. */\n  moveProjectCard?: Maybe<MoveProjectCardPayload>;\n  /** Moves a project column to another place. */\n  moveProjectColumn?: Maybe<MoveProjectColumnPayload>;\n  /** Pin an issue to a repository */\n  pinIssue?: Maybe<PinIssuePayload>;\n  /** Publish an existing sponsorship tier that is currently still a draft to a GitHub Sponsors profile. */\n  publishSponsorsTier?: Maybe<PublishSponsorsTierPayload>;\n  /** Regenerates the identity provider recovery codes for an enterprise */\n  regenerateEnterpriseIdentityProviderRecoveryCodes?: Maybe<RegenerateEnterpriseIdentityProviderRecoveryCodesPayload>;\n  /** Regenerates a verifiable domain's verification token. */\n  regenerateVerifiableDomainToken?: Maybe<RegenerateVerifiableDomainTokenPayload>;\n  /** Reject all pending deployments under one or more environments */\n  rejectDeployments?: Maybe<RejectDeploymentsPayload>;\n  /** Removes assignees from an assignable object. */\n  removeAssigneesFromAssignable?: Maybe<RemoveAssigneesFromAssignablePayload>;\n  /** Removes an administrator from the enterprise. */\n  removeEnterpriseAdmin?: Maybe<RemoveEnterpriseAdminPayload>;\n  /** Removes the identity provider from an enterprise */\n  removeEnterpriseIdentityProvider?: Maybe<RemoveEnterpriseIdentityProviderPayload>;\n  /** Removes a user from all organizations within the enterprise */\n  removeEnterpriseMember?: Maybe<RemoveEnterpriseMemberPayload>;\n  /** Removes an organization from the enterprise */\n  removeEnterpriseOrganization?: Maybe<RemoveEnterpriseOrganizationPayload>;\n  /** Removes a support entitlement from an enterprise member. */\n  removeEnterpriseSupportEntitlement?: Maybe<RemoveEnterpriseSupportEntitlementPayload>;\n  /** Removes labels from a Labelable object. */\n  removeLabelsFromLabelable?: Maybe<RemoveLabelsFromLabelablePayload>;\n  /** Removes outside collaborator from all repositories in an organization. */\n  removeOutsideCollaborator?: Maybe<RemoveOutsideCollaboratorPayload>;\n  /** Removes a reaction from a subject. */\n  removeReaction?: Maybe<RemoveReactionPayload>;\n  /** Removes a star from a Starrable. */\n  removeStar?: Maybe<RemoveStarPayload>;\n  /** Remove an upvote to a discussion or discussion comment. */\n  removeUpvote?: Maybe<RemoveUpvotePayload>;\n  /** Reopen a discussion. */\n  reopenDiscussion?: Maybe<ReopenDiscussionPayload>;\n  /** Reopen a issue. */\n  reopenIssue?: Maybe<ReopenIssuePayload>;\n  /** Reopen a pull request. */\n  reopenPullRequest?: Maybe<ReopenPullRequestPayload>;\n  /** Set review requests on a pull request. */\n  requestReviews?: Maybe<RequestReviewsPayload>;\n  /** Rerequests an existing check suite. */\n  rerequestCheckSuite?: Maybe<RerequestCheckSuitePayload>;\n  /** Marks a review thread as resolved. */\n  resolveReviewThread?: Maybe<ResolveReviewThreadPayload>;\n  /** Retire a published payment tier from your GitHub Sponsors profile so it cannot be used to start new sponsorships. */\n  retireSponsorsTier?: Maybe<RetireSponsorsTierPayload>;\n  /** Create a pull request that reverts the changes from a merged pull request. */\n  revertPullRequest?: Maybe<RevertPullRequestPayload>;\n  /** Revoke the migrator role to a user for all organizations under an enterprise account. */\n  revokeEnterpriseOrganizationsMigratorRole?: Maybe<RevokeEnterpriseOrganizationsMigratorRolePayload>;\n  /** Revoke the migrator role from a user or a team. */\n  revokeMigratorRole?: Maybe<RevokeMigratorRolePayload>;\n  /** Creates or updates the identity provider for an enterprise. */\n  setEnterpriseIdentityProvider?: Maybe<SetEnterpriseIdentityProviderPayload>;\n  /** Set an organization level interaction limit for an organization's public repositories. */\n  setOrganizationInteractionLimit?: Maybe<SetOrganizationInteractionLimitPayload>;\n  /** Sets an interaction limit setting for a repository. */\n  setRepositoryInteractionLimit?: Maybe<SetRepositoryInteractionLimitPayload>;\n  /** Set a user level interaction limit for an user's public repositories. */\n  setUserInteractionLimit?: Maybe<SetUserInteractionLimitPayload>;\n  /** Starts a GitHub Enterprise Importer organization migration. */\n  startOrganizationMigration?: Maybe<StartOrganizationMigrationPayload>;\n  /** Starts a GitHub Enterprise Importer (GEI) repository migration. */\n  startRepositoryMigration?: Maybe<StartRepositoryMigrationPayload>;\n  /** Submits a pending pull request review. */\n  submitPullRequestReview?: Maybe<SubmitPullRequestReviewPayload>;\n  /** Transfer an organization from one enterprise to another enterprise. */\n  transferEnterpriseOrganization?: Maybe<TransferEnterpriseOrganizationPayload>;\n  /** Transfer an issue to a different repository */\n  transferIssue?: Maybe<TransferIssuePayload>;\n  /** Unarchives a ProjectV2Item */\n  unarchiveProjectV2Item?: Maybe<UnarchiveProjectV2ItemPayload>;\n  /** Unarchives a repository. */\n  unarchiveRepository?: Maybe<UnarchiveRepositoryPayload>;\n  /** Unfollow an organization. */\n  unfollowOrganization?: Maybe<UnfollowOrganizationPayload>;\n  /** Unfollow a user. */\n  unfollowUser?: Maybe<UnfollowUserPayload>;\n  /** Unlinks a project from a repository. */\n  unlinkProjectV2FromRepository?: Maybe<UnlinkProjectV2FromRepositoryPayload>;\n  /** Unlinks a project to a team. */\n  unlinkProjectV2FromTeam?: Maybe<UnlinkProjectV2FromTeamPayload>;\n  /** Deletes a repository link from a project. */\n  unlinkRepositoryFromProject?: Maybe<UnlinkRepositoryFromProjectPayload>;\n  /** Unlock a lockable object */\n  unlockLockable?: Maybe<UnlockLockablePayload>;\n  /** Unmark a discussion comment as the chosen answer for discussions in an answerable category. */\n  unmarkDiscussionCommentAsAnswer?: Maybe<UnmarkDiscussionCommentAsAnswerPayload>;\n  /** Unmark a pull request file as viewed */\n  unmarkFileAsViewed?: Maybe<UnmarkFileAsViewedPayload>;\n  /** Unmark an issue as a duplicate of another issue. */\n  unmarkIssueAsDuplicate?: Maybe<UnmarkIssueAsDuplicatePayload>;\n  /** Unmark a project as a template. */\n  unmarkProjectV2AsTemplate?: Maybe<UnmarkProjectV2AsTemplatePayload>;\n  /** Unminimizes a comment on an Issue, Commit, Pull Request, or Gist */\n  unminimizeComment?: Maybe<UnminimizeCommentPayload>;\n  /** Unpin a pinned issue from a repository */\n  unpinIssue?: Maybe<UnpinIssuePayload>;\n  /** Marks a review thread as unresolved. */\n  unresolveReviewThread?: Maybe<UnresolveReviewThreadPayload>;\n  /** Update a branch protection rule */\n  updateBranchProtectionRule?: Maybe<UpdateBranchProtectionRulePayload>;\n  /** Update a check run */\n  updateCheckRun?: Maybe<UpdateCheckRunPayload>;\n  /** Modifies the settings of an existing check suite */\n  updateCheckSuitePreferences?: Maybe<UpdateCheckSuitePreferencesPayload>;\n  /** Update a discussion */\n  updateDiscussion?: Maybe<UpdateDiscussionPayload>;\n  /** Update the contents of a comment on a Discussion */\n  updateDiscussionComment?: Maybe<UpdateDiscussionCommentPayload>;\n  /** Updates the role of an enterprise administrator. */\n  updateEnterpriseAdministratorRole?: Maybe<UpdateEnterpriseAdministratorRolePayload>;\n  /** Sets whether private repository forks are enabled for an enterprise. */\n  updateEnterpriseAllowPrivateRepositoryForkingSetting?: Maybe<UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload>;\n  /** Sets the base repository permission for organizations in an enterprise. */\n  updateEnterpriseDefaultRepositoryPermissionSetting?: Maybe<UpdateEnterpriseDefaultRepositoryPermissionSettingPayload>;\n  /** Sets whether organization members with admin permissions on a repository can change repository visibility. */\n  updateEnterpriseMembersCanChangeRepositoryVisibilitySetting?: Maybe<UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload>;\n  /** Sets the members can create repositories setting for an enterprise. */\n  updateEnterpriseMembersCanCreateRepositoriesSetting?: Maybe<UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload>;\n  /** Sets the members can delete issues setting for an enterprise. */\n  updateEnterpriseMembersCanDeleteIssuesSetting?: Maybe<UpdateEnterpriseMembersCanDeleteIssuesSettingPayload>;\n  /** Sets the members can delete repositories setting for an enterprise. */\n  updateEnterpriseMembersCanDeleteRepositoriesSetting?: Maybe<UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload>;\n  /** Sets whether members can invite collaborators are enabled for an enterprise. */\n  updateEnterpriseMembersCanInviteCollaboratorsSetting?: Maybe<UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload>;\n  /** Sets whether or not an organization admin can make purchases. */\n  updateEnterpriseMembersCanMakePurchasesSetting?: Maybe<UpdateEnterpriseMembersCanMakePurchasesSettingPayload>;\n  /** Sets the members can update protected branches setting for an enterprise. */\n  updateEnterpriseMembersCanUpdateProtectedBranchesSetting?: Maybe<UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload>;\n  /** Sets the members can view dependency insights for an enterprise. */\n  updateEnterpriseMembersCanViewDependencyInsightsSetting?: Maybe<UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload>;\n  /** Sets whether organization projects are enabled for an enterprise. */\n  updateEnterpriseOrganizationProjectsSetting?: Maybe<UpdateEnterpriseOrganizationProjectsSettingPayload>;\n  /** Updates the role of an enterprise owner with an organization. */\n  updateEnterpriseOwnerOrganizationRole?: Maybe<UpdateEnterpriseOwnerOrganizationRolePayload>;\n  /** Updates an enterprise's profile. */\n  updateEnterpriseProfile?: Maybe<UpdateEnterpriseProfilePayload>;\n  /** Sets whether repository projects are enabled for a enterprise. */\n  updateEnterpriseRepositoryProjectsSetting?: Maybe<UpdateEnterpriseRepositoryProjectsSettingPayload>;\n  /** Sets whether team discussions are enabled for an enterprise. */\n  updateEnterpriseTeamDiscussionsSetting?: Maybe<UpdateEnterpriseTeamDiscussionsSettingPayload>;\n  /** Sets whether two factor authentication is required for all users in an enterprise. */\n  updateEnterpriseTwoFactorAuthenticationRequiredSetting?: Maybe<UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload>;\n  /** Updates an environment. */\n  updateEnvironment?: Maybe<UpdateEnvironmentPayload>;\n  /** Sets whether an IP allow list is enabled on an owner. */\n  updateIpAllowListEnabledSetting?: Maybe<UpdateIpAllowListEnabledSettingPayload>;\n  /** Updates an IP allow list entry. */\n  updateIpAllowListEntry?: Maybe<UpdateIpAllowListEntryPayload>;\n  /** Sets whether IP allow list configuration for installed GitHub Apps is enabled on an owner. */\n  updateIpAllowListForInstalledAppsEnabledSetting?: Maybe<UpdateIpAllowListForInstalledAppsEnabledSettingPayload>;\n  /** Updates an Issue. */\n  updateIssue?: Maybe<UpdateIssuePayload>;\n  /** Updates an IssueComment object. */\n  updateIssueComment?: Maybe<UpdateIssueCommentPayload>;\n  /** Updates an existing label. */\n  updateLabel?: Maybe<UpdateLabelPayload>;\n  /** Update the setting to restrict notifications to only verified or approved domains available to an owner. */\n  updateNotificationRestrictionSetting?: Maybe<UpdateNotificationRestrictionSettingPayload>;\n  /** Sets whether private repository forks are enabled for an organization. */\n  updateOrganizationAllowPrivateRepositoryForkingSetting?: Maybe<UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload>;\n  /** Sets whether contributors are required to sign off on web-based commits for repositories in an organization. */\n  updateOrganizationWebCommitSignoffSetting?: Maybe<UpdateOrganizationWebCommitSignoffSettingPayload>;\n  /** Updates an existing project. */\n  updateProject?: Maybe<UpdateProjectPayload>;\n  /** Updates an existing project card. */\n  updateProjectCard?: Maybe<UpdateProjectCardPayload>;\n  /** Updates an existing project column. */\n  updateProjectColumn?: Maybe<UpdateProjectColumnPayload>;\n  /** Updates an existing project (beta). */\n  updateProjectV2?: Maybe<UpdateProjectV2Payload>;\n  /** Update the collaborators on a team or a project */\n  updateProjectV2Collaborators?: Maybe<UpdateProjectV2CollaboratorsPayload>;\n  /** Updates a draft issue within a Project. */\n  updateProjectV2DraftIssue?: Maybe<UpdateProjectV2DraftIssuePayload>;\n  /**\n   * This mutation updates the value of a field for an item in a Project. Currently\n   * only single-select, text, number, date, and iteration fields are supported.\n   */\n  updateProjectV2ItemFieldValue?: Maybe<UpdateProjectV2ItemFieldValuePayload>;\n  /** This mutation updates the position of the item in the project, where the position represents the priority of an item. */\n  updateProjectV2ItemPosition?: Maybe<UpdateProjectV2ItemPositionPayload>;\n  /** Update a pull request */\n  updatePullRequest?: Maybe<UpdatePullRequestPayload>;\n  /** Merge or Rebase HEAD from upstream branch into pull request branch */\n  updatePullRequestBranch?: Maybe<UpdatePullRequestBranchPayload>;\n  /** Updates the body of a pull request review. */\n  updatePullRequestReview?: Maybe<UpdatePullRequestReviewPayload>;\n  /** Updates a pull request review comment. */\n  updatePullRequestReviewComment?: Maybe<UpdatePullRequestReviewCommentPayload>;\n  /** Update a Git Ref. */\n  updateRef?: Maybe<UpdateRefPayload>;\n  /**\n   * Creates, updates and/or deletes multiple refs in a repository.\n   *\n   * This mutation takes a list of `RefUpdate`s and performs these updates\n   * on the repository. All updates are performed atomically, meaning that\n   * if one of them is rejected, no other ref will be modified.\n   *\n   * `RefUpdate.beforeOid` specifies that the given reference needs to point\n   * to the given value before performing any updates. A value of\n   * `0000000000000000000000000000000000000000` can be used to verify that\n   * the references should not exist.\n   *\n   * `RefUpdate.afterOid` specifies the value that the given reference\n   * will point to after performing all updates. A value of\n   * `0000000000000000000000000000000000000000` can be used to delete a\n   * reference.\n   *\n   * If `RefUpdate.force` is set to `true`, a non-fast-forward updates\n   * for the given reference will be allowed.\n   */\n  updateRefs?: Maybe<UpdateRefsPayload>;\n  /** Update information about a repository. */\n  updateRepository?: Maybe<UpdateRepositoryPayload>;\n  /** Update a repository ruleset */\n  updateRepositoryRuleset?: Maybe<UpdateRepositoryRulesetPayload>;\n  /** Sets whether contributors are required to sign off on web-based commits for a repository. */\n  updateRepositoryWebCommitSignoffSetting?: Maybe<UpdateRepositoryWebCommitSignoffSettingPayload>;\n  /** Change visibility of your sponsorship and opt in or out of email updates from the maintainer. */\n  updateSponsorshipPreferences?: Maybe<UpdateSponsorshipPreferencesPayload>;\n  /** Updates the state for subscribable subjects. */\n  updateSubscription?: Maybe<UpdateSubscriptionPayload>;\n  /** Updates a team discussion. */\n  updateTeamDiscussion?: Maybe<UpdateTeamDiscussionPayload>;\n  /** Updates a discussion comment. */\n  updateTeamDiscussionComment?: Maybe<UpdateTeamDiscussionCommentPayload>;\n  /** Updates team review assignment. */\n  updateTeamReviewAssignment?: Maybe<UpdateTeamReviewAssignmentPayload>;\n  /** Update team repository. */\n  updateTeamsRepository?: Maybe<UpdateTeamsRepositoryPayload>;\n  /** Replaces the repository's topics with the given topics. */\n  updateTopics?: Maybe<UpdateTopicsPayload>;\n  /** Verify that a verifiable domain has the expected DNS record. */\n  verifyVerifiableDomain?: Maybe<VerifyVerifiableDomainPayload>;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAbortQueuedMigrationsArgs = {\n  input: AbortQueuedMigrationsInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAcceptEnterpriseAdministratorInvitationArgs = {\n  input: AcceptEnterpriseAdministratorInvitationInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAcceptTopicSuggestionArgs = {\n  input: AcceptTopicSuggestionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddAssigneesToAssignableArgs = {\n  input: AddAssigneesToAssignableInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddCommentArgs = {\n  input: AddCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddDiscussionCommentArgs = {\n  input: AddDiscussionCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddDiscussionPollVoteArgs = {\n  input: AddDiscussionPollVoteInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddEnterpriseOrganizationMemberArgs = {\n  input: AddEnterpriseOrganizationMemberInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddEnterpriseSupportEntitlementArgs = {\n  input: AddEnterpriseSupportEntitlementInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddLabelsToLabelableArgs = {\n  input: AddLabelsToLabelableInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddProjectCardArgs = {\n  input: AddProjectCardInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddProjectColumnArgs = {\n  input: AddProjectColumnInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddProjectV2DraftIssueArgs = {\n  input: AddProjectV2DraftIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddProjectV2ItemByIdArgs = {\n  input: AddProjectV2ItemByIdInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddPullRequestReviewArgs = {\n  input: AddPullRequestReviewInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddPullRequestReviewCommentArgs = {\n  input: AddPullRequestReviewCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddPullRequestReviewThreadArgs = {\n  input: AddPullRequestReviewThreadInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddReactionArgs = {\n  input: AddReactionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddStarArgs = {\n  input: AddStarInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddUpvoteArgs = {\n  input: AddUpvoteInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddVerifiableDomainArgs = {\n  input: AddVerifiableDomainInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationApproveDeploymentsArgs = {\n  input: ApproveDeploymentsInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationApproveVerifiableDomainArgs = {\n  input: ApproveVerifiableDomainInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationArchiveProjectV2ItemArgs = {\n  input: ArchiveProjectV2ItemInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationArchiveRepositoryArgs = {\n  input: ArchiveRepositoryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCancelEnterpriseAdminInvitationArgs = {\n  input: CancelEnterpriseAdminInvitationInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCancelSponsorshipArgs = {\n  input: CancelSponsorshipInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationChangeUserStatusArgs = {\n  input: ChangeUserStatusInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationClearLabelsFromLabelableArgs = {\n  input: ClearLabelsFromLabelableInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationClearProjectV2ItemFieldValueArgs = {\n  input: ClearProjectV2ItemFieldValueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCloneProjectArgs = {\n  input: CloneProjectInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCloneTemplateRepositoryArgs = {\n  input: CloneTemplateRepositoryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCloseDiscussionArgs = {\n  input: CloseDiscussionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCloseIssueArgs = {\n  input: CloseIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationClosePullRequestArgs = {\n  input: ClosePullRequestInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationConvertProjectCardNoteToIssueArgs = {\n  input: ConvertProjectCardNoteToIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationConvertPullRequestToDraftArgs = {\n  input: ConvertPullRequestToDraftInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCopyProjectV2Args = {\n  input: CopyProjectV2Input;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateAttributionInvitationArgs = {\n  input: CreateAttributionInvitationInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateBranchProtectionRuleArgs = {\n  input: CreateBranchProtectionRuleInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateCheckRunArgs = {\n  input: CreateCheckRunInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateCheckSuiteArgs = {\n  input: CreateCheckSuiteInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateCommitOnBranchArgs = {\n  input: CreateCommitOnBranchInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateDeploymentArgs = {\n  input: CreateDeploymentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateDeploymentStatusArgs = {\n  input: CreateDeploymentStatusInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateDiscussionArgs = {\n  input: CreateDiscussionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateEnterpriseOrganizationArgs = {\n  input: CreateEnterpriseOrganizationInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateEnvironmentArgs = {\n  input: CreateEnvironmentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateIpAllowListEntryArgs = {\n  input: CreateIpAllowListEntryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateIssueArgs = {\n  input: CreateIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateLabelArgs = {\n  input: CreateLabelInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateLinkedBranchArgs = {\n  input: CreateLinkedBranchInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateMigrationSourceArgs = {\n  input: CreateMigrationSourceInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateProjectArgs = {\n  input: CreateProjectInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateProjectV2Args = {\n  input: CreateProjectV2Input;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateProjectV2FieldArgs = {\n  input: CreateProjectV2FieldInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreatePullRequestArgs = {\n  input: CreatePullRequestInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateRefArgs = {\n  input: CreateRefInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateRepositoryArgs = {\n  input: CreateRepositoryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateRepositoryRulesetArgs = {\n  input: CreateRepositoryRulesetInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateSponsorsListingArgs = {\n  input: CreateSponsorsListingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateSponsorsTierArgs = {\n  input: CreateSponsorsTierInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateSponsorshipArgs = {\n  input: CreateSponsorshipInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateSponsorshipsArgs = {\n  input: CreateSponsorshipsInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateTeamDiscussionArgs = {\n  input: CreateTeamDiscussionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateTeamDiscussionCommentArgs = {\n  input: CreateTeamDiscussionCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeclineTopicSuggestionArgs = {\n  input: DeclineTopicSuggestionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteBranchProtectionRuleArgs = {\n  input: DeleteBranchProtectionRuleInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteDeploymentArgs = {\n  input: DeleteDeploymentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteDiscussionArgs = {\n  input: DeleteDiscussionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteDiscussionCommentArgs = {\n  input: DeleteDiscussionCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteEnvironmentArgs = {\n  input: DeleteEnvironmentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteIpAllowListEntryArgs = {\n  input: DeleteIpAllowListEntryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteIssueArgs = {\n  input: DeleteIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteIssueCommentArgs = {\n  input: DeleteIssueCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteLabelArgs = {\n  input: DeleteLabelInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteLinkedBranchArgs = {\n  input: DeleteLinkedBranchInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeletePackageVersionArgs = {\n  input: DeletePackageVersionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectArgs = {\n  input: DeleteProjectInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectCardArgs = {\n  input: DeleteProjectCardInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectColumnArgs = {\n  input: DeleteProjectColumnInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectV2Args = {\n  input: DeleteProjectV2Input;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectV2FieldArgs = {\n  input: DeleteProjectV2FieldInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectV2ItemArgs = {\n  input: DeleteProjectV2ItemInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectV2WorkflowArgs = {\n  input: DeleteProjectV2WorkflowInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeletePullRequestReviewArgs = {\n  input: DeletePullRequestReviewInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeletePullRequestReviewCommentArgs = {\n  input: DeletePullRequestReviewCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteRefArgs = {\n  input: DeleteRefInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteRepositoryRulesetArgs = {\n  input: DeleteRepositoryRulesetInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteTeamDiscussionArgs = {\n  input: DeleteTeamDiscussionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteTeamDiscussionCommentArgs = {\n  input: DeleteTeamDiscussionCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteVerifiableDomainArgs = {\n  input: DeleteVerifiableDomainInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDequeuePullRequestArgs = {\n  input: DequeuePullRequestInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDisablePullRequestAutoMergeArgs = {\n  input: DisablePullRequestAutoMergeInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDismissPullRequestReviewArgs = {\n  input: DismissPullRequestReviewInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDismissRepositoryVulnerabilityAlertArgs = {\n  input: DismissRepositoryVulnerabilityAlertInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationEnablePullRequestAutoMergeArgs = {\n  input: EnablePullRequestAutoMergeInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationEnqueuePullRequestArgs = {\n  input: EnqueuePullRequestInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationFollowOrganizationArgs = {\n  input: FollowOrganizationInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationFollowUserArgs = {\n  input: FollowUserInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationGrantEnterpriseOrganizationsMigratorRoleArgs = {\n  input: GrantEnterpriseOrganizationsMigratorRoleInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationGrantMigratorRoleArgs = {\n  input: GrantMigratorRoleInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationImportProjectArgs = {\n  input: ImportProjectInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationInviteEnterpriseAdminArgs = {\n  input: InviteEnterpriseAdminInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationLinkProjectV2ToRepositoryArgs = {\n  input: LinkProjectV2ToRepositoryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationLinkProjectV2ToTeamArgs = {\n  input: LinkProjectV2ToTeamInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationLinkRepositoryToProjectArgs = {\n  input: LinkRepositoryToProjectInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationLockLockableArgs = {\n  input: LockLockableInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMarkDiscussionCommentAsAnswerArgs = {\n  input: MarkDiscussionCommentAsAnswerInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMarkFileAsViewedArgs = {\n  input: MarkFileAsViewedInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMarkProjectV2AsTemplateArgs = {\n  input: MarkProjectV2AsTemplateInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMarkPullRequestReadyForReviewArgs = {\n  input: MarkPullRequestReadyForReviewInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMergeBranchArgs = {\n  input: MergeBranchInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMergePullRequestArgs = {\n  input: MergePullRequestInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMinimizeCommentArgs = {\n  input: MinimizeCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMoveProjectCardArgs = {\n  input: MoveProjectCardInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMoveProjectColumnArgs = {\n  input: MoveProjectColumnInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationPinIssueArgs = {\n  input: PinIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationPublishSponsorsTierArgs = {\n  input: PublishSponsorsTierInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRegenerateEnterpriseIdentityProviderRecoveryCodesArgs = {\n  input: RegenerateEnterpriseIdentityProviderRecoveryCodesInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRegenerateVerifiableDomainTokenArgs = {\n  input: RegenerateVerifiableDomainTokenInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRejectDeploymentsArgs = {\n  input: RejectDeploymentsInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveAssigneesFromAssignableArgs = {\n  input: RemoveAssigneesFromAssignableInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseAdminArgs = {\n  input: RemoveEnterpriseAdminInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseIdentityProviderArgs = {\n  input: RemoveEnterpriseIdentityProviderInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseMemberArgs = {\n  input: RemoveEnterpriseMemberInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseOrganizationArgs = {\n  input: RemoveEnterpriseOrganizationInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseSupportEntitlementArgs = {\n  input: RemoveEnterpriseSupportEntitlementInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveLabelsFromLabelableArgs = {\n  input: RemoveLabelsFromLabelableInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveOutsideCollaboratorArgs = {\n  input: RemoveOutsideCollaboratorInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveReactionArgs = {\n  input: RemoveReactionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveStarArgs = {\n  input: RemoveStarInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveUpvoteArgs = {\n  input: RemoveUpvoteInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationReopenDiscussionArgs = {\n  input: ReopenDiscussionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationReopenIssueArgs = {\n  input: ReopenIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationReopenPullRequestArgs = {\n  input: ReopenPullRequestInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRequestReviewsArgs = {\n  input: RequestReviewsInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRerequestCheckSuiteArgs = {\n  input: RerequestCheckSuiteInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationResolveReviewThreadArgs = {\n  input: ResolveReviewThreadInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRetireSponsorsTierArgs = {\n  input: RetireSponsorsTierInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRevertPullRequestArgs = {\n  input: RevertPullRequestInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRevokeEnterpriseOrganizationsMigratorRoleArgs = {\n  input: RevokeEnterpriseOrganizationsMigratorRoleInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRevokeMigratorRoleArgs = {\n  input: RevokeMigratorRoleInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSetEnterpriseIdentityProviderArgs = {\n  input: SetEnterpriseIdentityProviderInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSetOrganizationInteractionLimitArgs = {\n  input: SetOrganizationInteractionLimitInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSetRepositoryInteractionLimitArgs = {\n  input: SetRepositoryInteractionLimitInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSetUserInteractionLimitArgs = {\n  input: SetUserInteractionLimitInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationStartOrganizationMigrationArgs = {\n  input: StartOrganizationMigrationInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationStartRepositoryMigrationArgs = {\n  input: StartRepositoryMigrationInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSubmitPullRequestReviewArgs = {\n  input: SubmitPullRequestReviewInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationTransferEnterpriseOrganizationArgs = {\n  input: TransferEnterpriseOrganizationInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationTransferIssueArgs = {\n  input: TransferIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnarchiveProjectV2ItemArgs = {\n  input: UnarchiveProjectV2ItemInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnarchiveRepositoryArgs = {\n  input: UnarchiveRepositoryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnfollowOrganizationArgs = {\n  input: UnfollowOrganizationInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnfollowUserArgs = {\n  input: UnfollowUserInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnlinkProjectV2FromRepositoryArgs = {\n  input: UnlinkProjectV2FromRepositoryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnlinkProjectV2FromTeamArgs = {\n  input: UnlinkProjectV2FromTeamInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnlinkRepositoryFromProjectArgs = {\n  input: UnlinkRepositoryFromProjectInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnlockLockableArgs = {\n  input: UnlockLockableInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnmarkDiscussionCommentAsAnswerArgs = {\n  input: UnmarkDiscussionCommentAsAnswerInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnmarkFileAsViewedArgs = {\n  input: UnmarkFileAsViewedInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnmarkIssueAsDuplicateArgs = {\n  input: UnmarkIssueAsDuplicateInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnmarkProjectV2AsTemplateArgs = {\n  input: UnmarkProjectV2AsTemplateInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnminimizeCommentArgs = {\n  input: UnminimizeCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnpinIssueArgs = {\n  input: UnpinIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnresolveReviewThreadArgs = {\n  input: UnresolveReviewThreadInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateBranchProtectionRuleArgs = {\n  input: UpdateBranchProtectionRuleInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateCheckRunArgs = {\n  input: UpdateCheckRunInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateCheckSuitePreferencesArgs = {\n  input: UpdateCheckSuitePreferencesInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateDiscussionArgs = {\n  input: UpdateDiscussionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateDiscussionCommentArgs = {\n  input: UpdateDiscussionCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseAdministratorRoleArgs = {\n  input: UpdateEnterpriseAdministratorRoleInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseAllowPrivateRepositoryForkingSettingArgs = {\n  input: UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseDefaultRepositoryPermissionSettingArgs = {\n  input: UpdateEnterpriseDefaultRepositoryPermissionSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingArgs = {\n  input: UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanCreateRepositoriesSettingArgs = {\n  input: UpdateEnterpriseMembersCanCreateRepositoriesSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanDeleteIssuesSettingArgs = {\n  input: UpdateEnterpriseMembersCanDeleteIssuesSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanDeleteRepositoriesSettingArgs = {\n  input: UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanInviteCollaboratorsSettingArgs = {\n  input: UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanMakePurchasesSettingArgs = {\n  input: UpdateEnterpriseMembersCanMakePurchasesSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingArgs = {\n  input: UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanViewDependencyInsightsSettingArgs = {\n  input: UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseOrganizationProjectsSettingArgs = {\n  input: UpdateEnterpriseOrganizationProjectsSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseOwnerOrganizationRoleArgs = {\n  input: UpdateEnterpriseOwnerOrganizationRoleInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseProfileArgs = {\n  input: UpdateEnterpriseProfileInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseRepositoryProjectsSettingArgs = {\n  input: UpdateEnterpriseRepositoryProjectsSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseTeamDiscussionsSettingArgs = {\n  input: UpdateEnterpriseTeamDiscussionsSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseTwoFactorAuthenticationRequiredSettingArgs = {\n  input: UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnvironmentArgs = {\n  input: UpdateEnvironmentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIpAllowListEnabledSettingArgs = {\n  input: UpdateIpAllowListEnabledSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIpAllowListEntryArgs = {\n  input: UpdateIpAllowListEntryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIpAllowListForInstalledAppsEnabledSettingArgs = {\n  input: UpdateIpAllowListForInstalledAppsEnabledSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIssueArgs = {\n  input: UpdateIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIssueCommentArgs = {\n  input: UpdateIssueCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateLabelArgs = {\n  input: UpdateLabelInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateNotificationRestrictionSettingArgs = {\n  input: UpdateNotificationRestrictionSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateOrganizationAllowPrivateRepositoryForkingSettingArgs = {\n  input: UpdateOrganizationAllowPrivateRepositoryForkingSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateOrganizationWebCommitSignoffSettingArgs = {\n  input: UpdateOrganizationWebCommitSignoffSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectArgs = {\n  input: UpdateProjectInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectCardArgs = {\n  input: UpdateProjectCardInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectColumnArgs = {\n  input: UpdateProjectColumnInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectV2Args = {\n  input: UpdateProjectV2Input;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectV2CollaboratorsArgs = {\n  input: UpdateProjectV2CollaboratorsInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectV2DraftIssueArgs = {\n  input: UpdateProjectV2DraftIssueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectV2ItemFieldValueArgs = {\n  input: UpdateProjectV2ItemFieldValueInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectV2ItemPositionArgs = {\n  input: UpdateProjectV2ItemPositionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestArgs = {\n  input: UpdatePullRequestInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestBranchArgs = {\n  input: UpdatePullRequestBranchInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestReviewArgs = {\n  input: UpdatePullRequestReviewInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestReviewCommentArgs = {\n  input: UpdatePullRequestReviewCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateRefArgs = {\n  input: UpdateRefInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateRefsArgs = {\n  input: UpdateRefsInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateRepositoryArgs = {\n  input: UpdateRepositoryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateRepositoryRulesetArgs = {\n  input: UpdateRepositoryRulesetInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateRepositoryWebCommitSignoffSettingArgs = {\n  input: UpdateRepositoryWebCommitSignoffSettingInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateSponsorshipPreferencesArgs = {\n  input: UpdateSponsorshipPreferencesInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateSubscriptionArgs = {\n  input: UpdateSubscriptionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTeamDiscussionArgs = {\n  input: UpdateTeamDiscussionInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTeamDiscussionCommentArgs = {\n  input: UpdateTeamDiscussionCommentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTeamReviewAssignmentArgs = {\n  input: UpdateTeamReviewAssignmentInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTeamsRepositoryArgs = {\n  input: UpdateTeamsRepositoryInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTopicsArgs = {\n  input: UpdateTopicsInput;\n};\n\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationVerifyVerifiableDomainArgs = {\n  input: VerifyVerifiableDomainInput;\n};\n\n/** An object with an ID. */\nexport type Node = {\n  /** ID of the object. */\n  id: Scalars['ID'];\n};\n\n/** The possible values for the notification restriction setting. */\nexport enum NotificationRestrictionSettingValue {\n  /** The setting is disabled for the owner. */\n  Disabled = 'DISABLED',\n  /** The setting is enabled for the owner. */\n  Enabled = 'ENABLED'\n}\n\n/**\n * An OIDC identity provider configured to provision identities for an enterprise.\n * Visible to enterprise owners or enterprise owners' personal access tokens\n * (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type OidcProvider = Node & {\n  __typename?: 'OIDCProvider';\n  /** The enterprise this identity provider belongs to. */\n  enterprise?: Maybe<Enterprise>;\n  /** ExternalIdentities provisioned by this identity provider. */\n  externalIdentities: ExternalIdentityConnection;\n  id: Scalars['ID'];\n  /** The OIDC identity provider type */\n  providerType: OidcProviderType;\n  /** The id of the tenant this provider is attached to */\n  tenantId: Scalars['String'];\n};\n\n\n/**\n * An OIDC identity provider configured to provision identities for an enterprise.\n * Visible to enterprise owners or enterprise owners' personal access tokens\n * (classic) with read:enterprise or admin:enterprise scope.\n */\nexport type OidcProviderExternalIdentitiesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  login?: InputMaybe<Scalars['String']>;\n  membersOnly?: InputMaybe<Scalars['Boolean']>;\n  userName?: InputMaybe<Scalars['String']>;\n};\n\n/** The OIDC identity provider type */\nexport enum OidcProviderType {\n  /** Azure Active Directory */\n  Aad = 'AAD'\n}\n\n/** Metadata for an audit entry with action oauth_application.* */\nexport type OauthApplicationAuditEntryData = {\n  /** The name of the OAuth Application. */\n  oauthApplicationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the OAuth Application */\n  oauthApplicationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the OAuth Application */\n  oauthApplicationUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a oauth_application.create event. */\nexport type OauthApplicationCreateAuditEntry = AuditEntry & Node & OauthApplicationAuditEntryData & OrganizationAuditEntryData & {\n  __typename?: 'OauthApplicationCreateAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The application URL of the OAuth Application. */\n  applicationUrl?: Maybe<Scalars['URI']>;\n  /** The callback URL of the OAuth Application. */\n  callbackUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The name of the OAuth Application. */\n  oauthApplicationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the OAuth Application */\n  oauthApplicationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the OAuth Application */\n  oauthApplicationUrl?: Maybe<Scalars['URI']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The rate limit of the OAuth Application. */\n  rateLimit?: Maybe<Scalars['Int']>;\n  /** The state of the OAuth Application. */\n  state?: Maybe<OauthApplicationCreateAuditEntryState>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The state of an OAuth Application when it was created. */\nexport enum OauthApplicationCreateAuditEntryState {\n  /** The OAuth Application was active and allowed to have OAuth Accesses. */\n  Active = 'ACTIVE',\n  /** The OAuth Application was in the process of being deleted. */\n  PendingDeletion = 'PENDING_DELETION',\n  /** The OAuth Application was suspended from generating OAuth Accesses due to abuse or security concerns. */\n  Suspended = 'SUSPENDED'\n}\n\n/** The corresponding operation type for the action */\nexport enum OperationType {\n  /** An existing resource was accessed */\n  Access = 'ACCESS',\n  /** A resource performed an authentication event */\n  Authentication = 'AUTHENTICATION',\n  /** A new resource was created */\n  Create = 'CREATE',\n  /** An existing resource was modified */\n  Modify = 'MODIFY',\n  /** An existing resource was removed */\n  Remove = 'REMOVE',\n  /** An existing resource was restored */\n  Restore = 'RESTORE',\n  /** An existing resource was transferred between multiple resources */\n  Transfer = 'TRANSFER'\n}\n\n/** Possible directions in which to order a list of items when provided an `orderBy` argument. */\nexport enum OrderDirection {\n  /** Specifies an ascending order for a given `orderBy` argument. */\n  Asc = 'ASC',\n  /** Specifies a descending order for a given `orderBy` argument. */\n  Desc = 'DESC'\n}\n\n/** Audit log entry for a org.add_billing_manager */\nexport type OrgAddBillingManagerAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgAddBillingManagerAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The email address used to invite a billing manager for the organization. */\n  invitationEmail?: Maybe<Scalars['String']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.add_member */\nexport type OrgAddMemberAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgAddMemberAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The permission level of the member added to the organization. */\n  permission?: Maybe<OrgAddMemberAuditEntryPermission>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The permissions available to members on an Organization. */\nexport enum OrgAddMemberAuditEntryPermission {\n  /** Can read, clone, push, and add collaborators to repositories. */\n  Admin = 'ADMIN',\n  /** Can read and clone repositories. */\n  Read = 'READ'\n}\n\n/** Audit log entry for a org.block_user */\nexport type OrgBlockUserAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgBlockUserAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The blocked user. */\n  blockedUser?: Maybe<User>;\n  /** The username of the blocked user. */\n  blockedUserName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the blocked user. */\n  blockedUserResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the blocked user. */\n  blockedUserUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.config.disable_collaborators_only event. */\nexport type OrgConfigDisableCollaboratorsOnlyAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgConfigDisableCollaboratorsOnlyAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.config.enable_collaborators_only event. */\nexport type OrgConfigEnableCollaboratorsOnlyAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgConfigEnableCollaboratorsOnlyAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.create event. */\nexport type OrgCreateAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgCreateAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The billing plan for the Organization. */\n  billingPlan?: Maybe<OrgCreateAuditEntryBillingPlan>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The billing plans available for organizations. */\nexport enum OrgCreateAuditEntryBillingPlan {\n  /** Team Plan */\n  Business = 'BUSINESS',\n  /** Enterprise Cloud Plan */\n  BusinessPlus = 'BUSINESS_PLUS',\n  /** Free Plan */\n  Free = 'FREE',\n  /** Tiered Per Seat Plan */\n  TieredPerSeat = 'TIERED_PER_SEAT',\n  /** Legacy Unlimited Plan */\n  Unlimited = 'UNLIMITED'\n}\n\n/** Audit log entry for a org.disable_oauth_app_restrictions event. */\nexport type OrgDisableOauthAppRestrictionsAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgDisableOauthAppRestrictionsAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.disable_saml event. */\nexport type OrgDisableSamlAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgDisableSamlAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The SAML provider's digest algorithm URL. */\n  digestMethodUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The SAML provider's issuer URL. */\n  issuerUrl?: Maybe<Scalars['URI']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The SAML provider's signature algorithm URL. */\n  signatureMethodUrl?: Maybe<Scalars['URI']>;\n  /** The SAML provider's single sign-on URL. */\n  singleSignOnUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.disable_two_factor_requirement event. */\nexport type OrgDisableTwoFactorRequirementAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgDisableTwoFactorRequirementAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.enable_oauth_app_restrictions event. */\nexport type OrgEnableOauthAppRestrictionsAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgEnableOauthAppRestrictionsAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.enable_saml event. */\nexport type OrgEnableSamlAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgEnableSamlAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The SAML provider's digest algorithm URL. */\n  digestMethodUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The SAML provider's issuer URL. */\n  issuerUrl?: Maybe<Scalars['URI']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The SAML provider's signature algorithm URL. */\n  signatureMethodUrl?: Maybe<Scalars['URI']>;\n  /** The SAML provider's single sign-on URL. */\n  singleSignOnUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.enable_two_factor_requirement event. */\nexport type OrgEnableTwoFactorRequirementAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgEnableTwoFactorRequirementAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Ordering options for an organization's enterprise owner connections. */\nexport type OrgEnterpriseOwnerOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order enterprise owners by. */\n  field: OrgEnterpriseOwnerOrderField;\n};\n\n/** Properties by which enterprise owners can be ordered. */\nexport enum OrgEnterpriseOwnerOrderField {\n  /** Order enterprise owners by login. */\n  Login = 'LOGIN'\n}\n\n/** Audit log entry for a org.invite_member event. */\nexport type OrgInviteMemberAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgInviteMemberAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The email address of the organization invitation. */\n  email?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The organization invitation. */\n  organizationInvitation?: Maybe<OrganizationInvitation>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.invite_to_business event. */\nexport type OrgInviteToBusinessAuditEntry = AuditEntry & EnterpriseAuditEntryData & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgInviteToBusinessAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The HTTP path for this enterprise. */\n  enterpriseResourcePath?: Maybe<Scalars['URI']>;\n  /** The slug of the enterprise. */\n  enterpriseSlug?: Maybe<Scalars['String']>;\n  /** The HTTP URL for this enterprise. */\n  enterpriseUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.oauth_app_access_approved event. */\nexport type OrgOauthAppAccessApprovedAuditEntry = AuditEntry & Node & OauthApplicationAuditEntryData & OrganizationAuditEntryData & {\n  __typename?: 'OrgOauthAppAccessApprovedAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The name of the OAuth Application. */\n  oauthApplicationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the OAuth Application */\n  oauthApplicationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the OAuth Application */\n  oauthApplicationUrl?: Maybe<Scalars['URI']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.oauth_app_access_denied event. */\nexport type OrgOauthAppAccessDeniedAuditEntry = AuditEntry & Node & OauthApplicationAuditEntryData & OrganizationAuditEntryData & {\n  __typename?: 'OrgOauthAppAccessDeniedAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The name of the OAuth Application. */\n  oauthApplicationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the OAuth Application */\n  oauthApplicationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the OAuth Application */\n  oauthApplicationUrl?: Maybe<Scalars['URI']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.oauth_app_access_requested event. */\nexport type OrgOauthAppAccessRequestedAuditEntry = AuditEntry & Node & OauthApplicationAuditEntryData & OrganizationAuditEntryData & {\n  __typename?: 'OrgOauthAppAccessRequestedAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The name of the OAuth Application. */\n  oauthApplicationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the OAuth Application */\n  oauthApplicationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the OAuth Application */\n  oauthApplicationUrl?: Maybe<Scalars['URI']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.remove_billing_manager event. */\nexport type OrgRemoveBillingManagerAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgRemoveBillingManagerAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The reason for the billing manager being removed. */\n  reason?: Maybe<OrgRemoveBillingManagerAuditEntryReason>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The reason a billing manager was removed from an Organization. */\nexport enum OrgRemoveBillingManagerAuditEntryReason {\n  /** SAML external identity missing */\n  SamlExternalIdentityMissing = 'SAML_EXTERNAL_IDENTITY_MISSING',\n  /** SAML SSO enforcement requires an external identity */\n  SamlSsoEnforcementRequiresExternalIdentity = 'SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY',\n  /** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */\n  TwoFactorRequirementNonCompliance = 'TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE'\n}\n\n/** Audit log entry for a org.remove_member event. */\nexport type OrgRemoveMemberAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgRemoveMemberAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The types of membership the member has with the organization. */\n  membershipTypes?: Maybe<Array<OrgRemoveMemberAuditEntryMembershipType>>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The reason for the member being removed. */\n  reason?: Maybe<OrgRemoveMemberAuditEntryReason>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The type of membership a user has with an Organization. */\nexport enum OrgRemoveMemberAuditEntryMembershipType {\n  /**\n   * Organization administrators have full access and can change several settings,\n   * including the names of repositories that belong to the Organization and Owners\n   * team membership. In addition, organization admins can delete the organization\n   * and all of its repositories.\n   */\n  Admin = 'ADMIN',\n  /** A billing manager is a user who manages the billing settings for the Organization, such as updating payment information. */\n  BillingManager = 'BILLING_MANAGER',\n  /** A direct member is a user that is a member of the Organization. */\n  DirectMember = 'DIRECT_MEMBER',\n  /**\n   * An outside collaborator is a person who isn't explicitly a member of the\n   * Organization, but who has Read, Write, or Admin permissions to one or more\n   * repositories in the organization.\n   */\n  OutsideCollaborator = 'OUTSIDE_COLLABORATOR',\n  /** A suspended member. */\n  Suspended = 'SUSPENDED',\n  /**\n   * An unaffiliated collaborator is a person who is not a member of the\n   * Organization and does not have access to any repositories in the Organization.\n   */\n  Unaffiliated = 'UNAFFILIATED'\n}\n\n/** The reason a member was removed from an Organization. */\nexport enum OrgRemoveMemberAuditEntryReason {\n  /** SAML external identity missing */\n  SamlExternalIdentityMissing = 'SAML_EXTERNAL_IDENTITY_MISSING',\n  /** SAML SSO enforcement requires an external identity */\n  SamlSsoEnforcementRequiresExternalIdentity = 'SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY',\n  /** User was removed from organization during account recovery */\n  TwoFactorAccountRecovery = 'TWO_FACTOR_ACCOUNT_RECOVERY',\n  /** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */\n  TwoFactorRequirementNonCompliance = 'TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE',\n  /** User account has been deleted */\n  UserAccountDeleted = 'USER_ACCOUNT_DELETED'\n}\n\n/** Audit log entry for a org.remove_outside_collaborator event. */\nexport type OrgRemoveOutsideCollaboratorAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgRemoveOutsideCollaboratorAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The types of membership the outside collaborator has with the organization. */\n  membershipTypes?: Maybe<Array<OrgRemoveOutsideCollaboratorAuditEntryMembershipType>>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The reason for the outside collaborator being removed from the Organization. */\n  reason?: Maybe<OrgRemoveOutsideCollaboratorAuditEntryReason>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The type of membership a user has with an Organization. */\nexport enum OrgRemoveOutsideCollaboratorAuditEntryMembershipType {\n  /** A billing manager is a user who manages the billing settings for the Organization, such as updating payment information. */\n  BillingManager = 'BILLING_MANAGER',\n  /**\n   * An outside collaborator is a person who isn't explicitly a member of the\n   * Organization, but who has Read, Write, or Admin permissions to one or more\n   * repositories in the organization.\n   */\n  OutsideCollaborator = 'OUTSIDE_COLLABORATOR',\n  /**\n   * An unaffiliated collaborator is a person who is not a member of the\n   * Organization and does not have access to any repositories in the organization.\n   */\n  Unaffiliated = 'UNAFFILIATED'\n}\n\n/** The reason an outside collaborator was removed from an Organization. */\nexport enum OrgRemoveOutsideCollaboratorAuditEntryReason {\n  /** SAML external identity missing */\n  SamlExternalIdentityMissing = 'SAML_EXTERNAL_IDENTITY_MISSING',\n  /** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */\n  TwoFactorRequirementNonCompliance = 'TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE'\n}\n\n/** Audit log entry for a org.restore_member event. */\nexport type OrgRestoreMemberAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgRestoreMemberAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The number of custom email routings for the restored member. */\n  restoredCustomEmailRoutingsCount?: Maybe<Scalars['Int']>;\n  /** The number of issue assignments for the restored member. */\n  restoredIssueAssignmentsCount?: Maybe<Scalars['Int']>;\n  /** Restored organization membership objects. */\n  restoredMemberships?: Maybe<Array<OrgRestoreMemberAuditEntryMembership>>;\n  /** The number of restored memberships. */\n  restoredMembershipsCount?: Maybe<Scalars['Int']>;\n  /** The number of repositories of the restored member. */\n  restoredRepositoriesCount?: Maybe<Scalars['Int']>;\n  /** The number of starred repositories for the restored member. */\n  restoredRepositoryStarsCount?: Maybe<Scalars['Int']>;\n  /** The number of watched repositories for the restored member. */\n  restoredRepositoryWatchesCount?: Maybe<Scalars['Int']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Types of memberships that can be restored for an Organization member. */\nexport type OrgRestoreMemberAuditEntryMembership = OrgRestoreMemberMembershipOrganizationAuditEntryData | OrgRestoreMemberMembershipRepositoryAuditEntryData | OrgRestoreMemberMembershipTeamAuditEntryData;\n\n/** Metadata for an organization membership for org.restore_member actions */\nexport type OrgRestoreMemberMembershipOrganizationAuditEntryData = OrganizationAuditEntryData & {\n  __typename?: 'OrgRestoreMemberMembershipOrganizationAuditEntryData';\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Metadata for a repository membership for org.restore_member actions */\nexport type OrgRestoreMemberMembershipRepositoryAuditEntryData = RepositoryAuditEntryData & {\n  __typename?: 'OrgRestoreMemberMembershipRepositoryAuditEntryData';\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Metadata for a team membership for org.restore_member actions */\nexport type OrgRestoreMemberMembershipTeamAuditEntryData = TeamAuditEntryData & {\n  __typename?: 'OrgRestoreMemberMembershipTeamAuditEntryData';\n  /** The team associated with the action */\n  team?: Maybe<Team>;\n  /** The name of the team */\n  teamName?: Maybe<Scalars['String']>;\n  /** The HTTP path for this team */\n  teamResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for this team */\n  teamUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.unblock_user */\nexport type OrgUnblockUserAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgUnblockUserAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The user being unblocked by the organization. */\n  blockedUser?: Maybe<User>;\n  /** The username of the blocked user. */\n  blockedUserName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the blocked user. */\n  blockedUserResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the blocked user. */\n  blockedUserUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a org.update_default_repository_permission */\nexport type OrgUpdateDefaultRepositoryPermissionAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgUpdateDefaultRepositoryPermissionAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The new base repository permission level for the organization. */\n  permission?: Maybe<OrgUpdateDefaultRepositoryPermissionAuditEntryPermission>;\n  /** The former base repository permission level for the organization. */\n  permissionWas?: Maybe<OrgUpdateDefaultRepositoryPermissionAuditEntryPermission>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The default permission a repository can have in an Organization. */\nexport enum OrgUpdateDefaultRepositoryPermissionAuditEntryPermission {\n  /** Can read, clone, push, and add collaborators to repositories. */\n  Admin = 'ADMIN',\n  /** No default permission value. */\n  None = 'NONE',\n  /** Can read and clone repositories. */\n  Read = 'READ',\n  /** Can read, clone and push to repositories. */\n  Write = 'WRITE'\n}\n\n/** Audit log entry for a org.update_member event. */\nexport type OrgUpdateMemberAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgUpdateMemberAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The new member permission level for the organization. */\n  permission?: Maybe<OrgUpdateMemberAuditEntryPermission>;\n  /** The former member permission level for the organization. */\n  permissionWas?: Maybe<OrgUpdateMemberAuditEntryPermission>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The permissions available to members on an Organization. */\nexport enum OrgUpdateMemberAuditEntryPermission {\n  /** Can read, clone, push, and add collaborators to repositories. */\n  Admin = 'ADMIN',\n  /** Can read and clone repositories. */\n  Read = 'READ'\n}\n\n/** Audit log entry for a org.update_member_repository_creation_permission event. */\nexport type OrgUpdateMemberRepositoryCreationPermissionAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgUpdateMemberRepositoryCreationPermissionAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** Can members create repositories in the organization. */\n  canCreateRepositories?: Maybe<Scalars['Boolean']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n  /** The permission for visibility level of repositories for this organization. */\n  visibility?: Maybe<OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility>;\n};\n\n/** The permissions available for repository creation on an Organization. */\nexport enum OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility {\n  /** All organization members are restricted from creating any repositories. */\n  All = 'ALL',\n  /** All organization members are restricted from creating internal repositories. */\n  Internal = 'INTERNAL',\n  /** All organization members are allowed to create any repositories. */\n  None = 'NONE',\n  /** All organization members are restricted from creating private repositories. */\n  Private = 'PRIVATE',\n  /** All organization members are restricted from creating private or internal repositories. */\n  PrivateInternal = 'PRIVATE_INTERNAL',\n  /** All organization members are restricted from creating public repositories. */\n  Public = 'PUBLIC',\n  /** All organization members are restricted from creating public or internal repositories. */\n  PublicInternal = 'PUBLIC_INTERNAL',\n  /** All organization members are restricted from creating public or private repositories. */\n  PublicPrivate = 'PUBLIC_PRIVATE'\n}\n\n/** Audit log entry for a org.update_member_repository_invitation_permission event. */\nexport type OrgUpdateMemberRepositoryInvitationPermissionAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & {\n  __typename?: 'OrgUpdateMemberRepositoryInvitationPermissionAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** Can outside collaborators be invited to repositories in the organization. */\n  canInviteOutsideCollaboratorsToRepositories?: Maybe<Scalars['Boolean']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type Organization = Actor & AnnouncementBanner & MemberStatusable & Node & PackageOwner & ProfileOwner & ProjectOwner & ProjectV2Owner & ProjectV2Recent & RepositoryDiscussionAuthor & RepositoryDiscussionCommentAuthor & RepositoryOwner & Sponsorable & UniformResourceLocatable & {\n  __typename?: 'Organization';\n  /** The text of the announcement */\n  announcement?: Maybe<Scalars['String']>;\n  /** The expiration date of the announcement, if any */\n  announcementExpiresAt?: Maybe<Scalars['DateTime']>;\n  /** Whether the announcement can be dismissed by the user */\n  announcementUserDismissible?: Maybe<Scalars['Boolean']>;\n  /** Determine if this repository owner has any items that can be pinned to their profile. */\n  anyPinnableItems: Scalars['Boolean'];\n  /** Audit log entries of the organization */\n  auditLog: OrganizationAuditEntryConnection;\n  /** A URL pointing to the organization's public avatar. */\n  avatarUrl: Scalars['URI'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The organization's public profile description. */\n  description?: Maybe<Scalars['String']>;\n  /** The organization's public profile description rendered to HTML. */\n  descriptionHTML?: Maybe<Scalars['String']>;\n  /** A list of domains owned by the organization. */\n  domains?: Maybe<VerifiableDomainConnection>;\n  /** The organization's public email. */\n  email?: Maybe<Scalars['String']>;\n  /** A list of owners of the organization's enterprise account. */\n  enterpriseOwners: OrganizationEnterpriseOwnerConnection;\n  /** The estimated next GitHub Sponsors payout for this user/organization in cents (USD). */\n  estimatedNextSponsorsPayoutInCents: Scalars['Int'];\n  /** True if this user/organization has a GitHub Sponsors listing. */\n  hasSponsorsListing: Scalars['Boolean'];\n  id: Scalars['ID'];\n  /** The interaction ability settings for this organization. */\n  interactionAbility?: Maybe<RepositoryInteractionAbility>;\n  /** The setting value for whether the organization has an IP allow list enabled. */\n  ipAllowListEnabledSetting: IpAllowListEnabledSettingValue;\n  /** The IP addresses that are allowed to access resources owned by the organization. */\n  ipAllowListEntries: IpAllowListEntryConnection;\n  /** The setting value for whether the organization has IP allow list configuration for installed GitHub Apps enabled. */\n  ipAllowListForInstalledAppsEnabledSetting: IpAllowListForInstalledAppsEnabledSettingValue;\n  /** Whether the given account is sponsoring this user/organization. */\n  isSponsoredBy: Scalars['Boolean'];\n  /** True if the viewer is sponsored by this user/organization. */\n  isSponsoringViewer: Scalars['Boolean'];\n  /** Whether the organization has verified its profile email and website. */\n  isVerified: Scalars['Boolean'];\n  /**\n   * Showcases a selection of repositories and gists that the profile owner has\n   * either curated or that have been selected automatically based on popularity.\n   */\n  itemShowcase: ProfileItemShowcase;\n  /** The organization's public profile location. */\n  location?: Maybe<Scalars['String']>;\n  /** The organization's login name. */\n  login: Scalars['String'];\n  /** A list of all mannequins for this organization. */\n  mannequins: MannequinConnection;\n  /** Get the status messages members of this entity have set that are either public or visible only to the organization. */\n  memberStatuses: UserStatusConnection;\n  /** Members can fork private repositories in this organization */\n  membersCanForkPrivateRepositories: Scalars['Boolean'];\n  /** A list of users who are members of this organization. */\n  membersWithRole: OrganizationMemberConnection;\n  /** The estimated monthly GitHub Sponsors income for this user/organization in cents (USD). */\n  monthlyEstimatedSponsorsIncomeInCents: Scalars['Int'];\n  /** The organization's public profile name. */\n  name?: Maybe<Scalars['String']>;\n  /** The HTTP path creating a new team */\n  newTeamResourcePath: Scalars['URI'];\n  /** The HTTP URL creating a new team */\n  newTeamUrl: Scalars['URI'];\n  /** Indicates if email notification delivery for this organization is restricted to verified or approved domains. */\n  notificationDeliveryRestrictionEnabledSetting: NotificationRestrictionSettingValue;\n  /** The billing email for the organization. */\n  organizationBillingEmail?: Maybe<Scalars['String']>;\n  /** A list of packages under the owner. */\n  packages: PackageConnection;\n  /** A list of users who have been invited to join this organization. */\n  pendingMembers: UserConnection;\n  /** A list of repositories and gists this profile owner can pin to their profile. */\n  pinnableItems: PinnableItemConnection;\n  /** A list of repositories and gists this profile owner has pinned to their profile */\n  pinnedItems: PinnableItemConnection;\n  /** Returns how many more items this profile owner can pin to their profile. */\n  pinnedItemsRemaining: Scalars['Int'];\n  /** Find project by number. */\n  project?: Maybe<Project>;\n  /** Find a project by number. */\n  projectV2?: Maybe<ProjectV2>;\n  /** A list of projects under the owner. */\n  projects: ProjectConnection;\n  /** The HTTP path listing organization's projects */\n  projectsResourcePath: Scalars['URI'];\n  /** The HTTP URL listing organization's projects */\n  projectsUrl: Scalars['URI'];\n  /** A list of projects under the owner. */\n  projectsV2: ProjectV2Connection;\n  /** Recent projects that this user has modified in the context of the owner. */\n  recentProjects: ProjectV2Connection;\n  /** A list of repositories that the user owns. */\n  repositories: RepositoryConnection;\n  /** Find Repository. */\n  repository?: Maybe<Repository>;\n  /** Discussion comments this user has authored. */\n  repositoryDiscussionComments: DiscussionCommentConnection;\n  /** Discussions this user has started. */\n  repositoryDiscussions: DiscussionConnection;\n  /** A list of all repository migrations for this organization. */\n  repositoryMigrations: RepositoryMigrationConnection;\n  /**\n   * When true the organization requires all members, billing managers, and outside\n   * collaborators to enable two-factor authentication.\n   */\n  requiresTwoFactorAuthentication?: Maybe<Scalars['Boolean']>;\n  /** The HTTP path for this organization. */\n  resourcePath: Scalars['URI'];\n  /** Returns a single ruleset from the current organization by ID. */\n  ruleset?: Maybe<RepositoryRuleset>;\n  /** A list of rulesets for this organization. */\n  rulesets?: Maybe<RepositoryRulesetConnection>;\n  /**\n   * The Organization's SAML identity provider. Visible to (1) organization owners,\n   * (2) organization owners' personal access tokens (classic) with read:org or\n   * admin:org scope, (3) GitHub App with an installation token with read or write\n   * access to members.\n   */\n  samlIdentityProvider?: Maybe<OrganizationIdentityProvider>;\n  /** List of users and organizations this entity is sponsoring. */\n  sponsoring: SponsorConnection;\n  /** List of sponsors for this user or organization. */\n  sponsors: SponsorConnection;\n  /** Events involving this sponsorable, such as new sponsorships. */\n  sponsorsActivities: SponsorsActivityConnection;\n  /** The GitHub Sponsors listing for this user or organization. */\n  sponsorsListing?: Maybe<SponsorsListing>;\n  /** The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor. */\n  sponsorshipForViewerAsSponsor?: Maybe<Sponsorship>;\n  /** The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving. */\n  sponsorshipForViewerAsSponsorable?: Maybe<Sponsorship>;\n  /** List of sponsorship updates sent from this sponsorable to sponsors. */\n  sponsorshipNewsletters: SponsorshipNewsletterConnection;\n  /** The sponsorships where this user or organization is the maintainer receiving the funds. */\n  sponsorshipsAsMaintainer: SponsorshipConnection;\n  /** The sponsorships where this user or organization is the funder. */\n  sponsorshipsAsSponsor: SponsorshipConnection;\n  /** Find an organization's team by its slug. */\n  team?: Maybe<Team>;\n  /** A list of teams in this organization. */\n  teams: TeamConnection;\n  /** The HTTP path listing organization's teams */\n  teamsResourcePath: Scalars['URI'];\n  /** The HTTP URL listing organization's teams */\n  teamsUrl: Scalars['URI'];\n  /**\n   * The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has\n   * spent on GitHub to fund sponsorships. Only returns a value when viewed by the\n   * user themselves or by a user who can manage sponsorships for the requested organization.\n   */\n  totalSponsorshipAmountAsSponsorInCents?: Maybe<Scalars['Int']>;\n  /** The organization's Twitter username. */\n  twitterUsername?: Maybe<Scalars['String']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this organization. */\n  url: Scalars['URI'];\n  /** Organization is adminable by the viewer. */\n  viewerCanAdminister: Scalars['Boolean'];\n  /** Can the viewer pin repositories and gists to the profile? */\n  viewerCanChangePinnedItems: Scalars['Boolean'];\n  /** Can the current viewer create new projects on this owner. */\n  viewerCanCreateProjects: Scalars['Boolean'];\n  /** Viewer can create repositories on this organization */\n  viewerCanCreateRepositories: Scalars['Boolean'];\n  /** Viewer can create teams on this organization. */\n  viewerCanCreateTeams: Scalars['Boolean'];\n  /** Whether or not the viewer is able to sponsor this user/organization. */\n  viewerCanSponsor: Scalars['Boolean'];\n  /** Viewer is an active member of this organization. */\n  viewerIsAMember: Scalars['Boolean'];\n  /** Whether or not this Organization is followed by the viewer. */\n  viewerIsFollowing: Scalars['Boolean'];\n  /** True if the viewer is sponsoring this user/organization. */\n  viewerIsSponsoring: Scalars['Boolean'];\n  /** Whether contributors are required to sign off on web-based commits for repositories in this organization. */\n  webCommitSignoffRequired: Scalars['Boolean'];\n  /** The organization's public profile URL. */\n  websiteUrl?: Maybe<Scalars['URI']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationAnyPinnableItemsArgs = {\n  type?: InputMaybe<PinnableItemType>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationAuditLogArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<AuditLogOrder>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationDomainsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  isApproved?: InputMaybe<Scalars['Boolean']>;\n  isVerified?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<VerifiableDomainOrder>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationEnterpriseOwnersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrgEnterpriseOwnerOrder>;\n  organizationRole?: InputMaybe<RoleInOrganization>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationIpAllowListEntriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IpAllowListEntryOrder>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationIsSponsoredByArgs = {\n  accountLogin: Scalars['String'];\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationMannequinsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<MannequinOrder>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationMemberStatusesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<UserStatusOrder>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationMembersWithRoleArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPackagesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  names?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  orderBy?: InputMaybe<PackageOrder>;\n  packageType?: InputMaybe<PackageType>;\n  repositoryId?: InputMaybe<Scalars['ID']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPendingMembersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPinnableItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPinnedItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationProjectArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationProjectV2Args = {\n  number: Scalars['Int'];\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationProjectsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectOrder>;\n  search?: InputMaybe<Scalars['String']>;\n  states?: InputMaybe<Array<ProjectState>>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationProjectsV2Args = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRecentProjectsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoriesArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  isFork?: InputMaybe<Scalars['Boolean']>;\n  isLocked?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoryArgs = {\n  followRenames?: InputMaybe<Scalars['Boolean']>;\n  name: Scalars['String'];\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoryDiscussionCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  onlyAnswers?: InputMaybe<Scalars['Boolean']>;\n  repositoryId?: InputMaybe<Scalars['ID']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoryDiscussionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  answered?: InputMaybe<Scalars['Boolean']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<DiscussionOrder>;\n  repositoryId?: InputMaybe<Scalars['ID']>;\n  states?: InputMaybe<Array<DiscussionState>>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoryMigrationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryMigrationOrder>;\n  repositoryName?: InputMaybe<Scalars['String']>;\n  state?: InputMaybe<MigrationState>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRulesetArgs = {\n  databaseId: Scalars['Int'];\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRulesetsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includeParents?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsoringArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorOrder>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorOrder>;\n  tierId?: InputMaybe<Scalars['ID']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorsActivitiesArgs = {\n  actions?: InputMaybe<Array<SponsorsActivityAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includeAsSponsor?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorsActivityOrder>;\n  period?: InputMaybe<SponsorsActivityPeriod>;\n  since?: InputMaybe<Scalars['DateTime']>;\n  until?: InputMaybe<Scalars['DateTime']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipForViewerAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipForViewerAsSponsorableArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipNewslettersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorshipNewsletterOrder>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipsAsMaintainerArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includePrivate?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipsAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  maintainerLogins?: InputMaybe<Array<Scalars['String']>>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationTeamArgs = {\n  slug: Scalars['String'];\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationTeamsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  ldapMapped?: InputMaybe<Scalars['Boolean']>;\n  notificationSetting?: InputMaybe<TeamNotificationSetting>;\n  orderBy?: InputMaybe<TeamOrder>;\n  privacy?: InputMaybe<TeamPrivacy>;\n  query?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<TeamRole>;\n  rootTeamsOnly?: InputMaybe<Scalars['Boolean']>;\n  userLogins?: InputMaybe<Array<Scalars['String']>>;\n};\n\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationTotalSponsorshipAmountAsSponsorInCentsArgs = {\n  since?: InputMaybe<Scalars['DateTime']>;\n  sponsorableLogins?: InputMaybe<Array<Scalars['String']>>;\n  until?: InputMaybe<Scalars['DateTime']>;\n};\n\n/** An audit entry in an organization audit log. */\nexport type OrganizationAuditEntry = MembersCanDeleteReposClearAuditEntry | MembersCanDeleteReposDisableAuditEntry | MembersCanDeleteReposEnableAuditEntry | OauthApplicationCreateAuditEntry | OrgAddBillingManagerAuditEntry | OrgAddMemberAuditEntry | OrgBlockUserAuditEntry | OrgConfigDisableCollaboratorsOnlyAuditEntry | OrgConfigEnableCollaboratorsOnlyAuditEntry | OrgCreateAuditEntry | OrgDisableOauthAppRestrictionsAuditEntry | OrgDisableSamlAuditEntry | OrgDisableTwoFactorRequirementAuditEntry | OrgEnableOauthAppRestrictionsAuditEntry | OrgEnableSamlAuditEntry | OrgEnableTwoFactorRequirementAuditEntry | OrgInviteMemberAuditEntry | OrgInviteToBusinessAuditEntry | OrgOauthAppAccessApprovedAuditEntry | OrgOauthAppAccessDeniedAuditEntry | OrgOauthAppAccessRequestedAuditEntry | OrgRemoveBillingManagerAuditEntry | OrgRemoveMemberAuditEntry | OrgRemoveOutsideCollaboratorAuditEntry | OrgRestoreMemberAuditEntry | OrgUnblockUserAuditEntry | OrgUpdateDefaultRepositoryPermissionAuditEntry | OrgUpdateMemberAuditEntry | OrgUpdateMemberRepositoryCreationPermissionAuditEntry | OrgUpdateMemberRepositoryInvitationPermissionAuditEntry | PrivateRepositoryForkingDisableAuditEntry | PrivateRepositoryForkingEnableAuditEntry | RepoAccessAuditEntry | RepoAddMemberAuditEntry | RepoAddTopicAuditEntry | RepoArchivedAuditEntry | RepoChangeMergeSettingAuditEntry | RepoConfigDisableAnonymousGitAccessAuditEntry | RepoConfigDisableCollaboratorsOnlyAuditEntry | RepoConfigDisableContributorsOnlyAuditEntry | RepoConfigDisableSockpuppetDisallowedAuditEntry | RepoConfigEnableAnonymousGitAccessAuditEntry | RepoConfigEnableCollaboratorsOnlyAuditEntry | RepoConfigEnableContributorsOnlyAuditEntry | RepoConfigEnableSockpuppetDisallowedAuditEntry | RepoConfigLockAnonymousGitAccessAuditEntry | RepoConfigUnlockAnonymousGitAccessAuditEntry | RepoCreateAuditEntry | RepoDestroyAuditEntry | RepoRemoveMemberAuditEntry | RepoRemoveTopicAuditEntry | RepositoryVisibilityChangeDisableAuditEntry | RepositoryVisibilityChangeEnableAuditEntry | TeamAddMemberAuditEntry | TeamAddRepositoryAuditEntry | TeamChangeParentTeamAuditEntry | TeamRemoveMemberAuditEntry | TeamRemoveRepositoryAuditEntry;\n\n/** The connection type for OrganizationAuditEntry. */\nexport type OrganizationAuditEntryConnection = {\n  __typename?: 'OrganizationAuditEntryConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrganizationAuditEntryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<OrganizationAuditEntry>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Metadata for an audit entry with action org.* */\nexport type OrganizationAuditEntryData = {\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n};\n\n/** An edge in a connection. */\nexport type OrganizationAuditEntryEdge = {\n  __typename?: 'OrganizationAuditEntryEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<OrganizationAuditEntry>;\n};\n\n/** A list of organizations managed by an enterprise. */\nexport type OrganizationConnection = {\n  __typename?: 'OrganizationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrganizationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Organization>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type OrganizationEdge = {\n  __typename?: 'OrganizationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Organization>;\n};\n\n/** The connection type for User. */\nexport type OrganizationEnterpriseOwnerConnection = {\n  __typename?: 'OrganizationEnterpriseOwnerConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrganizationEnterpriseOwnerEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An enterprise owner in the context of an organization that is part of the enterprise. */\nexport type OrganizationEnterpriseOwnerEdge = {\n  __typename?: 'OrganizationEnterpriseOwnerEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<User>;\n  /** The role of the owner with respect to the organization. */\n  organizationRole: RoleInOrganization;\n};\n\n/**\n * An Identity Provider configured to provision SAML and SCIM identities for\n * Organizations. Visible to (1) organization owners, (2) organization owners'\n * personal access tokens (classic) with read:org or admin:org scope, (3) GitHub\n * App with an installation token with read or write access to members.\n */\nexport type OrganizationIdentityProvider = Node & {\n  __typename?: 'OrganizationIdentityProvider';\n  /** The digest algorithm used to sign SAML requests for the Identity Provider. */\n  digestMethod?: Maybe<Scalars['URI']>;\n  /** External Identities provisioned by this Identity Provider */\n  externalIdentities: ExternalIdentityConnection;\n  id: Scalars['ID'];\n  /** The x509 certificate used by the Identity Provider to sign assertions and responses. */\n  idpCertificate?: Maybe<Scalars['X509Certificate']>;\n  /** The Issuer Entity ID for the SAML Identity Provider */\n  issuer?: Maybe<Scalars['String']>;\n  /** Organization this Identity Provider belongs to */\n  organization?: Maybe<Organization>;\n  /** The signature algorithm used to sign SAML requests for the Identity Provider. */\n  signatureMethod?: Maybe<Scalars['URI']>;\n  /** The URL endpoint for the Identity Provider's SAML SSO. */\n  ssoUrl?: Maybe<Scalars['URI']>;\n};\n\n\n/**\n * An Identity Provider configured to provision SAML and SCIM identities for\n * Organizations. Visible to (1) organization owners, (2) organization owners'\n * personal access tokens (classic) with read:org or admin:org scope, (3) GitHub\n * App with an installation token with read or write access to members.\n */\nexport type OrganizationIdentityProviderExternalIdentitiesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  login?: InputMaybe<Scalars['String']>;\n  membersOnly?: InputMaybe<Scalars['Boolean']>;\n  userName?: InputMaybe<Scalars['String']>;\n};\n\n/** An Invitation for a user to an organization. */\nexport type OrganizationInvitation = Node & {\n  __typename?: 'OrganizationInvitation';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The email address of the user invited to the organization. */\n  email?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The source of the invitation. */\n  invitationSource: OrganizationInvitationSource;\n  /** The type of invitation that was sent (e.g. email, user). */\n  invitationType: OrganizationInvitationType;\n  /** The user who was invited to the organization. */\n  invitee?: Maybe<User>;\n  /** The user who created the invitation. */\n  inviter: User;\n  /** The organization the invite is for */\n  organization: Organization;\n  /** The user's pending role in the organization (e.g. member, owner). */\n  role: OrganizationInvitationRole;\n};\n\n/** The connection type for OrganizationInvitation. */\nexport type OrganizationInvitationConnection = {\n  __typename?: 'OrganizationInvitationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrganizationInvitationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<OrganizationInvitation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type OrganizationInvitationEdge = {\n  __typename?: 'OrganizationInvitationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<OrganizationInvitation>;\n};\n\n/** The possible organization invitation roles. */\nexport enum OrganizationInvitationRole {\n  /** The user is invited to be an admin of the organization. */\n  Admin = 'ADMIN',\n  /** The user is invited to be a billing manager of the organization. */\n  BillingManager = 'BILLING_MANAGER',\n  /** The user is invited to be a direct member of the organization. */\n  DirectMember = 'DIRECT_MEMBER',\n  /** The user's previous role will be reinstated. */\n  Reinstate = 'REINSTATE'\n}\n\n/** The possible organization invitation sources. */\nexport enum OrganizationInvitationSource {\n  /** The invitation was created from the web interface or from API */\n  Member = 'MEMBER',\n  /** The invitation was created from SCIM */\n  Scim = 'SCIM',\n  /** The invitation was sent before this feature was added */\n  Unknown = 'UNKNOWN'\n}\n\n/** The possible organization invitation types. */\nexport enum OrganizationInvitationType {\n  /** The invitation was to an email address. */\n  Email = 'EMAIL',\n  /** The invitation was to an existing user. */\n  User = 'USER'\n}\n\n/** The connection type for User. */\nexport type OrganizationMemberConnection = {\n  __typename?: 'OrganizationMemberConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrganizationMemberEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents a user within an organization. */\nexport type OrganizationMemberEdge = {\n  __typename?: 'OrganizationMemberEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer. */\n  hasTwoFactorEnabled?: Maybe<Scalars['Boolean']>;\n  /** The item at the end of the edge. */\n  node?: Maybe<User>;\n  /** The role this user has in the organization. */\n  role?: Maybe<OrganizationMemberRole>;\n};\n\n/** The possible roles within an organization for its members. */\nexport enum OrganizationMemberRole {\n  /** The user is an administrator of the organization. */\n  Admin = 'ADMIN',\n  /** The user is a member of the organization. */\n  Member = 'MEMBER'\n}\n\n/** The possible values for the members can create repositories setting on an organization. */\nexport enum OrganizationMembersCanCreateRepositoriesSettingValue {\n  /** Members will be able to create public and private repositories. */\n  All = 'ALL',\n  /** Members will not be able to create public or private repositories. */\n  Disabled = 'DISABLED',\n  /** Members will be able to create only internal repositories. */\n  Internal = 'INTERNAL',\n  /** Members will be able to create only private repositories. */\n  Private = 'PRIVATE'\n}\n\n/** A GitHub Enterprise Importer (GEI) organization migration. */\nexport type OrganizationMigration = Node & {\n  __typename?: 'OrganizationMigration';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['String']>;\n  /** The reason the organization migration failed. */\n  failureReason?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The remaining amount of repos to be migrated. */\n  remainingRepositoriesCount?: Maybe<Scalars['Int']>;\n  /** The name of the source organization to be migrated. */\n  sourceOrgName: Scalars['String'];\n  /** The URL of the source organization to migrate. */\n  sourceOrgUrl: Scalars['URI'];\n  /** The migration state. */\n  state: OrganizationMigrationState;\n  /** The name of the target organization. */\n  targetOrgName: Scalars['String'];\n  /** The total amount of repositories to be migrated. */\n  totalRepositoriesCount?: Maybe<Scalars['Int']>;\n};\n\n/** The Octoshift Organization migration state. */\nexport enum OrganizationMigrationState {\n  /** The Octoshift migration has failed. */\n  Failed = 'FAILED',\n  /** The Octoshift migration has invalid credentials. */\n  FailedValidation = 'FAILED_VALIDATION',\n  /** The Octoshift migration is in progress. */\n  InProgress = 'IN_PROGRESS',\n  /** The Octoshift migration has not started. */\n  NotStarted = 'NOT_STARTED',\n  /** The Octoshift migration needs to have its credentials validated. */\n  PendingValidation = 'PENDING_VALIDATION',\n  /** The Octoshift migration is performing post repository migrations. */\n  PostRepoMigration = 'POST_REPO_MIGRATION',\n  /** The Octoshift migration is performing pre repository migrations. */\n  PreRepoMigration = 'PRE_REPO_MIGRATION',\n  /** The Octoshift migration has been queued. */\n  Queued = 'QUEUED',\n  /** The Octoshift org migration is performing repository migrations. */\n  RepoMigration = 'REPO_MIGRATION',\n  /** The Octoshift migration has succeeded. */\n  Succeeded = 'SUCCEEDED'\n}\n\n/** Used for argument of CreateProjectV2 mutation. */\nexport type OrganizationOrUser = Organization | User;\n\n/** Ordering options for organization connections. */\nexport type OrganizationOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order organizations by. */\n  field: OrganizationOrderField;\n};\n\n/** Properties by which organization connections can be ordered. */\nexport enum OrganizationOrderField {\n  /** Order organizations by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order organizations by login */\n  Login = 'LOGIN'\n}\n\n/** An organization teams hovercard context */\nexport type OrganizationTeamsHovercardContext = HovercardContext & {\n  __typename?: 'OrganizationTeamsHovercardContext';\n  /** A string describing this context */\n  message: Scalars['String'];\n  /** An octicon to accompany this context */\n  octicon: Scalars['String'];\n  /** Teams in this organization the user is a member of that are relevant */\n  relevantTeams: TeamConnection;\n  /** The path for the full team list for this user */\n  teamsResourcePath: Scalars['URI'];\n  /** The URL for the full team list for this user */\n  teamsUrl: Scalars['URI'];\n  /** The total number of teams the user is on in the organization */\n  totalTeamCount: Scalars['Int'];\n};\n\n\n/** An organization teams hovercard context */\nexport type OrganizationTeamsHovercardContextRelevantTeamsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** An organization list hovercard context */\nexport type OrganizationsHovercardContext = HovercardContext & {\n  __typename?: 'OrganizationsHovercardContext';\n  /** A string describing this context */\n  message: Scalars['String'];\n  /** An octicon to accompany this context */\n  octicon: Scalars['String'];\n  /** Organizations this user is a member of that are relevant */\n  relevantOrganizations: OrganizationConnection;\n  /** The total number of organizations this user is in */\n  totalOrganizationCount: Scalars['Int'];\n};\n\n\n/** An organization list hovercard context */\nexport type OrganizationsHovercardContextRelevantOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n};\n\n/** Information for an uploaded package. */\nexport type Package = Node & {\n  __typename?: 'Package';\n  id: Scalars['ID'];\n  /** Find the latest version for the package. */\n  latestVersion?: Maybe<PackageVersion>;\n  /** Identifies the name of the package. */\n  name: Scalars['String'];\n  /** Identifies the type of the package. */\n  packageType: PackageType;\n  /** The repository this package belongs to. */\n  repository?: Maybe<Repository>;\n  /** Statistics about package activity. */\n  statistics?: Maybe<PackageStatistics>;\n  /** Find package version by version string. */\n  version?: Maybe<PackageVersion>;\n  /** list of versions for this package */\n  versions: PackageVersionConnection;\n};\n\n\n/** Information for an uploaded package. */\nexport type PackageVersionArgs = {\n  version: Scalars['String'];\n};\n\n\n/** Information for an uploaded package. */\nexport type PackageVersionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PackageVersionOrder>;\n};\n\n/** The connection type for Package. */\nexport type PackageConnection = {\n  __typename?: 'PackageConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PackageEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Package>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PackageEdge = {\n  __typename?: 'PackageEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Package>;\n};\n\n/** A file in a package version. */\nexport type PackageFile = Node & {\n  __typename?: 'PackageFile';\n  id: Scalars['ID'];\n  /** MD5 hash of the file. */\n  md5?: Maybe<Scalars['String']>;\n  /** Name of the file. */\n  name: Scalars['String'];\n  /** The package version this file belongs to. */\n  packageVersion?: Maybe<PackageVersion>;\n  /** SHA1 hash of the file. */\n  sha1?: Maybe<Scalars['String']>;\n  /** SHA256 hash of the file. */\n  sha256?: Maybe<Scalars['String']>;\n  /** Size of the file in bytes. */\n  size?: Maybe<Scalars['Int']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** URL to download the asset. */\n  url?: Maybe<Scalars['URI']>;\n};\n\n/** The connection type for PackageFile. */\nexport type PackageFileConnection = {\n  __typename?: 'PackageFileConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PackageFileEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PackageFile>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PackageFileEdge = {\n  __typename?: 'PackageFileEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PackageFile>;\n};\n\n/** Ways in which lists of package files can be ordered upon return. */\nexport type PackageFileOrder = {\n  /** The direction in which to order package files by the specified field. */\n  direction?: InputMaybe<OrderDirection>;\n  /** The field in which to order package files by. */\n  field?: InputMaybe<PackageFileOrderField>;\n};\n\n/** Properties by which package file connections can be ordered. */\nexport enum PackageFileOrderField {\n  /** Order package files by creation time */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** Ways in which lists of packages can be ordered upon return. */\nexport type PackageOrder = {\n  /** The direction in which to order packages by the specified field. */\n  direction?: InputMaybe<OrderDirection>;\n  /** The field in which to order packages by. */\n  field?: InputMaybe<PackageOrderField>;\n};\n\n/** Properties by which package connections can be ordered. */\nexport enum PackageOrderField {\n  /** Order packages by creation time */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** Represents an owner of a package. */\nexport type PackageOwner = {\n  id: Scalars['ID'];\n  /** A list of packages under the owner. */\n  packages: PackageConnection;\n};\n\n\n/** Represents an owner of a package. */\nexport type PackageOwnerPackagesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  names?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  orderBy?: InputMaybe<PackageOrder>;\n  packageType?: InputMaybe<PackageType>;\n  repositoryId?: InputMaybe<Scalars['ID']>;\n};\n\n/** Represents a object that contains package activity statistics such as downloads. */\nexport type PackageStatistics = {\n  __typename?: 'PackageStatistics';\n  /** Number of times the package was downloaded since it was created. */\n  downloadsTotalCount: Scalars['Int'];\n};\n\n/** A version tag contains the mapping between a tag name and a version. */\nexport type PackageTag = Node & {\n  __typename?: 'PackageTag';\n  id: Scalars['ID'];\n  /** Identifies the tag name of the version. */\n  name: Scalars['String'];\n  /** Version that the tag is associated with. */\n  version?: Maybe<PackageVersion>;\n};\n\n/** The possible types of a package. */\nexport enum PackageType {\n  /** A debian package. */\n  Debian = 'DEBIAN',\n  /**\n   * A docker image.\n   * @deprecated DOCKER will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2021-06-21 UTC.\n   */\n  Docker = 'DOCKER',\n  /**\n   * A maven package.\n   * @deprecated MAVEN will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2023-02-10 UTC.\n   */\n  Maven = 'MAVEN',\n  /**\n   * An npm package.\n   * @deprecated NPM will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2022-11-21 UTC.\n   */\n  Npm = 'NPM',\n  /**\n   * A nuget package.\n   * @deprecated NUGET will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2022-11-21 UTC.\n   */\n  Nuget = 'NUGET',\n  /** A python package. */\n  Pypi = 'PYPI',\n  /**\n   * A rubygems package.\n   * @deprecated RUBYGEMS will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2022-12-28 UTC.\n   */\n  Rubygems = 'RUBYGEMS'\n}\n\n/** Information about a specific package version. */\nexport type PackageVersion = Node & {\n  __typename?: 'PackageVersion';\n  /** List of files associated with this package version */\n  files: PackageFileConnection;\n  id: Scalars['ID'];\n  /** The package associated with this version. */\n  package?: Maybe<Package>;\n  /** The platform this version was built for. */\n  platform?: Maybe<Scalars['String']>;\n  /** Whether or not this version is a pre-release. */\n  preRelease: Scalars['Boolean'];\n  /** The README of this package version. */\n  readme?: Maybe<Scalars['String']>;\n  /** The release associated with this package version. */\n  release?: Maybe<Release>;\n  /** Statistics about package activity. */\n  statistics?: Maybe<PackageVersionStatistics>;\n  /** The package version summary. */\n  summary?: Maybe<Scalars['String']>;\n  /** The version string. */\n  version: Scalars['String'];\n};\n\n\n/** Information about a specific package version. */\nexport type PackageVersionFilesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PackageFileOrder>;\n};\n\n/** The connection type for PackageVersion. */\nexport type PackageVersionConnection = {\n  __typename?: 'PackageVersionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PackageVersionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PackageVersion>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PackageVersionEdge = {\n  __typename?: 'PackageVersionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PackageVersion>;\n};\n\n/** Ways in which lists of package versions can be ordered upon return. */\nexport type PackageVersionOrder = {\n  /** The direction in which to order package versions by the specified field. */\n  direction?: InputMaybe<OrderDirection>;\n  /** The field in which to order package versions by. */\n  field?: InputMaybe<PackageVersionOrderField>;\n};\n\n/** Properties by which package version connections can be ordered. */\nexport enum PackageVersionOrderField {\n  /** Order package versions by creation time */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** Represents a object that contains package version activity statistics such as downloads. */\nexport type PackageVersionStatistics = {\n  __typename?: 'PackageVersionStatistics';\n  /** Number of times the package was downloaded since it was created. */\n  downloadsTotalCount: Scalars['Int'];\n};\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\n/** The possible types of patch statuses. */\nexport enum PatchStatus {\n  /** The file was added. Git status 'A'. */\n  Added = 'ADDED',\n  /** The file's type was changed. Git status 'T'. */\n  Changed = 'CHANGED',\n  /** The file was copied. Git status 'C'. */\n  Copied = 'COPIED',\n  /** The file was deleted. Git status 'D'. */\n  Deleted = 'DELETED',\n  /** The file's contents were changed. Git status 'M'. */\n  Modified = 'MODIFIED',\n  /** The file was renamed. Git status 'R'. */\n  Renamed = 'RENAMED'\n}\n\n/** Types that can grant permissions on a repository to a user */\nexport type PermissionGranter = Organization | Repository | Team;\n\n/** A level of permission and source for a user's access to a repository. */\nexport type PermissionSource = {\n  __typename?: 'PermissionSource';\n  /** The organization the repository belongs to. */\n  organization: Organization;\n  /** The level of access this source has granted to the user. */\n  permission: DefaultRepositoryPermissionField;\n  /** The source of this permission. */\n  source: PermissionGranter;\n};\n\n/** Autogenerated input type of PinIssue */\nexport type PinIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the issue to be pinned */\n  issueId: Scalars['ID'];\n};\n\n/** Autogenerated return type of PinIssue */\nexport type PinIssuePayload = {\n  __typename?: 'PinIssuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The issue that was pinned */\n  issue?: Maybe<Issue>;\n};\n\n/** Types that can be pinned to a profile page. */\nexport type PinnableItem = Gist | Repository;\n\n/** The connection type for PinnableItem. */\nexport type PinnableItemConnection = {\n  __typename?: 'PinnableItemConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PinnableItemEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PinnableItem>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PinnableItemEdge = {\n  __typename?: 'PinnableItemEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PinnableItem>;\n};\n\n/** Represents items that can be pinned to a profile page or dashboard. */\nexport enum PinnableItemType {\n  /** A gist. */\n  Gist = 'GIST',\n  /** An issue. */\n  Issue = 'ISSUE',\n  /** An organization. */\n  Organization = 'ORGANIZATION',\n  /** A project. */\n  Project = 'PROJECT',\n  /** A pull request. */\n  PullRequest = 'PULL_REQUEST',\n  /** A repository. */\n  Repository = 'REPOSITORY',\n  /** A team. */\n  Team = 'TEAM',\n  /** A user. */\n  User = 'USER'\n}\n\n/** A Pinned Discussion is a discussion pinned to a repository's index page. */\nexport type PinnedDiscussion = Node & RepositoryNode & {\n  __typename?: 'PinnedDiscussion';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The discussion that was pinned. */\n  discussion: Discussion;\n  /** Color stops of the chosen gradient */\n  gradientStopColors: Array<Scalars['String']>;\n  id: Scalars['ID'];\n  /** Background texture pattern */\n  pattern: PinnedDiscussionPattern;\n  /** The actor that pinned this discussion. */\n  pinnedBy: Actor;\n  /** Preconfigured background gradient option */\n  preconfiguredGradient?: Maybe<PinnedDiscussionGradient>;\n  /** The repository associated with this node. */\n  repository: Repository;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The connection type for PinnedDiscussion. */\nexport type PinnedDiscussionConnection = {\n  __typename?: 'PinnedDiscussionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PinnedDiscussionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PinnedDiscussion>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PinnedDiscussionEdge = {\n  __typename?: 'PinnedDiscussionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PinnedDiscussion>;\n};\n\n/** Preconfigured gradients that may be used to style discussions pinned within a repository. */\nexport enum PinnedDiscussionGradient {\n  /** A gradient of blue to mint */\n  BlueMint = 'BLUE_MINT',\n  /** A gradient of blue to purple */\n  BluePurple = 'BLUE_PURPLE',\n  /** A gradient of pink to blue */\n  PinkBlue = 'PINK_BLUE',\n  /** A gradient of purple to coral */\n  PurpleCoral = 'PURPLE_CORAL',\n  /** A gradient of red to orange */\n  RedOrange = 'RED_ORANGE'\n}\n\n/** Preconfigured background patterns that may be used to style discussions pinned within a repository. */\nexport enum PinnedDiscussionPattern {\n  /** An upward-facing chevron pattern */\n  ChevronUp = 'CHEVRON_UP',\n  /** A hollow dot pattern */\n  Dot = 'DOT',\n  /** A solid dot pattern */\n  DotFill = 'DOT_FILL',\n  /** A heart pattern */\n  HeartFill = 'HEART_FILL',\n  /** A plus sign pattern */\n  Plus = 'PLUS',\n  /** A lightning bolt pattern */\n  Zap = 'ZAP'\n}\n\n/** Represents a 'pinned' event on a given issue or pull request. */\nexport type PinnedEvent = Node & {\n  __typename?: 'PinnedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Identifies the issue associated with the event. */\n  issue: Issue;\n};\n\n/** A Pinned Issue is a issue pinned to a repository's index page. */\nexport type PinnedIssue = Node & {\n  __typename?: 'PinnedIssue';\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** Identifies the primary key from the database as a BigInt. */\n  fullDatabaseId?: Maybe<Scalars['BigInt']>;\n  id: Scalars['ID'];\n  /** The issue that was pinned. */\n  issue: Issue;\n  /** The actor that pinned this issue. */\n  pinnedBy: Actor;\n  /** The repository that this issue was pinned to. */\n  repository: Repository;\n};\n\n/** The connection type for PinnedIssue. */\nexport type PinnedIssueConnection = {\n  __typename?: 'PinnedIssueConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PinnedIssueEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PinnedIssue>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PinnedIssueEdge = {\n  __typename?: 'PinnedIssueEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PinnedIssue>;\n};\n\n/** Audit log entry for a private_repository_forking.disable event. */\nexport type PrivateRepositoryForkingDisableAuditEntry = AuditEntry & EnterpriseAuditEntryData & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'PrivateRepositoryForkingDisableAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The HTTP path for this enterprise. */\n  enterpriseResourcePath?: Maybe<Scalars['URI']>;\n  /** The slug of the enterprise. */\n  enterpriseSlug?: Maybe<Scalars['String']>;\n  /** The HTTP URL for this enterprise. */\n  enterpriseUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a private_repository_forking.enable event. */\nexport type PrivateRepositoryForkingEnableAuditEntry = AuditEntry & EnterpriseAuditEntryData & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'PrivateRepositoryForkingEnableAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The HTTP path for this enterprise. */\n  enterpriseResourcePath?: Maybe<Scalars['URI']>;\n  /** The slug of the enterprise. */\n  enterpriseSlug?: Maybe<Scalars['String']>;\n  /** The HTTP URL for this enterprise. */\n  enterpriseUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/**\n * A curatable list of repositories relating to a repository owner, which defaults\n * to showing the most popular repositories they own.\n */\nexport type ProfileItemShowcase = {\n  __typename?: 'ProfileItemShowcase';\n  /** Whether or not the owner has pinned any repositories or gists. */\n  hasPinnedItems: Scalars['Boolean'];\n  /**\n   * The repositories and gists in the showcase. If the profile owner has any\n   * pinned items, those will be returned. Otherwise, the profile owner's popular\n   * repositories will be returned.\n   */\n  items: PinnableItemConnection;\n};\n\n\n/**\n * A curatable list of repositories relating to a repository owner, which defaults\n * to showing the most popular repositories they own.\n */\nexport type ProfileItemShowcaseItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwner = {\n  /** Determine if this repository owner has any items that can be pinned to their profile. */\n  anyPinnableItems: Scalars['Boolean'];\n  /** The public profile email. */\n  email?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /**\n   * Showcases a selection of repositories and gists that the profile owner has\n   * either curated or that have been selected automatically based on popularity.\n   */\n  itemShowcase: ProfileItemShowcase;\n  /** The public profile location. */\n  location?: Maybe<Scalars['String']>;\n  /** The username used to login. */\n  login: Scalars['String'];\n  /** The public profile name. */\n  name?: Maybe<Scalars['String']>;\n  /** A list of repositories and gists this profile owner can pin to their profile. */\n  pinnableItems: PinnableItemConnection;\n  /** A list of repositories and gists this profile owner has pinned to their profile */\n  pinnedItems: PinnableItemConnection;\n  /** Returns how many more items this profile owner can pin to their profile. */\n  pinnedItemsRemaining: Scalars['Int'];\n  /** Can the viewer pin repositories and gists to the profile? */\n  viewerCanChangePinnedItems: Scalars['Boolean'];\n  /** The public profile website URL. */\n  websiteUrl?: Maybe<Scalars['URI']>;\n};\n\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwnerAnyPinnableItemsArgs = {\n  type?: InputMaybe<PinnableItemType>;\n};\n\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwnerPinnableItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwnerPinnedItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n/** Projects manage issues, pull requests and notes within a project owner. */\nexport type Project = Closable & Node & Updatable & {\n  __typename?: 'Project';\n  /** The project's description body. */\n  body?: Maybe<Scalars['String']>;\n  /** The projects description body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** Indicates if the object is closed (definition of closed may depend on type) */\n  closed: Scalars['Boolean'];\n  /** Identifies the date and time when the object was closed. */\n  closedAt?: Maybe<Scalars['DateTime']>;\n  /** List of columns in the project */\n  columns: ProjectColumnConnection;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who originally created the project. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The project's name. */\n  name: Scalars['String'];\n  /** The project's number. */\n  number: Scalars['Int'];\n  /** The project's owner. Currently limited to repositories, organizations, and users. */\n  owner: ProjectOwner;\n  /** List of pending cards in this project */\n  pendingCards: ProjectCardConnection;\n  /** Project progress details. */\n  progress: ProjectProgress;\n  /** The HTTP path for this project */\n  resourcePath: Scalars['URI'];\n  /** Whether the project is open or closed. */\n  state: ProjectState;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this project */\n  url: Scalars['URI'];\n  /** Indicates if the object can be closed by the viewer. */\n  viewerCanClose: Scalars['Boolean'];\n  /** Indicates if the object can be reopened by the viewer. */\n  viewerCanReopen: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n};\n\n\n/** Projects manage issues, pull requests and notes within a project owner. */\nexport type ProjectColumnsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** Projects manage issues, pull requests and notes within a project owner. */\nexport type ProjectPendingCardsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  archivedStates?: InputMaybe<Array<InputMaybe<ProjectCardArchivedState>>>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** A card in a project. */\nexport type ProjectCard = Node & {\n  __typename?: 'ProjectCard';\n  /**\n   * The project column this card is associated under. A card may only belong to one\n   * project column at a time. The column field will be null if the card is created\n   * in a pending state and has yet to be associated with a column. Once cards are\n   * associated with a column, they will not become pending in the future.\n   */\n  column?: Maybe<ProjectColumn>;\n  /** The card content item */\n  content?: Maybe<ProjectCardItem>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who created this card */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** Whether the card is archived */\n  isArchived: Scalars['Boolean'];\n  /** The card note */\n  note?: Maybe<Scalars['String']>;\n  /** The project that contains this card. */\n  project: Project;\n  /** The HTTP path for this card */\n  resourcePath: Scalars['URI'];\n  /** The state of ProjectCard */\n  state?: Maybe<ProjectCardState>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this card */\n  url: Scalars['URI'];\n};\n\n/** The possible archived states of a project card. */\nexport enum ProjectCardArchivedState {\n  /** A project card that is archived */\n  Archived = 'ARCHIVED',\n  /** A project card that is not archived */\n  NotArchived = 'NOT_ARCHIVED'\n}\n\n/** The connection type for ProjectCard. */\nexport type ProjectCardConnection = {\n  __typename?: 'ProjectCardConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectCardEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectCard>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectCardEdge = {\n  __typename?: 'ProjectCardEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectCard>;\n};\n\n/** An issue or PR and its owning repository to be used in a project card. */\nexport type ProjectCardImport = {\n  /** The issue or pull request number. */\n  number: Scalars['Int'];\n  /** Repository name with owner (owner/repository). */\n  repository: Scalars['String'];\n};\n\n/** Types that can be inside Project Cards. */\nexport type ProjectCardItem = Issue | PullRequest;\n\n/** Various content states of a ProjectCard */\nexport enum ProjectCardState {\n  /** The card has content only. */\n  ContentOnly = 'CONTENT_ONLY',\n  /** The card has a note only. */\n  NoteOnly = 'NOTE_ONLY',\n  /** The card is redacted. */\n  Redacted = 'REDACTED'\n}\n\n/** A column inside a project. */\nexport type ProjectColumn = Node & {\n  __typename?: 'ProjectColumn';\n  /** List of cards in the column */\n  cards: ProjectCardConnection;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The project column's name. */\n  name: Scalars['String'];\n  /** The project that contains this column. */\n  project: Project;\n  /** The semantic purpose of the column */\n  purpose?: Maybe<ProjectColumnPurpose>;\n  /** The HTTP path for this project column */\n  resourcePath: Scalars['URI'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this project column */\n  url: Scalars['URI'];\n};\n\n\n/** A column inside a project. */\nexport type ProjectColumnCardsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  archivedStates?: InputMaybe<Array<InputMaybe<ProjectCardArchivedState>>>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for ProjectColumn. */\nexport type ProjectColumnConnection = {\n  __typename?: 'ProjectColumnConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectColumnEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectColumn>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectColumnEdge = {\n  __typename?: 'ProjectColumnEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectColumn>;\n};\n\n/** A project column and a list of its issues and PRs. */\nexport type ProjectColumnImport = {\n  /** The name of the column. */\n  columnName: Scalars['String'];\n  /** A list of issues and pull requests in the column. */\n  issues?: InputMaybe<Array<ProjectCardImport>>;\n  /** The position of the column, starting from 0. */\n  position: Scalars['Int'];\n};\n\n/** The semantic purpose of the column - todo, in progress, or done. */\nexport enum ProjectColumnPurpose {\n  /** The column contains cards which are complete */\n  Done = 'DONE',\n  /** The column contains cards which are currently being worked on */\n  InProgress = 'IN_PROGRESS',\n  /** The column contains cards still to be worked on */\n  Todo = 'TODO'\n}\n\n/** A list of projects associated with the owner. */\nexport type ProjectConnection = {\n  __typename?: 'ProjectConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Project>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectEdge = {\n  __typename?: 'ProjectEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Project>;\n};\n\n/** Ways in which lists of projects can be ordered upon return. */\nexport type ProjectOrder = {\n  /** The direction in which to order projects by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order projects by. */\n  field: ProjectOrderField;\n};\n\n/** Properties by which project connections can be ordered. */\nexport enum ProjectOrderField {\n  /** Order projects by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order projects by name */\n  Name = 'NAME',\n  /** Order projects by update time */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** Represents an owner of a Project. */\nexport type ProjectOwner = {\n  id: Scalars['ID'];\n  /** Find project by number. */\n  project?: Maybe<Project>;\n  /** A list of projects under the owner. */\n  projects: ProjectConnection;\n  /** The HTTP path listing owners projects */\n  projectsResourcePath: Scalars['URI'];\n  /** The HTTP URL listing owners projects */\n  projectsUrl: Scalars['URI'];\n  /** Can the current viewer create new projects on this owner. */\n  viewerCanCreateProjects: Scalars['Boolean'];\n};\n\n\n/** Represents an owner of a Project. */\nexport type ProjectOwnerProjectArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** Represents an owner of a Project. */\nexport type ProjectOwnerProjectsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectOrder>;\n  search?: InputMaybe<Scalars['String']>;\n  states?: InputMaybe<Array<ProjectState>>;\n};\n\n/** Project progress stats. */\nexport type ProjectProgress = {\n  __typename?: 'ProjectProgress';\n  /** The number of done cards. */\n  doneCount: Scalars['Int'];\n  /** The percentage of done cards. */\n  donePercentage: Scalars['Float'];\n  /** Whether progress tracking is enabled and cards with purpose exist for this project */\n  enabled: Scalars['Boolean'];\n  /** The number of in-progress cards. */\n  inProgressCount: Scalars['Int'];\n  /** The percentage of in-progress cards. */\n  inProgressPercentage: Scalars['Float'];\n  /** The number of to do cards. */\n  todoCount: Scalars['Int'];\n  /** The percentage of to do cards. */\n  todoPercentage: Scalars['Float'];\n};\n\n/** State of the project; either 'open' or 'closed' */\nexport enum ProjectState {\n  /** The project is closed. */\n  Closed = 'CLOSED',\n  /** The project is open. */\n  Open = 'OPEN'\n}\n\n/** GitHub-provided templates for Projects */\nexport enum ProjectTemplate {\n  /** Create a board with v2 triggers to automatically move cards across To do, In progress and Done columns. */\n  AutomatedKanbanV2 = 'AUTOMATED_KANBAN_V2',\n  /** Create a board with triggers to automatically move cards across columns with review automation. */\n  AutomatedReviewsKanban = 'AUTOMATED_REVIEWS_KANBAN',\n  /** Create a board with columns for To do, In progress and Done. */\n  BasicKanban = 'BASIC_KANBAN',\n  /** Create a board to triage and prioritize bugs with To do, priority, and Done columns. */\n  BugTriage = 'BUG_TRIAGE'\n}\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2 = Closable & Node & Updatable & {\n  __typename?: 'ProjectV2';\n  /** Returns true if the project is closed. */\n  closed: Scalars['Boolean'];\n  /** Identifies the date and time when the object was closed. */\n  closedAt?: Maybe<Scalars['DateTime']>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who originally created the project. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** A field of the project */\n  field?: Maybe<ProjectV2FieldConfiguration>;\n  /** List of fields and their constraints in the project */\n  fields: ProjectV2FieldConfigurationConnection;\n  id: Scalars['ID'];\n  /** List of items in the project */\n  items: ProjectV2ItemConnection;\n  /** The project's number. */\n  number: Scalars['Int'];\n  /** The project's owner. Currently limited to organizations and users. */\n  owner: ProjectV2Owner;\n  /** Returns true if the project is public. */\n  public: Scalars['Boolean'];\n  /** The project's readme. */\n  readme?: Maybe<Scalars['String']>;\n  /** The repositories the project is linked to. */\n  repositories: RepositoryConnection;\n  /** The HTTP path for this project */\n  resourcePath: Scalars['URI'];\n  /** The project's short description. */\n  shortDescription?: Maybe<Scalars['String']>;\n  /** The teams the project is linked to. */\n  teams: TeamConnection;\n  /** Returns true if this project is a template. */\n  template: Scalars['Boolean'];\n  /** The project's name. */\n  title: Scalars['String'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this project */\n  url: Scalars['URI'];\n  /** A view of the project */\n  view?: Maybe<ProjectV2View>;\n  /** Indicates if the object can be closed by the viewer. */\n  viewerCanClose: Scalars['Boolean'];\n  /** Indicates if the object can be reopened by the viewer. */\n  viewerCanReopen: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** List of views in the project */\n  views: ProjectV2ViewConnection;\n  /** A workflow of the project */\n  workflow?: Maybe<ProjectV2Workflow>;\n  /** List of the workflows in the project */\n  workflows: ProjectV2WorkflowConnection;\n};\n\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2FieldArgs = {\n  name: Scalars['String'];\n};\n\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2FieldsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2ItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2ItemOrder>;\n};\n\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2RepositoriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n};\n\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2TeamsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TeamOrder>;\n};\n\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2ViewArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2ViewsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2ViewOrder>;\n};\n\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2WorkflowArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** New projects that manage issues, pull requests and drafts using tables and boards. */\nexport type ProjectV2WorkflowsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2WorkflowOrder>;\n};\n\n/** Possible collaborators for a project. */\nexport type ProjectV2Actor = Team | User;\n\n/** The connection type for ProjectV2Actor. */\nexport type ProjectV2ActorConnection = {\n  __typename?: 'ProjectV2ActorConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2ActorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2Actor>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2ActorEdge = {\n  __typename?: 'ProjectV2ActorEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2Actor>;\n};\n\n/** A collaborator to update on a project. Only one of the userId or teamId should be provided. */\nexport type ProjectV2Collaborator = {\n  /** The role to grant the collaborator */\n  role: ProjectV2Roles;\n  /** The ID of the team as a collaborator. */\n  teamId?: InputMaybe<Scalars['ID']>;\n  /** The ID of the user as a collaborator. */\n  userId?: InputMaybe<Scalars['ID']>;\n};\n\n/** The connection type for ProjectV2. */\nexport type ProjectV2Connection = {\n  __typename?: 'ProjectV2Connection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2Edge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** The type of a project field. */\nexport enum ProjectV2CustomFieldType {\n  /** Date */\n  Date = 'DATE',\n  /** Number */\n  Number = 'NUMBER',\n  /** Single Select */\n  SingleSelect = 'SINGLE_SELECT',\n  /** Text */\n  Text = 'TEXT'\n}\n\n/** An edge in a connection. */\nexport type ProjectV2Edge = {\n  __typename?: 'ProjectV2Edge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2>;\n};\n\n/** A field inside a project. */\nexport type ProjectV2Field = Node & ProjectV2FieldCommon & {\n  __typename?: 'ProjectV2Field';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The field's type. */\n  dataType: ProjectV2FieldType;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The project field's name. */\n  name: Scalars['String'];\n  /** The project that contains this field. */\n  project: ProjectV2;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** Common fields across different project field types */\nexport type ProjectV2FieldCommon = {\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The field's type. */\n  dataType: ProjectV2FieldType;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The project field's name. */\n  name: Scalars['String'];\n  /** The project that contains this field. */\n  project: ProjectV2;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** Configurations for project fields. */\nexport type ProjectV2FieldConfiguration = ProjectV2Field | ProjectV2IterationField | ProjectV2SingleSelectField;\n\n/** The connection type for ProjectV2FieldConfiguration. */\nexport type ProjectV2FieldConfigurationConnection = {\n  __typename?: 'ProjectV2FieldConfigurationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2FieldConfigurationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2FieldConfiguration>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2FieldConfigurationEdge = {\n  __typename?: 'ProjectV2FieldConfigurationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2FieldConfiguration>;\n};\n\n/** The connection type for ProjectV2Field. */\nexport type ProjectV2FieldConnection = {\n  __typename?: 'ProjectV2FieldConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2FieldEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2Field>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2FieldEdge = {\n  __typename?: 'ProjectV2FieldEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2Field>;\n};\n\n/** Ordering options for project v2 field connections */\nexport type ProjectV2FieldOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order the project v2 fields by. */\n  field: ProjectV2FieldOrderField;\n};\n\n/** Properties by which project v2 field connections can be ordered. */\nexport enum ProjectV2FieldOrderField {\n  /** Order project v2 fields by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order project v2 fields by name */\n  Name = 'NAME',\n  /** Order project v2 fields by position */\n  Position = 'POSITION'\n}\n\n/** The type of a project field. */\nexport enum ProjectV2FieldType {\n  /** Assignees */\n  Assignees = 'ASSIGNEES',\n  /** Date */\n  Date = 'DATE',\n  /** Iteration */\n  Iteration = 'ITERATION',\n  /** Labels */\n  Labels = 'LABELS',\n  /** Linked Pull Requests */\n  LinkedPullRequests = 'LINKED_PULL_REQUESTS',\n  /** Milestone */\n  Milestone = 'MILESTONE',\n  /** Number */\n  Number = 'NUMBER',\n  /** Repository */\n  Repository = 'REPOSITORY',\n  /** Reviewers */\n  Reviewers = 'REVIEWERS',\n  /** Single Select */\n  SingleSelect = 'SINGLE_SELECT',\n  /** Text */\n  Text = 'TEXT',\n  /** Title */\n  Title = 'TITLE',\n  /** Tracked by */\n  TrackedBy = 'TRACKED_BY',\n  /** Tracks */\n  Tracks = 'TRACKS'\n}\n\n/** The values that can be used to update a field of an item inside a Project. Only 1 value can be updated at a time. */\nexport type ProjectV2FieldValue = {\n  /** The ISO 8601 date to set on the field. */\n  date?: InputMaybe<Scalars['Date']>;\n  /** The id of the iteration to set on the field. */\n  iterationId?: InputMaybe<Scalars['String']>;\n  /** The number to set on the field. */\n  number?: InputMaybe<Scalars['Float']>;\n  /** The id of the single select option to set on the field. */\n  singleSelectOptionId?: InputMaybe<Scalars['String']>;\n  /** The text to set on the field. */\n  text?: InputMaybe<Scalars['String']>;\n};\n\n/** Ways in which to filter lists of projects. */\nexport type ProjectV2Filters = {\n  /** List project v2 filtered by the state given. */\n  state?: InputMaybe<ProjectV2State>;\n};\n\n/** An item within a Project. */\nexport type ProjectV2Item = Node & {\n  __typename?: 'ProjectV2Item';\n  /** The content of the referenced draft issue, issue, or pull request */\n  content?: Maybe<ProjectV2ItemContent>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who created the item. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The field value of the first project field which matches the 'name' argument that is set on the item. */\n  fieldValueByName?: Maybe<ProjectV2ItemFieldValue>;\n  /** The field values that are set on the item. */\n  fieldValues: ProjectV2ItemFieldValueConnection;\n  id: Scalars['ID'];\n  /** Whether the item is archived. */\n  isArchived: Scalars['Boolean'];\n  /** The project that contains this item. */\n  project: ProjectV2;\n  /** The type of the item. */\n  type: ProjectV2ItemType;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n\n/** An item within a Project. */\nexport type ProjectV2ItemFieldValueByNameArgs = {\n  name: Scalars['String'];\n};\n\n\n/** An item within a Project. */\nexport type ProjectV2ItemFieldValuesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2ItemFieldValueOrder>;\n};\n\n/** The connection type for ProjectV2Item. */\nexport type ProjectV2ItemConnection = {\n  __typename?: 'ProjectV2ItemConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2ItemEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2Item>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Types that can be inside Project Items. */\nexport type ProjectV2ItemContent = DraftIssue | Issue | PullRequest;\n\n/** An edge in a connection. */\nexport type ProjectV2ItemEdge = {\n  __typename?: 'ProjectV2ItemEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2Item>;\n};\n\n/** The value of a date field in a Project item. */\nexport type ProjectV2ItemFieldDateValue = Node & ProjectV2ItemFieldValueCommon & {\n  __typename?: 'ProjectV2ItemFieldDateValue';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who created the item. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** Date value for the field */\n  date?: Maybe<Scalars['Date']>;\n  /** The project field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  id: Scalars['ID'];\n  /** The project item that contains this value. */\n  item: ProjectV2Item;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The value of an iteration field in a Project item. */\nexport type ProjectV2ItemFieldIterationValue = Node & ProjectV2ItemFieldValueCommon & {\n  __typename?: 'ProjectV2ItemFieldIterationValue';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who created the item. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The duration of the iteration in days. */\n  duration: Scalars['Int'];\n  /** The project field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  id: Scalars['ID'];\n  /** The project item that contains this value. */\n  item: ProjectV2Item;\n  /** The ID of the iteration. */\n  iterationId: Scalars['String'];\n  /** The start date of the iteration. */\n  startDate: Scalars['Date'];\n  /** The title of the iteration. */\n  title: Scalars['String'];\n  /** The title of the iteration, with HTML. */\n  titleHTML: Scalars['String'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The value of the labels field in a Project item. */\nexport type ProjectV2ItemFieldLabelValue = {\n  __typename?: 'ProjectV2ItemFieldLabelValue';\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** Labels value of a field */\n  labels?: Maybe<LabelConnection>;\n};\n\n\n/** The value of the labels field in a Project item. */\nexport type ProjectV2ItemFieldLabelValueLabelsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The value of a milestone field in a Project item. */\nexport type ProjectV2ItemFieldMilestoneValue = {\n  __typename?: 'ProjectV2ItemFieldMilestoneValue';\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** Milestone value of a field */\n  milestone?: Maybe<Milestone>;\n};\n\n/** The value of a number field in a Project item. */\nexport type ProjectV2ItemFieldNumberValue = Node & ProjectV2ItemFieldValueCommon & {\n  __typename?: 'ProjectV2ItemFieldNumberValue';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who created the item. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The project field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  id: Scalars['ID'];\n  /** The project item that contains this value. */\n  item: ProjectV2Item;\n  /** Number as a float(8) */\n  number?: Maybe<Scalars['Float']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The value of a pull request field in a Project item. */\nexport type ProjectV2ItemFieldPullRequestValue = {\n  __typename?: 'ProjectV2ItemFieldPullRequestValue';\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** The pull requests for this field */\n  pullRequests?: Maybe<PullRequestConnection>;\n};\n\n\n/** The value of a pull request field in a Project item. */\nexport type ProjectV2ItemFieldPullRequestValuePullRequestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PullRequestOrder>;\n};\n\n/** The value of a repository field in a Project item. */\nexport type ProjectV2ItemFieldRepositoryValue = {\n  __typename?: 'ProjectV2ItemFieldRepositoryValue';\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** The repository for this field. */\n  repository?: Maybe<Repository>;\n};\n\n/** The value of a reviewers field in a Project item. */\nexport type ProjectV2ItemFieldReviewerValue = {\n  __typename?: 'ProjectV2ItemFieldReviewerValue';\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** The reviewers for this field. */\n  reviewers?: Maybe<RequestedReviewerConnection>;\n};\n\n\n/** The value of a reviewers field in a Project item. */\nexport type ProjectV2ItemFieldReviewerValueReviewersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The value of a single select field in a Project item. */\nexport type ProjectV2ItemFieldSingleSelectValue = Node & ProjectV2ItemFieldValueCommon & {\n  __typename?: 'ProjectV2ItemFieldSingleSelectValue';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who created the item. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The project field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  id: Scalars['ID'];\n  /** The project item that contains this value. */\n  item: ProjectV2Item;\n  /** The name of the selected single select option. */\n  name?: Maybe<Scalars['String']>;\n  /** The html name of the selected single select option. */\n  nameHTML?: Maybe<Scalars['String']>;\n  /** The id of the selected single select option. */\n  optionId?: Maybe<Scalars['String']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The value of a text field in a Project item. */\nexport type ProjectV2ItemFieldTextValue = Node & ProjectV2ItemFieldValueCommon & {\n  __typename?: 'ProjectV2ItemFieldTextValue';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who created the item. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The project field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  id: Scalars['ID'];\n  /** The project item that contains this value. */\n  item: ProjectV2Item;\n  /** Text value of a field */\n  text?: Maybe<Scalars['String']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The value of a user field in a Project item. */\nexport type ProjectV2ItemFieldUserValue = {\n  __typename?: 'ProjectV2ItemFieldUserValue';\n  /** The field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  /** The users for this field */\n  users?: Maybe<UserConnection>;\n};\n\n\n/** The value of a user field in a Project item. */\nexport type ProjectV2ItemFieldUserValueUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Project field values */\nexport type ProjectV2ItemFieldValue = ProjectV2ItemFieldDateValue | ProjectV2ItemFieldIterationValue | ProjectV2ItemFieldLabelValue | ProjectV2ItemFieldMilestoneValue | ProjectV2ItemFieldNumberValue | ProjectV2ItemFieldPullRequestValue | ProjectV2ItemFieldRepositoryValue | ProjectV2ItemFieldReviewerValue | ProjectV2ItemFieldSingleSelectValue | ProjectV2ItemFieldTextValue | ProjectV2ItemFieldUserValue;\n\n/** Common fields across different project field value types */\nexport type ProjectV2ItemFieldValueCommon = {\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who created the item. */\n  creator?: Maybe<Actor>;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The project field that contains this value. */\n  field: ProjectV2FieldConfiguration;\n  id: Scalars['ID'];\n  /** The project item that contains this value. */\n  item: ProjectV2Item;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The connection type for ProjectV2ItemFieldValue. */\nexport type ProjectV2ItemFieldValueConnection = {\n  __typename?: 'ProjectV2ItemFieldValueConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2ItemFieldValueEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2ItemFieldValue>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2ItemFieldValueEdge = {\n  __typename?: 'ProjectV2ItemFieldValueEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2ItemFieldValue>;\n};\n\n/** Ordering options for project v2 item field value connections */\nexport type ProjectV2ItemFieldValueOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order the project v2 item field values by. */\n  field: ProjectV2ItemFieldValueOrderField;\n};\n\n/** Properties by which project v2 item field value connections can be ordered. */\nexport enum ProjectV2ItemFieldValueOrderField {\n  /** Order project v2 item field values by the their position in the project */\n  Position = 'POSITION'\n}\n\n/** Ordering options for project v2 item connections */\nexport type ProjectV2ItemOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order the project v2 items by. */\n  field: ProjectV2ItemOrderField;\n};\n\n/** Properties by which project v2 item connections can be ordered. */\nexport enum ProjectV2ItemOrderField {\n  /** Order project v2 items by the their position in the project */\n  Position = 'POSITION'\n}\n\n/** The type of a project item. */\nexport enum ProjectV2ItemType {\n  /** Draft Issue */\n  DraftIssue = 'DRAFT_ISSUE',\n  /** Issue */\n  Issue = 'ISSUE',\n  /** Pull Request */\n  PullRequest = 'PULL_REQUEST',\n  /** Redacted Item */\n  Redacted = 'REDACTED'\n}\n\n/** An iteration field inside a project. */\nexport type ProjectV2IterationField = Node & ProjectV2FieldCommon & {\n  __typename?: 'ProjectV2IterationField';\n  /** Iteration configuration settings */\n  configuration: ProjectV2IterationFieldConfiguration;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The field's type. */\n  dataType: ProjectV2FieldType;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The project field's name. */\n  name: Scalars['String'];\n  /** The project that contains this field. */\n  project: ProjectV2;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** Iteration field configuration for a project. */\nexport type ProjectV2IterationFieldConfiguration = {\n  __typename?: 'ProjectV2IterationFieldConfiguration';\n  /** The iteration's completed iterations */\n  completedIterations: Array<ProjectV2IterationFieldIteration>;\n  /** The iteration's duration in days */\n  duration: Scalars['Int'];\n  /** The iteration's iterations */\n  iterations: Array<ProjectV2IterationFieldIteration>;\n  /** The iteration's start day of the week */\n  startDay: Scalars['Int'];\n};\n\n/** Iteration field iteration settings for a project. */\nexport type ProjectV2IterationFieldIteration = {\n  __typename?: 'ProjectV2IterationFieldIteration';\n  /** The iteration's duration in days */\n  duration: Scalars['Int'];\n  /** The iteration's ID. */\n  id: Scalars['String'];\n  /** The iteration's start date */\n  startDate: Scalars['Date'];\n  /** The iteration's title. */\n  title: Scalars['String'];\n  /** The iteration's html title. */\n  titleHTML: Scalars['String'];\n};\n\n/** Ways in which lists of projects can be ordered upon return. */\nexport type ProjectV2Order = {\n  /** The direction in which to order projects by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order projects by. */\n  field: ProjectV2OrderField;\n};\n\n/** Properties by which projects can be ordered. */\nexport enum ProjectV2OrderField {\n  /** The project's date and time of creation */\n  CreatedAt = 'CREATED_AT',\n  /** The project's number */\n  Number = 'NUMBER',\n  /** The project's title */\n  Title = 'TITLE',\n  /** The project's date and time of update */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** Represents an owner of a project (beta). */\nexport type ProjectV2Owner = {\n  id: Scalars['ID'];\n  /** Find a project by number. */\n  projectV2?: Maybe<ProjectV2>;\n  /** A list of projects under the owner. */\n  projectsV2: ProjectV2Connection;\n};\n\n\n/** Represents an owner of a project (beta). */\nexport type ProjectV2OwnerProjectV2Args = {\n  number: Scalars['Int'];\n};\n\n\n/** Represents an owner of a project (beta). */\nexport type ProjectV2OwnerProjectsV2Args = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n/** Recent projects for the owner. */\nexport type ProjectV2Recent = {\n  /** Recent projects that this user has modified in the context of the owner. */\n  recentProjects: ProjectV2Connection;\n};\n\n\n/** Recent projects for the owner. */\nexport type ProjectV2RecentRecentProjectsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The possible roles of a collaborator on a project. */\nexport enum ProjectV2Roles {\n  /** The collaborator can view, edit, and maange the settings of the project */\n  Admin = 'ADMIN',\n  /** The collaborator has no direct access to the project */\n  None = 'NONE',\n  /** The collaborator can view the project */\n  Reader = 'READER',\n  /** The collaborator can view and edit the project */\n  Writer = 'WRITER'\n}\n\n/** A single select field inside a project. */\nexport type ProjectV2SingleSelectField = Node & ProjectV2FieldCommon & {\n  __typename?: 'ProjectV2SingleSelectField';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The field's type. */\n  dataType: ProjectV2FieldType;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The project field's name. */\n  name: Scalars['String'];\n  /** Options for the single select field */\n  options: Array<ProjectV2SingleSelectFieldOption>;\n  /** The project that contains this field. */\n  project: ProjectV2;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** Single select field option for a configuration for a project. */\nexport type ProjectV2SingleSelectFieldOption = {\n  __typename?: 'ProjectV2SingleSelectFieldOption';\n  /** The option's ID. */\n  id: Scalars['String'];\n  /** The option's name. */\n  name: Scalars['String'];\n  /** The option's html name. */\n  nameHTML: Scalars['String'];\n};\n\n/** The display color of a single-select field option. */\nexport enum ProjectV2SingleSelectFieldOptionColor {\n  /** BLUE */\n  Blue = 'BLUE',\n  /** GRAY */\n  Gray = 'GRAY',\n  /** GREEN */\n  Green = 'GREEN',\n  /** ORANGE */\n  Orange = 'ORANGE',\n  /** PINK */\n  Pink = 'PINK',\n  /** PURPLE */\n  Purple = 'PURPLE',\n  /** RED */\n  Red = 'RED',\n  /** YELLOW */\n  Yellow = 'YELLOW'\n}\n\n/** Represents a single select field option */\nexport type ProjectV2SingleSelectFieldOptionInput = {\n  /** The display color of the option */\n  color: ProjectV2SingleSelectFieldOptionColor;\n  /** The description text of the option */\n  description: Scalars['String'];\n  /** The name of the option */\n  name: Scalars['String'];\n};\n\n/** Represents a sort by field and direction. */\nexport type ProjectV2SortBy = {\n  __typename?: 'ProjectV2SortBy';\n  /** The direction of the sorting. Possible values are ASC and DESC. */\n  direction: OrderDirection;\n  /** The field by which items are sorted. */\n  field: ProjectV2Field;\n};\n\n/** The connection type for ProjectV2SortBy. */\nexport type ProjectV2SortByConnection = {\n  __typename?: 'ProjectV2SortByConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2SortByEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2SortBy>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2SortByEdge = {\n  __typename?: 'ProjectV2SortByEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2SortBy>;\n};\n\n/** Represents a sort by field and direction. */\nexport type ProjectV2SortByField = {\n  __typename?: 'ProjectV2SortByField';\n  /** The direction of the sorting. Possible values are ASC and DESC. */\n  direction: OrderDirection;\n  /** The field by which items are sorted. */\n  field: ProjectV2FieldConfiguration;\n};\n\n/** The connection type for ProjectV2SortByField. */\nexport type ProjectV2SortByFieldConnection = {\n  __typename?: 'ProjectV2SortByFieldConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2SortByFieldEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2SortByField>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2SortByFieldEdge = {\n  __typename?: 'ProjectV2SortByFieldEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2SortByField>;\n};\n\n/** The possible states of a project v2. */\nexport enum ProjectV2State {\n  /** A project v2 that has been closed */\n  Closed = 'CLOSED',\n  /** A project v2 that is still open */\n  Open = 'OPEN'\n}\n\n/** A view within a ProjectV2. */\nexport type ProjectV2View = Node & {\n  __typename?: 'ProjectV2View';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The view's visible fields. */\n  fields?: Maybe<ProjectV2FieldConfigurationConnection>;\n  /** The project view's filter. */\n  filter?: Maybe<Scalars['String']>;\n  /**\n   * The view's group-by field.\n   * @deprecated The `ProjectV2View#order_by` API is deprecated in favour of the more capable `ProjectV2View#group_by_field` API. Check out the `ProjectV2View#group_by_fields` API as an example for the more capable alternative. Removal on 2023-04-01 UTC.\n   */\n  groupBy?: Maybe<ProjectV2FieldConnection>;\n  /** The view's group-by field. */\n  groupByFields?: Maybe<ProjectV2FieldConfigurationConnection>;\n  id: Scalars['ID'];\n  /** The project view's layout. */\n  layout: ProjectV2ViewLayout;\n  /** The project view's name. */\n  name: Scalars['String'];\n  /** The project view's number. */\n  number: Scalars['Int'];\n  /** The project that contains this view. */\n  project: ProjectV2;\n  /**\n   * The view's sort-by config.\n   * @deprecated The `ProjectV2View#sort_by` API is deprecated in favour of the more capable `ProjectV2View#sort_by_fields` API. Check out the `ProjectV2View#sort_by_fields` API as an example for the more capable alternative. Removal on 2023-04-01 UTC.\n   */\n  sortBy?: Maybe<ProjectV2SortByConnection>;\n  /** The view's sort-by config. */\n  sortByFields?: Maybe<ProjectV2SortByFieldConnection>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /**\n   * The view's vertical-group-by field.\n   * @deprecated The `ProjectV2View#vertical_group_by` API is deprecated in favour of the more capable `ProjectV2View#vertical_group_by_fields` API. Check out the `ProjectV2View#vertical_group_by_fields` API as an example for the more capable alternative. Removal on 2023-04-01 UTC.\n   */\n  verticalGroupBy?: Maybe<ProjectV2FieldConnection>;\n  /** The view's vertical-group-by field. */\n  verticalGroupByFields?: Maybe<ProjectV2FieldConfigurationConnection>;\n  /**\n   * The view's visible fields.\n   * @deprecated The `ProjectV2View#visibleFields` API is deprecated in favour of the more capable `ProjectV2View#fields` API. Check out the `ProjectV2View#fields` API as an example for the more capable alternative. Removal on 2023-01-01 UTC.\n   */\n  visibleFields?: Maybe<ProjectV2FieldConnection>;\n};\n\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewFieldsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewGroupByArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewGroupByFieldsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewSortByArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewSortByFieldsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewVerticalGroupByArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewVerticalGroupByFieldsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n\n/** A view within a ProjectV2. */\nexport type ProjectV2ViewVisibleFieldsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2FieldOrder>;\n};\n\n/** The connection type for ProjectV2View. */\nexport type ProjectV2ViewConnection = {\n  __typename?: 'ProjectV2ViewConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2ViewEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2View>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2ViewEdge = {\n  __typename?: 'ProjectV2ViewEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2View>;\n};\n\n/** The layout of a project v2 view. */\nexport enum ProjectV2ViewLayout {\n  /** Board layout */\n  BoardLayout = 'BOARD_LAYOUT',\n  /** Roadmap layout */\n  RoadmapLayout = 'ROADMAP_LAYOUT',\n  /** Table layout */\n  TableLayout = 'TABLE_LAYOUT'\n}\n\n/** Ordering options for project v2 view connections */\nexport type ProjectV2ViewOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order the project v2 views by. */\n  field: ProjectV2ViewOrderField;\n};\n\n/** Properties by which project v2 view connections can be ordered. */\nexport enum ProjectV2ViewOrderField {\n  /** Order project v2 views by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order project v2 views by name */\n  Name = 'NAME',\n  /** Order project v2 views by position */\n  Position = 'POSITION'\n}\n\n/** A workflow inside a project. */\nexport type ProjectV2Workflow = Node & {\n  __typename?: 'ProjectV2Workflow';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The workflows' enabled state. */\n  enabled: Scalars['Boolean'];\n  id: Scalars['ID'];\n  /** The workflows' name. */\n  name: Scalars['String'];\n  /** The workflows' number. */\n  number: Scalars['Int'];\n  /** The project that contains this workflow. */\n  project: ProjectV2;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The connection type for ProjectV2Workflow. */\nexport type ProjectV2WorkflowConnection = {\n  __typename?: 'ProjectV2WorkflowConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ProjectV2WorkflowEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ProjectV2Workflow>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ProjectV2WorkflowEdge = {\n  __typename?: 'ProjectV2WorkflowEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ProjectV2Workflow>;\n};\n\n/** Ordering options for project v2 workflows connections */\nexport type ProjectV2WorkflowOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order the project v2 workflows by. */\n  field: ProjectV2WorkflowsOrderField;\n};\n\n/** Properties by which project workflows can be ordered. */\nexport enum ProjectV2WorkflowsOrderField {\n  /** The workflows' date and time of creation */\n  CreatedAt = 'CREATED_AT',\n  /** The workflows' name */\n  Name = 'NAME',\n  /** The workflows' number */\n  Number = 'NUMBER',\n  /** The workflows' date and time of update */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** A user's public key. */\nexport type PublicKey = Node & {\n  __typename?: 'PublicKey';\n  /** The last time this authorization was used to perform an action. Values will be null for keys not owned by the user. */\n  accessedAt?: Maybe<Scalars['DateTime']>;\n  /**\n   * Identifies the date and time when the key was created. Keys created before\n   * March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user.\n   */\n  createdAt?: Maybe<Scalars['DateTime']>;\n  /** The fingerprint for this PublicKey. */\n  fingerprint: Scalars['String'];\n  id: Scalars['ID'];\n  /** Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user. */\n  isReadOnly?: Maybe<Scalars['Boolean']>;\n  /** The public key string. */\n  key: Scalars['String'];\n  /**\n   * Identifies the date and time when the key was updated. Keys created before\n   * March 5th, 2014 may have inaccurate values. Values will be null for keys not\n   * owned by the user.\n   */\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\n/** The connection type for PublicKey. */\nexport type PublicKeyConnection = {\n  __typename?: 'PublicKeyConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PublicKeyEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PublicKey>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PublicKeyEdge = {\n  __typename?: 'PublicKeyEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PublicKey>;\n};\n\n/** Autogenerated input type of PublishSponsorsTier */\nexport type PublishSponsorsTierInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the draft tier to publish. */\n  tierId: Scalars['ID'];\n};\n\n/** Autogenerated return type of PublishSponsorsTier */\nexport type PublishSponsorsTierPayload = {\n  __typename?: 'PublishSponsorsTierPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The tier that was published. */\n  sponsorsTier?: Maybe<SponsorsTier>;\n};\n\n/** A repository pull request. */\nexport type PullRequest = Assignable & Closable & Comment & Labelable & Lockable & Node & ProjectV2Owner & Reactable & RepositoryNode & Subscribable & UniformResourceLocatable & Updatable & UpdatableComment & {\n  __typename?: 'PullRequest';\n  /** Reason that the conversation was locked. */\n  activeLockReason?: Maybe<LockReason>;\n  /** The number of additions in this pull request. */\n  additions: Scalars['Int'];\n  /** A list of Users assigned to this object. */\n  assignees: UserConnection;\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the subject of the comment. */\n  authorAssociation: CommentAuthorAssociation;\n  /** Returns the auto-merge request object if one exists for this pull request. */\n  autoMergeRequest?: Maybe<AutoMergeRequest>;\n  /** Identifies the base Ref associated with the pull request. */\n  baseRef?: Maybe<Ref>;\n  /** Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted. */\n  baseRefName: Scalars['String'];\n  /** Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted. */\n  baseRefOid: Scalars['GitObjectID'];\n  /** The repository associated with this pull request's base Ref. */\n  baseRepository?: Maybe<Repository>;\n  /** The body as Markdown. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body rendered to text. */\n  bodyText: Scalars['String'];\n  /** Whether or not the pull request is rebaseable. */\n  canBeRebased: Scalars['Boolean'];\n  /** The number of changed files in this pull request. */\n  changedFiles: Scalars['Int'];\n  /** The HTTP path for the checks of this pull request. */\n  checksResourcePath: Scalars['URI'];\n  /** The HTTP URL for the checks of this pull request. */\n  checksUrl: Scalars['URI'];\n  /** `true` if the pull request is closed */\n  closed: Scalars['Boolean'];\n  /** Identifies the date and time when the object was closed. */\n  closedAt?: Maybe<Scalars['DateTime']>;\n  /** List of issues that were may be closed by this pull request */\n  closingIssuesReferences?: Maybe<IssueConnection>;\n  /** A list of comments associated with the pull request. */\n  comments: IssueCommentConnection;\n  /** A list of commits present in this pull request's head branch not present in the base branch. */\n  commits: PullRequestCommitConnection;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The number of deletions in this pull request. */\n  deletions: Scalars['Int'];\n  /** The actor who edited this pull request's body. */\n  editor?: Maybe<Actor>;\n  /** Lists the files changed within this pull request. */\n  files?: Maybe<PullRequestChangedFileConnection>;\n  /** Identifies the head Ref associated with the pull request. */\n  headRef?: Maybe<Ref>;\n  /** Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted. */\n  headRefName: Scalars['String'];\n  /** Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted. */\n  headRefOid: Scalars['GitObjectID'];\n  /** The repository associated with this pull request's head Ref. */\n  headRepository?: Maybe<Repository>;\n  /** The owner of the repository associated with this pull request's head Ref. */\n  headRepositoryOwner?: Maybe<RepositoryOwner>;\n  /** The hovercard information for this issue */\n  hovercard: Hovercard;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** The head and base repositories are different. */\n  isCrossRepository: Scalars['Boolean'];\n  /** Identifies if the pull request is a draft. */\n  isDraft: Scalars['Boolean'];\n  /** Is this pull request read by the viewer */\n  isReadByViewer?: Maybe<Scalars['Boolean']>;\n  /** A list of labels associated with the object. */\n  labels?: Maybe<LabelConnection>;\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of latest reviews per user associated with the pull request. */\n  latestOpinionatedReviews?: Maybe<PullRequestReviewConnection>;\n  /** A list of latest reviews per user associated with the pull request that are not also pending review. */\n  latestReviews?: Maybe<PullRequestReviewConnection>;\n  /** `true` if the pull request is locked */\n  locked: Scalars['Boolean'];\n  /** Indicates whether maintainers can modify the pull request. */\n  maintainerCanModify: Scalars['Boolean'];\n  /** The commit that was created when this pull request was merged. */\n  mergeCommit?: Maybe<Commit>;\n  /** The merge queue entry of the pull request in the base branch's merge queue */\n  mergeQueueEntry?: Maybe<MergeQueueEntry>;\n  /** Detailed information about the current pull request merge state status. */\n  mergeStateStatus: MergeStateStatus;\n  /** Whether or not the pull request can be merged based on the existence of merge conflicts. */\n  mergeable: MergeableState;\n  /** Whether or not the pull request was merged. */\n  merged: Scalars['Boolean'];\n  /** The date and time that the pull request was merged. */\n  mergedAt?: Maybe<Scalars['DateTime']>;\n  /** The actor who merged the pull request. */\n  mergedBy?: Maybe<Actor>;\n  /** Identifies the milestone associated with the pull request. */\n  milestone?: Maybe<Milestone>;\n  /** Identifies the pull request number. */\n  number: Scalars['Int'];\n  /** A list of Users that are participating in the Pull Request conversation. */\n  participants: UserConnection;\n  /** The permalink to the pull request. */\n  permalink: Scalars['URI'];\n  /**\n   * The commit that GitHub automatically generated to test if this pull request\n   * could be merged. This field will not return a value if the pull request is\n   * merged, or if the test merge commit is still being generated. See the\n   * `mergeable` field for more details on the mergeability of the pull request.\n   */\n  potentialMergeCommit?: Maybe<Commit>;\n  /** List of project cards associated with this pull request. */\n  projectCards: ProjectCardConnection;\n  /** List of project items associated with this pull request. */\n  projectItems: ProjectV2ItemConnection;\n  /** Find a project by number. */\n  projectV2?: Maybe<ProjectV2>;\n  /** A list of projects under the owner. */\n  projectsV2: ProjectV2Connection;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** The repository associated with this node. */\n  repository: Repository;\n  /** The HTTP path for this pull request. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP path for reverting this pull request. */\n  revertResourcePath: Scalars['URI'];\n  /** The HTTP URL for reverting this pull request. */\n  revertUrl: Scalars['URI'];\n  /** The current status of this pull request with respect to code review. */\n  reviewDecision?: Maybe<PullRequestReviewDecision>;\n  /** A list of review requests associated with the pull request. */\n  reviewRequests?: Maybe<ReviewRequestConnection>;\n  /** The list of all review threads for this pull request. */\n  reviewThreads: PullRequestReviewThreadConnection;\n  /** A list of reviews associated with the pull request. */\n  reviews?: Maybe<PullRequestReviewConnection>;\n  /** Identifies the state of the pull request. */\n  state: PullRequestState;\n  /** A list of reviewer suggestions based on commit history and past review comments. */\n  suggestedReviewers: Array<Maybe<SuggestedReviewer>>;\n  /**\n   * A list of events, comments, commits, etc. associated with the pull request.\n   * @deprecated `timeline` will be removed Use PullRequest.timelineItems instead. Removal on 2020-10-01 UTC.\n   */\n  timeline: PullRequestTimelineConnection;\n  /** A list of events, comments, commits, etc. associated with the pull request. */\n  timelineItems: PullRequestTimelineItemsConnection;\n  /** Identifies the pull request title. */\n  title: Scalars['String'];\n  /** Identifies the pull request title rendered to HTML. */\n  titleHTML: Scalars['HTML'];\n  /** Returns a count of how many comments this pull request has received. */\n  totalCommentsCount?: Maybe<Scalars['Int']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this pull request. */\n  url: Scalars['URI'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Whether or not the viewer can apply suggestion. */\n  viewerCanApplySuggestion: Scalars['Boolean'];\n  /** Indicates if the object can be closed by the viewer. */\n  viewerCanClose: Scalars['Boolean'];\n  /** Check if the viewer can restore the deleted head ref. */\n  viewerCanDeleteHeadRef: Scalars['Boolean'];\n  /** Whether or not the viewer can disable auto-merge */\n  viewerCanDisableAutoMerge: Scalars['Boolean'];\n  /** Can the viewer edit files within this pull request. */\n  viewerCanEditFiles: Scalars['Boolean'];\n  /** Whether or not the viewer can enable auto-merge */\n  viewerCanEnableAutoMerge: Scalars['Boolean'];\n  /** Indicates whether the viewer can bypass branch protections and merge the pull request immediately */\n  viewerCanMergeAsAdmin: Scalars['Boolean'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n  /** Indicates if the object can be reopened by the viewer. */\n  viewerCanReopen: Scalars['Boolean'];\n  /** Check if the viewer is able to change their subscription status for the repository. */\n  viewerCanSubscribe: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /**\n   * Whether or not the viewer can update the head ref of this PR, by merging or rebasing the base ref.\n   * If the head ref is up to date or unable to be updated by this user, this will return false.\n   */\n  viewerCanUpdateBranch: Scalars['Boolean'];\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n  /** The latest review given from the viewer. */\n  viewerLatestReview?: Maybe<PullRequestReview>;\n  /** The person who has requested the viewer for review on this pull request. */\n  viewerLatestReviewRequest?: Maybe<ReviewRequest>;\n  /** The merge body text for the viewer and method. */\n  viewerMergeBodyText: Scalars['String'];\n  /** The merge headline text for the viewer and method. */\n  viewerMergeHeadlineText: Scalars['String'];\n  /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n  viewerSubscription?: Maybe<SubscriptionState>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestAssigneesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestClosingIssuesReferencesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  userLinkedOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueCommentOrder>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestCommitsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestFilesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestHovercardArgs = {\n  includeNotificationContexts?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestLabelsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LabelOrder>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestLatestOpinionatedReviewsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  writersOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestLatestReviewsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestParticipantsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestProjectCardsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  archivedStates?: InputMaybe<Array<InputMaybe<ProjectCardArchivedState>>>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestProjectItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includeArchived?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestProjectV2Args = {\n  number: Scalars['Int'];\n};\n\n\n/** A repository pull request. */\nexport type PullRequestProjectsV2Args = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestReviewRequestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestReviewThreadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestReviewsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  author?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  states?: InputMaybe<Array<PullRequestReviewState>>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestTimelineArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  since?: InputMaybe<Scalars['DateTime']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestTimelineItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  itemTypes?: InputMaybe<Array<PullRequestTimelineItemsItemType>>;\n  last?: InputMaybe<Scalars['Int']>;\n  since?: InputMaybe<Scalars['DateTime']>;\n  skip?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestViewerMergeBodyTextArgs = {\n  mergeType?: InputMaybe<PullRequestMergeMethod>;\n};\n\n\n/** A repository pull request. */\nexport type PullRequestViewerMergeHeadlineTextArgs = {\n  mergeType?: InputMaybe<PullRequestMergeMethod>;\n};\n\n/** A file changed in a pull request. */\nexport type PullRequestChangedFile = {\n  __typename?: 'PullRequestChangedFile';\n  /** The number of additions to the file. */\n  additions: Scalars['Int'];\n  /** How the file was changed in this PullRequest */\n  changeType: PatchStatus;\n  /** The number of deletions to the file. */\n  deletions: Scalars['Int'];\n  /** The path of the file. */\n  path: Scalars['String'];\n  /** The state of the file for the viewer. */\n  viewerViewedState: FileViewedState;\n};\n\n/** The connection type for PullRequestChangedFile. */\nexport type PullRequestChangedFileConnection = {\n  __typename?: 'PullRequestChangedFileConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestChangedFileEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestChangedFile>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PullRequestChangedFileEdge = {\n  __typename?: 'PullRequestChangedFileEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestChangedFile>;\n};\n\n/** Represents a Git commit part of a pull request. */\nexport type PullRequestCommit = Node & UniformResourceLocatable & {\n  __typename?: 'PullRequestCommit';\n  /** The Git commit object */\n  commit: Commit;\n  id: Scalars['ID'];\n  /** The pull request this commit belongs to */\n  pullRequest: PullRequest;\n  /** The HTTP path for this pull request commit */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this pull request commit */\n  url: Scalars['URI'];\n};\n\n/** Represents a commit comment thread part of a pull request. */\nexport type PullRequestCommitCommentThread = Node & RepositoryNode & {\n  __typename?: 'PullRequestCommitCommentThread';\n  /** The comments that exist in this thread. */\n  comments: CommitCommentConnection;\n  /** The commit the comments were made on. */\n  commit: Commit;\n  id: Scalars['ID'];\n  /** The file the comments were made on. */\n  path?: Maybe<Scalars['String']>;\n  /** The position in the diff for the commit that the comment was made on. */\n  position?: Maybe<Scalars['Int']>;\n  /** The pull request this commit comment thread belongs to */\n  pullRequest: PullRequest;\n  /** The repository associated with this node. */\n  repository: Repository;\n};\n\n\n/** Represents a commit comment thread part of a pull request. */\nexport type PullRequestCommitCommentThreadCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for PullRequestCommit. */\nexport type PullRequestCommitConnection = {\n  __typename?: 'PullRequestCommitConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestCommitEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestCommit>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PullRequestCommitEdge = {\n  __typename?: 'PullRequestCommitEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestCommit>;\n};\n\n/** The connection type for PullRequest. */\nexport type PullRequestConnection = {\n  __typename?: 'PullRequestConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequest>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** This aggregates pull requests opened by a user within one repository. */\nexport type PullRequestContributionsByRepository = {\n  __typename?: 'PullRequestContributionsByRepository';\n  /** The pull request contributions. */\n  contributions: CreatedPullRequestContributionConnection;\n  /** The repository in which the pull requests were opened. */\n  repository: Repository;\n};\n\n\n/** This aggregates pull requests opened by a user within one repository. */\nexport type PullRequestContributionsByRepositoryContributionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n/** An edge in a connection. */\nexport type PullRequestEdge = {\n  __typename?: 'PullRequestEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequest>;\n};\n\n/** Represents available types of methods to use when merging a pull request. */\nexport enum PullRequestMergeMethod {\n  /** Add all commits from the head branch to the base branch with a merge commit. */\n  Merge = 'MERGE',\n  /** Add all commits from the head branch onto the base branch individually. */\n  Rebase = 'REBASE',\n  /** Combine all commits from the head branch into a single commit in the base branch. */\n  Squash = 'SQUASH'\n}\n\n/** Ways in which lists of issues can be ordered upon return. */\nexport type PullRequestOrder = {\n  /** The direction in which to order pull requests by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order pull requests by. */\n  field: PullRequestOrderField;\n};\n\n/** Properties by which pull_requests connections can be ordered. */\nexport enum PullRequestOrderField {\n  /** Order pull_requests by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order pull_requests by update time */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** Require all commits be made to a non-target branch and submitted via a pull request before they can be merged. */\nexport type PullRequestParameters = {\n  __typename?: 'PullRequestParameters';\n  /** New, reviewable commits pushed will dismiss previous pull request review approvals. */\n  dismissStaleReviewsOnPush: Scalars['Boolean'];\n  /** Require an approving review in pull requests that modify files that have a designated code owner. */\n  requireCodeOwnerReview: Scalars['Boolean'];\n  /** Whether the most recent reviewable push must be approved by someone other than the person who pushed it. */\n  requireLastPushApproval: Scalars['Boolean'];\n  /** The number of approving reviews that are required before a pull request can be merged. */\n  requiredApprovingReviewCount: Scalars['Int'];\n  /** All conversations on code must be resolved before a pull request can be merged. */\n  requiredReviewThreadResolution: Scalars['Boolean'];\n};\n\n/** Require all commits be made to a non-target branch and submitted via a pull request before they can be merged. */\nexport type PullRequestParametersInput = {\n  /** New, reviewable commits pushed will dismiss previous pull request review approvals. */\n  dismissStaleReviewsOnPush: Scalars['Boolean'];\n  /** Require an approving review in pull requests that modify files that have a designated code owner. */\n  requireCodeOwnerReview: Scalars['Boolean'];\n  /** Whether the most recent reviewable push must be approved by someone other than the person who pushed it. */\n  requireLastPushApproval: Scalars['Boolean'];\n  /** The number of approving reviews that are required before a pull request can be merged. */\n  requiredApprovingReviewCount: Scalars['Int'];\n  /** All conversations on code must be resolved before a pull request can be merged. */\n  requiredReviewThreadResolution: Scalars['Boolean'];\n};\n\n/** A review object for a given pull request. */\nexport type PullRequestReview = Comment & Deletable & Node & Reactable & RepositoryNode & Updatable & UpdatableComment & {\n  __typename?: 'PullRequestReview';\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the subject of the comment. */\n  authorAssociation: CommentAuthorAssociation;\n  /** Indicates whether the author of this review has push access to the repository. */\n  authorCanPushToRepository: Scalars['Boolean'];\n  /** Identifies the pull request review body. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body of this review rendered as plain text. */\n  bodyText: Scalars['String'];\n  /** A list of review comments for the current pull request review. */\n  comments: PullRequestReviewCommentConnection;\n  /** Identifies the commit associated with this pull request review. */\n  commit?: Maybe<Commit>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of teams that this review was made on behalf of. */\n  onBehalfOf: TeamConnection;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** Identifies the pull request associated with this pull request review. */\n  pullRequest: PullRequest;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** The repository associated with this node. */\n  repository: Repository;\n  /** The HTTP path permalink for this PullRequestReview. */\n  resourcePath: Scalars['URI'];\n  /** Identifies the current state of the pull request review. */\n  state: PullRequestReviewState;\n  /** Identifies when the Pull Request Review was submitted */\n  submittedAt?: Maybe<Scalars['DateTime']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL permalink for this PullRequestReview. */\n  url: Scalars['URI'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n};\n\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewOnBehalfOfArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** A review comment associated with a given repository pull request. */\nexport type PullRequestReviewComment = Comment & Deletable & Minimizable & Node & Reactable & RepositoryNode & Updatable & UpdatableComment & {\n  __typename?: 'PullRequestReviewComment';\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the subject of the comment. */\n  authorAssociation: CommentAuthorAssociation;\n  /** The comment body of this review comment. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The comment body of this review comment rendered as plain text. */\n  bodyText: Scalars['String'];\n  /** Identifies the commit associated with the comment. */\n  commit?: Maybe<Commit>;\n  /** Identifies when the comment was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The diff hunk to which the comment applies. */\n  diffHunk: Scalars['String'];\n  /** Identifies when the comment was created in a draft state. */\n  draftedAt: Scalars['DateTime'];\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** Returns whether or not a comment has been minimized. */\n  isMinimized: Scalars['Boolean'];\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /** The end line number on the file to which the comment applies */\n  line?: Maybe<Scalars['Int']>;\n  /**\n   * Returns why the comment was minimized. One of `abuse`, `off-topic`,\n   * `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and\n   * formatting of these values differs from the inputs to the `MinimizeComment` mutation.\n   */\n  minimizedReason?: Maybe<Scalars['String']>;\n  /** Identifies the original commit associated with the comment. */\n  originalCommit?: Maybe<Commit>;\n  /** The end line number on the file to which the comment applied when it was first created */\n  originalLine?: Maybe<Scalars['Int']>;\n  /**\n   * The original line index in the diff to which the comment applies.\n   * @deprecated We are phasing out diff-relative positioning for PR comments Removal on 2023-10-01 UTC.\n   */\n  originalPosition: Scalars['Int'];\n  /** The start line number on the file to which the comment applied when it was first created */\n  originalStartLine?: Maybe<Scalars['Int']>;\n  /** Identifies when the comment body is outdated */\n  outdated: Scalars['Boolean'];\n  /** The path to which the comment applies. */\n  path: Scalars['String'];\n  /**\n   * The line index in the diff to which the comment applies.\n   * @deprecated We are phasing out diff-relative positioning for PR comments Use the `line` and `startLine` fields instead, which are file line numbers instead of diff line numbers Removal on 2023-10-01 UTC.\n   */\n  position?: Maybe<Scalars['Int']>;\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** The pull request associated with this review comment. */\n  pullRequest: PullRequest;\n  /** The pull request review associated with this review comment. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** The comment this is a reply to. */\n  replyTo?: Maybe<PullRequestReviewComment>;\n  /** The repository associated with this node. */\n  repository: Repository;\n  /** The HTTP path permalink for this review comment. */\n  resourcePath: Scalars['URI'];\n  /** The start line number on the file to which the comment applies */\n  startLine?: Maybe<Scalars['Int']>;\n  /** Identifies the state of the comment. */\n  state: PullRequestReviewCommentState;\n  /** The level at which the comments in the corresponding thread are targeted, can be a diff line or a file */\n  subjectType: PullRequestReviewThreadSubjectType;\n  /** Identifies when the comment was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL permalink for this review comment. */\n  url: Scalars['URI'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n  /** Check if the current viewer can minimize this object. */\n  viewerCanMinimize: Scalars['Boolean'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n};\n\n\n/** A review comment associated with a given repository pull request. */\nexport type PullRequestReviewCommentReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** A review comment associated with a given repository pull request. */\nexport type PullRequestReviewCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for PullRequestReviewComment. */\nexport type PullRequestReviewCommentConnection = {\n  __typename?: 'PullRequestReviewCommentConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestReviewCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestReviewComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PullRequestReviewCommentEdge = {\n  __typename?: 'PullRequestReviewCommentEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestReviewComment>;\n};\n\n/** The possible states of a pull request review comment. */\nexport enum PullRequestReviewCommentState {\n  /** A comment that is part of a pending review */\n  Pending = 'PENDING',\n  /** A comment that is part of a submitted review */\n  Submitted = 'SUBMITTED'\n}\n\n/** The connection type for PullRequestReview. */\nexport type PullRequestReviewConnection = {\n  __typename?: 'PullRequestReviewConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestReviewEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestReview>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** This aggregates pull request reviews made by a user within one repository. */\nexport type PullRequestReviewContributionsByRepository = {\n  __typename?: 'PullRequestReviewContributionsByRepository';\n  /** The pull request review contributions. */\n  contributions: CreatedPullRequestReviewContributionConnection;\n  /** The repository in which the pull request reviews were made. */\n  repository: Repository;\n};\n\n\n/** This aggregates pull request reviews made by a user within one repository. */\nexport type PullRequestReviewContributionsByRepositoryContributionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ContributionOrder>;\n};\n\n/** The review status of a pull request. */\nexport enum PullRequestReviewDecision {\n  /** The pull request has received an approving review. */\n  Approved = 'APPROVED',\n  /** Changes have been requested on the pull request. */\n  ChangesRequested = 'CHANGES_REQUESTED',\n  /** A review is required before the pull request can be merged. */\n  ReviewRequired = 'REVIEW_REQUIRED'\n}\n\n/** An edge in a connection. */\nexport type PullRequestReviewEdge = {\n  __typename?: 'PullRequestReviewEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestReview>;\n};\n\n/** The possible events to perform on a pull request review. */\nexport enum PullRequestReviewEvent {\n  /** Submit feedback and approve merging these changes. */\n  Approve = 'APPROVE',\n  /** Submit general feedback without explicit approval. */\n  Comment = 'COMMENT',\n  /** Dismiss review so it now longer effects merging. */\n  Dismiss = 'DISMISS',\n  /** Submit feedback that must be addressed before merging. */\n  RequestChanges = 'REQUEST_CHANGES'\n}\n\n/** The possible states of a pull request review. */\nexport enum PullRequestReviewState {\n  /** A review allowing the pull request to merge. */\n  Approved = 'APPROVED',\n  /** A review blocking the pull request from merging. */\n  ChangesRequested = 'CHANGES_REQUESTED',\n  /** An informational review. */\n  Commented = 'COMMENTED',\n  /** A review that has been dismissed. */\n  Dismissed = 'DISMISSED',\n  /** A review that has not yet been submitted. */\n  Pending = 'PENDING'\n}\n\n/** A threaded list of comments for a given pull request. */\nexport type PullRequestReviewThread = Node & {\n  __typename?: 'PullRequestReviewThread';\n  /** A list of pull request comments associated with the thread. */\n  comments: PullRequestReviewCommentConnection;\n  /** The side of the diff on which this thread was placed. */\n  diffSide: DiffSide;\n  id: Scalars['ID'];\n  /** Whether or not the thread has been collapsed (resolved) */\n  isCollapsed: Scalars['Boolean'];\n  /** Indicates whether this thread was outdated by newer changes. */\n  isOutdated: Scalars['Boolean'];\n  /** Whether this thread has been resolved */\n  isResolved: Scalars['Boolean'];\n  /** The line in the file to which this thread refers */\n  line?: Maybe<Scalars['Int']>;\n  /** The original line in the file to which this thread refers. */\n  originalLine?: Maybe<Scalars['Int']>;\n  /** The original start line in the file to which this thread refers (multi-line only). */\n  originalStartLine?: Maybe<Scalars['Int']>;\n  /** Identifies the file path of this thread. */\n  path: Scalars['String'];\n  /** Identifies the pull request associated with this thread. */\n  pullRequest: PullRequest;\n  /** Identifies the repository associated with this thread. */\n  repository: Repository;\n  /** The user who resolved this thread */\n  resolvedBy?: Maybe<User>;\n  /** The side of the diff that the first line of the thread starts on (multi-line only) */\n  startDiffSide?: Maybe<DiffSide>;\n  /** The start line in the file to which this thread refers (multi-line only) */\n  startLine?: Maybe<Scalars['Int']>;\n  /** The level at which the comments in the corresponding thread are targeted, can be a diff line or a file */\n  subjectType: PullRequestReviewThreadSubjectType;\n  /** Indicates whether the current viewer can reply to this thread. */\n  viewerCanReply: Scalars['Boolean'];\n  /** Whether or not the viewer can resolve this thread */\n  viewerCanResolve: Scalars['Boolean'];\n  /** Whether or not the viewer can unresolve this thread */\n  viewerCanUnresolve: Scalars['Boolean'];\n};\n\n\n/** A threaded list of comments for a given pull request. */\nexport type PullRequestReviewThreadCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n};\n\n/** Review comment threads for a pull request review. */\nexport type PullRequestReviewThreadConnection = {\n  __typename?: 'PullRequestReviewThreadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestReviewThreadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestReviewThread>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PullRequestReviewThreadEdge = {\n  __typename?: 'PullRequestReviewThreadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestReviewThread>;\n};\n\n/** The possible subject types of a pull request review comment. */\nexport enum PullRequestReviewThreadSubjectType {\n  /** A comment that has been made against the file of a pull request */\n  File = 'FILE',\n  /** A comment that has been made against the line of a pull request */\n  Line = 'LINE'\n}\n\n/** Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits. */\nexport type PullRequestRevisionMarker = {\n  __typename?: 'PullRequestRevisionMarker';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The last commit the viewer has seen. */\n  lastSeenCommit: Commit;\n  /** The pull request to which the marker belongs. */\n  pullRequest: PullRequest;\n};\n\n/** The possible states of a pull request. */\nexport enum PullRequestState {\n  /** A pull request that has been closed without being merged. */\n  Closed = 'CLOSED',\n  /** A pull request that has been closed by being merged. */\n  Merged = 'MERGED',\n  /** A pull request that is still open. */\n  Open = 'OPEN'\n}\n\n/** A repository pull request template. */\nexport type PullRequestTemplate = {\n  __typename?: 'PullRequestTemplate';\n  /** The body of the template */\n  body?: Maybe<Scalars['String']>;\n  /** The filename of the template */\n  filename?: Maybe<Scalars['String']>;\n  /** The repository the template belongs to */\n  repository: Repository;\n};\n\n/** A threaded list of comments for a given pull request. */\nexport type PullRequestThread = Node & {\n  __typename?: 'PullRequestThread';\n  /** A list of pull request comments associated with the thread. */\n  comments: PullRequestReviewCommentConnection;\n  /** The side of the diff on which this thread was placed. */\n  diffSide: DiffSide;\n  id: Scalars['ID'];\n  /** Whether or not the thread has been collapsed (resolved) */\n  isCollapsed: Scalars['Boolean'];\n  /** Indicates whether this thread was outdated by newer changes. */\n  isOutdated: Scalars['Boolean'];\n  /** Whether this thread has been resolved */\n  isResolved: Scalars['Boolean'];\n  /** The line in the file to which this thread refers */\n  line?: Maybe<Scalars['Int']>;\n  /** Identifies the pull request associated with this thread. */\n  pullRequest: PullRequest;\n  /** Identifies the repository associated with this thread. */\n  repository: Repository;\n  /** The user who resolved this thread */\n  resolvedBy?: Maybe<User>;\n  /** The side of the diff that the first line of the thread starts on (multi-line only) */\n  startDiffSide?: Maybe<DiffSide>;\n  /** The line of the first file diff in the thread. */\n  startLine?: Maybe<Scalars['Int']>;\n  /** Indicates whether the current viewer can reply to this thread. */\n  viewerCanReply: Scalars['Boolean'];\n  /** Whether or not the viewer can resolve this thread */\n  viewerCanResolve: Scalars['Boolean'];\n  /** Whether or not the viewer can unresolve this thread */\n  viewerCanUnresolve: Scalars['Boolean'];\n};\n\n\n/** A threaded list of comments for a given pull request. */\nexport type PullRequestThreadCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for PullRequestTimelineItem. */\nexport type PullRequestTimelineConnection = {\n  __typename?: 'PullRequestTimelineConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestTimelineItemEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestTimelineItem>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An item in a pull request timeline */\nexport type PullRequestTimelineItem = AssignedEvent | BaseRefDeletedEvent | BaseRefForcePushedEvent | ClosedEvent | Commit | CommitCommentThread | CrossReferencedEvent | DemilestonedEvent | DeployedEvent | DeploymentEnvironmentChangedEvent | HeadRefDeletedEvent | HeadRefForcePushedEvent | HeadRefRestoredEvent | IssueComment | LabeledEvent | LockedEvent | MergedEvent | MilestonedEvent | PullRequestReview | PullRequestReviewComment | PullRequestReviewThread | ReferencedEvent | RenamedTitleEvent | ReopenedEvent | ReviewDismissedEvent | ReviewRequestRemovedEvent | ReviewRequestedEvent | SubscribedEvent | UnassignedEvent | UnlabeledEvent | UnlockedEvent | UnsubscribedEvent | UserBlockedEvent;\n\n/** An edge in a connection. */\nexport type PullRequestTimelineItemEdge = {\n  __typename?: 'PullRequestTimelineItemEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestTimelineItem>;\n};\n\n/** An item in a pull request timeline */\nexport type PullRequestTimelineItems = AddedToMergeQueueEvent | AddedToProjectEvent | AssignedEvent | AutoMergeDisabledEvent | AutoMergeEnabledEvent | AutoRebaseEnabledEvent | AutoSquashEnabledEvent | AutomaticBaseChangeFailedEvent | AutomaticBaseChangeSucceededEvent | BaseRefChangedEvent | BaseRefDeletedEvent | BaseRefForcePushedEvent | ClosedEvent | CommentDeletedEvent | ConnectedEvent | ConvertToDraftEvent | ConvertedNoteToIssueEvent | ConvertedToDiscussionEvent | CrossReferencedEvent | DemilestonedEvent | DeployedEvent | DeploymentEnvironmentChangedEvent | DisconnectedEvent | HeadRefDeletedEvent | HeadRefForcePushedEvent | HeadRefRestoredEvent | IssueComment | LabeledEvent | LockedEvent | MarkedAsDuplicateEvent | MentionedEvent | MergedEvent | MilestonedEvent | MovedColumnsInProjectEvent | PinnedEvent | PullRequestCommit | PullRequestCommitCommentThread | PullRequestReview | PullRequestReviewThread | PullRequestRevisionMarker | ReadyForReviewEvent | ReferencedEvent | RemovedFromMergeQueueEvent | RemovedFromProjectEvent | RenamedTitleEvent | ReopenedEvent | ReviewDismissedEvent | ReviewRequestRemovedEvent | ReviewRequestedEvent | SubscribedEvent | TransferredEvent | UnassignedEvent | UnlabeledEvent | UnlockedEvent | UnmarkedAsDuplicateEvent | UnpinnedEvent | UnsubscribedEvent | UserBlockedEvent;\n\n/** The connection type for PullRequestTimelineItems. */\nexport type PullRequestTimelineItemsConnection = {\n  __typename?: 'PullRequestTimelineItemsConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PullRequestTimelineItemsEdge>>>;\n  /** Identifies the count of items after applying `before` and `after` filters. */\n  filteredCount: Scalars['Int'];\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PullRequestTimelineItems>>>;\n  /** Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing. */\n  pageCount: Scalars['Int'];\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n  /** Identifies the date and time when the timeline was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** An edge in a connection. */\nexport type PullRequestTimelineItemsEdge = {\n  __typename?: 'PullRequestTimelineItemsEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PullRequestTimelineItems>;\n};\n\n/** The possible item types found in a timeline. */\nexport enum PullRequestTimelineItemsItemType {\n  /** Represents an 'added_to_merge_queue' event on a given pull request. */\n  AddedToMergeQueueEvent = 'ADDED_TO_MERGE_QUEUE_EVENT',\n  /** Represents a 'added_to_project' event on a given issue or pull request. */\n  AddedToProjectEvent = 'ADDED_TO_PROJECT_EVENT',\n  /** Represents an 'assigned' event on any assignable object. */\n  AssignedEvent = 'ASSIGNED_EVENT',\n  /** Represents a 'automatic_base_change_failed' event on a given pull request. */\n  AutomaticBaseChangeFailedEvent = 'AUTOMATIC_BASE_CHANGE_FAILED_EVENT',\n  /** Represents a 'automatic_base_change_succeeded' event on a given pull request. */\n  AutomaticBaseChangeSucceededEvent = 'AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENT',\n  /** Represents a 'auto_merge_disabled' event on a given pull request. */\n  AutoMergeDisabledEvent = 'AUTO_MERGE_DISABLED_EVENT',\n  /** Represents a 'auto_merge_enabled' event on a given pull request. */\n  AutoMergeEnabledEvent = 'AUTO_MERGE_ENABLED_EVENT',\n  /** Represents a 'auto_rebase_enabled' event on a given pull request. */\n  AutoRebaseEnabledEvent = 'AUTO_REBASE_ENABLED_EVENT',\n  /** Represents a 'auto_squash_enabled' event on a given pull request. */\n  AutoSquashEnabledEvent = 'AUTO_SQUASH_ENABLED_EVENT',\n  /** Represents a 'base_ref_changed' event on a given issue or pull request. */\n  BaseRefChangedEvent = 'BASE_REF_CHANGED_EVENT',\n  /** Represents a 'base_ref_deleted' event on a given pull request. */\n  BaseRefDeletedEvent = 'BASE_REF_DELETED_EVENT',\n  /** Represents a 'base_ref_force_pushed' event on a given pull request. */\n  BaseRefForcePushedEvent = 'BASE_REF_FORCE_PUSHED_EVENT',\n  /** Represents a 'closed' event on any `Closable`. */\n  ClosedEvent = 'CLOSED_EVENT',\n  /** Represents a 'comment_deleted' event on a given issue or pull request. */\n  CommentDeletedEvent = 'COMMENT_DELETED_EVENT',\n  /** Represents a 'connected' event on a given issue or pull request. */\n  ConnectedEvent = 'CONNECTED_EVENT',\n  /** Represents a 'converted_note_to_issue' event on a given issue or pull request. */\n  ConvertedNoteToIssueEvent = 'CONVERTED_NOTE_TO_ISSUE_EVENT',\n  /** Represents a 'converted_to_discussion' event on a given issue. */\n  ConvertedToDiscussionEvent = 'CONVERTED_TO_DISCUSSION_EVENT',\n  /** Represents a 'convert_to_draft' event on a given pull request. */\n  ConvertToDraftEvent = 'CONVERT_TO_DRAFT_EVENT',\n  /** Represents a mention made by one issue or pull request to another. */\n  CrossReferencedEvent = 'CROSS_REFERENCED_EVENT',\n  /** Represents a 'demilestoned' event on a given issue or pull request. */\n  DemilestonedEvent = 'DEMILESTONED_EVENT',\n  /** Represents a 'deployed' event on a given pull request. */\n  DeployedEvent = 'DEPLOYED_EVENT',\n  /** Represents a 'deployment_environment_changed' event on a given pull request. */\n  DeploymentEnvironmentChangedEvent = 'DEPLOYMENT_ENVIRONMENT_CHANGED_EVENT',\n  /** Represents a 'disconnected' event on a given issue or pull request. */\n  DisconnectedEvent = 'DISCONNECTED_EVENT',\n  /** Represents a 'head_ref_deleted' event on a given pull request. */\n  HeadRefDeletedEvent = 'HEAD_REF_DELETED_EVENT',\n  /** Represents a 'head_ref_force_pushed' event on a given pull request. */\n  HeadRefForcePushedEvent = 'HEAD_REF_FORCE_PUSHED_EVENT',\n  /** Represents a 'head_ref_restored' event on a given pull request. */\n  HeadRefRestoredEvent = 'HEAD_REF_RESTORED_EVENT',\n  /** Represents a comment on an Issue. */\n  IssueComment = 'ISSUE_COMMENT',\n  /** Represents a 'labeled' event on a given issue or pull request. */\n  LabeledEvent = 'LABELED_EVENT',\n  /** Represents a 'locked' event on a given issue or pull request. */\n  LockedEvent = 'LOCKED_EVENT',\n  /** Represents a 'marked_as_duplicate' event on a given issue or pull request. */\n  MarkedAsDuplicateEvent = 'MARKED_AS_DUPLICATE_EVENT',\n  /** Represents a 'mentioned' event on a given issue or pull request. */\n  MentionedEvent = 'MENTIONED_EVENT',\n  /** Represents a 'merged' event on a given pull request. */\n  MergedEvent = 'MERGED_EVENT',\n  /** Represents a 'milestoned' event on a given issue or pull request. */\n  MilestonedEvent = 'MILESTONED_EVENT',\n  /** Represents a 'moved_columns_in_project' event on a given issue or pull request. */\n  MovedColumnsInProjectEvent = 'MOVED_COLUMNS_IN_PROJECT_EVENT',\n  /** Represents a 'pinned' event on a given issue or pull request. */\n  PinnedEvent = 'PINNED_EVENT',\n  /** Represents a Git commit part of a pull request. */\n  PullRequestCommit = 'PULL_REQUEST_COMMIT',\n  /** Represents a commit comment thread part of a pull request. */\n  PullRequestCommitCommentThread = 'PULL_REQUEST_COMMIT_COMMENT_THREAD',\n  /** A review object for a given pull request. */\n  PullRequestReview = 'PULL_REQUEST_REVIEW',\n  /** A threaded list of comments for a given pull request. */\n  PullRequestReviewThread = 'PULL_REQUEST_REVIEW_THREAD',\n  /** Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits. */\n  PullRequestRevisionMarker = 'PULL_REQUEST_REVISION_MARKER',\n  /** Represents a 'ready_for_review' event on a given pull request. */\n  ReadyForReviewEvent = 'READY_FOR_REVIEW_EVENT',\n  /** Represents a 'referenced' event on a given `ReferencedSubject`. */\n  ReferencedEvent = 'REFERENCED_EVENT',\n  /** Represents a 'removed_from_merge_queue' event on a given pull request. */\n  RemovedFromMergeQueueEvent = 'REMOVED_FROM_MERGE_QUEUE_EVENT',\n  /** Represents a 'removed_from_project' event on a given issue or pull request. */\n  RemovedFromProjectEvent = 'REMOVED_FROM_PROJECT_EVENT',\n  /** Represents a 'renamed' event on a given issue or pull request */\n  RenamedTitleEvent = 'RENAMED_TITLE_EVENT',\n  /** Represents a 'reopened' event on any `Closable`. */\n  ReopenedEvent = 'REOPENED_EVENT',\n  /** Represents a 'review_dismissed' event on a given issue or pull request. */\n  ReviewDismissedEvent = 'REVIEW_DISMISSED_EVENT',\n  /** Represents an 'review_requested' event on a given pull request. */\n  ReviewRequestedEvent = 'REVIEW_REQUESTED_EVENT',\n  /** Represents an 'review_request_removed' event on a given pull request. */\n  ReviewRequestRemovedEvent = 'REVIEW_REQUEST_REMOVED_EVENT',\n  /** Represents a 'subscribed' event on a given `Subscribable`. */\n  SubscribedEvent = 'SUBSCRIBED_EVENT',\n  /** Represents a 'transferred' event on a given issue or pull request. */\n  TransferredEvent = 'TRANSFERRED_EVENT',\n  /** Represents an 'unassigned' event on any assignable object. */\n  UnassignedEvent = 'UNASSIGNED_EVENT',\n  /** Represents an 'unlabeled' event on a given issue or pull request. */\n  UnlabeledEvent = 'UNLABELED_EVENT',\n  /** Represents an 'unlocked' event on a given issue or pull request. */\n  UnlockedEvent = 'UNLOCKED_EVENT',\n  /** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */\n  UnmarkedAsDuplicateEvent = 'UNMARKED_AS_DUPLICATE_EVENT',\n  /** Represents an 'unpinned' event on a given issue or pull request. */\n  UnpinnedEvent = 'UNPINNED_EVENT',\n  /** Represents an 'unsubscribed' event on a given `Subscribable`. */\n  UnsubscribedEvent = 'UNSUBSCRIBED_EVENT',\n  /** Represents a 'user_blocked' event on a given user. */\n  UserBlockedEvent = 'USER_BLOCKED_EVENT'\n}\n\n/** The possible target states when updating a pull request. */\nexport enum PullRequestUpdateState {\n  /** A pull request that has been closed without being merged. */\n  Closed = 'CLOSED',\n  /** A pull request that is still open. */\n  Open = 'OPEN'\n}\n\n/** A Git push. */\nexport type Push = Node & {\n  __typename?: 'Push';\n  id: Scalars['ID'];\n  /** The SHA after the push */\n  nextSha?: Maybe<Scalars['GitObjectID']>;\n  /** The permalink for this push. */\n  permalink: Scalars['URI'];\n  /** The SHA before the push */\n  previousSha?: Maybe<Scalars['GitObjectID']>;\n  /** The actor who pushed */\n  pusher: Actor;\n  /** The repository that was pushed to */\n  repository: Repository;\n};\n\n/** A team, user, or app who has the ability to push to a protected branch. */\nexport type PushAllowance = Node & {\n  __typename?: 'PushAllowance';\n  /** The actor that can push. */\n  actor?: Maybe<PushAllowanceActor>;\n  /** Identifies the branch protection rule associated with the allowed user, team, or app. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  id: Scalars['ID'];\n};\n\n/** Types that can be an actor. */\nexport type PushAllowanceActor = App | Team | User;\n\n/** The connection type for PushAllowance. */\nexport type PushAllowanceConnection = {\n  __typename?: 'PushAllowanceConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<PushAllowanceEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<PushAllowance>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type PushAllowanceEdge = {\n  __typename?: 'PushAllowanceEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<PushAllowance>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type Query = {\n  __typename?: 'Query';\n  /** Look up a code of conduct by its key */\n  codeOfConduct?: Maybe<CodeOfConduct>;\n  /** Look up a code of conduct by its key */\n  codesOfConduct?: Maybe<Array<Maybe<CodeOfConduct>>>;\n  /** Look up an enterprise by URL slug. */\n  enterprise?: Maybe<Enterprise>;\n  /** Look up a pending enterprise administrator invitation by invitee, enterprise and role. */\n  enterpriseAdministratorInvitation?: Maybe<EnterpriseAdministratorInvitation>;\n  /** Look up a pending enterprise administrator invitation by invitation token. */\n  enterpriseAdministratorInvitationByToken?: Maybe<EnterpriseAdministratorInvitation>;\n  /** Look up an open source license by its key */\n  license?: Maybe<License>;\n  /** Return a list of known open source licenses */\n  licenses: Array<Maybe<License>>;\n  /** Get alphabetically sorted list of Marketplace categories */\n  marketplaceCategories: Array<MarketplaceCategory>;\n  /** Look up a Marketplace category by its slug. */\n  marketplaceCategory?: Maybe<MarketplaceCategory>;\n  /** Look up a single Marketplace listing */\n  marketplaceListing?: Maybe<MarketplaceListing>;\n  /** Look up Marketplace listings */\n  marketplaceListings: MarketplaceListingConnection;\n  /** Return information about the GitHub instance */\n  meta: GitHubMetadata;\n  /** Fetches an object given its ID. */\n  node?: Maybe<Node>;\n  /** Lookup nodes by a list of IDs. */\n  nodes: Array<Maybe<Node>>;\n  /** Lookup a organization by login. */\n  organization?: Maybe<Organization>;\n  /** The client's rate limit information. */\n  rateLimit?: Maybe<RateLimit>;\n  /**\n   * Workaround for re-exposing the root query object. (Refer to\n   * https://github.com/facebook/relay/issues/112 for more information.)\n   */\n  relay: Query;\n  /** Lookup a given repository by the owner and repository name. */\n  repository?: Maybe<Repository>;\n  /** Lookup a repository owner (ie. either a User or an Organization) by login. */\n  repositoryOwner?: Maybe<RepositoryOwner>;\n  /** Lookup resource by a URL. */\n  resource?: Maybe<UniformResourceLocatable>;\n  /** Perform a search across resources, returning a maximum of 1,000 results. */\n  search: SearchResultItemConnection;\n  /** GitHub Security Advisories */\n  securityAdvisories: SecurityAdvisoryConnection;\n  /** Fetch a Security Advisory by its GHSA ID */\n  securityAdvisory?: Maybe<SecurityAdvisory>;\n  /** Software Vulnerabilities documented by GitHub Security Advisories */\n  securityVulnerabilities: SecurityVulnerabilityConnection;\n  /** Users and organizations who can be sponsored via GitHub Sponsors. */\n  sponsorables: SponsorableItemConnection;\n  /** Look up a topic by name. */\n  topic?: Maybe<Topic>;\n  /** Lookup a user by login. */\n  user?: Maybe<User>;\n  /** The currently authenticated user. */\n  viewer: User;\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryCodeOfConductArgs = {\n  key: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryEnterpriseArgs = {\n  invitationToken?: InputMaybe<Scalars['String']>;\n  slug: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryEnterpriseAdministratorInvitationArgs = {\n  enterpriseSlug: Scalars['String'];\n  role: EnterpriseAdministratorRole;\n  userLogin: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryEnterpriseAdministratorInvitationByTokenArgs = {\n  invitationToken: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryLicenseArgs = {\n  key: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceCategoriesArgs = {\n  excludeEmpty?: InputMaybe<Scalars['Boolean']>;\n  excludeSubcategories?: InputMaybe<Scalars['Boolean']>;\n  includeCategories?: InputMaybe<Array<Scalars['String']>>;\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceCategoryArgs = {\n  slug: Scalars['String'];\n  useTopicAliases?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceListingArgs = {\n  slug: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceListingsArgs = {\n  adminId?: InputMaybe<Scalars['ID']>;\n  after?: InputMaybe<Scalars['String']>;\n  allStates?: InputMaybe<Scalars['Boolean']>;\n  before?: InputMaybe<Scalars['String']>;\n  categorySlug?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  organizationId?: InputMaybe<Scalars['ID']>;\n  primaryCategoryOnly?: InputMaybe<Scalars['Boolean']>;\n  slugs?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  useTopicAliases?: InputMaybe<Scalars['Boolean']>;\n  viewerCanAdmin?: InputMaybe<Scalars['Boolean']>;\n  withFreeTrialsOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryNodeArgs = {\n  id: Scalars['ID'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryNodesArgs = {\n  ids: Array<Scalars['ID']>;\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryOrganizationArgs = {\n  login: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryRateLimitArgs = {\n  dryRun?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryRepositoryArgs = {\n  followRenames?: InputMaybe<Scalars['Boolean']>;\n  name: Scalars['String'];\n  owner: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryRepositoryOwnerArgs = {\n  login: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryResourceArgs = {\n  url: Scalars['URI'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySearchArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  query: Scalars['String'];\n  type: SearchType;\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySecurityAdvisoriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  classifications?: InputMaybe<Array<SecurityAdvisoryClassification>>;\n  first?: InputMaybe<Scalars['Int']>;\n  identifier?: InputMaybe<SecurityAdvisoryIdentifierFilter>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SecurityAdvisoryOrder>;\n  publishedSince?: InputMaybe<Scalars['DateTime']>;\n  updatedSince?: InputMaybe<Scalars['DateTime']>;\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySecurityAdvisoryArgs = {\n  ghsaId: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySecurityVulnerabilitiesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  classifications?: InputMaybe<Array<SecurityAdvisoryClassification>>;\n  ecosystem?: InputMaybe<SecurityAdvisoryEcosystem>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SecurityVulnerabilityOrder>;\n  package?: InputMaybe<Scalars['String']>;\n  severities?: InputMaybe<Array<SecurityAdvisorySeverity>>;\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySponsorablesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dependencyEcosystem?: InputMaybe<SecurityAdvisoryEcosystem>;\n  ecosystem?: InputMaybe<DependencyGraphEcosystem>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  onlyDependencies?: InputMaybe<Scalars['Boolean']>;\n  orderBy?: InputMaybe<SponsorableOrder>;\n  orgLoginForDependencies?: InputMaybe<Scalars['String']>;\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryTopicArgs = {\n  name: Scalars['String'];\n};\n\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryUserArgs = {\n  login: Scalars['String'];\n};\n\n/** Represents the client's rate limit. */\nexport type RateLimit = {\n  __typename?: 'RateLimit';\n  /** The point cost for the current query counting against the rate limit. */\n  cost: Scalars['Int'];\n  /** The maximum number of points the client is permitted to consume in a 60 minute window. */\n  limit: Scalars['Int'];\n  /** The maximum number of nodes this query may return */\n  nodeCount: Scalars['Int'];\n  /** The number of points remaining in the current rate limit window. */\n  remaining: Scalars['Int'];\n  /** The time at which the current rate limit window resets in UTC epoch seconds. */\n  resetAt: Scalars['DateTime'];\n  /** The number of points used in the current rate limit window. */\n  used: Scalars['Int'];\n};\n\n/** Represents a subject that can be reacted on. */\nexport type Reactable = {\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n};\n\n\n/** Represents a subject that can be reacted on. */\nexport type ReactableReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n/** The connection type for User. */\nexport type ReactingUserConnection = {\n  __typename?: 'ReactingUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReactingUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents a user that's made a reaction. */\nexport type ReactingUserEdge = {\n  __typename?: 'ReactingUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  node: User;\n  /** The moment when the user made the reaction. */\n  reactedAt: Scalars['DateTime'];\n};\n\n/** An emoji reaction to a particular piece of content. */\nexport type Reaction = Node & {\n  __typename?: 'Reaction';\n  /** Identifies the emoji reaction. */\n  content: ReactionContent;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The reactable piece of content */\n  reactable: Reactable;\n  /** Identifies the user who created this reaction. */\n  user?: Maybe<User>;\n};\n\n/** A list of reactions that have been left on the subject. */\nexport type ReactionConnection = {\n  __typename?: 'ReactionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReactionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Reaction>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n  /** Whether or not the authenticated user has left a reaction on the subject. */\n  viewerHasReacted: Scalars['Boolean'];\n};\n\n/** Emojis that can be attached to Issues, Pull Requests and Comments. */\nexport enum ReactionContent {\n  /** Represents the `:confused:` emoji. */\n  Confused = 'CONFUSED',\n  /** Represents the `:eyes:` emoji. */\n  Eyes = 'EYES',\n  /** Represents the `:heart:` emoji. */\n  Heart = 'HEART',\n  /** Represents the `:hooray:` emoji. */\n  Hooray = 'HOORAY',\n  /** Represents the `:laugh:` emoji. */\n  Laugh = 'LAUGH',\n  /** Represents the `:rocket:` emoji. */\n  Rocket = 'ROCKET',\n  /** Represents the `:-1:` emoji. */\n  ThumbsDown = 'THUMBS_DOWN',\n  /** Represents the `:+1:` emoji. */\n  ThumbsUp = 'THUMBS_UP'\n}\n\n/** An edge in a connection. */\nexport type ReactionEdge = {\n  __typename?: 'ReactionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Reaction>;\n};\n\n/** A group of emoji reactions to a particular piece of content. */\nexport type ReactionGroup = {\n  __typename?: 'ReactionGroup';\n  /** Identifies the emoji reaction. */\n  content: ReactionContent;\n  /** Identifies when the reaction was created. */\n  createdAt?: Maybe<Scalars['DateTime']>;\n  /** Reactors to the reaction subject with the emotion represented by this reaction group. */\n  reactors: ReactorConnection;\n  /** The subject that was reacted to. */\n  subject: Reactable;\n  /**\n   * Users who have reacted to the reaction subject with the emotion represented by this reaction group\n   * @deprecated Reactors can now be mannequins, bots, and organizations. Use the `reactors` field instead. Removal on 2021-10-01 UTC.\n   */\n  users: ReactingUserConnection;\n  /** Whether or not the authenticated user has left a reaction on the subject. */\n  viewerHasReacted: Scalars['Boolean'];\n};\n\n\n/** A group of emoji reactions to a particular piece of content. */\nexport type ReactionGroupReactorsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A group of emoji reactions to a particular piece of content. */\nexport type ReactionGroupUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Ways in which lists of reactions can be ordered upon return. */\nexport type ReactionOrder = {\n  /** The direction in which to order reactions by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order reactions by. */\n  field: ReactionOrderField;\n};\n\n/** A list of fields that reactions can be ordered by. */\nexport enum ReactionOrderField {\n  /** Allows ordering a list of reactions by when they were created. */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** Types that can be assigned to reactions. */\nexport type Reactor = Bot | Mannequin | Organization | User;\n\n/** The connection type for Reactor. */\nexport type ReactorConnection = {\n  __typename?: 'ReactorConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReactorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Reactor>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents an author of a reaction. */\nexport type ReactorEdge = {\n  __typename?: 'ReactorEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The author of the reaction. */\n  node: Reactor;\n  /** The moment when the user made the reaction. */\n  reactedAt: Scalars['DateTime'];\n};\n\n/** Represents a 'ready_for_review' event on a given pull request. */\nexport type ReadyForReviewEvent = Node & UniformResourceLocatable & {\n  __typename?: 'ReadyForReviewEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** The HTTP path for this ready for review event. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this ready for review event. */\n  url: Scalars['URI'];\n};\n\n/** Represents a Git reference. */\nexport type Ref = Node & {\n  __typename?: 'Ref';\n  /** A list of pull requests with this ref as the head ref. */\n  associatedPullRequests: PullRequestConnection;\n  /** Branch protection rules for this ref */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  /** Compares the current ref as a base ref to another head ref, if the comparison can be made. */\n  compare?: Maybe<Comparison>;\n  id: Scalars['ID'];\n  /** The ref name. */\n  name: Scalars['String'];\n  /** The ref's prefix, such as `refs/heads/` or `refs/tags/`. */\n  prefix: Scalars['String'];\n  /** Branch protection rules that are viewable by non-admins */\n  refUpdateRule?: Maybe<RefUpdateRule>;\n  /** The repository the ref belongs to. */\n  repository: Repository;\n  /** The object the ref points to. Returns null when object does not exist. */\n  target?: Maybe<GitObject>;\n};\n\n\n/** Represents a Git reference. */\nexport type RefAssociatedPullRequestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  baseRefName?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  headRefName?: InputMaybe<Scalars['String']>;\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n\n/** Represents a Git reference. */\nexport type RefCompareArgs = {\n  headRef: Scalars['String'];\n};\n\n/** The connection type for Ref. */\nexport type RefConnection = {\n  __typename?: 'RefConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RefEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Ref>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type RefEdge = {\n  __typename?: 'RefEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Ref>;\n};\n\n/** Parameters to be used for the ref_name condition */\nexport type RefNameConditionTarget = {\n  __typename?: 'RefNameConditionTarget';\n  /** Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match. */\n  exclude: Array<Scalars['String']>;\n  /**\n   * Array of ref names or patterns to include. One of these patterns must match\n   * for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the\n   * default branch or `~ALL` to include all branches.\n   */\n  include: Array<Scalars['String']>;\n};\n\n/** Parameters to be used for the ref_name condition */\nexport type RefNameConditionTargetInput = {\n  /** Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match. */\n  exclude: Array<Scalars['String']>;\n  /**\n   * Array of ref names or patterns to include. One of these patterns must match\n   * for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the\n   * default branch or `~ALL` to include all branches.\n   */\n  include: Array<Scalars['String']>;\n};\n\n/** Ways in which lists of git refs can be ordered upon return. */\nexport type RefOrder = {\n  /** The direction in which to order refs by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order refs by. */\n  field: RefOrderField;\n};\n\n/** Properties by which ref connections can be ordered. */\nexport enum RefOrderField {\n  /** Order refs by their alphanumeric name */\n  Alphabetical = 'ALPHABETICAL',\n  /** Order refs by underlying commit date if the ref prefix is refs/tags/ */\n  TagCommitDate = 'TAG_COMMIT_DATE'\n}\n\n/** A ref update */\nexport type RefUpdate = {\n  /** The value this ref should be updated to. */\n  afterOid: Scalars['GitObjectID'];\n  /** The value this ref needs to point to before the update. */\n  beforeOid?: InputMaybe<Scalars['GitObjectID']>;\n  /** Force a non fast-forward update. */\n  force?: InputMaybe<Scalars['Boolean']>;\n  /** The fully qualified name of the ref to be update. For example `refs/heads/branch-name` */\n  name: Scalars['GitRefname'];\n};\n\n/** A ref update rules for a viewer. */\nexport type RefUpdateRule = {\n  __typename?: 'RefUpdateRule';\n  /** Can this branch be deleted. */\n  allowsDeletions: Scalars['Boolean'];\n  /** Are force pushes allowed on this branch. */\n  allowsForcePushes: Scalars['Boolean'];\n  /** Can matching branches be created. */\n  blocksCreations: Scalars['Boolean'];\n  /** Identifies the protection rule pattern. */\n  pattern: Scalars['String'];\n  /** Number of approving reviews required to update matching branches. */\n  requiredApprovingReviewCount?: Maybe<Scalars['Int']>;\n  /** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n  requiredStatusCheckContexts?: Maybe<Array<Maybe<Scalars['String']>>>;\n  /** Are reviews from code owners required to update matching branches. */\n  requiresCodeOwnerReviews: Scalars['Boolean'];\n  /** Are conversations required to be resolved before merging. */\n  requiresConversationResolution: Scalars['Boolean'];\n  /** Are merge commits prohibited from being pushed to this branch. */\n  requiresLinearHistory: Scalars['Boolean'];\n  /** Are commits required to be signed. */\n  requiresSignatures: Scalars['Boolean'];\n  /** Is the viewer allowed to dismiss reviews. */\n  viewerAllowedToDismissReviews: Scalars['Boolean'];\n  /** Can the viewer push to the branch */\n  viewerCanPush: Scalars['Boolean'];\n};\n\n/** Represents a 'referenced' event on a given `ReferencedSubject`. */\nexport type ReferencedEvent = Node & {\n  __typename?: 'ReferencedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the commit associated with the 'referenced' event. */\n  commit?: Maybe<Commit>;\n  /** Identifies the repository associated with the 'referenced' event. */\n  commitRepository: Repository;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Reference originated in a different repository. */\n  isCrossRepository: Scalars['Boolean'];\n  /** Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference. */\n  isDirectReference: Scalars['Boolean'];\n  /** Object referenced by event. */\n  subject: ReferencedSubject;\n};\n\n/** Any referencable object */\nexport type ReferencedSubject = Issue | PullRequest;\n\n/** Autogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes */\nexport type RegenerateEnterpriseIdentityProviderRecoveryCodesInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set an identity provider. */\n  enterpriseId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes */\nexport type RegenerateEnterpriseIdentityProviderRecoveryCodesPayload = {\n  __typename?: 'RegenerateEnterpriseIdentityProviderRecoveryCodesPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The identity provider for the enterprise. */\n  identityProvider?: Maybe<EnterpriseIdentityProvider>;\n};\n\n/** Autogenerated input type of RegenerateVerifiableDomainToken */\nexport type RegenerateVerifiableDomainTokenInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the verifiable domain to regenerate the verification token of. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of RegenerateVerifiableDomainToken */\nexport type RegenerateVerifiableDomainTokenPayload = {\n  __typename?: 'RegenerateVerifiableDomainTokenPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The verification token that was generated. */\n  verificationToken?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of RejectDeployments */\nexport type RejectDeploymentsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Optional comment for rejecting deployments */\n  comment?: InputMaybe<Scalars['String']>;\n  /** The ids of environments to reject deployments */\n  environmentIds: Array<Scalars['ID']>;\n  /** The node ID of the workflow run containing the pending deployments. */\n  workflowRunId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RejectDeployments */\nexport type RejectDeploymentsPayload = {\n  __typename?: 'RejectDeploymentsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The affected deployments. */\n  deployments?: Maybe<Array<Deployment>>;\n};\n\n/** A release contains the content for a release. */\nexport type Release = Node & Reactable & UniformResourceLocatable & {\n  __typename?: 'Release';\n  /** The author of the release */\n  author?: Maybe<User>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The description of the release. */\n  description?: Maybe<Scalars['String']>;\n  /** The description of this release rendered to HTML. */\n  descriptionHTML?: Maybe<Scalars['HTML']>;\n  id: Scalars['ID'];\n  /** Whether or not the release is a draft */\n  isDraft: Scalars['Boolean'];\n  /** Whether or not the release is the latest releast */\n  isLatest: Scalars['Boolean'];\n  /** Whether or not the release is a prerelease */\n  isPrerelease: Scalars['Boolean'];\n  /** A list of users mentioned in the release description */\n  mentions?: Maybe<UserConnection>;\n  /** The title of the release. */\n  name?: Maybe<Scalars['String']>;\n  /** Identifies the date and time when the release was created. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** List of releases assets which are dependent on this release. */\n  releaseAssets: ReleaseAssetConnection;\n  /** The repository that the release belongs to. */\n  repository: Repository;\n  /** The HTTP path for this issue */\n  resourcePath: Scalars['URI'];\n  /** A description of the release, rendered to HTML without any links in it. */\n  shortDescriptionHTML?: Maybe<Scalars['HTML']>;\n  /** The Git tag the release points to */\n  tag?: Maybe<Ref>;\n  /** The tag commit for this release. */\n  tagCommit?: Maybe<Commit>;\n  /** The name of the release's Git tag */\n  tagName: Scalars['String'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this issue */\n  url: Scalars['URI'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n};\n\n\n/** A release contains the content for a release. */\nexport type ReleaseMentionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A release contains the content for a release. */\nexport type ReleaseReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** A release contains the content for a release. */\nexport type ReleaseReleaseAssetsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A release contains the content for a release. */\nexport type ReleaseShortDescriptionHtmlArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n/** A release asset contains the content for a release asset. */\nexport type ReleaseAsset = Node & {\n  __typename?: 'ReleaseAsset';\n  /** The asset's content-type */\n  contentType: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The number of times this asset was downloaded */\n  downloadCount: Scalars['Int'];\n  /** Identifies the URL where you can download the release asset via the browser. */\n  downloadUrl: Scalars['URI'];\n  id: Scalars['ID'];\n  /** Identifies the title of the release asset. */\n  name: Scalars['String'];\n  /** Release that the asset is associated with */\n  release?: Maybe<Release>;\n  /** The size (in bytes) of the asset */\n  size: Scalars['Int'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The user that performed the upload */\n  uploadedBy: User;\n  /** Identifies the URL of the release asset. */\n  url: Scalars['URI'];\n};\n\n/** The connection type for ReleaseAsset. */\nexport type ReleaseAssetConnection = {\n  __typename?: 'ReleaseAssetConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReleaseAssetEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ReleaseAsset>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ReleaseAssetEdge = {\n  __typename?: 'ReleaseAssetEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ReleaseAsset>;\n};\n\n/** The connection type for Release. */\nexport type ReleaseConnection = {\n  __typename?: 'ReleaseConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReleaseEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Release>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ReleaseEdge = {\n  __typename?: 'ReleaseEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Release>;\n};\n\n/** Ways in which lists of releases can be ordered upon return. */\nexport type ReleaseOrder = {\n  /** The direction in which to order releases by the specified field. */\n  direction: OrderDirection;\n  /** The field in which to order releases by. */\n  field: ReleaseOrderField;\n};\n\n/** Properties by which release connections can be ordered. */\nexport enum ReleaseOrderField {\n  /** Order releases by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order releases alphabetically by name */\n  Name = 'NAME'\n}\n\n/** Autogenerated input type of RemoveAssigneesFromAssignable */\nexport type RemoveAssigneesFromAssignableInput = {\n  /** The id of the assignable object to remove assignees from. */\n  assignableId: Scalars['ID'];\n  /** The id of users to remove as assignees. */\n  assigneeIds: Array<Scalars['ID']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of RemoveAssigneesFromAssignable */\nexport type RemoveAssigneesFromAssignablePayload = {\n  __typename?: 'RemoveAssigneesFromAssignablePayload';\n  /** The item that was unassigned. */\n  assignable?: Maybe<Assignable>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseAdmin */\nexport type RemoveEnterpriseAdminInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Enterprise ID from which to remove the administrator. */\n  enterpriseId: Scalars['ID'];\n  /** The login of the user to remove as an administrator. */\n  login: Scalars['String'];\n};\n\n/** Autogenerated return type of RemoveEnterpriseAdmin */\nexport type RemoveEnterpriseAdminPayload = {\n  __typename?: 'RemoveEnterpriseAdminPayload';\n  /** The user who was removed as an administrator. */\n  admin?: Maybe<User>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated enterprise. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of removing an administrator. */\n  message?: Maybe<Scalars['String']>;\n  /** The viewer performing the mutation. */\n  viewer?: Maybe<User>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseIdentityProvider */\nexport type RemoveEnterpriseIdentityProviderInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise from which to remove the identity provider. */\n  enterpriseId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RemoveEnterpriseIdentityProvider */\nexport type RemoveEnterpriseIdentityProviderPayload = {\n  __typename?: 'RemoveEnterpriseIdentityProviderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The identity provider that was removed from the enterprise. */\n  identityProvider?: Maybe<EnterpriseIdentityProvider>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseMember */\nexport type RemoveEnterpriseMemberInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise from which the user should be removed. */\n  enterpriseId: Scalars['ID'];\n  /** The ID of the user to remove from the enterprise. */\n  userId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RemoveEnterpriseMember */\nexport type RemoveEnterpriseMemberPayload = {\n  __typename?: 'RemoveEnterpriseMemberPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated enterprise. */\n  enterprise?: Maybe<Enterprise>;\n  /** The user that was removed from the enterprise. */\n  user?: Maybe<User>;\n  /** The viewer performing the mutation. */\n  viewer?: Maybe<User>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseOrganization */\nexport type RemoveEnterpriseOrganizationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise from which the organization should be removed. */\n  enterpriseId: Scalars['ID'];\n  /** The ID of the organization to remove from the enterprise. */\n  organizationId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RemoveEnterpriseOrganization */\nexport type RemoveEnterpriseOrganizationPayload = {\n  __typename?: 'RemoveEnterpriseOrganizationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated enterprise. */\n  enterprise?: Maybe<Enterprise>;\n  /** The organization that was removed from the enterprise. */\n  organization?: Maybe<Organization>;\n  /** The viewer performing the mutation. */\n  viewer?: Maybe<User>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseSupportEntitlement */\nexport type RemoveEnterpriseSupportEntitlementInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Enterprise which the admin belongs to. */\n  enterpriseId: Scalars['ID'];\n  /** The login of a member who will lose the support entitlement. */\n  login: Scalars['String'];\n};\n\n/** Autogenerated return type of RemoveEnterpriseSupportEntitlement */\nexport type RemoveEnterpriseSupportEntitlementPayload = {\n  __typename?: 'RemoveEnterpriseSupportEntitlementPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** A message confirming the result of removing the support entitlement. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of RemoveLabelsFromLabelable */\nexport type RemoveLabelsFromLabelableInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ids of labels to remove. */\n  labelIds: Array<Scalars['ID']>;\n  /** The id of the Labelable to remove labels from. */\n  labelableId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RemoveLabelsFromLabelable */\nexport type RemoveLabelsFromLabelablePayload = {\n  __typename?: 'RemoveLabelsFromLabelablePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The Labelable the labels were removed from. */\n  labelable?: Maybe<Labelable>;\n};\n\n/** Autogenerated input type of RemoveOutsideCollaborator */\nexport type RemoveOutsideCollaboratorInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the organization to remove the outside collaborator from. */\n  organizationId: Scalars['ID'];\n  /** The ID of the outside collaborator to remove. */\n  userId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RemoveOutsideCollaborator */\nexport type RemoveOutsideCollaboratorPayload = {\n  __typename?: 'RemoveOutsideCollaboratorPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The user that was removed as an outside collaborator. */\n  removedUser?: Maybe<User>;\n};\n\n/** Autogenerated input type of RemoveReaction */\nexport type RemoveReactionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The name of the emoji reaction to remove. */\n  content: ReactionContent;\n  /** The Node ID of the subject to modify. */\n  subjectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RemoveReaction */\nexport type RemoveReactionPayload = {\n  __typename?: 'RemoveReactionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The reaction object. */\n  reaction?: Maybe<Reaction>;\n  /** The reaction groups for the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** The reactable subject. */\n  subject?: Maybe<Reactable>;\n};\n\n/** Autogenerated input type of RemoveStar */\nexport type RemoveStarInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Starrable ID to unstar. */\n  starrableId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RemoveStar */\nexport type RemoveStarPayload = {\n  __typename?: 'RemoveStarPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The starrable. */\n  starrable?: Maybe<Starrable>;\n};\n\n/** Autogenerated input type of RemoveUpvote */\nexport type RemoveUpvoteInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the discussion or comment to remove upvote. */\n  subjectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RemoveUpvote */\nexport type RemoveUpvotePayload = {\n  __typename?: 'RemoveUpvotePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The votable subject. */\n  subject?: Maybe<Votable>;\n};\n\n/** Represents a 'removed_from_merge_queue' event on a given pull request. */\nexport type RemovedFromMergeQueueEvent = Node & {\n  __typename?: 'RemovedFromMergeQueueEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the before commit SHA for the 'removed_from_merge_queue' event. */\n  beforeCommit?: Maybe<Commit>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The user who removed this Pull Request from the merge queue */\n  enqueuer?: Maybe<User>;\n  id: Scalars['ID'];\n  /** The merge queue where this pull request was removed from. */\n  mergeQueue?: Maybe<MergeQueue>;\n  /** PullRequest referenced by event. */\n  pullRequest?: Maybe<PullRequest>;\n  /** The reason this pull request was removed from the queue. */\n  reason?: Maybe<Scalars['String']>;\n};\n\n/** Represents a 'removed_from_project' event on a given issue or pull request. */\nexport type RemovedFromProjectEvent = Node & {\n  __typename?: 'RemovedFromProjectEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** Project referenced by event. */\n  project?: Maybe<Project>;\n  /** Column name referenced by this project event. */\n  projectColumnName: Scalars['String'];\n};\n\n/** Represents a 'renamed' event on a given issue or pull request */\nexport type RenamedTitleEvent = Node & {\n  __typename?: 'RenamedTitleEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the current title of the issue or pull request. */\n  currentTitle: Scalars['String'];\n  id: Scalars['ID'];\n  /** Identifies the previous title of the issue or pull request. */\n  previousTitle: Scalars['String'];\n  /** Subject that was renamed. */\n  subject: RenamedTitleSubject;\n};\n\n/** An object which has a renamable title */\nexport type RenamedTitleSubject = Issue | PullRequest;\n\n/** Autogenerated input type of ReopenDiscussion */\nexport type ReopenDiscussionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the discussion to be reopened. */\n  discussionId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ReopenDiscussion */\nexport type ReopenDiscussionPayload = {\n  __typename?: 'ReopenDiscussionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The discussion that was reopened. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of ReopenIssue */\nexport type ReopenIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the issue to be opened. */\n  issueId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ReopenIssue */\nexport type ReopenIssuePayload = {\n  __typename?: 'ReopenIssuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The issue that was opened. */\n  issue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of ReopenPullRequest */\nexport type ReopenPullRequestInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the pull request to be reopened. */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ReopenPullRequest */\nexport type ReopenPullRequestPayload = {\n  __typename?: 'ReopenPullRequestPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The pull request that was reopened. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'reopened' event on any `Closable`. */\nexport type ReopenedEvent = Node & {\n  __typename?: 'ReopenedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Object that was reopened. */\n  closable: Closable;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** The reason the issue state was changed to open. */\n  stateReason?: Maybe<IssueStateReason>;\n};\n\n/** Audit log entry for a repo.access event. */\nexport type RepoAccessAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoAccessAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n  /** The visibility of the repository */\n  visibility?: Maybe<RepoAccessAuditEntryVisibility>;\n};\n\n/** The privacy of a repository */\nexport enum RepoAccessAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = 'INTERNAL',\n  /** The repository is visible only to those with explicit access. */\n  Private = 'PRIVATE',\n  /** The repository is visible to everyone. */\n  Public = 'PUBLIC'\n}\n\n/** Audit log entry for a repo.add_member event. */\nexport type RepoAddMemberAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoAddMemberAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n  /** The visibility of the repository */\n  visibility?: Maybe<RepoAddMemberAuditEntryVisibility>;\n};\n\n/** The privacy of a repository */\nexport enum RepoAddMemberAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = 'INTERNAL',\n  /** The repository is visible only to those with explicit access. */\n  Private = 'PRIVATE',\n  /** The repository is visible to everyone. */\n  Public = 'PUBLIC'\n}\n\n/** Audit log entry for a repo.add_topic event. */\nexport type RepoAddTopicAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & TopicAuditEntryData & {\n  __typename?: 'RepoAddTopicAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The name of the topic added to the repository */\n  topic?: Maybe<Topic>;\n  /** The name of the topic added to the repository */\n  topicName?: Maybe<Scalars['String']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.archived event. */\nexport type RepoArchivedAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoArchivedAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n  /** The visibility of the repository */\n  visibility?: Maybe<RepoArchivedAuditEntryVisibility>;\n};\n\n/** The privacy of a repository */\nexport enum RepoArchivedAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = 'INTERNAL',\n  /** The repository is visible only to those with explicit access. */\n  Private = 'PRIVATE',\n  /** The repository is visible to everyone. */\n  Public = 'PUBLIC'\n}\n\n/** Audit log entry for a repo.change_merge_setting event. */\nexport type RepoChangeMergeSettingAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoChangeMergeSettingAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** Whether the change was to enable (true) or disable (false) the merge type */\n  isEnabled?: Maybe<Scalars['Boolean']>;\n  /** The merge method affected by the change */\n  mergeType?: Maybe<RepoChangeMergeSettingAuditEntryMergeType>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The merge options available for pull requests to this repository. */\nexport enum RepoChangeMergeSettingAuditEntryMergeType {\n  /** The pull request is added to the base branch in a merge commit. */\n  Merge = 'MERGE',\n  /** Commits from the pull request are added onto the base branch individually without a merge commit. */\n  Rebase = 'REBASE',\n  /** The pull request's commits are squashed into a single commit before they are merged to the base branch. */\n  Squash = 'SQUASH'\n}\n\n/** Audit log entry for a repo.config.disable_anonymous_git_access event. */\nexport type RepoConfigDisableAnonymousGitAccessAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoConfigDisableAnonymousGitAccessAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.config.disable_collaborators_only event. */\nexport type RepoConfigDisableCollaboratorsOnlyAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoConfigDisableCollaboratorsOnlyAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.config.disable_contributors_only event. */\nexport type RepoConfigDisableContributorsOnlyAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoConfigDisableContributorsOnlyAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.config.disable_sockpuppet_disallowed event. */\nexport type RepoConfigDisableSockpuppetDisallowedAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoConfigDisableSockpuppetDisallowedAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.config.enable_anonymous_git_access event. */\nexport type RepoConfigEnableAnonymousGitAccessAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoConfigEnableAnonymousGitAccessAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.config.enable_collaborators_only event. */\nexport type RepoConfigEnableCollaboratorsOnlyAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoConfigEnableCollaboratorsOnlyAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.config.enable_contributors_only event. */\nexport type RepoConfigEnableContributorsOnlyAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoConfigEnableContributorsOnlyAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.config.enable_sockpuppet_disallowed event. */\nexport type RepoConfigEnableSockpuppetDisallowedAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoConfigEnableSockpuppetDisallowedAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.config.lock_anonymous_git_access event. */\nexport type RepoConfigLockAnonymousGitAccessAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoConfigLockAnonymousGitAccessAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.config.unlock_anonymous_git_access event. */\nexport type RepoConfigUnlockAnonymousGitAccessAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoConfigUnlockAnonymousGitAccessAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repo.create event. */\nexport type RepoCreateAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoCreateAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The name of the parent repository for this forked repository. */\n  forkParentName?: Maybe<Scalars['String']>;\n  /** The name of the root repository for this network. */\n  forkSourceName?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n  /** The visibility of the repository */\n  visibility?: Maybe<RepoCreateAuditEntryVisibility>;\n};\n\n/** The privacy of a repository */\nexport enum RepoCreateAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = 'INTERNAL',\n  /** The repository is visible only to those with explicit access. */\n  Private = 'PRIVATE',\n  /** The repository is visible to everyone. */\n  Public = 'PUBLIC'\n}\n\n/** Audit log entry for a repo.destroy event. */\nexport type RepoDestroyAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoDestroyAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n  /** The visibility of the repository */\n  visibility?: Maybe<RepoDestroyAuditEntryVisibility>;\n};\n\n/** The privacy of a repository */\nexport enum RepoDestroyAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = 'INTERNAL',\n  /** The repository is visible only to those with explicit access. */\n  Private = 'PRIVATE',\n  /** The repository is visible to everyone. */\n  Public = 'PUBLIC'\n}\n\n/** Audit log entry for a repo.remove_member event. */\nexport type RepoRemoveMemberAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & {\n  __typename?: 'RepoRemoveMemberAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n  /** The visibility of the repository */\n  visibility?: Maybe<RepoRemoveMemberAuditEntryVisibility>;\n};\n\n/** The privacy of a repository */\nexport enum RepoRemoveMemberAuditEntryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = 'INTERNAL',\n  /** The repository is visible only to those with explicit access. */\n  Private = 'PRIVATE',\n  /** The repository is visible to everyone. */\n  Public = 'PUBLIC'\n}\n\n/** Audit log entry for a repo.remove_topic event. */\nexport type RepoRemoveTopicAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & TopicAuditEntryData & {\n  __typename?: 'RepoRemoveTopicAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The name of the topic added to the repository */\n  topic?: Maybe<Topic>;\n  /** The name of the topic added to the repository */\n  topicName?: Maybe<Scalars['String']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The reasons a piece of content can be reported or minimized. */\nexport enum ReportedContentClassifiers {\n  /** An abusive or harassing piece of content */\n  Abuse = 'ABUSE',\n  /** A duplicated piece of content */\n  Duplicate = 'DUPLICATE',\n  /** An irrelevant piece of content */\n  OffTopic = 'OFF_TOPIC',\n  /** An outdated piece of content */\n  Outdated = 'OUTDATED',\n  /** The content has been resolved */\n  Resolved = 'RESOLVED',\n  /** A spammy piece of content */\n  Spam = 'SPAM'\n}\n\n/** A repository contains the content for a project. */\nexport type Repository = Node & PackageOwner & ProjectOwner & ProjectV2Recent & RepositoryInfo & Starrable & Subscribable & UniformResourceLocatable & {\n  __typename?: 'Repository';\n  /**\n   * Whether or not a pull request head branch that is behind its base branch can\n   * always be updated even if it is not required to be up to date before merging.\n   */\n  allowUpdateBranch: Scalars['Boolean'];\n  /** Identifies the date and time when the repository was archived. */\n  archivedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of users that can be assigned to issues in this repository. */\n  assignableUsers: UserConnection;\n  /** Whether or not Auto-merge can be enabled on pull requests in this repository. */\n  autoMergeAllowed: Scalars['Boolean'];\n  /** A list of branch protection rules for this repository. */\n  branchProtectionRules: BranchProtectionRuleConnection;\n  /** Returns the code of conduct for this repository */\n  codeOfConduct?: Maybe<CodeOfConduct>;\n  /** Information extracted from the repository's `CODEOWNERS` file. */\n  codeowners?: Maybe<RepositoryCodeowners>;\n  /** A list of collaborators associated with the repository. */\n  collaborators?: Maybe<RepositoryCollaboratorConnection>;\n  /** A list of commit comments associated with the repository. */\n  commitComments: CommitCommentConnection;\n  /** Returns a list of contact links associated to the repository */\n  contactLinks?: Maybe<Array<RepositoryContactLink>>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The Ref associated with the repository's default branch. */\n  defaultBranchRef?: Maybe<Ref>;\n  /** Whether or not branches are automatically deleted when merged in this repository. */\n  deleteBranchOnMerge: Scalars['Boolean'];\n  /** A list of dependency manifests contained in the repository */\n  dependencyGraphManifests?: Maybe<DependencyGraphManifestConnection>;\n  /** A list of deploy keys that are on this repository. */\n  deployKeys: DeployKeyConnection;\n  /** Deployments associated with the repository */\n  deployments: DeploymentConnection;\n  /** The description of the repository. */\n  description?: Maybe<Scalars['String']>;\n  /** The description of the repository rendered to HTML. */\n  descriptionHTML: Scalars['HTML'];\n  /** Returns a single discussion from the current repository by number. */\n  discussion?: Maybe<Discussion>;\n  /** A list of discussion categories that are available in the repository. */\n  discussionCategories: DiscussionCategoryConnection;\n  /** A discussion category by slug. */\n  discussionCategory?: Maybe<DiscussionCategory>;\n  /** A list of discussions that have been opened in the repository. */\n  discussions: DiscussionConnection;\n  /** The number of kilobytes this repository occupies on disk. */\n  diskUsage?: Maybe<Scalars['Int']>;\n  /** Returns a single active environment from the current repository by name. */\n  environment?: Maybe<Environment>;\n  /** A list of environments that are in this repository. */\n  environments: EnvironmentConnection;\n  /** Returns how many forks there are of this repository in the whole network. */\n  forkCount: Scalars['Int'];\n  /** Whether this repository allows forks. */\n  forkingAllowed: Scalars['Boolean'];\n  /** A list of direct forked repositories. */\n  forks: RepositoryConnection;\n  /** The funding links for this repository */\n  fundingLinks: Array<FundingLink>;\n  /** Indicates if the repository has the Discussions feature enabled. */\n  hasDiscussionsEnabled: Scalars['Boolean'];\n  /** Indicates if the repository has issues feature enabled. */\n  hasIssuesEnabled: Scalars['Boolean'];\n  /** Indicates if the repository has the Projects feature enabled. */\n  hasProjectsEnabled: Scalars['Boolean'];\n  /** Whether vulnerability alerts are enabled for the repository. */\n  hasVulnerabilityAlertsEnabled: Scalars['Boolean'];\n  /** Indicates if the repository has wiki feature enabled. */\n  hasWikiEnabled: Scalars['Boolean'];\n  /** The repository's URL. */\n  homepageUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The interaction ability settings for this repository. */\n  interactionAbility?: Maybe<RepositoryInteractionAbility>;\n  /** Indicates if the repository is unmaintained. */\n  isArchived: Scalars['Boolean'];\n  /** Returns true if blank issue creation is allowed */\n  isBlankIssuesEnabled: Scalars['Boolean'];\n  /** Returns whether or not this repository disabled. */\n  isDisabled: Scalars['Boolean'];\n  /** Returns whether or not this repository is empty. */\n  isEmpty: Scalars['Boolean'];\n  /** Identifies if the repository is a fork. */\n  isFork: Scalars['Boolean'];\n  /** Indicates if a repository is either owned by an organization, or is a private fork of an organization repository. */\n  isInOrganization: Scalars['Boolean'];\n  /** Indicates if the repository has been locked or not. */\n  isLocked: Scalars['Boolean'];\n  /** Identifies if the repository is a mirror. */\n  isMirror: Scalars['Boolean'];\n  /** Identifies if the repository is private or internal. */\n  isPrivate: Scalars['Boolean'];\n  /** Returns true if this repository has a security policy */\n  isSecurityPolicyEnabled?: Maybe<Scalars['Boolean']>;\n  /** Identifies if the repository is a template that can be used to generate new repositories. */\n  isTemplate: Scalars['Boolean'];\n  /** Is this repository a user configuration repository? */\n  isUserConfigurationRepository: Scalars['Boolean'];\n  /** Returns a single issue from the current repository by number. */\n  issue?: Maybe<Issue>;\n  /** Returns a single issue-like object from the current repository by number. */\n  issueOrPullRequest?: Maybe<IssueOrPullRequest>;\n  /** Returns a list of issue templates associated to the repository */\n  issueTemplates?: Maybe<Array<IssueTemplate>>;\n  /** A list of issues that have been opened in the repository. */\n  issues: IssueConnection;\n  /** Returns a single label by name */\n  label?: Maybe<Label>;\n  /** A list of labels associated with the repository. */\n  labels?: Maybe<LabelConnection>;\n  /** A list containing a breakdown of the language composition of the repository. */\n  languages?: Maybe<LanguageConnection>;\n  /** Get the latest release for the repository if one exists. */\n  latestRelease?: Maybe<Release>;\n  /** The license associated with the repository */\n  licenseInfo?: Maybe<License>;\n  /** The reason the repository has been locked. */\n  lockReason?: Maybe<RepositoryLockReason>;\n  /** A list of Users that can be mentioned in the context of the repository. */\n  mentionableUsers: UserConnection;\n  /** Whether or not PRs are merged with a merge commit on this repository. */\n  mergeCommitAllowed: Scalars['Boolean'];\n  /** How the default commit message will be generated when merging a pull request. */\n  mergeCommitMessage: MergeCommitMessage;\n  /** How the default commit title will be generated when merging a pull request. */\n  mergeCommitTitle: MergeCommitTitle;\n  /** The merge queue for a specified branch, otherwise the default branch if not provided. */\n  mergeQueue?: Maybe<MergeQueue>;\n  /** Returns a single milestone from the current repository by number. */\n  milestone?: Maybe<Milestone>;\n  /** A list of milestones associated with the repository. */\n  milestones?: Maybe<MilestoneConnection>;\n  /** The repository's original mirror URL. */\n  mirrorUrl?: Maybe<Scalars['URI']>;\n  /** The name of the repository. */\n  name: Scalars['String'];\n  /** The repository's name with owner. */\n  nameWithOwner: Scalars['String'];\n  /** A Git object in the repository */\n  object?: Maybe<GitObject>;\n  /** The image used to represent this repository in Open Graph data. */\n  openGraphImageUrl: Scalars['URI'];\n  /** The User owner of the repository. */\n  owner: RepositoryOwner;\n  /** A list of packages under the owner. */\n  packages: PackageConnection;\n  /** The repository parent, if this is a fork. */\n  parent?: Maybe<Repository>;\n  /** A list of discussions that have been pinned in this repository. */\n  pinnedDiscussions: PinnedDiscussionConnection;\n  /** A list of pinned issues for this repository. */\n  pinnedIssues?: Maybe<PinnedIssueConnection>;\n  /** The primary language of the repository's code. */\n  primaryLanguage?: Maybe<Language>;\n  /** Find project by number. */\n  project?: Maybe<Project>;\n  /** Finds and returns the Project according to the provided Project number. */\n  projectV2?: Maybe<ProjectV2>;\n  /** A list of projects under the owner. */\n  projects: ProjectConnection;\n  /** The HTTP path listing the repository's projects */\n  projectsResourcePath: Scalars['URI'];\n  /** The HTTP URL listing the repository's projects */\n  projectsUrl: Scalars['URI'];\n  /** List of projects linked to this repository. */\n  projectsV2: ProjectV2Connection;\n  /** Returns a single pull request from the current repository by number. */\n  pullRequest?: Maybe<PullRequest>;\n  /** Returns a list of pull request templates associated to the repository */\n  pullRequestTemplates?: Maybe<Array<PullRequestTemplate>>;\n  /** A list of pull requests that have been opened in the repository. */\n  pullRequests: PullRequestConnection;\n  /** Identifies the date and time when the repository was last pushed to. */\n  pushedAt?: Maybe<Scalars['DateTime']>;\n  /** Whether or not rebase-merging is enabled on this repository. */\n  rebaseMergeAllowed: Scalars['Boolean'];\n  /** Recent projects that this user has modified in the context of the owner. */\n  recentProjects: ProjectV2Connection;\n  /** Fetch a given ref from the repository */\n  ref?: Maybe<Ref>;\n  /** Fetch a list of refs from the repository */\n  refs?: Maybe<RefConnection>;\n  /** Lookup a single release given various criteria. */\n  release?: Maybe<Release>;\n  /** List of releases which are dependent on this repository. */\n  releases: ReleaseConnection;\n  /** A list of applied repository-topic associations for this repository. */\n  repositoryTopics: RepositoryTopicConnection;\n  /** The HTTP path for this repository */\n  resourcePath: Scalars['URI'];\n  /** Returns a single ruleset from the current repository by ID. */\n  ruleset?: Maybe<RepositoryRuleset>;\n  /** A list of rulesets for this repository. */\n  rulesets?: Maybe<RepositoryRulesetConnection>;\n  /** The security policy URL. */\n  securityPolicyUrl?: Maybe<Scalars['URI']>;\n  /** A description of the repository, rendered to HTML without any links in it. */\n  shortDescriptionHTML: Scalars['HTML'];\n  /** Whether or not squash-merging is enabled on this repository. */\n  squashMergeAllowed: Scalars['Boolean'];\n  /** How the default commit message will be generated when squash merging a pull request. */\n  squashMergeCommitMessage: SquashMergeCommitMessage;\n  /** How the default commit title will be generated when squash merging a pull request. */\n  squashMergeCommitTitle: SquashMergeCommitTitle;\n  /**\n   * Whether a squash merge commit can use the pull request title as default.\n   * @deprecated `squashPrTitleUsedAsDefault` will be removed. Use `Repository.squashMergeCommitTitle` instead. Removal on 2023-04-01 UTC.\n   */\n  squashPrTitleUsedAsDefault: Scalars['Boolean'];\n  /** The SSH URL to clone this repository */\n  sshUrl: Scalars['GitSSHRemote'];\n  /** Returns a count of how many stargazers there are on this object */\n  stargazerCount: Scalars['Int'];\n  /** A list of users who have starred this starrable. */\n  stargazers: StargazerConnection;\n  /**\n   * Returns a list of all submodules in this repository parsed from the\n   * .gitmodules file as of the default branch's HEAD commit.\n   */\n  submodules: SubmoduleConnection;\n  /** Temporary authentication token for cloning this repository. */\n  tempCloneToken?: Maybe<Scalars['String']>;\n  /** The repository from which this repository was generated, if any. */\n  templateRepository?: Maybe<Repository>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this repository */\n  url: Scalars['URI'];\n  /** Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar. */\n  usesCustomOpenGraphImage: Scalars['Boolean'];\n  /** Indicates whether the viewer has admin permissions on this repository. */\n  viewerCanAdminister: Scalars['Boolean'];\n  /** Can the current viewer create new projects on this owner. */\n  viewerCanCreateProjects: Scalars['Boolean'];\n  /** Check if the viewer is able to change their subscription status for the repository. */\n  viewerCanSubscribe: Scalars['Boolean'];\n  /** Indicates whether the viewer can update the topics of this repository. */\n  viewerCanUpdateTopics: Scalars['Boolean'];\n  /** The last commit email for the viewer. */\n  viewerDefaultCommitEmail?: Maybe<Scalars['String']>;\n  /** The last used merge method by the viewer or the default for the repository. */\n  viewerDefaultMergeMethod: PullRequestMergeMethod;\n  /** Returns a boolean indicating whether the viewing user has starred this starrable. */\n  viewerHasStarred: Scalars['Boolean'];\n  /** The users permission level on the repository. Will return null if authenticated as an GitHub App. */\n  viewerPermission?: Maybe<RepositoryPermission>;\n  /** A list of emails this viewer can commit with. */\n  viewerPossibleCommitEmails?: Maybe<Array<Scalars['String']>>;\n  /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n  viewerSubscription?: Maybe<SubscriptionState>;\n  /** Indicates the repository's visibility level. */\n  visibility: RepositoryVisibility;\n  /** Returns a single vulnerability alert from the current repository by number. */\n  vulnerabilityAlert?: Maybe<RepositoryVulnerabilityAlert>;\n  /** A list of vulnerability alerts that are on this repository. */\n  vulnerabilityAlerts?: Maybe<RepositoryVulnerabilityAlertConnection>;\n  /** A list of users watching the repository. */\n  watchers: UserConnection;\n  /** Whether contributors are required to sign off on web-based commits in this repository. */\n  webCommitSignoffRequired: Scalars['Boolean'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryAssignableUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryBranchProtectionRulesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryCodeownersArgs = {\n  refName?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryCollaboratorsArgs = {\n  affiliation?: InputMaybe<CollaboratorAffiliation>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  login?: InputMaybe<Scalars['String']>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryCommitCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryDependencyGraphManifestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dependenciesAfter?: InputMaybe<Scalars['String']>;\n  dependenciesFirst?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  withDependencies?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryDeployKeysArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryDeploymentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  environments?: InputMaybe<Array<Scalars['String']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<DeploymentOrder>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryDiscussionArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryDiscussionCategoriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filterByAssignable?: InputMaybe<Scalars['Boolean']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryDiscussionCategoryArgs = {\n  slug: Scalars['String'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryDiscussionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  categoryId?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<DiscussionOrder>;\n  states?: InputMaybe<Array<DiscussionState>>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryEnvironmentArgs = {\n  name: Scalars['String'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryEnvironmentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryForksArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  isLocked?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryIssueArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryIssueOrPullRequestArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryIssuesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filterBy?: InputMaybe<IssueFilters>;\n  first?: InputMaybe<Scalars['Int']>;\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<IssueState>>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryLabelArgs = {\n  name: Scalars['String'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryLabelsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LabelOrder>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryLanguagesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LanguageOrder>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryMentionableUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryMergeQueueArgs = {\n  branch?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryMilestoneArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryMilestonesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<MilestoneOrder>;\n  query?: InputMaybe<Scalars['String']>;\n  states?: InputMaybe<Array<MilestoneState>>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryObjectArgs = {\n  expression?: InputMaybe<Scalars['String']>;\n  oid?: InputMaybe<Scalars['GitObjectID']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryPackagesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  names?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  orderBy?: InputMaybe<PackageOrder>;\n  packageType?: InputMaybe<PackageType>;\n  repositoryId?: InputMaybe<Scalars['ID']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryPinnedDiscussionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryPinnedIssuesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryProjectArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryProjectV2Args = {\n  number: Scalars['Int'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryProjectsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectOrder>;\n  search?: InputMaybe<Scalars['String']>;\n  states?: InputMaybe<Array<ProjectState>>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryProjectsV2Args = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryPullRequestArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryPullRequestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  baseRefName?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  headRefName?: InputMaybe<Scalars['String']>;\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryRecentProjectsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryRefArgs = {\n  qualifiedName: Scalars['String'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryRefsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  direction?: InputMaybe<OrderDirection>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RefOrder>;\n  query?: InputMaybe<Scalars['String']>;\n  refPrefix: Scalars['String'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryReleaseArgs = {\n  tagName: Scalars['String'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryReleasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReleaseOrder>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryRepositoryTopicsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryRulesetArgs = {\n  databaseId: Scalars['Int'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryRulesetsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includeParents?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryShortDescriptionHtmlArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryStargazersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<StarOrder>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositorySubmodulesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryVulnerabilityAlertArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryVulnerabilityAlertsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dependencyScopes?: InputMaybe<Array<RepositoryVulnerabilityAlertDependencyScope>>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  states?: InputMaybe<Array<RepositoryVulnerabilityAlertState>>;\n};\n\n\n/** A repository contains the content for a project. */\nexport type RepositoryWatchersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The affiliation of a user to a repository */\nexport enum RepositoryAffiliation {\n  /** Repositories that the user has been added to as a collaborator. */\n  Collaborator = 'COLLABORATOR',\n  /**\n   * Repositories that the user has access to through being a member of an\n   * organization. This includes every repository on every team that the user is on.\n   */\n  OrganizationMember = 'ORGANIZATION_MEMBER',\n  /** Repositories that are owned by the authenticated user. */\n  Owner = 'OWNER'\n}\n\n/** Metadata for an audit entry with action repo.* */\nexport type RepositoryAuditEntryData = {\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Information extracted from a repository's `CODEOWNERS` file. */\nexport type RepositoryCodeowners = {\n  __typename?: 'RepositoryCodeowners';\n  /** Any problems that were encountered while parsing the `CODEOWNERS` file. */\n  errors: Array<RepositoryCodeownersError>;\n};\n\n/** An error in a `CODEOWNERS` file. */\nexport type RepositoryCodeownersError = {\n  __typename?: 'RepositoryCodeownersError';\n  /** The column number where the error occurs. */\n  column: Scalars['Int'];\n  /** A short string describing the type of error. */\n  kind: Scalars['String'];\n  /** The line number where the error occurs. */\n  line: Scalars['Int'];\n  /** A complete description of the error, combining information from other fields. */\n  message: Scalars['String'];\n  /** The path to the file when the error occurs. */\n  path: Scalars['String'];\n  /** The content of the line where the error occurs. */\n  source: Scalars['String'];\n  /** A suggestion of how to fix the error. */\n  suggestion?: Maybe<Scalars['String']>;\n};\n\n/** The connection type for User. */\nexport type RepositoryCollaboratorConnection = {\n  __typename?: 'RepositoryCollaboratorConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryCollaboratorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents a user who is a collaborator of a repository. */\nexport type RepositoryCollaboratorEdge = {\n  __typename?: 'RepositoryCollaboratorEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  node: User;\n  /** The permission the user has on the repository. */\n  permission: RepositoryPermission;\n  /** A list of sources for the user's access to the repository. */\n  permissionSources?: Maybe<Array<PermissionSource>>;\n};\n\n/** A list of repositories owned by the subject. */\nexport type RepositoryConnection = {\n  __typename?: 'RepositoryConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Repository>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n  /** The total size in kilobytes of all repositories in the connection. */\n  totalDiskUsage: Scalars['Int'];\n};\n\n/** A repository contact link. */\nexport type RepositoryContactLink = {\n  __typename?: 'RepositoryContactLink';\n  /** The contact link purpose. */\n  about: Scalars['String'];\n  /** The contact link name. */\n  name: Scalars['String'];\n  /** The contact link URL. */\n  url: Scalars['URI'];\n};\n\n/** The reason a repository is listed as 'contributed'. */\nexport enum RepositoryContributionType {\n  /** Created a commit */\n  Commit = 'COMMIT',\n  /** Created an issue */\n  Issue = 'ISSUE',\n  /** Created a pull request */\n  PullRequest = 'PULL_REQUEST',\n  /** Reviewed a pull request */\n  PullRequestReview = 'PULL_REQUEST_REVIEW',\n  /** Created the repository */\n  Repository = 'REPOSITORY'\n}\n\n/** Represents an author of discussions in repositories. */\nexport type RepositoryDiscussionAuthor = {\n  /** Discussions this user has started. */\n  repositoryDiscussions: DiscussionConnection;\n};\n\n\n/** Represents an author of discussions in repositories. */\nexport type RepositoryDiscussionAuthorRepositoryDiscussionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  answered?: InputMaybe<Scalars['Boolean']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<DiscussionOrder>;\n  repositoryId?: InputMaybe<Scalars['ID']>;\n  states?: InputMaybe<Array<DiscussionState>>;\n};\n\n/** Represents an author of discussion comments in repositories. */\nexport type RepositoryDiscussionCommentAuthor = {\n  /** Discussion comments this user has authored. */\n  repositoryDiscussionComments: DiscussionCommentConnection;\n};\n\n\n/** Represents an author of discussion comments in repositories. */\nexport type RepositoryDiscussionCommentAuthorRepositoryDiscussionCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  onlyAnswers?: InputMaybe<Scalars['Boolean']>;\n  repositoryId?: InputMaybe<Scalars['ID']>;\n};\n\n/** An edge in a connection. */\nexport type RepositoryEdge = {\n  __typename?: 'RepositoryEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Repository>;\n};\n\n/** A subset of repository info. */\nexport type RepositoryInfo = {\n  /** Identifies the date and time when the repository was archived. */\n  archivedAt?: Maybe<Scalars['DateTime']>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The description of the repository. */\n  description?: Maybe<Scalars['String']>;\n  /** The description of the repository rendered to HTML. */\n  descriptionHTML: Scalars['HTML'];\n  /** Returns how many forks there are of this repository in the whole network. */\n  forkCount: Scalars['Int'];\n  /** Indicates if the repository has the Discussions feature enabled. */\n  hasDiscussionsEnabled: Scalars['Boolean'];\n  /** Indicates if the repository has issues feature enabled. */\n  hasIssuesEnabled: Scalars['Boolean'];\n  /** Indicates if the repository has the Projects feature enabled. */\n  hasProjectsEnabled: Scalars['Boolean'];\n  /** Indicates if the repository has wiki feature enabled. */\n  hasWikiEnabled: Scalars['Boolean'];\n  /** The repository's URL. */\n  homepageUrl?: Maybe<Scalars['URI']>;\n  /** Indicates if the repository is unmaintained. */\n  isArchived: Scalars['Boolean'];\n  /** Identifies if the repository is a fork. */\n  isFork: Scalars['Boolean'];\n  /** Indicates if a repository is either owned by an organization, or is a private fork of an organization repository. */\n  isInOrganization: Scalars['Boolean'];\n  /** Indicates if the repository has been locked or not. */\n  isLocked: Scalars['Boolean'];\n  /** Identifies if the repository is a mirror. */\n  isMirror: Scalars['Boolean'];\n  /** Identifies if the repository is private or internal. */\n  isPrivate: Scalars['Boolean'];\n  /** Identifies if the repository is a template that can be used to generate new repositories. */\n  isTemplate: Scalars['Boolean'];\n  /** The license associated with the repository */\n  licenseInfo?: Maybe<License>;\n  /** The reason the repository has been locked. */\n  lockReason?: Maybe<RepositoryLockReason>;\n  /** The repository's original mirror URL. */\n  mirrorUrl?: Maybe<Scalars['URI']>;\n  /** The name of the repository. */\n  name: Scalars['String'];\n  /** The repository's name with owner. */\n  nameWithOwner: Scalars['String'];\n  /** The image used to represent this repository in Open Graph data. */\n  openGraphImageUrl: Scalars['URI'];\n  /** The User owner of the repository. */\n  owner: RepositoryOwner;\n  /** Identifies the date and time when the repository was last pushed to. */\n  pushedAt?: Maybe<Scalars['DateTime']>;\n  /** The HTTP path for this repository */\n  resourcePath: Scalars['URI'];\n  /** A description of the repository, rendered to HTML without any links in it. */\n  shortDescriptionHTML: Scalars['HTML'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this repository */\n  url: Scalars['URI'];\n  /** Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar. */\n  usesCustomOpenGraphImage: Scalars['Boolean'];\n  /** Indicates the repository's visibility level. */\n  visibility: RepositoryVisibility;\n};\n\n\n/** A subset of repository info. */\nexport type RepositoryInfoShortDescriptionHtmlArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n/** Repository interaction limit that applies to this object. */\nexport type RepositoryInteractionAbility = {\n  __typename?: 'RepositoryInteractionAbility';\n  /** The time the currently active limit expires. */\n  expiresAt?: Maybe<Scalars['DateTime']>;\n  /** The current limit that is enabled on this object. */\n  limit: RepositoryInteractionLimit;\n  /** The origin of the currently active interaction limit. */\n  origin: RepositoryInteractionLimitOrigin;\n};\n\n/** A repository interaction limit. */\nexport enum RepositoryInteractionLimit {\n  /** Users that are not collaborators will not be able to interact with the repository. */\n  CollaboratorsOnly = 'COLLABORATORS_ONLY',\n  /** Users that have not previously committed to a repository’s default branch will be unable to interact with the repository. */\n  ContributorsOnly = 'CONTRIBUTORS_ONLY',\n  /** Users that have recently created their account will be unable to interact with the repository. */\n  ExistingUsers = 'EXISTING_USERS',\n  /** No interaction limits are enabled. */\n  NoLimit = 'NO_LIMIT'\n}\n\n/** The length for a repository interaction limit to be enabled for. */\nexport enum RepositoryInteractionLimitExpiry {\n  /** The interaction limit will expire after 1 day. */\n  OneDay = 'ONE_DAY',\n  /** The interaction limit will expire after 1 month. */\n  OneMonth = 'ONE_MONTH',\n  /** The interaction limit will expire after 1 week. */\n  OneWeek = 'ONE_WEEK',\n  /** The interaction limit will expire after 6 months. */\n  SixMonths = 'SIX_MONTHS',\n  /** The interaction limit will expire after 3 days. */\n  ThreeDays = 'THREE_DAYS'\n}\n\n/** Indicates where an interaction limit is configured. */\nexport enum RepositoryInteractionLimitOrigin {\n  /** A limit that is configured at the organization level. */\n  Organization = 'ORGANIZATION',\n  /** A limit that is configured at the repository level. */\n  Repository = 'REPOSITORY',\n  /** A limit that is configured at the user-wide level. */\n  User = 'USER'\n}\n\n/** An invitation for a user to be added to a repository. */\nexport type RepositoryInvitation = Node & {\n  __typename?: 'RepositoryInvitation';\n  /** The email address that received the invitation. */\n  email?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The user who received the invitation. */\n  invitee?: Maybe<User>;\n  /** The user who created the invitation. */\n  inviter: User;\n  /** The permalink for this repository invitation. */\n  permalink: Scalars['URI'];\n  /** The permission granted on this repository by this invitation. */\n  permission: RepositoryPermission;\n  /** The Repository the user is invited to. */\n  repository?: Maybe<RepositoryInfo>;\n};\n\n/** A list of repository invitations. */\nexport type RepositoryInvitationConnection = {\n  __typename?: 'RepositoryInvitationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryInvitationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryInvitation>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type RepositoryInvitationEdge = {\n  __typename?: 'RepositoryInvitationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryInvitation>;\n};\n\n/** Ordering options for repository invitation connections. */\nexport type RepositoryInvitationOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order repository invitations by. */\n  field: RepositoryInvitationOrderField;\n};\n\n/** Properties by which repository invitation connections can be ordered. */\nexport enum RepositoryInvitationOrderField {\n  /** Order repository invitations by creation time */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** The possible reasons a given repository could be in a locked state. */\nexport enum RepositoryLockReason {\n  /** The repository is locked due to a billing related reason. */\n  Billing = 'BILLING',\n  /** The repository is locked due to a migration. */\n  Migrating = 'MIGRATING',\n  /** The repository is locked due to a move. */\n  Moving = 'MOVING',\n  /** The repository is locked due to a rename. */\n  Rename = 'RENAME',\n  /** The repository is locked due to a trade controls related reason. */\n  TradeRestriction = 'TRADE_RESTRICTION'\n}\n\n/** A GitHub Enterprise Importer (GEI) repository migration. */\nexport type RepositoryMigration = Migration & Node & {\n  __typename?: 'RepositoryMigration';\n  /** The migration flag to continue on error. */\n  continueOnError: Scalars['Boolean'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['String']>;\n  /** The reason the migration failed. */\n  failureReason?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** The URL for the migration log (expires 1 day after migration completes). */\n  migrationLogUrl?: Maybe<Scalars['URI']>;\n  /** The migration source. */\n  migrationSource: MigrationSource;\n  /** The target repository name. */\n  repositoryName: Scalars['String'];\n  /** The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`. */\n  sourceUrl: Scalars['URI'];\n  /** The migration state. */\n  state: MigrationState;\n  /**\n   * The number of warnings encountered for this migration. To review the warnings,\n   * check the [Migration Log](https://docs.github.com/en/migrations/using-github-enterprise-importer/completing-your-migration-with-github-enterprise-importer/accessing-your-migration-logs-for-github-enterprise-importer).\n   */\n  warningsCount: Scalars['Int'];\n};\n\n/** The connection type for RepositoryMigration. */\nexport type RepositoryMigrationConnection = {\n  __typename?: 'RepositoryMigrationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryMigrationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryMigration>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents a repository migration. */\nexport type RepositoryMigrationEdge = {\n  __typename?: 'RepositoryMigrationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryMigration>;\n};\n\n/** Ordering options for repository migrations. */\nexport type RepositoryMigrationOrder = {\n  /** The ordering direction. */\n  direction: RepositoryMigrationOrderDirection;\n  /** The field to order repository migrations by. */\n  field: RepositoryMigrationOrderField;\n};\n\n/** Possible directions in which to order a list of repository migrations when provided an `orderBy` argument. */\nexport enum RepositoryMigrationOrderDirection {\n  /** Specifies an ascending order for a given `orderBy` argument. */\n  Asc = 'ASC',\n  /** Specifies a descending order for a given `orderBy` argument. */\n  Desc = 'DESC'\n}\n\n/** Properties by which repository migrations can be ordered. */\nexport enum RepositoryMigrationOrderField {\n  /** Order mannequins why when they were created. */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** Parameters to be used for the repository_name condition */\nexport type RepositoryNameConditionTarget = {\n  __typename?: 'RepositoryNameConditionTarget';\n  /** Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match. */\n  exclude: Array<Scalars['String']>;\n  /**\n   * Array of repository names or patterns to include. One of these patterns must\n   * match for the condition to pass. Also accepts `~ALL` to include all repositories.\n   */\n  include: Array<Scalars['String']>;\n  /** Target changes that match these patterns will be prevented except by those with bypass permissions. */\n  protected: Scalars['Boolean'];\n};\n\n/** Parameters to be used for the repository_name condition */\nexport type RepositoryNameConditionTargetInput = {\n  /** Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match. */\n  exclude: Array<Scalars['String']>;\n  /**\n   * Array of repository names or patterns to include. One of these patterns must\n   * match for the condition to pass. Also accepts `~ALL` to include all repositories.\n   */\n  include: Array<Scalars['String']>;\n  /** Target changes that match these patterns will be prevented except by those with bypass permissions. */\n  protected?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Represents a object that belongs to a repository. */\nexport type RepositoryNode = {\n  /** The repository associated with this node. */\n  repository: Repository;\n};\n\n/** Ordering options for repository connections */\nexport type RepositoryOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order repositories by. */\n  field: RepositoryOrderField;\n};\n\n/** Properties by which repository connections can be ordered. */\nexport enum RepositoryOrderField {\n  /** Order repositories by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order repositories by name */\n  Name = 'NAME',\n  /** Order repositories by push time */\n  PushedAt = 'PUSHED_AT',\n  /** Order repositories by number of stargazers */\n  Stargazers = 'STARGAZERS',\n  /** Order repositories by update time */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwner = {\n  /** A URL pointing to the owner's public avatar. */\n  avatarUrl: Scalars['URI'];\n  id: Scalars['ID'];\n  /** The username used to login. */\n  login: Scalars['String'];\n  /** A list of repositories that the user owns. */\n  repositories: RepositoryConnection;\n  /** Find Repository. */\n  repository?: Maybe<Repository>;\n  /** The HTTP URL for the owner. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for the owner. */\n  url: Scalars['URI'];\n};\n\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwnerAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwnerRepositoriesArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  isFork?: InputMaybe<Scalars['Boolean']>;\n  isLocked?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwnerRepositoryArgs = {\n  followRenames?: InputMaybe<Scalars['Boolean']>;\n  name: Scalars['String'];\n};\n\n/** The access level to a repository */\nexport enum RepositoryPermission {\n  /**\n   * Can read, clone, and push to this repository. Can also manage issues, pull\n   * requests, and repository settings, including adding collaborators\n   */\n  Admin = 'ADMIN',\n  /** Can read, clone, and push to this repository. They can also manage issues, pull requests, and some repository settings */\n  Maintain = 'MAINTAIN',\n  /** Can read and clone this repository. Can also open and comment on issues and pull requests */\n  Read = 'READ',\n  /** Can read and clone this repository. Can also manage issues and pull requests */\n  Triage = 'TRIAGE',\n  /** Can read, clone, and push to this repository. Can also manage issues and pull requests */\n  Write = 'WRITE'\n}\n\n/** The privacy of a repository */\nexport enum RepositoryPrivacy {\n  /** Private */\n  Private = 'PRIVATE',\n  /** Public */\n  Public = 'PUBLIC'\n}\n\n/** A repository rule. */\nexport type RepositoryRule = Node & {\n  __typename?: 'RepositoryRule';\n  id: Scalars['ID'];\n  /** The parameters for this rule. */\n  parameters?: Maybe<RuleParameters>;\n  /** The type of rule. */\n  type: RepositoryRuleType;\n};\n\n/** Set of conditions that determine if a ruleset will evaluate */\nexport type RepositoryRuleConditions = {\n  __typename?: 'RepositoryRuleConditions';\n  /** Configuration for the ref_name condition */\n  refName?: Maybe<RefNameConditionTarget>;\n  /** Configuration for the repository_name condition */\n  repositoryName?: Maybe<RepositoryNameConditionTarget>;\n};\n\n/** Specifies the conditions required for a ruleset to evaluate */\nexport type RepositoryRuleConditionsInput = {\n  /** Configuration for the ref_name condition */\n  refName?: InputMaybe<RefNameConditionTargetInput>;\n  /** Configuration for the repository_name condition */\n  repositoryName?: InputMaybe<RepositoryNameConditionTargetInput>;\n};\n\n/** The connection type for RepositoryRule. */\nexport type RepositoryRuleConnection = {\n  __typename?: 'RepositoryRuleConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryRuleEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryRule>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type RepositoryRuleEdge = {\n  __typename?: 'RepositoryRuleEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryRule>;\n};\n\n/** Specifies the attributes for a new or updated rule. */\nexport type RepositoryRuleInput = {\n  /** Optional ID of this rule when updating */\n  id?: InputMaybe<Scalars['ID']>;\n  /** The parameters for the rule. */\n  parameters?: InputMaybe<RuleParametersInput>;\n  /** The type of rule to create. */\n  type: RepositoryRuleType;\n};\n\n/** The rule types supported in rulesets */\nexport enum RepositoryRuleType {\n  /** Branch name pattern */\n  BranchNamePattern = 'BRANCH_NAME_PATTERN',\n  /** Committer email pattern */\n  CommitterEmailPattern = 'COMMITTER_EMAIL_PATTERN',\n  /** Commit author email pattern */\n  CommitAuthorEmailPattern = 'COMMIT_AUTHOR_EMAIL_PATTERN',\n  /** Commit message pattern */\n  CommitMessagePattern = 'COMMIT_MESSAGE_PATTERN',\n  /** Only allow users with bypass permission to create matching refs. */\n  Creation = 'CREATION',\n  /** Only allow users with bypass permissions to delete matching refs. */\n  Deletion = 'DELETION',\n  /** Prevent users with push access from force pushing to branches. */\n  NonFastForward = 'NON_FAST_FORWARD',\n  /** Require all commits be made to a non-target branch and submitted via a pull request before they can be merged. */\n  PullRequest = 'PULL_REQUEST',\n  /**\n   * Choose which environments must be successfully deployed to before branches can\n   * be merged into a branch that matches this rule.\n   */\n  RequiredDeployments = 'REQUIRED_DEPLOYMENTS',\n  /** Prevent merge commits from being pushed to matching branches. */\n  RequiredLinearHistory = 'REQUIRED_LINEAR_HISTORY',\n  /** Commits pushed to matching branches must have verified signatures. */\n  RequiredSignatures = 'REQUIRED_SIGNATURES',\n  /**\n   * Choose which status checks must pass before branches can be merged into a\n   * branch that matches this rule. When enabled, commits must first be pushed to\n   * another branch, then merged or pushed directly to a branch that matches this\n   * rule after status checks have passed.\n   */\n  RequiredStatusChecks = 'REQUIRED_STATUS_CHECKS',\n  /** Tag name pattern */\n  TagNamePattern = 'TAG_NAME_PATTERN',\n  /** Only allow users with bypass permission to update matching refs. */\n  Update = 'UPDATE'\n}\n\n/** A repository ruleset. */\nexport type RepositoryRuleset = Node & {\n  __typename?: 'RepositoryRuleset';\n  /** The actors that can bypass this ruleset */\n  bypassActors?: Maybe<RepositoryRulesetBypassActorConnection>;\n  /** The bypass mode of this ruleset */\n  bypassMode: RuleBypassMode;\n  /** The set of conditions that must evaluate to true for this ruleset to apply */\n  conditions: RepositoryRuleConditions;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The enforcement level of this ruleset */\n  enforcement: RuleEnforcement;\n  id: Scalars['ID'];\n  /** Name of the ruleset. */\n  name: Scalars['String'];\n  /** List of rules. */\n  rules?: Maybe<RepositoryRuleConnection>;\n  /** Source of ruleset. */\n  source: RuleSource;\n  /** Target of the ruleset. */\n  target?: Maybe<RepositoryRulesetTarget>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n\n/** A repository ruleset. */\nexport type RepositoryRulesetBypassActorsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A repository ruleset. */\nexport type RepositoryRulesetRulesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  type?: InputMaybe<RepositoryRuleType>;\n};\n\n/** A team or app that has the ability to bypass a rules defined on a ruleset */\nexport type RepositoryRulesetBypassActor = Node & {\n  __typename?: 'RepositoryRulesetBypassActor';\n  /** The actor that can bypass rules. */\n  actor?: Maybe<BypassActor>;\n  id: Scalars['ID'];\n  /** Identifies the ruleset associated with the allowed actor */\n  repositoryRuleset?: Maybe<RepositoryRuleset>;\n};\n\n/** The connection type for RepositoryRulesetBypassActor. */\nexport type RepositoryRulesetBypassActorConnection = {\n  __typename?: 'RepositoryRulesetBypassActorConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryRulesetBypassActorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryRulesetBypassActor>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type RepositoryRulesetBypassActorEdge = {\n  __typename?: 'RepositoryRulesetBypassActorEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryRulesetBypassActor>;\n};\n\n/** The connection type for RepositoryRuleset. */\nexport type RepositoryRulesetConnection = {\n  __typename?: 'RepositoryRulesetConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryRulesetEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryRuleset>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type RepositoryRulesetEdge = {\n  __typename?: 'RepositoryRulesetEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryRuleset>;\n};\n\n/** The targets supported for rulesets */\nexport enum RepositoryRulesetTarget {\n  /** Branch */\n  Branch = 'BRANCH',\n  /** Tag */\n  Tag = 'TAG'\n}\n\n/** A repository-topic connects a repository to a topic. */\nexport type RepositoryTopic = Node & UniformResourceLocatable & {\n  __typename?: 'RepositoryTopic';\n  id: Scalars['ID'];\n  /** The HTTP path for this repository-topic. */\n  resourcePath: Scalars['URI'];\n  /** The topic. */\n  topic: Topic;\n  /** The HTTP URL for this repository-topic. */\n  url: Scalars['URI'];\n};\n\n/** The connection type for RepositoryTopic. */\nexport type RepositoryTopicConnection = {\n  __typename?: 'RepositoryTopicConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryTopicEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryTopic>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type RepositoryTopicEdge = {\n  __typename?: 'RepositoryTopicEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryTopic>;\n};\n\n/** The repository's visibility level. */\nexport enum RepositoryVisibility {\n  /** The repository is visible only to users in the same business. */\n  Internal = 'INTERNAL',\n  /** The repository is visible only to those with explicit access. */\n  Private = 'PRIVATE',\n  /** The repository is visible to everyone. */\n  Public = 'PUBLIC'\n}\n\n/** Audit log entry for a repository_visibility_change.disable event. */\nexport type RepositoryVisibilityChangeDisableAuditEntry = AuditEntry & EnterpriseAuditEntryData & Node & OrganizationAuditEntryData & {\n  __typename?: 'RepositoryVisibilityChangeDisableAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The HTTP path for this enterprise. */\n  enterpriseResourcePath?: Maybe<Scalars['URI']>;\n  /** The slug of the enterprise. */\n  enterpriseSlug?: Maybe<Scalars['String']>;\n  /** The HTTP URL for this enterprise. */\n  enterpriseUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a repository_visibility_change.enable event. */\nexport type RepositoryVisibilityChangeEnableAuditEntry = AuditEntry & EnterpriseAuditEntryData & Node & OrganizationAuditEntryData & {\n  __typename?: 'RepositoryVisibilityChangeEnableAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  /** The HTTP path for this enterprise. */\n  enterpriseResourcePath?: Maybe<Scalars['URI']>;\n  /** The slug of the enterprise. */\n  enterpriseSlug?: Maybe<Scalars['String']>;\n  /** The HTTP URL for this enterprise. */\n  enterpriseUrl?: Maybe<Scalars['URI']>;\n  id: Scalars['ID'];\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** A Dependabot alert for a repository with a dependency affected by a security vulnerability. */\nexport type RepositoryVulnerabilityAlert = Node & RepositoryNode & {\n  __typename?: 'RepositoryVulnerabilityAlert';\n  /** When was the alert auto-dismissed? */\n  autoDismissedAt?: Maybe<Scalars['DateTime']>;\n  /** When was the alert created? */\n  createdAt: Scalars['DateTime'];\n  /** The associated Dependabot update */\n  dependabotUpdate?: Maybe<DependabotUpdate>;\n  /** The scope of an alert's dependency */\n  dependencyScope?: Maybe<RepositoryVulnerabilityAlertDependencyScope>;\n  /** Comment explaining the reason the alert was dismissed */\n  dismissComment?: Maybe<Scalars['String']>;\n  /** The reason the alert was dismissed */\n  dismissReason?: Maybe<Scalars['String']>;\n  /** When was the alert dismissed? */\n  dismissedAt?: Maybe<Scalars['DateTime']>;\n  /** The user who dismissed the alert */\n  dismisser?: Maybe<User>;\n  /** When was the alert fixed? */\n  fixedAt?: Maybe<Scalars['DateTime']>;\n  id: Scalars['ID'];\n  /** Identifies the alert number. */\n  number: Scalars['Int'];\n  /** The associated repository */\n  repository: Repository;\n  /** The associated security advisory */\n  securityAdvisory?: Maybe<SecurityAdvisory>;\n  /** The associated security vulnerability */\n  securityVulnerability?: Maybe<SecurityVulnerability>;\n  /** Identifies the state of the alert. */\n  state: RepositoryVulnerabilityAlertState;\n  /** The vulnerable manifest filename */\n  vulnerableManifestFilename: Scalars['String'];\n  /** The vulnerable manifest path */\n  vulnerableManifestPath: Scalars['String'];\n  /** The vulnerable requirements */\n  vulnerableRequirements?: Maybe<Scalars['String']>;\n};\n\n/** The connection type for RepositoryVulnerabilityAlert. */\nexport type RepositoryVulnerabilityAlertConnection = {\n  __typename?: 'RepositoryVulnerabilityAlertConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RepositoryVulnerabilityAlertEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RepositoryVulnerabilityAlert>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** The possible scopes of an alert's dependency. */\nexport enum RepositoryVulnerabilityAlertDependencyScope {\n  /** A dependency that is only used in development */\n  Development = 'DEVELOPMENT',\n  /** A dependency that is leveraged during application runtime */\n  Runtime = 'RUNTIME'\n}\n\n/** An edge in a connection. */\nexport type RepositoryVulnerabilityAlertEdge = {\n  __typename?: 'RepositoryVulnerabilityAlertEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<RepositoryVulnerabilityAlert>;\n};\n\n/** The possible states of an alert */\nexport enum RepositoryVulnerabilityAlertState {\n  /** An alert that has been automatically closed by Dependabot. */\n  AutoDismissed = 'AUTO_DISMISSED',\n  /** An alert that has been manually closed by a user. */\n  Dismissed = 'DISMISSED',\n  /** An alert that has been resolved by a code change. */\n  Fixed = 'FIXED',\n  /** An alert that is still open. */\n  Open = 'OPEN'\n}\n\n/** Autogenerated input type of RequestReviews */\nexport type RequestReviewsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the pull request to modify. */\n  pullRequestId: Scalars['ID'];\n  /** The Node IDs of the team to request. */\n  teamIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** Add users to the set rather than replace. */\n  union?: InputMaybe<Scalars['Boolean']>;\n  /** The Node IDs of the user to request. */\n  userIds?: InputMaybe<Array<Scalars['ID']>>;\n};\n\n/** Autogenerated return type of RequestReviews */\nexport type RequestReviewsPayload = {\n  __typename?: 'RequestReviewsPayload';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The pull request that is getting requests. */\n  pullRequest?: Maybe<PullRequest>;\n  /** The edge from the pull request to the requested reviewers. */\n  requestedReviewersEdge?: Maybe<UserEdge>;\n};\n\n/** The possible states that can be requested when creating a check run. */\nexport enum RequestableCheckStatusState {\n  /** The check suite or run has been completed. */\n  Completed = 'COMPLETED',\n  /** The check suite or run is in progress. */\n  InProgress = 'IN_PROGRESS',\n  /** The check suite or run is in pending state. */\n  Pending = 'PENDING',\n  /** The check suite or run has been queued. */\n  Queued = 'QUEUED',\n  /** The check suite or run is in waiting state. */\n  Waiting = 'WAITING'\n}\n\n/** Types that can be requested reviewers. */\nexport type RequestedReviewer = Mannequin | Team | User;\n\n/** The connection type for RequestedReviewer. */\nexport type RequestedReviewerConnection = {\n  __typename?: 'RequestedReviewerConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<RequestedReviewerEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<RequestedReviewer>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type RequestedReviewerEdge = {\n  __typename?: 'RequestedReviewerEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<RequestedReviewer>;\n};\n\n/** Represents a type that can be required by a pull request for merging. */\nexport type RequirableByPullRequest = {\n  /** Whether this is required to pass before merging for a specific pull request. */\n  isRequired: Scalars['Boolean'];\n};\n\n\n/** Represents a type that can be required by a pull request for merging. */\nexport type RequirableByPullRequestIsRequiredArgs = {\n  pullRequestId?: InputMaybe<Scalars['ID']>;\n  pullRequestNumber?: InputMaybe<Scalars['Int']>;\n};\n\n/**\n * Choose which environments must be successfully deployed to before branches can\n * be merged into a branch that matches this rule.\n */\nexport type RequiredDeploymentsParameters = {\n  __typename?: 'RequiredDeploymentsParameters';\n  /** The environments that must be successfully deployed to before branches can be merged. */\n  requiredDeploymentEnvironments: Array<Scalars['String']>;\n};\n\n/**\n * Choose which environments must be successfully deployed to before branches can\n * be merged into a branch that matches this rule.\n */\nexport type RequiredDeploymentsParametersInput = {\n  /** The environments that must be successfully deployed to before branches can be merged. */\n  requiredDeploymentEnvironments: Array<Scalars['String']>;\n};\n\n/** Represents a required status check for a protected branch, but not any specific run of that check. */\nexport type RequiredStatusCheckDescription = {\n  __typename?: 'RequiredStatusCheckDescription';\n  /** The App that must provide this status in order for it to be accepted. */\n  app?: Maybe<App>;\n  /** The name of this status. */\n  context: Scalars['String'];\n};\n\n/** Specifies the attributes for a new or updated required status check. */\nexport type RequiredStatusCheckInput = {\n  /**\n   * The ID of the App that must set the status in order for it to be accepted.\n   * Omit this value to use whichever app has recently been setting this status, or\n   * use \"any\" to allow any app to set the status.\n   */\n  appId?: InputMaybe<Scalars['ID']>;\n  /** Status check context that must pass for commits to be accepted to the matching branch. */\n  context: Scalars['String'];\n};\n\n/**\n * Choose which status checks must pass before branches can be merged into a branch\n * that matches this rule. When enabled, commits must first be pushed to another\n * branch, then merged or pushed directly to a branch that matches this rule after\n * status checks have passed.\n */\nexport type RequiredStatusChecksParameters = {\n  __typename?: 'RequiredStatusChecksParameters';\n  /** Status checks that are required. */\n  requiredStatusChecks: Array<StatusCheckConfiguration>;\n  /**\n   * Whether pull requests targeting a matching branch must be tested with the\n   * latest code. This setting will not take effect unless at least one status\n   * check is enabled.\n   */\n  strictRequiredStatusChecksPolicy: Scalars['Boolean'];\n};\n\n/**\n * Choose which status checks must pass before branches can be merged into a branch\n * that matches this rule. When enabled, commits must first be pushed to another\n * branch, then merged or pushed directly to a branch that matches this rule after\n * status checks have passed.\n */\nexport type RequiredStatusChecksParametersInput = {\n  /** Status checks that are required. */\n  requiredStatusChecks: Array<StatusCheckConfigurationInput>;\n  /**\n   * Whether pull requests targeting a matching branch must be tested with the\n   * latest code. This setting will not take effect unless at least one status\n   * check is enabled.\n   */\n  strictRequiredStatusChecksPolicy: Scalars['Boolean'];\n};\n\n/** Autogenerated input type of RerequestCheckSuite */\nexport type RerequestCheckSuiteInput = {\n  /** The Node ID of the check suite. */\n  checkSuiteId: Scalars['ID'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RerequestCheckSuite */\nexport type RerequestCheckSuitePayload = {\n  __typename?: 'RerequestCheckSuitePayload';\n  /** The requested check suite. */\n  checkSuite?: Maybe<CheckSuite>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of ResolveReviewThread */\nexport type ResolveReviewThreadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the thread to resolve */\n  threadId: Scalars['ID'];\n};\n\n/** Autogenerated return type of ResolveReviewThread */\nexport type ResolveReviewThreadPayload = {\n  __typename?: 'ResolveReviewThreadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The thread to resolve. */\n  thread?: Maybe<PullRequestReviewThread>;\n};\n\n/** Represents a private contribution a user made on GitHub. */\nexport type RestrictedContribution = Contribution & {\n  __typename?: 'RestrictedContribution';\n  /**\n   * Whether this contribution is associated with a record you do not have access to. For\n   * example, your own 'first issue' contribution may have been made on a repository you can no\n   * longer access.\n   */\n  isRestricted: Scalars['Boolean'];\n  /** When this contribution was made. */\n  occurredAt: Scalars['DateTime'];\n  /** The HTTP path for this contribution. */\n  resourcePath: Scalars['URI'];\n  /** The HTTP URL for this contribution. */\n  url: Scalars['URI'];\n  /** The user who made this contribution. */\n  user: User;\n};\n\n/** Autogenerated input type of RetireSponsorsTier */\nexport type RetireSponsorsTierInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the published tier to retire. */\n  tierId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RetireSponsorsTier */\nexport type RetireSponsorsTierPayload = {\n  __typename?: 'RetireSponsorsTierPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The tier that was retired. */\n  sponsorsTier?: Maybe<SponsorsTier>;\n};\n\n/** Autogenerated input type of RevertPullRequest */\nexport type RevertPullRequestInput = {\n  /** The description of the revert pull request. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Indicates whether the revert pull request should be a draft. */\n  draft?: InputMaybe<Scalars['Boolean']>;\n  /** The ID of the pull request to revert. */\n  pullRequestId: Scalars['ID'];\n  /** The title of the revert pull request. */\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of RevertPullRequest */\nexport type RevertPullRequestPayload = {\n  __typename?: 'RevertPullRequestPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The pull request that was reverted. */\n  pullRequest?: Maybe<PullRequest>;\n  /** The new pull request that reverts the input pull request. */\n  revertPullRequest?: Maybe<PullRequest>;\n};\n\n/** A user, team, or app who has the ability to dismiss a review on a protected branch. */\nexport type ReviewDismissalAllowance = Node & {\n  __typename?: 'ReviewDismissalAllowance';\n  /** The actor that can dismiss. */\n  actor?: Maybe<ReviewDismissalAllowanceActor>;\n  /** Identifies the branch protection rule associated with the allowed user, team, or app. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  id: Scalars['ID'];\n};\n\n/** Types that can be an actor. */\nexport type ReviewDismissalAllowanceActor = App | Team | User;\n\n/** The connection type for ReviewDismissalAllowance. */\nexport type ReviewDismissalAllowanceConnection = {\n  __typename?: 'ReviewDismissalAllowanceConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReviewDismissalAllowanceEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ReviewDismissalAllowance>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ReviewDismissalAllowanceEdge = {\n  __typename?: 'ReviewDismissalAllowanceEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ReviewDismissalAllowance>;\n};\n\n/** Represents a 'review_dismissed' event on a given issue or pull request. */\nexport type ReviewDismissedEvent = Node & UniformResourceLocatable & {\n  __typename?: 'ReviewDismissedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** Identifies the optional message associated with the 'review_dismissed' event. */\n  dismissalMessage?: Maybe<Scalars['String']>;\n  /** Identifies the optional message associated with the event, rendered to HTML. */\n  dismissalMessageHTML?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** Identifies the previous state of the review with the 'review_dismissed' event. */\n  previousReviewState: PullRequestReviewState;\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** Identifies the commit which caused the review to become stale. */\n  pullRequestCommit?: Maybe<PullRequestCommit>;\n  /** The HTTP path for this review dismissed event. */\n  resourcePath: Scalars['URI'];\n  /** Identifies the review associated with the 'review_dismissed' event. */\n  review?: Maybe<PullRequestReview>;\n  /** The HTTP URL for this review dismissed event. */\n  url: Scalars['URI'];\n};\n\n/** A request for a user to review a pull request. */\nexport type ReviewRequest = Node & {\n  __typename?: 'ReviewRequest';\n  /** Whether this request was created for a code owner */\n  asCodeOwner: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** Identifies the pull request associated with this review request. */\n  pullRequest: PullRequest;\n  /** The reviewer that is requested. */\n  requestedReviewer?: Maybe<RequestedReviewer>;\n};\n\n/** The connection type for ReviewRequest. */\nexport type ReviewRequestConnection = {\n  __typename?: 'ReviewRequestConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ReviewRequestEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<ReviewRequest>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type ReviewRequestEdge = {\n  __typename?: 'ReviewRequestEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<ReviewRequest>;\n};\n\n/** Represents an 'review_request_removed' event on a given pull request. */\nexport type ReviewRequestRemovedEvent = Node & {\n  __typename?: 'ReviewRequestRemovedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** Identifies the reviewer whose review request was removed. */\n  requestedReviewer?: Maybe<RequestedReviewer>;\n};\n\n/** Represents an 'review_requested' event on a given pull request. */\nexport type ReviewRequestedEvent = Node & {\n  __typename?: 'ReviewRequestedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** PullRequest referenced by event. */\n  pullRequest: PullRequest;\n  /** Identifies the reviewer whose review was requested. */\n  requestedReviewer?: Maybe<RequestedReviewer>;\n};\n\n/**\n * A hovercard context with a message describing the current code review state of the pull\n * request.\n */\nexport type ReviewStatusHovercardContext = HovercardContext & {\n  __typename?: 'ReviewStatusHovercardContext';\n  /** A string describing this context */\n  message: Scalars['String'];\n  /** An octicon to accompany this context */\n  octicon: Scalars['String'];\n  /** The current status of the pull request with respect to code review. */\n  reviewDecision?: Maybe<PullRequestReviewDecision>;\n};\n\n/** Autogenerated input type of RevokeEnterpriseOrganizationsMigratorRole */\nexport type RevokeEnterpriseOrganizationsMigratorRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise to which all organizations managed by it will be granted the migrator role. */\n  enterpriseId: Scalars['ID'];\n  /** The login of the user to revoke the migrator role */\n  login: Scalars['String'];\n};\n\n/** Autogenerated return type of RevokeEnterpriseOrganizationsMigratorRole */\nexport type RevokeEnterpriseOrganizationsMigratorRolePayload = {\n  __typename?: 'RevokeEnterpriseOrganizationsMigratorRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The organizations that had the migrator role revoked for the given user. */\n  organizations?: Maybe<OrganizationConnection>;\n};\n\n\n/** Autogenerated return type of RevokeEnterpriseOrganizationsMigratorRole */\nexport type RevokeEnterpriseOrganizationsMigratorRolePayloadOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of RevokeMigratorRole */\nexport type RevokeMigratorRoleInput = {\n  /** The user login or Team slug to revoke the migrator role from. */\n  actor: Scalars['String'];\n  /** Specifies the type of the actor, can be either USER or TEAM. */\n  actorType: ActorType;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the organization that the user/team belongs to. */\n  organizationId: Scalars['ID'];\n};\n\n/** Autogenerated return type of RevokeMigratorRole */\nexport type RevokeMigratorRolePayload = {\n  __typename?: 'RevokeMigratorRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** Did the operation succeed? */\n  success?: Maybe<Scalars['Boolean']>;\n};\n\n/** Possible roles a user may have in relation to an organization. */\nexport enum RoleInOrganization {\n  /** A user who is a direct member of the organization. */\n  DirectMember = 'DIRECT_MEMBER',\n  /** A user with full administrative access to the organization. */\n  Owner = 'OWNER',\n  /** A user who is unaffiliated with the organization. */\n  Unaffiliated = 'UNAFFILIATED'\n}\n\n/** The bypass mode for a rule or ruleset. */\nexport enum RuleBypassMode {\n  /** Bypassing is disabled */\n  None = 'NONE',\n  /** Those with bypass permission at the organization level can bypass */\n  Organization = 'ORGANIZATION',\n  /** Those with bypass permission at the organization level can always bypass */\n  OrganizationAlways = 'ORGANIZATION_ALWAYS',\n  /** Bypassing is disabled */\n  OrganizationNone = 'ORGANIZATION_NONE',\n  /** Those with bypass permission at the organization level can bypass for pull requests only */\n  OrganizationPrsOnly = 'ORGANIZATION_PRS_ONLY',\n  /** Those with bypass permission at the repository level can bypass */\n  Repository = 'REPOSITORY'\n}\n\n/** The level of enforcement for a rule or ruleset. */\nexport enum RuleEnforcement {\n  /** Rules will be enforced */\n  Active = 'ACTIVE',\n  /** Do not evaluate or enforce rules */\n  Disabled = 'DISABLED',\n  /**\n   * Allow admins to test rules before enforcing them. Admins can view insights on\n   * the Rule Insights page (`evaluate` is only available with GitHub Enterprise).\n   */\n  Evaluate = 'EVALUATE'\n}\n\n/** Types which can be parameters for `RepositoryRule` objects. */\nexport type RuleParameters = BranchNamePatternParameters | CommitAuthorEmailPatternParameters | CommitMessagePatternParameters | CommitterEmailPatternParameters | PullRequestParameters | RequiredDeploymentsParameters | RequiredStatusChecksParameters | TagNamePatternParameters | UpdateParameters;\n\n/** Specifies the parameters for a `RepositoryRule` object. Only one of the fields should be specified. */\nexport type RuleParametersInput = {\n  /** Parameters used for the `branch_name_pattern` rule type */\n  branchNamePattern?: InputMaybe<BranchNamePatternParametersInput>;\n  /** Parameters used for the `commit_author_email_pattern` rule type */\n  commitAuthorEmailPattern?: InputMaybe<CommitAuthorEmailPatternParametersInput>;\n  /** Parameters used for the `commit_message_pattern` rule type */\n  commitMessagePattern?: InputMaybe<CommitMessagePatternParametersInput>;\n  /** Parameters used for the `committer_email_pattern` rule type */\n  committerEmailPattern?: InputMaybe<CommitterEmailPatternParametersInput>;\n  /** Parameters used for the `pull_request` rule type */\n  pullRequest?: InputMaybe<PullRequestParametersInput>;\n  /** Parameters used for the `required_deployments` rule type */\n  requiredDeployments?: InputMaybe<RequiredDeploymentsParametersInput>;\n  /** Parameters used for the `required_status_checks` rule type */\n  requiredStatusChecks?: InputMaybe<RequiredStatusChecksParametersInput>;\n  /** Parameters used for the `tag_name_pattern` rule type */\n  tagNamePattern?: InputMaybe<TagNamePatternParametersInput>;\n  /** Parameters used for the `update` rule type */\n  update?: InputMaybe<UpdateParametersInput>;\n};\n\n/** Types which can have `RepositoryRule` objects. */\nexport type RuleSource = Organization | Repository;\n\n/** The possible digest algorithms used to sign SAML requests for an identity provider. */\nexport enum SamlDigestAlgorithm {\n  /** SHA1 */\n  Sha1 = 'SHA1',\n  /** SHA256 */\n  Sha256 = 'SHA256',\n  /** SHA384 */\n  Sha384 = 'SHA384',\n  /** SHA512 */\n  Sha512 = 'SHA512'\n}\n\n/** The possible signature algorithms used to sign SAML requests for a Identity Provider. */\nexport enum SamlSignatureAlgorithm {\n  /** RSA-SHA1 */\n  RsaSha1 = 'RSA_SHA1',\n  /** RSA-SHA256 */\n  RsaSha256 = 'RSA_SHA256',\n  /** RSA-SHA384 */\n  RsaSha384 = 'RSA_SHA384',\n  /** RSA-SHA512 */\n  RsaSha512 = 'RSA_SHA512'\n}\n\n/** A Saved Reply is text a user can use to reply quickly. */\nexport type SavedReply = Node & {\n  __typename?: 'SavedReply';\n  /** The body of the saved reply. */\n  body: Scalars['String'];\n  /** The saved reply body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The title of the saved reply. */\n  title: Scalars['String'];\n  /** The user that saved this reply. */\n  user?: Maybe<Actor>;\n};\n\n/** The connection type for SavedReply. */\nexport type SavedReplyConnection = {\n  __typename?: 'SavedReplyConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SavedReplyEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SavedReply>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type SavedReplyEdge = {\n  __typename?: 'SavedReplyEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<SavedReply>;\n};\n\n/** Ordering options for saved reply connections. */\nexport type SavedReplyOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order saved replies by. */\n  field: SavedReplyOrderField;\n};\n\n/** Properties by which saved reply connections can be ordered. */\nexport enum SavedReplyOrderField {\n  /** Order saved reply by when they were updated. */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** The results of a search. */\nexport type SearchResultItem = App | Discussion | Issue | MarketplaceListing | Organization | PullRequest | Repository | User;\n\n/**\n * A list of results that matched against a search query. Regardless of the number\n * of matches, a maximum of 1,000 results will be available across all types,\n * potentially split across many pages.\n */\nexport type SearchResultItemConnection = {\n  __typename?: 'SearchResultItemConnection';\n  /**\n   * The total number of pieces of code that matched the search query. Regardless\n   * of the total number of matches, a maximum of 1,000 results will be available\n   * across all types.\n   */\n  codeCount: Scalars['Int'];\n  /**\n   * The total number of discussions that matched the search query. Regardless of\n   * the total number of matches, a maximum of 1,000 results will be available\n   * across all types.\n   */\n  discussionCount: Scalars['Int'];\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SearchResultItemEdge>>>;\n  /**\n   * The total number of issues that matched the search query. Regardless of the\n   * total number of matches, a maximum of 1,000 results will be available across all types.\n   */\n  issueCount: Scalars['Int'];\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SearchResultItem>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /**\n   * The total number of repositories that matched the search query. Regardless of\n   * the total number of matches, a maximum of 1,000 results will be available\n   * across all types.\n   */\n  repositoryCount: Scalars['Int'];\n  /**\n   * The total number of users that matched the search query. Regardless of the\n   * total number of matches, a maximum of 1,000 results will be available across all types.\n   */\n  userCount: Scalars['Int'];\n  /**\n   * The total number of wiki pages that matched the search query. Regardless of\n   * the total number of matches, a maximum of 1,000 results will be available\n   * across all types.\n   */\n  wikiCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type SearchResultItemEdge = {\n  __typename?: 'SearchResultItemEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<SearchResultItem>;\n  /** Text matches on the result found. */\n  textMatches?: Maybe<Array<Maybe<TextMatch>>>;\n};\n\n/** Represents the individual results of a search. */\nexport enum SearchType {\n  /** Returns matching discussions in repositories. */\n  Discussion = 'DISCUSSION',\n  /** Returns results matching issues in repositories. */\n  Issue = 'ISSUE',\n  /** Returns results matching repositories. */\n  Repository = 'REPOSITORY',\n  /** Returns results matching users and organizations on GitHub. */\n  User = 'USER'\n}\n\n/** A GitHub Security Advisory */\nexport type SecurityAdvisory = Node & {\n  __typename?: 'SecurityAdvisory';\n  /** The classification of the advisory */\n  classification: SecurityAdvisoryClassification;\n  /** The CVSS associated with this advisory */\n  cvss: Cvss;\n  /** CWEs associated with this Advisory */\n  cwes: CweConnection;\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** This is a long plaintext description of the advisory */\n  description: Scalars['String'];\n  /** The GitHub Security Advisory ID */\n  ghsaId: Scalars['String'];\n  id: Scalars['ID'];\n  /** A list of identifiers for this advisory */\n  identifiers: Array<SecurityAdvisoryIdentifier>;\n  /** The permalink for the advisory's dependabot alerts page */\n  notificationsPermalink?: Maybe<Scalars['URI']>;\n  /** The organization that originated the advisory */\n  origin: Scalars['String'];\n  /** The permalink for the advisory */\n  permalink?: Maybe<Scalars['URI']>;\n  /** When the advisory was published */\n  publishedAt: Scalars['DateTime'];\n  /** A list of references for this advisory */\n  references: Array<SecurityAdvisoryReference>;\n  /** The severity of the advisory */\n  severity: SecurityAdvisorySeverity;\n  /** A short plaintext summary of the advisory */\n  summary: Scalars['String'];\n  /** When the advisory was last updated */\n  updatedAt: Scalars['DateTime'];\n  /** Vulnerabilities associated with this Advisory */\n  vulnerabilities: SecurityVulnerabilityConnection;\n  /** When the advisory was withdrawn, if it has been withdrawn */\n  withdrawnAt?: Maybe<Scalars['DateTime']>;\n};\n\n\n/** A GitHub Security Advisory */\nexport type SecurityAdvisoryCwesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A GitHub Security Advisory */\nexport type SecurityAdvisoryVulnerabilitiesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  classifications?: InputMaybe<Array<SecurityAdvisoryClassification>>;\n  ecosystem?: InputMaybe<SecurityAdvisoryEcosystem>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SecurityVulnerabilityOrder>;\n  package?: InputMaybe<Scalars['String']>;\n  severities?: InputMaybe<Array<SecurityAdvisorySeverity>>;\n};\n\n/** Classification of the advisory. */\nexport enum SecurityAdvisoryClassification {\n  /** Classification of general advisories. */\n  General = 'GENERAL',\n  /** Classification of malware advisories. */\n  Malware = 'MALWARE'\n}\n\n/** The connection type for SecurityAdvisory. */\nexport type SecurityAdvisoryConnection = {\n  __typename?: 'SecurityAdvisoryConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SecurityAdvisoryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SecurityAdvisory>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** The possible ecosystems of a security vulnerability's package. */\nexport enum SecurityAdvisoryEcosystem {\n  /** GitHub Actions */\n  Actions = 'ACTIONS',\n  /** PHP packages hosted at packagist.org */\n  Composer = 'COMPOSER',\n  /** Erlang/Elixir packages hosted at hex.pm */\n  Erlang = 'ERLANG',\n  /** Go modules */\n  Go = 'GO',\n  /** Java artifacts hosted at the Maven central repository */\n  Maven = 'MAVEN',\n  /** JavaScript packages hosted at npmjs.com */\n  Npm = 'NPM',\n  /** .NET packages hosted at the NuGet Gallery */\n  Nuget = 'NUGET',\n  /** Python packages hosted at PyPI.org */\n  Pip = 'PIP',\n  /** Dart packages hosted at pub.dev */\n  Pub = 'PUB',\n  /** Ruby gems hosted at RubyGems.org */\n  Rubygems = 'RUBYGEMS',\n  /** Rust crates */\n  Rust = 'RUST'\n}\n\n/** An edge in a connection. */\nexport type SecurityAdvisoryEdge = {\n  __typename?: 'SecurityAdvisoryEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<SecurityAdvisory>;\n};\n\n/** A GitHub Security Advisory Identifier */\nexport type SecurityAdvisoryIdentifier = {\n  __typename?: 'SecurityAdvisoryIdentifier';\n  /** The identifier type, e.g. GHSA, CVE */\n  type: Scalars['String'];\n  /** The identifier */\n  value: Scalars['String'];\n};\n\n/** An advisory identifier to filter results on. */\nexport type SecurityAdvisoryIdentifierFilter = {\n  /** The identifier type. */\n  type: SecurityAdvisoryIdentifierType;\n  /** The identifier string. Supports exact or partial matching. */\n  value: Scalars['String'];\n};\n\n/** Identifier formats available for advisories. */\nexport enum SecurityAdvisoryIdentifierType {\n  /** Common Vulnerabilities and Exposures Identifier. */\n  Cve = 'CVE',\n  /** GitHub Security Advisory ID. */\n  Ghsa = 'GHSA'\n}\n\n/** Ordering options for security advisory connections */\nexport type SecurityAdvisoryOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order security advisories by. */\n  field: SecurityAdvisoryOrderField;\n};\n\n/** Properties by which security advisory connections can be ordered. */\nexport enum SecurityAdvisoryOrderField {\n  /** Order advisories by publication time */\n  PublishedAt = 'PUBLISHED_AT',\n  /** Order advisories by update time */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** An individual package */\nexport type SecurityAdvisoryPackage = {\n  __typename?: 'SecurityAdvisoryPackage';\n  /** The ecosystem the package belongs to, e.g. RUBYGEMS, NPM */\n  ecosystem: SecurityAdvisoryEcosystem;\n  /** The package name */\n  name: Scalars['String'];\n};\n\n/** An individual package version */\nexport type SecurityAdvisoryPackageVersion = {\n  __typename?: 'SecurityAdvisoryPackageVersion';\n  /** The package name or version */\n  identifier: Scalars['String'];\n};\n\n/** A GitHub Security Advisory Reference */\nexport type SecurityAdvisoryReference = {\n  __typename?: 'SecurityAdvisoryReference';\n  /** A publicly accessible reference */\n  url: Scalars['URI'];\n};\n\n/** Severity of the vulnerability. */\nexport enum SecurityAdvisorySeverity {\n  /** Critical. */\n  Critical = 'CRITICAL',\n  /** High. */\n  High = 'HIGH',\n  /** Low. */\n  Low = 'LOW',\n  /** Moderate. */\n  Moderate = 'MODERATE'\n}\n\n/** An individual vulnerability within an Advisory */\nexport type SecurityVulnerability = {\n  __typename?: 'SecurityVulnerability';\n  /** The Advisory associated with this Vulnerability */\n  advisory: SecurityAdvisory;\n  /** The first version containing a fix for the vulnerability */\n  firstPatchedVersion?: Maybe<SecurityAdvisoryPackageVersion>;\n  /** A description of the vulnerable package */\n  package: SecurityAdvisoryPackage;\n  /** The severity of the vulnerability within this package */\n  severity: SecurityAdvisorySeverity;\n  /** When the vulnerability was last updated */\n  updatedAt: Scalars['DateTime'];\n  /**\n   * A string that describes the vulnerable package versions.\n   * This string follows a basic syntax with a few forms.\n   * + `= 0.2.0` denotes a single vulnerable version.\n   * + `<= 1.0.8` denotes a version range up to and including the specified version\n   * + `< 0.1.11` denotes a version range up to, but excluding, the specified version\n   * + `>= 4.3.0, < 4.3.5` denotes a version range with a known minimum and maximum version.\n   * + `>= 0.0.1` denotes a version range with a known minimum, but no known maximum\n   */\n  vulnerableVersionRange: Scalars['String'];\n};\n\n/** The connection type for SecurityVulnerability. */\nexport type SecurityVulnerabilityConnection = {\n  __typename?: 'SecurityVulnerabilityConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SecurityVulnerabilityEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SecurityVulnerability>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type SecurityVulnerabilityEdge = {\n  __typename?: 'SecurityVulnerabilityEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<SecurityVulnerability>;\n};\n\n/** Ordering options for security vulnerability connections */\nexport type SecurityVulnerabilityOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order security vulnerabilities by. */\n  field: SecurityVulnerabilityOrderField;\n};\n\n/** Properties by which security vulnerability connections can be ordered. */\nexport enum SecurityVulnerabilityOrderField {\n  /** Order vulnerability by update time */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** Autogenerated input type of SetEnterpriseIdentityProvider */\nexport type SetEnterpriseIdentityProviderInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The digest algorithm used to sign SAML requests for the identity provider. */\n  digestMethod: SamlDigestAlgorithm;\n  /** The ID of the enterprise on which to set an identity provider. */\n  enterpriseId: Scalars['ID'];\n  /** The x509 certificate used by the identity provider to sign assertions and responses. */\n  idpCertificate: Scalars['String'];\n  /** The Issuer Entity ID for the SAML identity provider */\n  issuer?: InputMaybe<Scalars['String']>;\n  /** The signature algorithm used to sign SAML requests for the identity provider. */\n  signatureMethod: SamlSignatureAlgorithm;\n  /** The URL endpoint for the identity provider's SAML SSO. */\n  ssoUrl: Scalars['URI'];\n};\n\n/** Autogenerated return type of SetEnterpriseIdentityProvider */\nexport type SetEnterpriseIdentityProviderPayload = {\n  __typename?: 'SetEnterpriseIdentityProviderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The identity provider for the enterprise. */\n  identityProvider?: Maybe<EnterpriseIdentityProvider>;\n};\n\n/** Autogenerated input type of SetOrganizationInteractionLimit */\nexport type SetOrganizationInteractionLimitInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** When this limit should expire. */\n  expiry?: InputMaybe<RepositoryInteractionLimitExpiry>;\n  /** The limit to set. */\n  limit: RepositoryInteractionLimit;\n  /** The ID of the organization to set a limit for. */\n  organizationId: Scalars['ID'];\n};\n\n/** Autogenerated return type of SetOrganizationInteractionLimit */\nexport type SetOrganizationInteractionLimitPayload = {\n  __typename?: 'SetOrganizationInteractionLimitPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The organization that the interaction limit was set for. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of SetRepositoryInteractionLimit */\nexport type SetRepositoryInteractionLimitInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** When this limit should expire. */\n  expiry?: InputMaybe<RepositoryInteractionLimitExpiry>;\n  /** The limit to set. */\n  limit: RepositoryInteractionLimit;\n  /** The ID of the repository to set a limit for. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of SetRepositoryInteractionLimit */\nexport type SetRepositoryInteractionLimitPayload = {\n  __typename?: 'SetRepositoryInteractionLimitPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The repository that the interaction limit was set for. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of SetUserInteractionLimit */\nexport type SetUserInteractionLimitInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** When this limit should expire. */\n  expiry?: InputMaybe<RepositoryInteractionLimitExpiry>;\n  /** The limit to set. */\n  limit: RepositoryInteractionLimit;\n  /** The ID of the user to set a limit for. */\n  userId: Scalars['ID'];\n};\n\n/** Autogenerated return type of SetUserInteractionLimit */\nexport type SetUserInteractionLimitPayload = {\n  __typename?: 'SetUserInteractionLimitPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The user that the interaction limit was set for. */\n  user?: Maybe<User>;\n};\n\n/** Represents an S/MIME signature on a Commit or Tag. */\nexport type SmimeSignature = GitSignature & {\n  __typename?: 'SmimeSignature';\n  /** Email used to sign this object. */\n  email: Scalars['String'];\n  /** True if the signature is valid and verified by GitHub. */\n  isValid: Scalars['Boolean'];\n  /** Payload for GPG signing object. Raw ODB object without the signature header. */\n  payload: Scalars['String'];\n  /** ASCII-armored signature header from object. */\n  signature: Scalars['String'];\n  /** GitHub user corresponding to the email signing this commit. */\n  signer?: Maybe<User>;\n  /**\n   * The state of this signature. `VALID` if signature is valid and verified by\n   * GitHub, otherwise represents reason why signature is considered invalid.\n   */\n  state: GitSignatureState;\n  /** True if the signature was made with GitHub's signing key. */\n  wasSignedByGitHub: Scalars['Boolean'];\n};\n\n/** Social media profile associated with a user. */\nexport type SocialAccount = {\n  __typename?: 'SocialAccount';\n  /** Name of the social media account as it appears on the profile. */\n  displayName: Scalars['String'];\n  /** Software or company that hosts the social media account. */\n  provider: SocialAccountProvider;\n  /** URL of the social media account. */\n  url: Scalars['URI'];\n};\n\n/** The connection type for SocialAccount. */\nexport type SocialAccountConnection = {\n  __typename?: 'SocialAccountConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SocialAccountEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SocialAccount>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type SocialAccountEdge = {\n  __typename?: 'SocialAccountEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<SocialAccount>;\n};\n\n/** Software or company that hosts social media accounts. */\nexport enum SocialAccountProvider {\n  /** Social media and networking website. */\n  Facebook = 'FACEBOOK',\n  /** Catch-all for social media providers that do not yet have specific handling. */\n  Generic = 'GENERIC',\n  /** Fork of Mastodon with a greater focus on local posting. */\n  Hometown = 'HOMETOWN',\n  /** Social media website with a focus on photo and video sharing. */\n  Instagram = 'INSTAGRAM',\n  /** Professional networking website. */\n  Linkedin = 'LINKEDIN',\n  /** Open-source federated microblogging service. */\n  Mastodon = 'MASTODON',\n  /** Social news aggregation and discussion website. */\n  Reddit = 'REDDIT',\n  /** Live-streaming service. */\n  Twitch = 'TWITCH',\n  /** Microblogging website. */\n  Twitter = 'TWITTER',\n  /** Online video platform. */\n  Youtube = 'YOUTUBE'\n}\n\n/** Entities that can sponsor others via GitHub Sponsors */\nexport type Sponsor = Organization | User;\n\n/** The connection type for Sponsor. */\nexport type SponsorConnection = {\n  __typename?: 'SponsorConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Sponsor>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents a user or organization who is sponsoring someone in GitHub Sponsors. */\nexport type SponsorEdge = {\n  __typename?: 'SponsorEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Sponsor>;\n};\n\n/** Ordering options for connections to get sponsor entities for GitHub Sponsors. */\nexport type SponsorOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order sponsor entities by. */\n  field: SponsorOrderField;\n};\n\n/** Properties by which sponsor connections can be ordered. */\nexport enum SponsorOrderField {\n  /** Order sponsorable entities by login (username). */\n  Login = 'LOGIN',\n  /** Order sponsors by their relevance to the viewer. */\n  Relevance = 'RELEVANCE'\n}\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type Sponsorable = {\n  /** The estimated next GitHub Sponsors payout for this user/organization in cents (USD). */\n  estimatedNextSponsorsPayoutInCents: Scalars['Int'];\n  /** True if this user/organization has a GitHub Sponsors listing. */\n  hasSponsorsListing: Scalars['Boolean'];\n  /** Whether the given account is sponsoring this user/organization. */\n  isSponsoredBy: Scalars['Boolean'];\n  /** True if the viewer is sponsored by this user/organization. */\n  isSponsoringViewer: Scalars['Boolean'];\n  /** The estimated monthly GitHub Sponsors income for this user/organization in cents (USD). */\n  monthlyEstimatedSponsorsIncomeInCents: Scalars['Int'];\n  /** List of users and organizations this entity is sponsoring. */\n  sponsoring: SponsorConnection;\n  /** List of sponsors for this user or organization. */\n  sponsors: SponsorConnection;\n  /** Events involving this sponsorable, such as new sponsorships. */\n  sponsorsActivities: SponsorsActivityConnection;\n  /** The GitHub Sponsors listing for this user or organization. */\n  sponsorsListing?: Maybe<SponsorsListing>;\n  /** The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor. */\n  sponsorshipForViewerAsSponsor?: Maybe<Sponsorship>;\n  /** The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving. */\n  sponsorshipForViewerAsSponsorable?: Maybe<Sponsorship>;\n  /** List of sponsorship updates sent from this sponsorable to sponsors. */\n  sponsorshipNewsletters: SponsorshipNewsletterConnection;\n  /** The sponsorships where this user or organization is the maintainer receiving the funds. */\n  sponsorshipsAsMaintainer: SponsorshipConnection;\n  /** The sponsorships where this user or organization is the funder. */\n  sponsorshipsAsSponsor: SponsorshipConnection;\n  /**\n   * The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has\n   * spent on GitHub to fund sponsorships. Only returns a value when viewed by the\n   * user themselves or by a user who can manage sponsorships for the requested organization.\n   */\n  totalSponsorshipAmountAsSponsorInCents?: Maybe<Scalars['Int']>;\n  /** Whether or not the viewer is able to sponsor this user/organization. */\n  viewerCanSponsor: Scalars['Boolean'];\n  /** True if the viewer is sponsoring this user/organization. */\n  viewerIsSponsoring: Scalars['Boolean'];\n};\n\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableIsSponsoredByArgs = {\n  accountLogin: Scalars['String'];\n};\n\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsoringArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorOrder>;\n};\n\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorOrder>;\n  tierId?: InputMaybe<Scalars['ID']>;\n};\n\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorsActivitiesArgs = {\n  actions?: InputMaybe<Array<SponsorsActivityAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includeAsSponsor?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorsActivityOrder>;\n  period?: InputMaybe<SponsorsActivityPeriod>;\n  since?: InputMaybe<Scalars['DateTime']>;\n  until?: InputMaybe<Scalars['DateTime']>;\n};\n\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorshipForViewerAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorshipForViewerAsSponsorableArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorshipNewslettersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorshipNewsletterOrder>;\n};\n\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorshipsAsMaintainerArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includePrivate?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableSponsorshipsAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  maintainerLogins?: InputMaybe<Array<Scalars['String']>>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n\n/** Entities that can sponsor or be sponsored through GitHub Sponsors. */\nexport type SponsorableTotalSponsorshipAmountAsSponsorInCentsArgs = {\n  since?: InputMaybe<Scalars['DateTime']>;\n  sponsorableLogins?: InputMaybe<Array<Scalars['String']>>;\n  until?: InputMaybe<Scalars['DateTime']>;\n};\n\n/** Entities that can be sponsored via GitHub Sponsors */\nexport type SponsorableItem = Organization | User;\n\n/** The connection type for SponsorableItem. */\nexport type SponsorableItemConnection = {\n  __typename?: 'SponsorableItemConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorableItemEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SponsorableItem>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type SponsorableItemEdge = {\n  __typename?: 'SponsorableItemEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<SponsorableItem>;\n};\n\n/** Ordering options for connections to get sponsorable entities for GitHub Sponsors. */\nexport type SponsorableOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order sponsorable entities by. */\n  field: SponsorableOrderField;\n};\n\n/** Properties by which sponsorable connections can be ordered. */\nexport enum SponsorableOrderField {\n  /** Order sponsorable entities by login (username). */\n  Login = 'LOGIN'\n}\n\n/** An event related to sponsorship activity. */\nexport type SponsorsActivity = Node & {\n  __typename?: 'SponsorsActivity';\n  /** What action this activity indicates took place. */\n  action: SponsorsActivityAction;\n  id: Scalars['ID'];\n  /** The tier that the sponsorship used to use, for tier change events. */\n  previousSponsorsTier?: Maybe<SponsorsTier>;\n  /** The user or organization who triggered this activity and was/is sponsoring the sponsorable. */\n  sponsor?: Maybe<Sponsor>;\n  /** The user or organization that is being sponsored, the maintainer. */\n  sponsorable: Sponsorable;\n  /** The associated sponsorship tier. */\n  sponsorsTier?: Maybe<SponsorsTier>;\n  /** The timestamp of this event. */\n  timestamp?: Maybe<Scalars['DateTime']>;\n  /** Was this sponsorship made alongside other sponsorships at the same time from the same sponsor? */\n  viaBulkSponsorship: Scalars['Boolean'];\n};\n\n/** The possible actions that GitHub Sponsors activities can represent. */\nexport enum SponsorsActivityAction {\n  /** The activity was cancelling a sponsorship. */\n  CancelledSponsorship = 'CANCELLED_SPONSORSHIP',\n  /** The activity was starting a sponsorship. */\n  NewSponsorship = 'NEW_SPONSORSHIP',\n  /** The activity was scheduling a downgrade or cancellation. */\n  PendingChange = 'PENDING_CHANGE',\n  /** The activity was funds being refunded to the sponsor or GitHub. */\n  Refund = 'REFUND',\n  /** The activity was disabling matching for a previously matched sponsorship. */\n  SponsorMatchDisabled = 'SPONSOR_MATCH_DISABLED',\n  /** The activity was changing the sponsorship tier, either directly by the sponsor or by a scheduled/pending change. */\n  TierChange = 'TIER_CHANGE'\n}\n\n/** The connection type for SponsorsActivity. */\nexport type SponsorsActivityConnection = {\n  __typename?: 'SponsorsActivityConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorsActivityEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SponsorsActivity>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type SponsorsActivityEdge = {\n  __typename?: 'SponsorsActivityEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<SponsorsActivity>;\n};\n\n/** Ordering options for GitHub Sponsors activity connections. */\nexport type SponsorsActivityOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order activity by. */\n  field: SponsorsActivityOrderField;\n};\n\n/** Properties by which GitHub Sponsors activity connections can be ordered. */\nexport enum SponsorsActivityOrderField {\n  /** Order activities by when they happened. */\n  Timestamp = 'TIMESTAMP'\n}\n\n/** The possible time periods for which Sponsors activities can be requested. */\nexport enum SponsorsActivityPeriod {\n  /** Don't restrict the activity to any date range, include all activity. */\n  All = 'ALL',\n  /** The previous calendar day. */\n  Day = 'DAY',\n  /** The previous thirty days. */\n  Month = 'MONTH',\n  /** The previous seven days. */\n  Week = 'WEEK'\n}\n\n/** Represents countries or regions for billing and residence for a GitHub Sponsors profile. */\nexport enum SponsorsCountryOrRegionCode {\n  /** Andorra */\n  Ad = 'AD',\n  /** United Arab Emirates */\n  Ae = 'AE',\n  /** Afghanistan */\n  Af = 'AF',\n  /** Antigua and Barbuda */\n  Ag = 'AG',\n  /** Anguilla */\n  Ai = 'AI',\n  /** Albania */\n  Al = 'AL',\n  /** Armenia */\n  Am = 'AM',\n  /** Angola */\n  Ao = 'AO',\n  /** Antarctica */\n  Aq = 'AQ',\n  /** Argentina */\n  Ar = 'AR',\n  /** American Samoa */\n  As = 'AS',\n  /** Austria */\n  At = 'AT',\n  /** Australia */\n  Au = 'AU',\n  /** Aruba */\n  Aw = 'AW',\n  /** Åland */\n  Ax = 'AX',\n  /** Azerbaijan */\n  Az = 'AZ',\n  /** Bosnia and Herzegovina */\n  Ba = 'BA',\n  /** Barbados */\n  Bb = 'BB',\n  /** Bangladesh */\n  Bd = 'BD',\n  /** Belgium */\n  Be = 'BE',\n  /** Burkina Faso */\n  Bf = 'BF',\n  /** Bulgaria */\n  Bg = 'BG',\n  /** Bahrain */\n  Bh = 'BH',\n  /** Burundi */\n  Bi = 'BI',\n  /** Benin */\n  Bj = 'BJ',\n  /** Saint Barthélemy */\n  Bl = 'BL',\n  /** Bermuda */\n  Bm = 'BM',\n  /** Brunei Darussalam */\n  Bn = 'BN',\n  /** Bolivia */\n  Bo = 'BO',\n  /** Bonaire, Sint Eustatius and Saba */\n  Bq = 'BQ',\n  /** Brazil */\n  Br = 'BR',\n  /** Bahamas */\n  Bs = 'BS',\n  /** Bhutan */\n  Bt = 'BT',\n  /** Bouvet Island */\n  Bv = 'BV',\n  /** Botswana */\n  Bw = 'BW',\n  /** Belarus */\n  By = 'BY',\n  /** Belize */\n  Bz = 'BZ',\n  /** Canada */\n  Ca = 'CA',\n  /** Cocos (Keeling) Islands */\n  Cc = 'CC',\n  /** Congo (Kinshasa) */\n  Cd = 'CD',\n  /** Central African Republic */\n  Cf = 'CF',\n  /** Congo (Brazzaville) */\n  Cg = 'CG',\n  /** Switzerland */\n  Ch = 'CH',\n  /** Côte d'Ivoire */\n  Ci = 'CI',\n  /** Cook Islands */\n  Ck = 'CK',\n  /** Chile */\n  Cl = 'CL',\n  /** Cameroon */\n  Cm = 'CM',\n  /** China */\n  Cn = 'CN',\n  /** Colombia */\n  Co = 'CO',\n  /** Costa Rica */\n  Cr = 'CR',\n  /** Cape Verde */\n  Cv = 'CV',\n  /** Curaçao */\n  Cw = 'CW',\n  /** Christmas Island */\n  Cx = 'CX',\n  /** Cyprus */\n  Cy = 'CY',\n  /** Czech Republic */\n  Cz = 'CZ',\n  /** Germany */\n  De = 'DE',\n  /** Djibouti */\n  Dj = 'DJ',\n  /** Denmark */\n  Dk = 'DK',\n  /** Dominica */\n  Dm = 'DM',\n  /** Dominican Republic */\n  Do = 'DO',\n  /** Algeria */\n  Dz = 'DZ',\n  /** Ecuador */\n  Ec = 'EC',\n  /** Estonia */\n  Ee = 'EE',\n  /** Egypt */\n  Eg = 'EG',\n  /** Western Sahara */\n  Eh = 'EH',\n  /** Eritrea */\n  Er = 'ER',\n  /** Spain */\n  Es = 'ES',\n  /** Ethiopia */\n  Et = 'ET',\n  /** Finland */\n  Fi = 'FI',\n  /** Fiji */\n  Fj = 'FJ',\n  /** Falkland Islands */\n  Fk = 'FK',\n  /** Micronesia */\n  Fm = 'FM',\n  /** Faroe Islands */\n  Fo = 'FO',\n  /** France */\n  Fr = 'FR',\n  /** Gabon */\n  Ga = 'GA',\n  /** United Kingdom */\n  Gb = 'GB',\n  /** Grenada */\n  Gd = 'GD',\n  /** Georgia */\n  Ge = 'GE',\n  /** French Guiana */\n  Gf = 'GF',\n  /** Guernsey */\n  Gg = 'GG',\n  /** Ghana */\n  Gh = 'GH',\n  /** Gibraltar */\n  Gi = 'GI',\n  /** Greenland */\n  Gl = 'GL',\n  /** Gambia */\n  Gm = 'GM',\n  /** Guinea */\n  Gn = 'GN',\n  /** Guadeloupe */\n  Gp = 'GP',\n  /** Equatorial Guinea */\n  Gq = 'GQ',\n  /** Greece */\n  Gr = 'GR',\n  /** South Georgia and South Sandwich Islands */\n  Gs = 'GS',\n  /** Guatemala */\n  Gt = 'GT',\n  /** Guam */\n  Gu = 'GU',\n  /** Guinea-Bissau */\n  Gw = 'GW',\n  /** Guyana */\n  Gy = 'GY',\n  /** Hong Kong */\n  Hk = 'HK',\n  /** Heard and McDonald Islands */\n  Hm = 'HM',\n  /** Honduras */\n  Hn = 'HN',\n  /** Croatia */\n  Hr = 'HR',\n  /** Haiti */\n  Ht = 'HT',\n  /** Hungary */\n  Hu = 'HU',\n  /** Indonesia */\n  Id = 'ID',\n  /** Ireland */\n  Ie = 'IE',\n  /** Israel */\n  Il = 'IL',\n  /** Isle of Man */\n  Im = 'IM',\n  /** India */\n  In = 'IN',\n  /** British Indian Ocean Territory */\n  Io = 'IO',\n  /** Iraq */\n  Iq = 'IQ',\n  /** Iran */\n  Ir = 'IR',\n  /** Iceland */\n  Is = 'IS',\n  /** Italy */\n  It = 'IT',\n  /** Jersey */\n  Je = 'JE',\n  /** Jamaica */\n  Jm = 'JM',\n  /** Jordan */\n  Jo = 'JO',\n  /** Japan */\n  Jp = 'JP',\n  /** Kenya */\n  Ke = 'KE',\n  /** Kyrgyzstan */\n  Kg = 'KG',\n  /** Cambodia */\n  Kh = 'KH',\n  /** Kiribati */\n  Ki = 'KI',\n  /** Comoros */\n  Km = 'KM',\n  /** Saint Kitts and Nevis */\n  Kn = 'KN',\n  /** Korea, South */\n  Kr = 'KR',\n  /** Kuwait */\n  Kw = 'KW',\n  /** Cayman Islands */\n  Ky = 'KY',\n  /** Kazakhstan */\n  Kz = 'KZ',\n  /** Laos */\n  La = 'LA',\n  /** Lebanon */\n  Lb = 'LB',\n  /** Saint Lucia */\n  Lc = 'LC',\n  /** Liechtenstein */\n  Li = 'LI',\n  /** Sri Lanka */\n  Lk = 'LK',\n  /** Liberia */\n  Lr = 'LR',\n  /** Lesotho */\n  Ls = 'LS',\n  /** Lithuania */\n  Lt = 'LT',\n  /** Luxembourg */\n  Lu = 'LU',\n  /** Latvia */\n  Lv = 'LV',\n  /** Libya */\n  Ly = 'LY',\n  /** Morocco */\n  Ma = 'MA',\n  /** Monaco */\n  Mc = 'MC',\n  /** Moldova */\n  Md = 'MD',\n  /** Montenegro */\n  Me = 'ME',\n  /** Saint Martin (French part) */\n  Mf = 'MF',\n  /** Madagascar */\n  Mg = 'MG',\n  /** Marshall Islands */\n  Mh = 'MH',\n  /** Macedonia */\n  Mk = 'MK',\n  /** Mali */\n  Ml = 'ML',\n  /** Myanmar */\n  Mm = 'MM',\n  /** Mongolia */\n  Mn = 'MN',\n  /** Macau */\n  Mo = 'MO',\n  /** Northern Mariana Islands */\n  Mp = 'MP',\n  /** Martinique */\n  Mq = 'MQ',\n  /** Mauritania */\n  Mr = 'MR',\n  /** Montserrat */\n  Ms = 'MS',\n  /** Malta */\n  Mt = 'MT',\n  /** Mauritius */\n  Mu = 'MU',\n  /** Maldives */\n  Mv = 'MV',\n  /** Malawi */\n  Mw = 'MW',\n  /** Mexico */\n  Mx = 'MX',\n  /** Malaysia */\n  My = 'MY',\n  /** Mozambique */\n  Mz = 'MZ',\n  /** Namibia */\n  Na = 'NA',\n  /** New Caledonia */\n  Nc = 'NC',\n  /** Niger */\n  Ne = 'NE',\n  /** Norfolk Island */\n  Nf = 'NF',\n  /** Nigeria */\n  Ng = 'NG',\n  /** Nicaragua */\n  Ni = 'NI',\n  /** Netherlands */\n  Nl = 'NL',\n  /** Norway */\n  No = 'NO',\n  /** Nepal */\n  Np = 'NP',\n  /** Nauru */\n  Nr = 'NR',\n  /** Niue */\n  Nu = 'NU',\n  /** New Zealand */\n  Nz = 'NZ',\n  /** Oman */\n  Om = 'OM',\n  /** Panama */\n  Pa = 'PA',\n  /** Peru */\n  Pe = 'PE',\n  /** French Polynesia */\n  Pf = 'PF',\n  /** Papua New Guinea */\n  Pg = 'PG',\n  /** Philippines */\n  Ph = 'PH',\n  /** Pakistan */\n  Pk = 'PK',\n  /** Poland */\n  Pl = 'PL',\n  /** Saint Pierre and Miquelon */\n  Pm = 'PM',\n  /** Pitcairn */\n  Pn = 'PN',\n  /** Puerto Rico */\n  Pr = 'PR',\n  /** Palestine */\n  Ps = 'PS',\n  /** Portugal */\n  Pt = 'PT',\n  /** Palau */\n  Pw = 'PW',\n  /** Paraguay */\n  Py = 'PY',\n  /** Qatar */\n  Qa = 'QA',\n  /** Reunion */\n  Re = 'RE',\n  /** Romania */\n  Ro = 'RO',\n  /** Serbia */\n  Rs = 'RS',\n  /** Russian Federation */\n  Ru = 'RU',\n  /** Rwanda */\n  Rw = 'RW',\n  /** Saudi Arabia */\n  Sa = 'SA',\n  /** Solomon Islands */\n  Sb = 'SB',\n  /** Seychelles */\n  Sc = 'SC',\n  /** Sudan */\n  Sd = 'SD',\n  /** Sweden */\n  Se = 'SE',\n  /** Singapore */\n  Sg = 'SG',\n  /** Saint Helena */\n  Sh = 'SH',\n  /** Slovenia */\n  Si = 'SI',\n  /** Svalbard and Jan Mayen Islands */\n  Sj = 'SJ',\n  /** Slovakia */\n  Sk = 'SK',\n  /** Sierra Leone */\n  Sl = 'SL',\n  /** San Marino */\n  Sm = 'SM',\n  /** Senegal */\n  Sn = 'SN',\n  /** Somalia */\n  So = 'SO',\n  /** Suriname */\n  Sr = 'SR',\n  /** South Sudan */\n  Ss = 'SS',\n  /** Sao Tome and Principe */\n  St = 'ST',\n  /** El Salvador */\n  Sv = 'SV',\n  /** Sint Maarten (Dutch part) */\n  Sx = 'SX',\n  /** Swaziland */\n  Sz = 'SZ',\n  /** Turks and Caicos Islands */\n  Tc = 'TC',\n  /** Chad */\n  Td = 'TD',\n  /** French Southern Lands */\n  Tf = 'TF',\n  /** Togo */\n  Tg = 'TG',\n  /** Thailand */\n  Th = 'TH',\n  /** Tajikistan */\n  Tj = 'TJ',\n  /** Tokelau */\n  Tk = 'TK',\n  /** Timor-Leste */\n  Tl = 'TL',\n  /** Turkmenistan */\n  Tm = 'TM',\n  /** Tunisia */\n  Tn = 'TN',\n  /** Tonga */\n  To = 'TO',\n  /** Turkey */\n  Tr = 'TR',\n  /** Trinidad and Tobago */\n  Tt = 'TT',\n  /** Tuvalu */\n  Tv = 'TV',\n  /** Taiwan */\n  Tw = 'TW',\n  /** Tanzania */\n  Tz = 'TZ',\n  /** Ukraine */\n  Ua = 'UA',\n  /** Uganda */\n  Ug = 'UG',\n  /** United States Minor Outlying Islands */\n  Um = 'UM',\n  /** United States of America */\n  Us = 'US',\n  /** Uruguay */\n  Uy = 'UY',\n  /** Uzbekistan */\n  Uz = 'UZ',\n  /** Vatican City */\n  Va = 'VA',\n  /** Saint Vincent and the Grenadines */\n  Vc = 'VC',\n  /** Venezuela */\n  Ve = 'VE',\n  /** Virgin Islands, British */\n  Vg = 'VG',\n  /** Virgin Islands, U.S. */\n  Vi = 'VI',\n  /** Vietnam */\n  Vn = 'VN',\n  /** Vanuatu */\n  Vu = 'VU',\n  /** Wallis and Futuna Islands */\n  Wf = 'WF',\n  /** Samoa */\n  Ws = 'WS',\n  /** Yemen */\n  Ye = 'YE',\n  /** Mayotte */\n  Yt = 'YT',\n  /** South Africa */\n  Za = 'ZA',\n  /** Zambia */\n  Zm = 'ZM',\n  /** Zimbabwe */\n  Zw = 'ZW'\n}\n\n/** A goal associated with a GitHub Sponsors listing, representing a target the sponsored maintainer would like to attain. */\nexport type SponsorsGoal = {\n  __typename?: 'SponsorsGoal';\n  /** A description of the goal from the maintainer. */\n  description?: Maybe<Scalars['String']>;\n  /** What the objective of this goal is. */\n  kind: SponsorsGoalKind;\n  /** The percentage representing how complete this goal is, between 0-100. */\n  percentComplete: Scalars['Int'];\n  /**\n   * What the goal amount is. Represents an amount in USD for monthly sponsorship\n   * amount goals. Represents a count of unique sponsors for total sponsors count goals.\n   */\n  targetValue: Scalars['Int'];\n  /** A brief summary of the kind and target value of this goal. */\n  title: Scalars['String'];\n};\n\n/** The different kinds of goals a GitHub Sponsors member can have. */\nexport enum SponsorsGoalKind {\n  /** The goal is about getting a certain amount in USD from sponsorships each month. */\n  MonthlySponsorshipAmount = 'MONTHLY_SPONSORSHIP_AMOUNT',\n  /** The goal is about reaching a certain number of sponsors. */\n  TotalSponsorsCount = 'TOTAL_SPONSORS_COUNT'\n}\n\n/** A GitHub Sponsors listing. */\nexport type SponsorsListing = Node & {\n  __typename?: 'SponsorsListing';\n  /** The current goal the maintainer is trying to reach with GitHub Sponsors, if any. */\n  activeGoal?: Maybe<SponsorsGoal>;\n  /**\n   * The Stripe Connect account currently in use for payouts for this Sponsors\n   * listing, if any. Will only return a value when queried by the maintainer\n   * themselves, or by an admin of the sponsorable organization.\n   */\n  activeStripeConnectAccount?: Maybe<StripeConnectAccount>;\n  /**\n   * The name of the country or region with the maintainer's bank account or fiscal\n   * host. Will only return a value when queried by the maintainer themselves, or\n   * by an admin of the sponsorable organization.\n   */\n  billingCountryOrRegion?: Maybe<Scalars['String']>;\n  /**\n   * The email address used by GitHub to contact the sponsorable about their GitHub\n   * Sponsors profile. Will only return a value when queried by the maintainer\n   * themselves, or by an admin of the sponsorable organization.\n   */\n  contactEmailAddress?: Maybe<Scalars['String']>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The HTTP path for the Sponsors dashboard for this Sponsors listing. */\n  dashboardResourcePath: Scalars['URI'];\n  /** The HTTP URL for the Sponsors dashboard for this Sponsors listing. */\n  dashboardUrl: Scalars['URI'];\n  /** The records featured on the GitHub Sponsors profile. */\n  featuredItems: Array<SponsorsListingFeaturedItem>;\n  /**\n   * The fiscal host used for payments, if any. Will only return a value when\n   * queried by the maintainer themselves, or by an admin of the sponsorable organization.\n   */\n  fiscalHost?: Maybe<Organization>;\n  /** The full description of the listing. */\n  fullDescription: Scalars['String'];\n  /** The full description of the listing rendered to HTML. */\n  fullDescriptionHTML: Scalars['HTML'];\n  id: Scalars['ID'];\n  /** Whether this listing is publicly visible. */\n  isPublic: Scalars['Boolean'];\n  /** The listing's full name. */\n  name: Scalars['String'];\n  /** A future date on which this listing is eligible to receive a payout. */\n  nextPayoutDate?: Maybe<Scalars['Date']>;\n  /**\n   * The name of the country or region where the maintainer resides. Will only\n   * return a value when queried by the maintainer themselves, or by an admin of\n   * the sponsorable organization.\n   */\n  residenceCountryOrRegion?: Maybe<Scalars['String']>;\n  /** The HTTP path for this Sponsors listing. */\n  resourcePath: Scalars['URI'];\n  /** The short description of the listing. */\n  shortDescription: Scalars['String'];\n  /** The short name of the listing. */\n  slug: Scalars['String'];\n  /** The entity this listing represents who can be sponsored on GitHub Sponsors. */\n  sponsorable: Sponsorable;\n  /** The tiers for this GitHub Sponsors profile. */\n  tiers?: Maybe<SponsorsTierConnection>;\n  /** The HTTP URL for this Sponsors listing. */\n  url: Scalars['URI'];\n};\n\n\n/** A GitHub Sponsors listing. */\nexport type SponsorsListingFeaturedItemsArgs = {\n  featureableTypes?: InputMaybe<Array<SponsorsListingFeaturedItemFeatureableType>>;\n};\n\n\n/** A GitHub Sponsors listing. */\nexport type SponsorsListingTiersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includeUnpublished?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorsTierOrder>;\n};\n\n/** A record that can be featured on a GitHub Sponsors profile. */\nexport type SponsorsListingFeatureableItem = Repository | User;\n\n/** A record that is promoted on a GitHub Sponsors profile. */\nexport type SponsorsListingFeaturedItem = Node & {\n  __typename?: 'SponsorsListingFeaturedItem';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /**\n   * Will either be a description from the sponsorable maintainer about why they\n   * featured this item, or the item's description itself, such as a user's bio\n   * from their GitHub profile page.\n   */\n  description?: Maybe<Scalars['String']>;\n  /** The record that is featured on the GitHub Sponsors profile. */\n  featureable: SponsorsListingFeatureableItem;\n  id: Scalars['ID'];\n  /**\n   * The position of this featured item on the GitHub Sponsors profile with a lower\n   * position indicating higher precedence. Starts at 1.\n   */\n  position: Scalars['Int'];\n  /** The GitHub Sponsors profile that features this record. */\n  sponsorsListing: SponsorsListing;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The different kinds of records that can be featured on a GitHub Sponsors profile page. */\nexport enum SponsorsListingFeaturedItemFeatureableType {\n  /** A repository owned by the user or organization with the GitHub Sponsors profile. */\n  Repository = 'REPOSITORY',\n  /** A user who belongs to the organization with the GitHub Sponsors profile. */\n  User = 'USER'\n}\n\n/** A GitHub Sponsors tier associated with a GitHub Sponsors listing. */\nexport type SponsorsTier = Node & {\n  __typename?: 'SponsorsTier';\n  /** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */\n  adminInfo?: Maybe<SponsorsTierAdminInfo>;\n  /**\n   * Get a different tier for this tier's maintainer that is at the same frequency\n   * as this tier but with an equal or lesser cost. Returns the published tier with\n   * the monthly price closest to this tier's without going over.\n   */\n  closestLesserValueTier?: Maybe<SponsorsTier>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The description of the tier. */\n  description: Scalars['String'];\n  /** The tier description rendered to HTML */\n  descriptionHTML: Scalars['HTML'];\n  id: Scalars['ID'];\n  /**\n   * Whether this tier was chosen at checkout time by the sponsor rather than\n   * defined ahead of time by the maintainer who manages the Sponsors listing.\n   */\n  isCustomAmount: Scalars['Boolean'];\n  /** Whether this tier is only for use with one-time sponsorships. */\n  isOneTime: Scalars['Boolean'];\n  /** How much this tier costs per month in cents. */\n  monthlyPriceInCents: Scalars['Int'];\n  /** How much this tier costs per month in USD. */\n  monthlyPriceInDollars: Scalars['Int'];\n  /** The name of the tier. */\n  name: Scalars['String'];\n  /** The sponsors listing that this tier belongs to. */\n  sponsorsListing: SponsorsListing;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */\nexport type SponsorsTierAdminInfo = {\n  __typename?: 'SponsorsTierAdminInfo';\n  /**\n   * Indicates whether this tier is still a work in progress by the sponsorable and\n   * not yet published to the associated GitHub Sponsors profile. Draft tiers\n   * cannot be used for new sponsorships and will not be in use on existing\n   * sponsorships. Draft tiers cannot be seen by anyone but the admins of the\n   * GitHub Sponsors profile.\n   */\n  isDraft: Scalars['Boolean'];\n  /**\n   * Indicates whether this tier is published to the associated GitHub Sponsors\n   * profile. Published tiers are visible to anyone who can see the GitHub Sponsors\n   * profile, and are available for use in sponsorships if the GitHub Sponsors\n   * profile is publicly visible.\n   */\n  isPublished: Scalars['Boolean'];\n  /**\n   * Indicates whether this tier has been retired from the associated GitHub\n   * Sponsors profile. Retired tiers are no longer shown on the GitHub Sponsors\n   * profile and cannot be chosen for new sponsorships. Existing sponsorships may\n   * still use retired tiers if the sponsor selected the tier before it was retired.\n   */\n  isRetired: Scalars['Boolean'];\n  /** The sponsorships using this tier. */\n  sponsorships: SponsorshipConnection;\n};\n\n\n/** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */\nexport type SponsorsTierAdminInfoSponsorshipsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includePrivate?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n/** The connection type for SponsorsTier. */\nexport type SponsorsTierConnection = {\n  __typename?: 'SponsorsTierConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorsTierEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SponsorsTier>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type SponsorsTierEdge = {\n  __typename?: 'SponsorsTierEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<SponsorsTier>;\n};\n\n/** Ordering options for Sponsors tiers connections. */\nexport type SponsorsTierOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order tiers by. */\n  field: SponsorsTierOrderField;\n};\n\n/** Properties by which Sponsors tiers connections can be ordered. */\nexport enum SponsorsTierOrderField {\n  /** Order tiers by creation time. */\n  CreatedAt = 'CREATED_AT',\n  /** Order tiers by their monthly price in cents */\n  MonthlyPriceInCents = 'MONTHLY_PRICE_IN_CENTS'\n}\n\n/** A sponsorship relationship between a sponsor and a maintainer */\nexport type Sponsorship = Node & {\n  __typename?: 'Sponsorship';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /**\n   * Whether the sponsorship is active. False implies the sponsor is a past sponsor\n   * of the maintainer, while true implies they are a current sponsor.\n   */\n  isActive: Scalars['Boolean'];\n  /** Whether this sponsorship represents a one-time payment versus a recurring sponsorship. */\n  isOneTimePayment: Scalars['Boolean'];\n  /**\n   * Whether the sponsor has chosen to receive sponsorship update emails sent from\n   * the sponsorable. Only returns a non-null value when the viewer has permission to know this.\n   */\n  isSponsorOptedIntoEmail?: Maybe<Scalars['Boolean']>;\n  /**\n   * The entity that is being sponsored\n   * @deprecated `Sponsorship.maintainer` will be removed. Use `Sponsorship.sponsorable` instead. Removal on 2020-04-01 UTC.\n   */\n  maintainer: User;\n  /** The privacy level for this sponsorship. */\n  privacyLevel: SponsorshipPrivacy;\n  /**\n   * The user that is sponsoring. Returns null if the sponsorship is private or if sponsor is not a user.\n   * @deprecated `Sponsorship.sponsor` will be removed. Use `Sponsorship.sponsorEntity` instead. Removal on 2020-10-01 UTC.\n   */\n  sponsor?: Maybe<User>;\n  /** The user or organization that is sponsoring, if you have permission to view them. */\n  sponsorEntity?: Maybe<Sponsor>;\n  /** The entity that is being sponsored */\n  sponsorable: Sponsorable;\n  /** The associated sponsorship tier */\n  tier?: Maybe<SponsorsTier>;\n  /** Identifies the date and time when the current tier was chosen for this sponsorship. */\n  tierSelectedAt?: Maybe<Scalars['DateTime']>;\n};\n\n/** The connection type for Sponsorship. */\nexport type SponsorshipConnection = {\n  __typename?: 'SponsorshipConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorshipEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Sponsorship>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n  /**\n   * The total amount in cents of all recurring sponsorships in the connection\n   * whose amount you can view. Does not include one-time sponsorships.\n   */\n  totalRecurringMonthlyPriceInCents: Scalars['Int'];\n  /**\n   * The total amount in USD of all recurring sponsorships in the connection whose\n   * amount you can view. Does not include one-time sponsorships.\n   */\n  totalRecurringMonthlyPriceInDollars: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type SponsorshipEdge = {\n  __typename?: 'SponsorshipEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Sponsorship>;\n};\n\n/** An update sent to sponsors of a user or organization on GitHub Sponsors. */\nexport type SponsorshipNewsletter = Node & {\n  __typename?: 'SponsorshipNewsletter';\n  /** The author of the newsletter. */\n  author?: Maybe<User>;\n  /** The contents of the newsletter, the message the sponsorable wanted to give. */\n  body: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Indicates if the newsletter has been made available to sponsors. */\n  isPublished: Scalars['Boolean'];\n  /** The user or organization this newsletter is from. */\n  sponsorable: Sponsorable;\n  /** The subject of the newsletter, what it's about. */\n  subject: Scalars['String'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The connection type for SponsorshipNewsletter. */\nexport type SponsorshipNewsletterConnection = {\n  __typename?: 'SponsorshipNewsletterConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SponsorshipNewsletterEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<SponsorshipNewsletter>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type SponsorshipNewsletterEdge = {\n  __typename?: 'SponsorshipNewsletterEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<SponsorshipNewsletter>;\n};\n\n/** Ordering options for sponsorship newsletter connections. */\nexport type SponsorshipNewsletterOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order sponsorship newsletters by. */\n  field: SponsorshipNewsletterOrderField;\n};\n\n/** Properties by which sponsorship update connections can be ordered. */\nexport enum SponsorshipNewsletterOrderField {\n  /** Order sponsorship newsletters by when they were created. */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** Ordering options for sponsorship connections. */\nexport type SponsorshipOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order sponsorship by. */\n  field: SponsorshipOrderField;\n};\n\n/** Properties by which sponsorship connections can be ordered. */\nexport enum SponsorshipOrderField {\n  /** Order sponsorship by creation time. */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** The privacy of a sponsorship */\nexport enum SponsorshipPrivacy {\n  /** Private */\n  Private = 'PRIVATE',\n  /** Public */\n  Public = 'PUBLIC'\n}\n\n/** The possible default commit messages for squash merges. */\nexport enum SquashMergeCommitMessage {\n  /** Default to a blank commit message. */\n  Blank = 'BLANK',\n  /** Default to the branch's commit messages. */\n  CommitMessages = 'COMMIT_MESSAGES',\n  /** Default to the pull request's body. */\n  PrBody = 'PR_BODY'\n}\n\n/** The possible default commit titles for squash merges. */\nexport enum SquashMergeCommitTitle {\n  /** Default to the commit's title (if only one commit) or the pull request's title (when more than one commit). */\n  CommitOrPrTitle = 'COMMIT_OR_PR_TITLE',\n  /** Default to the pull request's title. */\n  PrTitle = 'PR_TITLE'\n}\n\n/** Represents an SSH signature on a Commit or Tag. */\nexport type SshSignature = GitSignature & {\n  __typename?: 'SshSignature';\n  /** Email used to sign this object. */\n  email: Scalars['String'];\n  /** True if the signature is valid and verified by GitHub. */\n  isValid: Scalars['Boolean'];\n  /** Hex-encoded fingerprint of the key that signed this object. */\n  keyFingerprint?: Maybe<Scalars['String']>;\n  /** Payload for GPG signing object. Raw ODB object without the signature header. */\n  payload: Scalars['String'];\n  /** ASCII-armored signature header from object. */\n  signature: Scalars['String'];\n  /** GitHub user corresponding to the email signing this commit. */\n  signer?: Maybe<User>;\n  /**\n   * The state of this signature. `VALID` if signature is valid and verified by\n   * GitHub, otherwise represents reason why signature is considered invalid.\n   */\n  state: GitSignatureState;\n  /** True if the signature was made with GitHub's signing key. */\n  wasSignedByGitHub: Scalars['Boolean'];\n};\n\n/** Ways in which star connections can be ordered. */\nexport type StarOrder = {\n  /** The direction in which to order nodes. */\n  direction: OrderDirection;\n  /** The field in which to order nodes by. */\n  field: StarOrderField;\n};\n\n/** Properties by which star connections can be ordered. */\nexport enum StarOrderField {\n  /** Allows ordering a list of stars by when they were created. */\n  StarredAt = 'STARRED_AT'\n}\n\n/** The connection type for User. */\nexport type StargazerConnection = {\n  __typename?: 'StargazerConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<StargazerEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents a user that's starred a repository. */\nexport type StargazerEdge = {\n  __typename?: 'StargazerEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  node: User;\n  /** Identifies when the item was starred. */\n  starredAt: Scalars['DateTime'];\n};\n\n/** Things that can be starred. */\nexport type Starrable = {\n  id: Scalars['ID'];\n  /** Returns a count of how many stargazers there are on this object */\n  stargazerCount: Scalars['Int'];\n  /** A list of users who have starred this starrable. */\n  stargazers: StargazerConnection;\n  /** Returns a boolean indicating whether the viewing user has starred this starrable. */\n  viewerHasStarred: Scalars['Boolean'];\n};\n\n\n/** Things that can be starred. */\nexport type StarrableStargazersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<StarOrder>;\n};\n\n/** The connection type for Repository. */\nexport type StarredRepositoryConnection = {\n  __typename?: 'StarredRepositoryConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<StarredRepositoryEdge>>>;\n  /** Is the list of stars for this user truncated? This is true for users that have many stars. */\n  isOverLimit: Scalars['Boolean'];\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Repository>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents a starred repository. */\nexport type StarredRepositoryEdge = {\n  __typename?: 'StarredRepositoryEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  node: Repository;\n  /** Identifies when the item was starred. */\n  starredAt: Scalars['DateTime'];\n};\n\n/** Autogenerated input type of StartOrganizationMigration */\nexport type StartOrganizationMigrationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The migration source access token. */\n  sourceAccessToken: Scalars['String'];\n  /** The URL of the organization to migrate. */\n  sourceOrgUrl: Scalars['URI'];\n  /** The ID of the enterprise the target organization belongs to. */\n  targetEnterpriseId: Scalars['ID'];\n  /** The name of the target organization. */\n  targetOrgName: Scalars['String'];\n};\n\n/** Autogenerated return type of StartOrganizationMigration */\nexport type StartOrganizationMigrationPayload = {\n  __typename?: 'StartOrganizationMigrationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new organization migration. */\n  orgMigration?: Maybe<OrganizationMigration>;\n};\n\n/** Autogenerated input type of StartRepositoryMigration */\nexport type StartRepositoryMigrationInput = {\n  /** The migration source access token. */\n  accessToken?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Whether to continue the migration on error. Defaults to `false`. */\n  continueOnError?: InputMaybe<Scalars['Boolean']>;\n  /** The signed URL to access the user-uploaded git archive. */\n  gitArchiveUrl?: InputMaybe<Scalars['String']>;\n  /** The GitHub personal access token of the user importing to the target repository. */\n  githubPat?: InputMaybe<Scalars['String']>;\n  /** Whether to lock the source repository. */\n  lockSource?: InputMaybe<Scalars['Boolean']>;\n  /** The signed URL to access the user-uploaded metadata archive. */\n  metadataArchiveUrl?: InputMaybe<Scalars['String']>;\n  /** The ID of the organization that will own the imported repository. */\n  ownerId: Scalars['ID'];\n  /** The name of the imported repository. */\n  repositoryName: Scalars['String'];\n  /** Whether to skip migrating releases for the repository. */\n  skipReleases?: InputMaybe<Scalars['Boolean']>;\n  /** The ID of the migration source. */\n  sourceId: Scalars['ID'];\n  /** The URL of the source repository. */\n  sourceRepositoryUrl?: InputMaybe<Scalars['URI']>;\n  /** The visibility of the imported repository. */\n  targetRepoVisibility?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of StartRepositoryMigration */\nexport type StartRepositoryMigrationPayload = {\n  __typename?: 'StartRepositoryMigrationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The new repository migration. */\n  repositoryMigration?: Maybe<RepositoryMigration>;\n};\n\n/** Represents a commit status. */\nexport type Status = Node & {\n  __typename?: 'Status';\n  /** A list of status contexts and check runs for this commit. */\n  combinedContexts: StatusCheckRollupContextConnection;\n  /** The commit this status is attached to. */\n  commit?: Maybe<Commit>;\n  /** Looks up an individual status context by context name. */\n  context?: Maybe<StatusContext>;\n  /** The individual status contexts for this commit. */\n  contexts: Array<StatusContext>;\n  id: Scalars['ID'];\n  /** The combined commit status. */\n  state: StatusState;\n};\n\n\n/** Represents a commit status. */\nexport type StatusCombinedContextsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** Represents a commit status. */\nexport type StatusContextArgs = {\n  name: Scalars['String'];\n};\n\n/** Required status check */\nexport type StatusCheckConfiguration = {\n  __typename?: 'StatusCheckConfiguration';\n  /** The status check context name that must be present on the commit. */\n  context: Scalars['String'];\n  /** The optional integration ID that this status check must originate from. */\n  integrationId?: Maybe<Scalars['Int']>;\n};\n\n/** Required status check */\nexport type StatusCheckConfigurationInput = {\n  /** The status check context name that must be present on the commit. */\n  context: Scalars['String'];\n  /** The optional integration ID that this status check must originate from. */\n  integrationId?: InputMaybe<Scalars['Int']>;\n};\n\n/** Represents the rollup for both the check runs and status for a commit. */\nexport type StatusCheckRollup = Node & {\n  __typename?: 'StatusCheckRollup';\n  /** The commit the status and check runs are attached to. */\n  commit?: Maybe<Commit>;\n  /** A list of status contexts and check runs for this commit. */\n  contexts: StatusCheckRollupContextConnection;\n  id: Scalars['ID'];\n  /** The combined status for the commit. */\n  state: StatusState;\n};\n\n\n/** Represents the rollup for both the check runs and status for a commit. */\nexport type StatusCheckRollupContextsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Types that can be inside a StatusCheckRollup context. */\nexport type StatusCheckRollupContext = CheckRun | StatusContext;\n\n/** The connection type for StatusCheckRollupContext. */\nexport type StatusCheckRollupContextConnection = {\n  __typename?: 'StatusCheckRollupContextConnection';\n  /** The number of check runs in this rollup. */\n  checkRunCount: Scalars['Int'];\n  /** Counts of check runs by state. */\n  checkRunCountsByState?: Maybe<Array<CheckRunStateCount>>;\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<StatusCheckRollupContextEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<StatusCheckRollupContext>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The number of status contexts in this rollup. */\n  statusContextCount: Scalars['Int'];\n  /** Counts of status contexts by state. */\n  statusContextCountsByState?: Maybe<Array<StatusContextStateCount>>;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type StatusCheckRollupContextEdge = {\n  __typename?: 'StatusCheckRollupContextEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<StatusCheckRollupContext>;\n};\n\n/** Represents an individual commit status context */\nexport type StatusContext = Node & RequirableByPullRequest & {\n  __typename?: 'StatusContext';\n  /** The avatar of the OAuth application or the user that created the status */\n  avatarUrl?: Maybe<Scalars['URI']>;\n  /** This commit this status context is attached to. */\n  commit?: Maybe<Commit>;\n  /** The name of this status context. */\n  context: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The actor who created this status context. */\n  creator?: Maybe<Actor>;\n  /** The description for this status context. */\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  /** Whether this is required to pass before merging for a specific pull request. */\n  isRequired: Scalars['Boolean'];\n  /** The state of this status context. */\n  state: StatusState;\n  /** The URL for this status context. */\n  targetUrl?: Maybe<Scalars['URI']>;\n};\n\n\n/** Represents an individual commit status context */\nexport type StatusContextAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** Represents an individual commit status context */\nexport type StatusContextIsRequiredArgs = {\n  pullRequestId?: InputMaybe<Scalars['ID']>;\n  pullRequestNumber?: InputMaybe<Scalars['Int']>;\n};\n\n/** Represents a count of the state of a status context. */\nexport type StatusContextStateCount = {\n  __typename?: 'StatusContextStateCount';\n  /** The number of statuses with this state. */\n  count: Scalars['Int'];\n  /** The state of a status context. */\n  state: StatusState;\n};\n\n/** The possible commit status states. */\nexport enum StatusState {\n  /** Status is errored. */\n  Error = 'ERROR',\n  /** Status is expected. */\n  Expected = 'EXPECTED',\n  /** Status is failing. */\n  Failure = 'FAILURE',\n  /** Status is pending. */\n  Pending = 'PENDING',\n  /** Status is successful. */\n  Success = 'SUCCESS'\n}\n\n/** A Stripe Connect account for receiving sponsorship funds from GitHub Sponsors. */\nexport type StripeConnectAccount = {\n  __typename?: 'StripeConnectAccount';\n  /** The account number used to identify this Stripe Connect account. */\n  accountId: Scalars['String'];\n  /**\n   * The name of the country or region of an external account, such as a bank\n   * account, tied to the Stripe Connect account. Will only return a value when\n   * queried by the maintainer of the associated GitHub Sponsors profile\n   * themselves, or by an admin of the sponsorable organization.\n   */\n  billingCountryOrRegion?: Maybe<Scalars['String']>;\n  /**\n   * The name of the country or region of the Stripe Connect account. Will only\n   * return a value when queried by the maintainer of the associated GitHub\n   * Sponsors profile themselves, or by an admin of the sponsorable organization.\n   */\n  countryOrRegion?: Maybe<Scalars['String']>;\n  /** Whether this Stripe Connect account is currently in use for the associated GitHub Sponsors profile. */\n  isActive: Scalars['Boolean'];\n  /** The GitHub Sponsors profile associated with this Stripe Connect account. */\n  sponsorsListing: SponsorsListing;\n  /** The URL to access this Stripe Connect account on Stripe's website. */\n  stripeDashboardUrl: Scalars['URI'];\n};\n\n/** Autogenerated input type of SubmitPullRequestReview */\nexport type SubmitPullRequestReviewInput = {\n  /** The text field to set on the Pull Request Review. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The event to send to the Pull Request Review. */\n  event: PullRequestReviewEvent;\n  /** The Pull Request ID to submit any pending reviews. */\n  pullRequestId?: InputMaybe<Scalars['ID']>;\n  /** The Pull Request Review ID to submit. */\n  pullRequestReviewId?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of SubmitPullRequestReview */\nexport type SubmitPullRequestReviewPayload = {\n  __typename?: 'SubmitPullRequestReviewPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The submitted pull request review. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** A pointer to a repository at a specific revision embedded inside another repository. */\nexport type Submodule = {\n  __typename?: 'Submodule';\n  /** The branch of the upstream submodule for tracking updates */\n  branch?: Maybe<Scalars['String']>;\n  /** The git URL of the submodule repository */\n  gitUrl: Scalars['URI'];\n  /** The name of the submodule in .gitmodules */\n  name: Scalars['String'];\n  /** The name of the submodule in .gitmodules (Base64-encoded) */\n  nameRaw: Scalars['Base64String'];\n  /** The path in the superproject that this submodule is located in */\n  path: Scalars['String'];\n  /** The path in the superproject that this submodule is located in (Base64-encoded) */\n  pathRaw: Scalars['Base64String'];\n  /** The commit revision of the subproject repository being tracked by the submodule */\n  subprojectCommitOid?: Maybe<Scalars['GitObjectID']>;\n};\n\n/** The connection type for Submodule. */\nexport type SubmoduleConnection = {\n  __typename?: 'SubmoduleConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SubmoduleEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Submodule>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type SubmoduleEdge = {\n  __typename?: 'SubmoduleEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Submodule>;\n};\n\n/** Entities that can be subscribed to for web and email notifications. */\nexport type Subscribable = {\n  id: Scalars['ID'];\n  /** Check if the viewer is able to change their subscription status for the repository. */\n  viewerCanSubscribe: Scalars['Boolean'];\n  /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n  viewerSubscription?: Maybe<SubscriptionState>;\n};\n\n/** Represents a 'subscribed' event on a given `Subscribable`. */\nexport type SubscribedEvent = Node & {\n  __typename?: 'SubscribedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Object referenced by event. */\n  subscribable: Subscribable;\n};\n\n/** The possible states of a subscription. */\nexport enum SubscriptionState {\n  /** The User is never notified. */\n  Ignored = 'IGNORED',\n  /** The User is notified of all conversations. */\n  Subscribed = 'SUBSCRIBED',\n  /** The User is only notified when participating or @mentioned. */\n  Unsubscribed = 'UNSUBSCRIBED'\n}\n\n/** A suggestion to review a pull request based on a user's commit history and review comments. */\nexport type SuggestedReviewer = {\n  __typename?: 'SuggestedReviewer';\n  /** Is this suggestion based on past commits? */\n  isAuthor: Scalars['Boolean'];\n  /** Is this suggestion based on past review comments? */\n  isCommenter: Scalars['Boolean'];\n  /** Identifies the user suggested to review the pull request. */\n  reviewer: User;\n};\n\n/** Represents a Git tag. */\nexport type Tag = GitObject & Node & {\n  __typename?: 'Tag';\n  /** An abbreviated version of the Git object ID */\n  abbreviatedOid: Scalars['String'];\n  /** The HTTP path for this Git object */\n  commitResourcePath: Scalars['URI'];\n  /** The HTTP URL for this Git object */\n  commitUrl: Scalars['URI'];\n  id: Scalars['ID'];\n  /** The Git tag message. */\n  message?: Maybe<Scalars['String']>;\n  /** The Git tag name. */\n  name: Scalars['String'];\n  /** The Git object ID */\n  oid: Scalars['GitObjectID'];\n  /** The Repository the Git object belongs to */\n  repository: Repository;\n  /** Details about the tag author. */\n  tagger?: Maybe<GitActor>;\n  /** The Git object the tag points to. */\n  target: GitObject;\n};\n\n/** Parameters to be used for the tag_name_pattern rule */\nexport type TagNamePatternParameters = {\n  __typename?: 'TagNamePatternParameters';\n  /** How this rule will appear to users. */\n  name?: Maybe<Scalars['String']>;\n  /** If true, the rule will fail if the pattern matches. */\n  negate: Scalars['Boolean'];\n  /** The operator to use for matching. */\n  operator: Scalars['String'];\n  /** The pattern to match with. */\n  pattern: Scalars['String'];\n};\n\n/** Parameters to be used for the tag_name_pattern rule */\nexport type TagNamePatternParametersInput = {\n  /** How this rule will appear to users. */\n  name?: InputMaybe<Scalars['String']>;\n  /** If true, the rule will fail if the pattern matches. */\n  negate?: InputMaybe<Scalars['Boolean']>;\n  /** The operator to use for matching. */\n  operator: Scalars['String'];\n  /** The pattern to match with. */\n  pattern: Scalars['String'];\n};\n\n/** A team of users in an organization. */\nexport type Team = MemberStatusable & Node & Subscribable & {\n  __typename?: 'Team';\n  /** A list of teams that are ancestors of this team. */\n  ancestors: TeamConnection;\n  /** A URL pointing to the team's avatar. */\n  avatarUrl?: Maybe<Scalars['URI']>;\n  /** List of child teams belonging to this team */\n  childTeams: TeamConnection;\n  /** The slug corresponding to the organization and team. */\n  combinedSlug: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The description of the team. */\n  description?: Maybe<Scalars['String']>;\n  /** Find a team discussion by its number. */\n  discussion?: Maybe<TeamDiscussion>;\n  /** A list of team discussions. */\n  discussions: TeamDiscussionConnection;\n  /** The HTTP path for team discussions */\n  discussionsResourcePath: Scalars['URI'];\n  /** The HTTP URL for team discussions */\n  discussionsUrl: Scalars['URI'];\n  /** The HTTP path for editing this team */\n  editTeamResourcePath: Scalars['URI'];\n  /** The HTTP URL for editing this team */\n  editTeamUrl: Scalars['URI'];\n  id: Scalars['ID'];\n  /** A list of pending invitations for users to this team */\n  invitations?: Maybe<OrganizationInvitationConnection>;\n  /** Get the status messages members of this entity have set that are either public or visible only to the organization. */\n  memberStatuses: UserStatusConnection;\n  /** A list of users who are members of this team. */\n  members: TeamMemberConnection;\n  /** The HTTP path for the team' members */\n  membersResourcePath: Scalars['URI'];\n  /** The HTTP URL for the team' members */\n  membersUrl: Scalars['URI'];\n  /** The name of the team. */\n  name: Scalars['String'];\n  /** The HTTP path creating a new team */\n  newTeamResourcePath: Scalars['URI'];\n  /** The HTTP URL creating a new team */\n  newTeamUrl: Scalars['URI'];\n  /** The notification setting that the team has set. */\n  notificationSetting: TeamNotificationSetting;\n  /** The organization that owns this team. */\n  organization: Organization;\n  /** The parent team of the team. */\n  parentTeam?: Maybe<Team>;\n  /** The level of privacy the team has. */\n  privacy: TeamPrivacy;\n  /** Finds and returns the project according to the provided project number. */\n  projectV2?: Maybe<ProjectV2>;\n  /** List of projects this team has collaborator access to. */\n  projectsV2: ProjectV2Connection;\n  /** A list of repositories this team has access to. */\n  repositories: TeamRepositoryConnection;\n  /** The HTTP path for this team's repositories */\n  repositoriesResourcePath: Scalars['URI'];\n  /** The HTTP URL for this team's repositories */\n  repositoriesUrl: Scalars['URI'];\n  /** The HTTP path for this team */\n  resourcePath: Scalars['URI'];\n  /** What algorithm is used for review assignment for this team */\n  reviewRequestDelegationAlgorithm?: Maybe<TeamReviewAssignmentAlgorithm>;\n  /** True if review assignment is enabled for this team */\n  reviewRequestDelegationEnabled: Scalars['Boolean'];\n  /** How many team members are required for review assignment for this team */\n  reviewRequestDelegationMemberCount?: Maybe<Scalars['Int']>;\n  /** When assigning team members via delegation, whether the entire team should be notified as well. */\n  reviewRequestDelegationNotifyTeam: Scalars['Boolean'];\n  /** The slug corresponding to the team. */\n  slug: Scalars['String'];\n  /** The HTTP path for this team's teams */\n  teamsResourcePath: Scalars['URI'];\n  /** The HTTP URL for this team's teams */\n  teamsUrl: Scalars['URI'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this team */\n  url: Scalars['URI'];\n  /** Team is adminable by the viewer. */\n  viewerCanAdminister: Scalars['Boolean'];\n  /** Check if the viewer is able to change their subscription status for the repository. */\n  viewerCanSubscribe: Scalars['Boolean'];\n  /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n  viewerSubscription?: Maybe<SubscriptionState>;\n};\n\n\n/** A team of users in an organization. */\nexport type TeamAncestorsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A team of users in an organization. */\nexport type TeamAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A team of users in an organization. */\nexport type TeamChildTeamsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  immediateOnly?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TeamOrder>;\n  userLogins?: InputMaybe<Array<Scalars['String']>>;\n};\n\n\n/** A team of users in an organization. */\nexport type TeamDiscussionArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** A team of users in an organization. */\nexport type TeamDiscussionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  isPinned?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TeamDiscussionOrder>;\n};\n\n\n/** A team of users in an organization. */\nexport type TeamInvitationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A team of users in an organization. */\nexport type TeamMemberStatusesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<UserStatusOrder>;\n};\n\n\n/** A team of users in an organization. */\nexport type TeamMembersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  membership?: InputMaybe<TeamMembershipType>;\n  orderBy?: InputMaybe<TeamMemberOrder>;\n  query?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<TeamMemberRole>;\n};\n\n\n/** A team of users in an organization. */\nexport type TeamProjectV2Args = {\n  number: Scalars['Int'];\n};\n\n\n/** A team of users in an organization. */\nexport type TeamProjectsV2Args = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filterBy?: InputMaybe<ProjectV2Filters>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A team of users in an organization. */\nexport type TeamRepositoriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TeamRepositoryOrder>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n/** Audit log entry for a team.add_member event. */\nexport type TeamAddMemberAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & TeamAuditEntryData & {\n  __typename?: 'TeamAddMemberAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** Whether the team was mapped to an LDAP Group. */\n  isLdapMapped?: Maybe<Scalars['Boolean']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The team associated with the action */\n  team?: Maybe<Team>;\n  /** The name of the team */\n  teamName?: Maybe<Scalars['String']>;\n  /** The HTTP path for this team */\n  teamResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for this team */\n  teamUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a team.add_repository event. */\nexport type TeamAddRepositoryAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & TeamAuditEntryData & {\n  __typename?: 'TeamAddRepositoryAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** Whether the team was mapped to an LDAP Group. */\n  isLdapMapped?: Maybe<Scalars['Boolean']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The team associated with the action */\n  team?: Maybe<Team>;\n  /** The name of the team */\n  teamName?: Maybe<Scalars['String']>;\n  /** The HTTP path for this team */\n  teamResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for this team */\n  teamUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Metadata for an audit entry with action team.* */\nexport type TeamAuditEntryData = {\n  /** The team associated with the action */\n  team?: Maybe<Team>;\n  /** The name of the team */\n  teamName?: Maybe<Scalars['String']>;\n  /** The HTTP path for this team */\n  teamResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for this team */\n  teamUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a team.change_parent_team event. */\nexport type TeamChangeParentTeamAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & TeamAuditEntryData & {\n  __typename?: 'TeamChangeParentTeamAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** Whether the team was mapped to an LDAP Group. */\n  isLdapMapped?: Maybe<Scalars['Boolean']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The new parent team. */\n  parentTeam?: Maybe<Team>;\n  /** The name of the new parent team */\n  parentTeamName?: Maybe<Scalars['String']>;\n  /** The name of the former parent team */\n  parentTeamNameWas?: Maybe<Scalars['String']>;\n  /** The HTTP path for the parent team */\n  parentTeamResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the parent team */\n  parentTeamUrl?: Maybe<Scalars['URI']>;\n  /** The former parent team. */\n  parentTeamWas?: Maybe<Team>;\n  /** The HTTP path for the previous parent team */\n  parentTeamWasResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the previous parent team */\n  parentTeamWasUrl?: Maybe<Scalars['URI']>;\n  /** The team associated with the action */\n  team?: Maybe<Team>;\n  /** The name of the team */\n  teamName?: Maybe<Scalars['String']>;\n  /** The HTTP path for this team */\n  teamResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for this team */\n  teamUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The connection type for Team. */\nexport type TeamConnection = {\n  __typename?: 'TeamConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<TeamEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Team>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A team discussion. */\nexport type TeamDiscussion = Comment & Deletable & Node & Reactable & Subscribable & UniformResourceLocatable & Updatable & UpdatableComment & {\n  __typename?: 'TeamDiscussion';\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the discussion's team. */\n  authorAssociation: CommentAuthorAssociation;\n  /** The body as Markdown. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body rendered to text. */\n  bodyText: Scalars['String'];\n  /** Identifies the discussion body hash. */\n  bodyVersion: Scalars['String'];\n  /** A list of comments on this discussion. */\n  comments: TeamDiscussionCommentConnection;\n  /** The HTTP path for discussion comments */\n  commentsResourcePath: Scalars['URI'];\n  /** The HTTP URL for discussion comments */\n  commentsUrl: Scalars['URI'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** Whether or not the discussion is pinned. */\n  isPinned: Scalars['Boolean'];\n  /** Whether or not the discussion is only visible to team members and org admins. */\n  isPrivate: Scalars['Boolean'];\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /** Identifies the discussion within its team. */\n  number: Scalars['Int'];\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** The HTTP path for this discussion */\n  resourcePath: Scalars['URI'];\n  /** The team that defines the context of this discussion. */\n  team: Team;\n  /** The title of the discussion */\n  title: Scalars['String'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this discussion */\n  url: Scalars['URI'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n  /** Whether or not the current viewer can pin this discussion. */\n  viewerCanPin: Scalars['Boolean'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n  /** Check if the viewer is able to change their subscription status for the repository. */\n  viewerCanSubscribe: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n  /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n  viewerSubscription?: Maybe<SubscriptionState>;\n};\n\n\n/** A team discussion. */\nexport type TeamDiscussionCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  fromComment?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TeamDiscussionCommentOrder>;\n};\n\n\n/** A team discussion. */\nexport type TeamDiscussionReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** A team discussion. */\nexport type TeamDiscussionUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** A comment on a team discussion. */\nexport type TeamDiscussionComment = Comment & Deletable & Node & Reactable & UniformResourceLocatable & Updatable & UpdatableComment & {\n  __typename?: 'TeamDiscussionComment';\n  /** The actor who authored the comment. */\n  author?: Maybe<Actor>;\n  /** Author's association with the comment's team. */\n  authorAssociation: CommentAuthorAssociation;\n  /** The body as Markdown. */\n  body: Scalars['String'];\n  /** The body rendered to HTML. */\n  bodyHTML: Scalars['HTML'];\n  /** The body rendered to text. */\n  bodyText: Scalars['String'];\n  /** The current version of the body content. */\n  bodyVersion: Scalars['String'];\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Check if this comment was created via an email reply. */\n  createdViaEmail: Scalars['Boolean'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The discussion this comment is about. */\n  discussion: TeamDiscussion;\n  /** The actor who edited the comment. */\n  editor?: Maybe<Actor>;\n  id: Scalars['ID'];\n  /** Check if this comment was edited and includes an edit with the creation data */\n  includesCreatedEdit: Scalars['Boolean'];\n  /** The moment the editor made the last edit */\n  lastEditedAt?: Maybe<Scalars['DateTime']>;\n  /** Identifies the comment number. */\n  number: Scalars['Int'];\n  /** Identifies when the comment was published at. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** A list of reactions grouped by content left on the subject. */\n  reactionGroups?: Maybe<Array<ReactionGroup>>;\n  /** A list of Reactions left on the Issue. */\n  reactions: ReactionConnection;\n  /** The HTTP path for this comment */\n  resourcePath: Scalars['URI'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this comment */\n  url: Scalars['URI'];\n  /** A list of edits to this content. */\n  userContentEdits?: Maybe<UserContentEditConnection>;\n  /** Check if the current viewer can delete this object. */\n  viewerCanDelete: Scalars['Boolean'];\n  /** Can user react to this subject */\n  viewerCanReact: Scalars['Boolean'];\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n  /** Did the viewer author this comment. */\n  viewerDidAuthor: Scalars['Boolean'];\n};\n\n\n/** A comment on a team discussion. */\nexport type TeamDiscussionCommentReactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  content?: InputMaybe<ReactionContent>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ReactionOrder>;\n};\n\n\n/** A comment on a team discussion. */\nexport type TeamDiscussionCommentUserContentEditsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for TeamDiscussionComment. */\nexport type TeamDiscussionCommentConnection = {\n  __typename?: 'TeamDiscussionCommentConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<TeamDiscussionCommentEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<TeamDiscussionComment>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type TeamDiscussionCommentEdge = {\n  __typename?: 'TeamDiscussionCommentEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<TeamDiscussionComment>;\n};\n\n/** Ways in which team discussion comment connections can be ordered. */\nexport type TeamDiscussionCommentOrder = {\n  /** The direction in which to order nodes. */\n  direction: OrderDirection;\n  /** The field by which to order nodes. */\n  field: TeamDiscussionCommentOrderField;\n};\n\n/** Properties by which team discussion comment connections can be ordered. */\nexport enum TeamDiscussionCommentOrderField {\n  /** Allows sequential ordering of team discussion comments (which is equivalent to chronological ordering). */\n  Number = 'NUMBER'\n}\n\n/** The connection type for TeamDiscussion. */\nexport type TeamDiscussionConnection = {\n  __typename?: 'TeamDiscussionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<TeamDiscussionEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<TeamDiscussion>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type TeamDiscussionEdge = {\n  __typename?: 'TeamDiscussionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<TeamDiscussion>;\n};\n\n/** Ways in which team discussion connections can be ordered. */\nexport type TeamDiscussionOrder = {\n  /** The direction in which to order nodes. */\n  direction: OrderDirection;\n  /** The field by which to order nodes. */\n  field: TeamDiscussionOrderField;\n};\n\n/** Properties by which team discussion connections can be ordered. */\nexport enum TeamDiscussionOrderField {\n  /** Allows chronological ordering of team discussions. */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** An edge in a connection. */\nexport type TeamEdge = {\n  __typename?: 'TeamEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Team>;\n};\n\n/** The connection type for User. */\nexport type TeamMemberConnection = {\n  __typename?: 'TeamMemberConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<TeamMemberEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents a user who is a member of a team. */\nexport type TeamMemberEdge = {\n  __typename?: 'TeamMemberEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The HTTP path to the organization's member access page. */\n  memberAccessResourcePath: Scalars['URI'];\n  /** The HTTP URL to the organization's member access page. */\n  memberAccessUrl: Scalars['URI'];\n  node: User;\n  /** The role the member has on the team. */\n  role: TeamMemberRole;\n};\n\n/** Ordering options for team member connections */\nexport type TeamMemberOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order team members by. */\n  field: TeamMemberOrderField;\n};\n\n/** Properties by which team member connections can be ordered. */\nexport enum TeamMemberOrderField {\n  /** Order team members by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order team members by login */\n  Login = 'LOGIN'\n}\n\n/** The possible team member roles; either 'maintainer' or 'member'. */\nexport enum TeamMemberRole {\n  /** A team maintainer has permission to add and remove team members. */\n  Maintainer = 'MAINTAINER',\n  /** A team member has no administrative permissions on the team. */\n  Member = 'MEMBER'\n}\n\n/** Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL. */\nexport enum TeamMembershipType {\n  /** Includes immediate and child team members for the team. */\n  All = 'ALL',\n  /** Includes only child team members for the team. */\n  ChildTeam = 'CHILD_TEAM',\n  /** Includes only immediate members of the team. */\n  Immediate = 'IMMEDIATE'\n}\n\n/** The possible team notification values. */\nexport enum TeamNotificationSetting {\n  /** No one will receive notifications. */\n  NotificationsDisabled = 'NOTIFICATIONS_DISABLED',\n  /** Everyone will receive notifications when the team is @mentioned. */\n  NotificationsEnabled = 'NOTIFICATIONS_ENABLED'\n}\n\n/** Ways in which team connections can be ordered. */\nexport type TeamOrder = {\n  /** The direction in which to order nodes. */\n  direction: OrderDirection;\n  /** The field in which to order nodes by. */\n  field: TeamOrderField;\n};\n\n/** Properties by which team connections can be ordered. */\nexport enum TeamOrderField {\n  /** Allows ordering a list of teams by name. */\n  Name = 'NAME'\n}\n\n/** The possible team privacy values. */\nexport enum TeamPrivacy {\n  /** A secret team can only be seen by its members. */\n  Secret = 'SECRET',\n  /** A visible team can be seen and @mentioned by every member of the organization. */\n  Visible = 'VISIBLE'\n}\n\n/** Audit log entry for a team.remove_member event. */\nexport type TeamRemoveMemberAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & TeamAuditEntryData & {\n  __typename?: 'TeamRemoveMemberAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** Whether the team was mapped to an LDAP Group. */\n  isLdapMapped?: Maybe<Scalars['Boolean']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The team associated with the action */\n  team?: Maybe<Team>;\n  /** The name of the team */\n  teamName?: Maybe<Scalars['String']>;\n  /** The HTTP path for this team */\n  teamResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for this team */\n  teamUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** Audit log entry for a team.remove_repository event. */\nexport type TeamRemoveRepositoryAuditEntry = AuditEntry & Node & OrganizationAuditEntryData & RepositoryAuditEntryData & TeamAuditEntryData & {\n  __typename?: 'TeamRemoveRepositoryAuditEntry';\n  /** The action name */\n  action: Scalars['String'];\n  /** The user who initiated the action */\n  actor?: Maybe<AuditEntryActor>;\n  /** The IP address of the actor */\n  actorIp?: Maybe<Scalars['String']>;\n  /** A readable representation of the actor's location */\n  actorLocation?: Maybe<ActorLocation>;\n  /** The username of the user who initiated the action */\n  actorLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the actor. */\n  actorResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the actor. */\n  actorUrl?: Maybe<Scalars['URI']>;\n  /** The time the action was initiated */\n  createdAt: Scalars['PreciseDateTime'];\n  id: Scalars['ID'];\n  /** Whether the team was mapped to an LDAP Group. */\n  isLdapMapped?: Maybe<Scalars['Boolean']>;\n  /** The corresponding operation type for the action */\n  operationType?: Maybe<OperationType>;\n  /** The Organization associated with the Audit Entry. */\n  organization?: Maybe<Organization>;\n  /** The name of the Organization. */\n  organizationName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the organization */\n  organizationResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the organization */\n  organizationUrl?: Maybe<Scalars['URI']>;\n  /** The repository associated with the action */\n  repository?: Maybe<Repository>;\n  /** The name of the repository */\n  repositoryName?: Maybe<Scalars['String']>;\n  /** The HTTP path for the repository */\n  repositoryResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the repository */\n  repositoryUrl?: Maybe<Scalars['URI']>;\n  /** The team associated with the action */\n  team?: Maybe<Team>;\n  /** The name of the team */\n  teamName?: Maybe<Scalars['String']>;\n  /** The HTTP path for this team */\n  teamResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for this team */\n  teamUrl?: Maybe<Scalars['URI']>;\n  /** The user affected by the action */\n  user?: Maybe<User>;\n  /** For actions involving two users, the actor is the initiator and the user is the affected user. */\n  userLogin?: Maybe<Scalars['String']>;\n  /** The HTTP path for the user. */\n  userResourcePath?: Maybe<Scalars['URI']>;\n  /** The HTTP URL for the user. */\n  userUrl?: Maybe<Scalars['URI']>;\n};\n\n/** The connection type for Repository. */\nexport type TeamRepositoryConnection = {\n  __typename?: 'TeamRepositoryConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<TeamRepositoryEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Repository>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** Represents a team repository. */\nexport type TeamRepositoryEdge = {\n  __typename?: 'TeamRepositoryEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  node: Repository;\n  /** The permission level the team has on the repository */\n  permission: RepositoryPermission;\n};\n\n/** Ordering options for team repository connections */\nexport type TeamRepositoryOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order repositories by. */\n  field: TeamRepositoryOrderField;\n};\n\n/** Properties by which team repository connections can be ordered. */\nexport enum TeamRepositoryOrderField {\n  /** Order repositories by creation time */\n  CreatedAt = 'CREATED_AT',\n  /** Order repositories by name */\n  Name = 'NAME',\n  /** Order repositories by permission */\n  Permission = 'PERMISSION',\n  /** Order repositories by push time */\n  PushedAt = 'PUSHED_AT',\n  /** Order repositories by number of stargazers */\n  Stargazers = 'STARGAZERS',\n  /** Order repositories by update time */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** The possible team review assignment algorithms */\nexport enum TeamReviewAssignmentAlgorithm {\n  /** Balance review load across the entire team */\n  LoadBalance = 'LOAD_BALANCE',\n  /** Alternate reviews between each team member */\n  RoundRobin = 'ROUND_ROBIN'\n}\n\n/** The role of a user on a team. */\nexport enum TeamRole {\n  /** User has admin rights on the team. */\n  Admin = 'ADMIN',\n  /** User is a member of the team. */\n  Member = 'MEMBER'\n}\n\n/** A text match within a search result. */\nexport type TextMatch = {\n  __typename?: 'TextMatch';\n  /** The specific text fragment within the property matched on. */\n  fragment: Scalars['String'];\n  /** Highlights within the matched fragment. */\n  highlights: Array<TextMatchHighlight>;\n  /** The property matched on. */\n  property: Scalars['String'];\n};\n\n/** Represents a single highlight in a search result match. */\nexport type TextMatchHighlight = {\n  __typename?: 'TextMatchHighlight';\n  /** The indice in the fragment where the matched text begins. */\n  beginIndice: Scalars['Int'];\n  /** The indice in the fragment where the matched text ends. */\n  endIndice: Scalars['Int'];\n  /** The text matched. */\n  text: Scalars['String'];\n};\n\n/** A topic aggregates entities that are related to a subject. */\nexport type Topic = Node & Starrable & {\n  __typename?: 'Topic';\n  id: Scalars['ID'];\n  /** The topic's name. */\n  name: Scalars['String'];\n  /**\n   * A list of related topics, including aliases of this topic, sorted with the most relevant\n   * first. Returns up to 10 Topics.\n   */\n  relatedTopics: Array<Topic>;\n  /** A list of repositories. */\n  repositories: RepositoryConnection;\n  /** Returns a count of how many stargazers there are on this object */\n  stargazerCount: Scalars['Int'];\n  /** A list of users who have starred this starrable. */\n  stargazers: StargazerConnection;\n  /** Returns a boolean indicating whether the viewing user has starred this starrable. */\n  viewerHasStarred: Scalars['Boolean'];\n};\n\n\n/** A topic aggregates entities that are related to a subject. */\nexport type TopicRelatedTopicsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A topic aggregates entities that are related to a subject. */\nexport type TopicRepositoriesArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  isLocked?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n  sponsorableOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A topic aggregates entities that are related to a subject. */\nexport type TopicStargazersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<StarOrder>;\n};\n\n/** Metadata for an audit entry with a topic. */\nexport type TopicAuditEntryData = {\n  /** The name of the topic added to the repository */\n  topic?: Maybe<Topic>;\n  /** The name of the topic added to the repository */\n  topicName?: Maybe<Scalars['String']>;\n};\n\n/** Reason that the suggested topic is declined. */\nexport enum TopicSuggestionDeclineReason {\n  /** The suggested topic is not relevant to the repository. */\n  NotRelevant = 'NOT_RELEVANT',\n  /** The viewer does not like the suggested topic. */\n  PersonalPreference = 'PERSONAL_PREFERENCE',\n  /** The suggested topic is too general for the repository. */\n  TooGeneral = 'TOO_GENERAL',\n  /** The suggested topic is too specific for the repository (e.g. #ruby-on-rails-version-4-2-1). */\n  TooSpecific = 'TOO_SPECIFIC'\n}\n\n/** The possible states of a tracked issue. */\nexport enum TrackedIssueStates {\n  /** The tracked issue is closed */\n  Closed = 'CLOSED',\n  /** The tracked issue is open */\n  Open = 'OPEN'\n}\n\n/** Autogenerated input type of TransferEnterpriseOrganization */\nexport type TransferEnterpriseOrganizationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise where the organization should be transferred. */\n  destinationEnterpriseId: Scalars['ID'];\n  /** The ID of the organization to transfer. */\n  organizationId: Scalars['ID'];\n};\n\n/** Autogenerated return type of TransferEnterpriseOrganization */\nexport type TransferEnterpriseOrganizationPayload = {\n  __typename?: 'TransferEnterpriseOrganizationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The organization for which a transfer was initiated. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of TransferIssue */\nexport type TransferIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Whether to create labels if they don't exist in the target repository (matched by name) */\n  createLabelsIfMissing?: InputMaybe<Scalars['Boolean']>;\n  /** The Node ID of the issue to be transferred */\n  issueId: Scalars['ID'];\n  /** The Node ID of the repository the issue should be transferred to */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of TransferIssue */\nexport type TransferIssuePayload = {\n  __typename?: 'TransferIssuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The issue that was transferred */\n  issue?: Maybe<Issue>;\n};\n\n/** Represents a 'transferred' event on a given issue or pull request. */\nexport type TransferredEvent = Node & {\n  __typename?: 'TransferredEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The repository this came from */\n  fromRepository?: Maybe<Repository>;\n  id: Scalars['ID'];\n  /** Identifies the issue associated with the event. */\n  issue: Issue;\n};\n\n/** Represents a Git tree. */\nexport type Tree = GitObject & Node & {\n  __typename?: 'Tree';\n  /** An abbreviated version of the Git object ID */\n  abbreviatedOid: Scalars['String'];\n  /** The HTTP path for this Git object */\n  commitResourcePath: Scalars['URI'];\n  /** The HTTP URL for this Git object */\n  commitUrl: Scalars['URI'];\n  /** A list of tree entries. */\n  entries?: Maybe<Array<TreeEntry>>;\n  id: Scalars['ID'];\n  /** The Git object ID */\n  oid: Scalars['GitObjectID'];\n  /** The Repository the Git object belongs to */\n  repository: Repository;\n};\n\n/** Represents a Git tree entry. */\nexport type TreeEntry = {\n  __typename?: 'TreeEntry';\n  /** The extension of the file */\n  extension?: Maybe<Scalars['String']>;\n  /** Whether or not this tree entry is generated */\n  isGenerated: Scalars['Boolean'];\n  /** The programming language this file is written in. */\n  language?: Maybe<Language>;\n  /** Number of lines in the file. */\n  lineCount?: Maybe<Scalars['Int']>;\n  /** Entry file mode. */\n  mode: Scalars['Int'];\n  /** Entry file name. */\n  name: Scalars['String'];\n  /** Entry file name. (Base64-encoded) */\n  nameRaw: Scalars['Base64String'];\n  /** Entry file object. */\n  object?: Maybe<GitObject>;\n  /** Entry file Git object ID. */\n  oid: Scalars['GitObjectID'];\n  /** The full path of the file. */\n  path?: Maybe<Scalars['String']>;\n  /** The full path of the file. (Base64-encoded) */\n  pathRaw?: Maybe<Scalars['Base64String']>;\n  /** The Repository the tree entry belongs to */\n  repository: Repository;\n  /** Entry byte size */\n  size: Scalars['Int'];\n  /** If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule */\n  submodule?: Maybe<Submodule>;\n  /** Entry file type. */\n  type: Scalars['String'];\n};\n\n/** Autogenerated input type of UnarchiveProjectV2Item */\nexport type UnarchiveProjectV2ItemInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the ProjectV2Item to unarchive. */\n  itemId: Scalars['ID'];\n  /** The ID of the Project to archive the item from. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnarchiveProjectV2Item */\nexport type UnarchiveProjectV2ItemPayload = {\n  __typename?: 'UnarchiveProjectV2ItemPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The item unarchived from the project. */\n  item?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of UnarchiveRepository */\nexport type UnarchiveRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the repository to unarchive. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnarchiveRepository */\nexport type UnarchiveRepositoryPayload = {\n  __typename?: 'UnarchiveRepositoryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The repository that was unarchived. */\n  repository?: Maybe<Repository>;\n};\n\n/** Represents an 'unassigned' event on any assignable object. */\nexport type UnassignedEvent = Node & {\n  __typename?: 'UnassignedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the assignable associated with the event. */\n  assignable: Assignable;\n  /** Identifies the user or mannequin that was unassigned. */\n  assignee?: Maybe<Assignee>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /**\n   * Identifies the subject (user) who was unassigned.\n   * @deprecated Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC.\n   */\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of UnfollowOrganization */\nexport type UnfollowOrganizationInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the organization to unfollow. */\n  organizationId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnfollowOrganization */\nexport type UnfollowOrganizationPayload = {\n  __typename?: 'UnfollowOrganizationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The organization that was unfollowed. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of UnfollowUser */\nexport type UnfollowUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the user to unfollow. */\n  userId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnfollowUser */\nexport type UnfollowUserPayload = {\n  __typename?: 'UnfollowUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The user that was unfollowed. */\n  user?: Maybe<User>;\n};\n\n/** Represents a type that can be retrieved by a URL. */\nexport type UniformResourceLocatable = {\n  /** The HTML path to this resource. */\n  resourcePath: Scalars['URI'];\n  /** The URL to this resource. */\n  url: Scalars['URI'];\n};\n\n/** Represents an unknown signature on a Commit or Tag. */\nexport type UnknownSignature = GitSignature & {\n  __typename?: 'UnknownSignature';\n  /** Email used to sign this object. */\n  email: Scalars['String'];\n  /** True if the signature is valid and verified by GitHub. */\n  isValid: Scalars['Boolean'];\n  /** Payload for GPG signing object. Raw ODB object without the signature header. */\n  payload: Scalars['String'];\n  /** ASCII-armored signature header from object. */\n  signature: Scalars['String'];\n  /** GitHub user corresponding to the email signing this commit. */\n  signer?: Maybe<User>;\n  /**\n   * The state of this signature. `VALID` if signature is valid and verified by\n   * GitHub, otherwise represents reason why signature is considered invalid.\n   */\n  state: GitSignatureState;\n  /** True if the signature was made with GitHub's signing key. */\n  wasSignedByGitHub: Scalars['Boolean'];\n};\n\n/** Represents an 'unlabeled' event on a given issue or pull request. */\nexport type UnlabeledEvent = Node & {\n  __typename?: 'UnlabeledEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Identifies the label associated with the 'unlabeled' event. */\n  label: Label;\n  /** Identifies the `Labelable` associated with the event. */\n  labelable: Labelable;\n};\n\n/** Autogenerated input type of UnlinkProjectV2FromRepository */\nexport type UnlinkProjectV2FromRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the project to unlink from the repository. */\n  projectId: Scalars['ID'];\n  /** The ID of the repository to unlink from the project. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnlinkProjectV2FromRepository */\nexport type UnlinkProjectV2FromRepositoryPayload = {\n  __typename?: 'UnlinkProjectV2FromRepositoryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The repository the project is no longer linked to. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UnlinkProjectV2FromTeam */\nexport type UnlinkProjectV2FromTeamInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the project to unlink from the team. */\n  projectId: Scalars['ID'];\n  /** The ID of the team to unlink from the project. */\n  teamId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnlinkProjectV2FromTeam */\nexport type UnlinkProjectV2FromTeamPayload = {\n  __typename?: 'UnlinkProjectV2FromTeamPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The team the project is unlinked from */\n  team?: Maybe<Team>;\n};\n\n/** Autogenerated input type of UnlinkRepositoryFromProject */\nexport type UnlinkRepositoryFromProjectInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Project linked to the Repository. */\n  projectId: Scalars['ID'];\n  /** The ID of the Repository linked to the Project. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnlinkRepositoryFromProject */\nexport type UnlinkRepositoryFromProjectPayload = {\n  __typename?: 'UnlinkRepositoryFromProjectPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The linked Project. */\n  project?: Maybe<Project>;\n  /** The linked Repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UnlockLockable */\nexport type UnlockLockableInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the item to be unlocked. */\n  lockableId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnlockLockable */\nexport type UnlockLockablePayload = {\n  __typename?: 'UnlockLockablePayload';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The item that was unlocked. */\n  unlockedRecord?: Maybe<Lockable>;\n};\n\n/** Represents an 'unlocked' event on a given issue or pull request. */\nexport type UnlockedEvent = Node & {\n  __typename?: 'UnlockedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Object that was unlocked. */\n  lockable: Lockable;\n};\n\n/** Autogenerated input type of UnmarkDiscussionCommentAsAnswer */\nexport type UnmarkDiscussionCommentAsAnswerInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the discussion comment to unmark as an answer. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnmarkDiscussionCommentAsAnswer */\nexport type UnmarkDiscussionCommentAsAnswerPayload = {\n  __typename?: 'UnmarkDiscussionCommentAsAnswerPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The discussion that includes the comment. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of UnmarkFileAsViewed */\nexport type UnmarkFileAsViewedInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The path of the file to mark as unviewed */\n  path: Scalars['String'];\n  /** The Node ID of the pull request. */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnmarkFileAsViewed */\nexport type UnmarkFileAsViewedPayload = {\n  __typename?: 'UnmarkFileAsViewedPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated pull request. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of UnmarkIssueAsDuplicate */\nexport type UnmarkIssueAsDuplicateInput = {\n  /** ID of the issue or pull request currently considered canonical/authoritative/original. */\n  canonicalId: Scalars['ID'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** ID of the issue or pull request currently marked as a duplicate. */\n  duplicateId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnmarkIssueAsDuplicate */\nexport type UnmarkIssueAsDuplicatePayload = {\n  __typename?: 'UnmarkIssueAsDuplicatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The issue or pull request that was marked as a duplicate. */\n  duplicate?: Maybe<IssueOrPullRequest>;\n};\n\n/** Autogenerated input type of UnmarkProjectV2AsTemplate */\nexport type UnmarkProjectV2AsTemplateInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Project to unmark as a template. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnmarkProjectV2AsTemplate */\nexport type UnmarkProjectV2AsTemplatePayload = {\n  __typename?: 'UnmarkProjectV2AsTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The project. */\n  projectV2?: Maybe<ProjectV2>;\n};\n\n/** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */\nexport type UnmarkedAsDuplicateEvent = Node & {\n  __typename?: 'UnmarkedAsDuplicateEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** The authoritative issue or pull request which has been duplicated by another. */\n  canonical?: Maybe<IssueOrPullRequest>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** The issue or pull request which has been marked as a duplicate of another. */\n  duplicate?: Maybe<IssueOrPullRequest>;\n  id: Scalars['ID'];\n  /** Canonical and duplicate belong to different repositories. */\n  isCrossRepository: Scalars['Boolean'];\n};\n\n/** Autogenerated input type of UnminimizeComment */\nexport type UnminimizeCommentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the subject to modify. */\n  subjectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnminimizeComment */\nexport type UnminimizeCommentPayload = {\n  __typename?: 'UnminimizeCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The comment that was unminimized. */\n  unminimizedComment?: Maybe<Minimizable>;\n};\n\n/** Autogenerated input type of UnpinIssue */\nexport type UnpinIssueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the issue to be unpinned */\n  issueId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnpinIssue */\nexport type UnpinIssuePayload = {\n  __typename?: 'UnpinIssuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The issue that was unpinned */\n  issue?: Maybe<Issue>;\n};\n\n/** Represents an 'unpinned' event on a given issue or pull request. */\nexport type UnpinnedEvent = Node & {\n  __typename?: 'UnpinnedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Identifies the issue associated with the event. */\n  issue: Issue;\n};\n\n/** Autogenerated input type of UnresolveReviewThread */\nexport type UnresolveReviewThreadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the thread to unresolve */\n  threadId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UnresolveReviewThread */\nexport type UnresolveReviewThreadPayload = {\n  __typename?: 'UnresolveReviewThreadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The thread to resolve. */\n  thread?: Maybe<PullRequestReviewThread>;\n};\n\n/** Represents an 'unsubscribed' event on a given `Subscribable`. */\nexport type UnsubscribedEvent = Node & {\n  __typename?: 'UnsubscribedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** Object referenced by event. */\n  subscribable: Subscribable;\n};\n\n/** Entities that can be updated. */\nexport type Updatable = {\n  /** Check if the current viewer can update this object. */\n  viewerCanUpdate: Scalars['Boolean'];\n};\n\n/** Comments that can be updated. */\nexport type UpdatableComment = {\n  /** Reasons why the current viewer can not update this comment. */\n  viewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n};\n\n/** Autogenerated input type of UpdateBranchProtectionRule */\nexport type UpdateBranchProtectionRuleInput = {\n  /** Can this branch be deleted. */\n  allowsDeletions?: InputMaybe<Scalars['Boolean']>;\n  /** Are force pushes allowed on this branch. */\n  allowsForcePushes?: InputMaybe<Scalars['Boolean']>;\n  /** Is branch creation a protected operation. */\n  blocksCreations?: InputMaybe<Scalars['Boolean']>;\n  /** The global relay id of the branch protection rule to be updated. */\n  branchProtectionRuleId: Scalars['ID'];\n  /** A list of User, Team, or App IDs allowed to bypass force push targeting matching branches. */\n  bypassForcePushActorIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches. */\n  bypassPullRequestActorIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Will new commits pushed to matching branches dismiss pull request review approvals. */\n  dismissesStaleReviews?: InputMaybe<Scalars['Boolean']>;\n  /** Can admins overwrite branch protection. */\n  isAdminEnforced?: InputMaybe<Scalars['Boolean']>;\n  /**\n   * Whether users can pull changes from upstream when the branch is locked. Set to\n   * `true` to allow fork syncing. Set to `false` to prevent fork syncing.\n   */\n  lockAllowsFetchAndMerge?: InputMaybe<Scalars['Boolean']>;\n  /** Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. */\n  lockBranch?: InputMaybe<Scalars['Boolean']>;\n  /** The glob-like pattern used to determine matching branches. */\n  pattern?: InputMaybe<Scalars['String']>;\n  /** A list of User, Team, or App IDs allowed to push to matching branches. */\n  pushActorIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** Whether the most recent push must be approved by someone other than the person who pushed it */\n  requireLastPushApproval?: InputMaybe<Scalars['Boolean']>;\n  /** Number of approving reviews required to update matching branches. */\n  requiredApprovingReviewCount?: InputMaybe<Scalars['Int']>;\n  /** The list of required deployment environments */\n  requiredDeploymentEnvironments?: InputMaybe<Array<Scalars['String']>>;\n  /** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n  requiredStatusCheckContexts?: InputMaybe<Array<Scalars['String']>>;\n  /** The list of required status checks */\n  requiredStatusChecks?: InputMaybe<Array<RequiredStatusCheckInput>>;\n  /** Are approving reviews required to update matching branches. */\n  requiresApprovingReviews?: InputMaybe<Scalars['Boolean']>;\n  /** Are reviews from code owners required to update matching branches. */\n  requiresCodeOwnerReviews?: InputMaybe<Scalars['Boolean']>;\n  /** Are commits required to be signed. */\n  requiresCommitSignatures?: InputMaybe<Scalars['Boolean']>;\n  /** Are conversations required to be resolved before merging. */\n  requiresConversationResolution?: InputMaybe<Scalars['Boolean']>;\n  /** Are successful deployments required before merging. */\n  requiresDeployments?: InputMaybe<Scalars['Boolean']>;\n  /** Are merge commits prohibited from being pushed to this branch. */\n  requiresLinearHistory?: InputMaybe<Scalars['Boolean']>;\n  /** Are status checks required to update matching branches. */\n  requiresStatusChecks?: InputMaybe<Scalars['Boolean']>;\n  /** Are branches required to be up to date before merging. */\n  requiresStrictStatusChecks?: InputMaybe<Scalars['Boolean']>;\n  /** Is pushing to matching branches restricted. */\n  restrictsPushes?: InputMaybe<Scalars['Boolean']>;\n  /** Is dismissal of pull request reviews restricted. */\n  restrictsReviewDismissals?: InputMaybe<Scalars['Boolean']>;\n  /** A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches. */\n  reviewDismissalActorIds?: InputMaybe<Array<Scalars['ID']>>;\n};\n\n/** Autogenerated return type of UpdateBranchProtectionRule */\nexport type UpdateBranchProtectionRulePayload = {\n  __typename?: 'UpdateBranchProtectionRulePayload';\n  /** The newly created BranchProtectionRule. */\n  branchProtectionRule?: Maybe<BranchProtectionRule>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateCheckRun */\nexport type UpdateCheckRunInput = {\n  /** Possible further actions the integrator can perform, which a user may trigger. */\n  actions?: InputMaybe<Array<CheckRunAction>>;\n  /** The node of the check. */\n  checkRunId: Scalars['ID'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The time that the check run finished. */\n  completedAt?: InputMaybe<Scalars['DateTime']>;\n  /** The final conclusion of the check. */\n  conclusion?: InputMaybe<CheckConclusionState>;\n  /** The URL of the integrator's site that has the full details of the check. */\n  detailsUrl?: InputMaybe<Scalars['URI']>;\n  /** A reference for the run on the integrator's system. */\n  externalId?: InputMaybe<Scalars['String']>;\n  /** The name of the check. */\n  name?: InputMaybe<Scalars['String']>;\n  /** Descriptive details about the run. */\n  output?: InputMaybe<CheckRunOutput>;\n  /** The node ID of the repository. */\n  repositoryId: Scalars['ID'];\n  /** The time that the check run began. */\n  startedAt?: InputMaybe<Scalars['DateTime']>;\n  /** The current status. */\n  status?: InputMaybe<RequestableCheckStatusState>;\n};\n\n/** Autogenerated return type of UpdateCheckRun */\nexport type UpdateCheckRunPayload = {\n  __typename?: 'UpdateCheckRunPayload';\n  /** The updated check run. */\n  checkRun?: Maybe<CheckRun>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateCheckSuitePreferences */\nexport type UpdateCheckSuitePreferencesInput = {\n  /** The check suite preferences to modify. */\n  autoTriggerPreferences: Array<CheckSuiteAutoTriggerPreference>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateCheckSuitePreferences */\nexport type UpdateCheckSuitePreferencesPayload = {\n  __typename?: 'UpdateCheckSuitePreferencesPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UpdateDiscussionComment */\nexport type UpdateDiscussionCommentInput = {\n  /** The new contents of the comment body. */\n  body: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the discussion comment to update. */\n  commentId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateDiscussionComment */\nexport type UpdateDiscussionCommentPayload = {\n  __typename?: 'UpdateDiscussionCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The modified discussion comment. */\n  comment?: Maybe<DiscussionComment>;\n};\n\n/** Autogenerated input type of UpdateDiscussion */\nexport type UpdateDiscussionInput = {\n  /** The new contents of the discussion body. */\n  body?: InputMaybe<Scalars['String']>;\n  /** The Node ID of a discussion category within the same repository to change this discussion to. */\n  categoryId?: InputMaybe<Scalars['ID']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the discussion to update. */\n  discussionId: Scalars['ID'];\n  /** The new discussion title. */\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDiscussion */\nexport type UpdateDiscussionPayload = {\n  __typename?: 'UpdateDiscussionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The modified discussion. */\n  discussion?: Maybe<Discussion>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseAdministratorRole */\nexport type UpdateEnterpriseAdministratorRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Enterprise which the admin belongs to. */\n  enterpriseId: Scalars['ID'];\n  /** The login of a administrator whose role is being changed. */\n  login: Scalars['String'];\n  /** The new role for the Enterprise administrator. */\n  role: EnterpriseAdministratorRole;\n};\n\n/** Autogenerated return type of UpdateEnterpriseAdministratorRole */\nexport type UpdateEnterpriseAdministratorRolePayload = {\n  __typename?: 'UpdateEnterpriseAdministratorRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** A message confirming the result of changing the administrator's role. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting */\nexport type UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the allow private repository forking setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the allow private repository forking policy on the enterprise. */\n  policyValue?: InputMaybe<EnterpriseAllowPrivateRepositoryForkingPolicyValue>;\n  /** The value for the allow private repository forking setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting */\nexport type UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload = {\n  __typename?: 'UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated allow private repository forking setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the allow private repository forking setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting */\nexport type UpdateEnterpriseDefaultRepositoryPermissionSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the base repository permission setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the base repository permission setting on the enterprise. */\n  settingValue: EnterpriseDefaultRepositoryPermissionSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting */\nexport type UpdateEnterpriseDefaultRepositoryPermissionSettingPayload = {\n  __typename?: 'UpdateEnterpriseDefaultRepositoryPermissionSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated base repository permission setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the base repository permission setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting */\nexport type UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the members can change repository visibility setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the members can change repository visibility setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting */\nexport type UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload = {\n  __typename?: 'UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated members can change repository visibility setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can change repository visibility setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanCreateRepositoriesSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the members can create repositories setting. */\n  enterpriseId: Scalars['ID'];\n  /** Allow members to create internal repositories. Defaults to current value. */\n  membersCanCreateInternalRepositories?: InputMaybe<Scalars['Boolean']>;\n  /** Allow members to create private repositories. Defaults to current value. */\n  membersCanCreatePrivateRepositories?: InputMaybe<Scalars['Boolean']>;\n  /** Allow members to create public repositories. Defaults to current value. */\n  membersCanCreatePublicRepositories?: InputMaybe<Scalars['Boolean']>;\n  /** When false, allow member organizations to set their own repository creation member privileges. */\n  membersCanCreateRepositoriesPolicyEnabled?: InputMaybe<Scalars['Boolean']>;\n  /**\n   * Value for the members can create repositories setting on the enterprise. This\n   * or the granular public/private/internal allowed fields (but not both) must be provided.\n   */\n  settingValue?: InputMaybe<EnterpriseMembersCanCreateRepositoriesSettingValue>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload = {\n  __typename?: 'UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated members can create repositories setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can create repositories setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting */\nexport type UpdateEnterpriseMembersCanDeleteIssuesSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the members can delete issues setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the members can delete issues setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting */\nexport type UpdateEnterpriseMembersCanDeleteIssuesSettingPayload = {\n  __typename?: 'UpdateEnterpriseMembersCanDeleteIssuesSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated members can delete issues setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can delete issues setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the members can delete repositories setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the members can delete repositories setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload = {\n  __typename?: 'UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated members can delete repositories setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can delete repositories setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting */\nexport type UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the members can invite collaborators setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the members can invite collaborators setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting */\nexport type UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload = {\n  __typename?: 'UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated members can invite collaborators setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can invite collaborators setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting */\nexport type UpdateEnterpriseMembersCanMakePurchasesSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the members can make purchases setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the members can make purchases setting on the enterprise. */\n  settingValue: EnterpriseMembersCanMakePurchasesSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting */\nexport type UpdateEnterpriseMembersCanMakePurchasesSettingPayload = {\n  __typename?: 'UpdateEnterpriseMembersCanMakePurchasesSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated members can make purchases setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can make purchases setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting */\nexport type UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the members can update protected branches setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the members can update protected branches setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting */\nexport type UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload = {\n  __typename?: 'UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated members can update protected branches setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can update protected branches setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting */\nexport type UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the members can view dependency insights setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the members can view dependency insights setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting */\nexport type UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload = {\n  __typename?: 'UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated members can view dependency insights setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the members can view dependency insights setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseOrganizationProjectsSetting */\nexport type UpdateEnterpriseOrganizationProjectsSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the organization projects setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the organization projects setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting */\nexport type UpdateEnterpriseOrganizationProjectsSettingPayload = {\n  __typename?: 'UpdateEnterpriseOrganizationProjectsSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated organization projects setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the organization projects setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseOwnerOrganizationRole */\nexport type UpdateEnterpriseOwnerOrganizationRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Enterprise which the owner belongs to. */\n  enterpriseId: Scalars['ID'];\n  /** The ID of the organization for membership change. */\n  organizationId: Scalars['ID'];\n  /** The role to assume in the organization. */\n  organizationRole: RoleInOrganization;\n};\n\n/** Autogenerated return type of UpdateEnterpriseOwnerOrganizationRole */\nexport type UpdateEnterpriseOwnerOrganizationRolePayload = {\n  __typename?: 'UpdateEnterpriseOwnerOrganizationRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** A message confirming the result of changing the owner's organization role. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseProfile */\nexport type UpdateEnterpriseProfileInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The description of the enterprise. */\n  description?: InputMaybe<Scalars['String']>;\n  /** The Enterprise ID to update. */\n  enterpriseId: Scalars['ID'];\n  /** The location of the enterprise. */\n  location?: InputMaybe<Scalars['String']>;\n  /** The name of the enterprise. */\n  name?: InputMaybe<Scalars['String']>;\n  /** The URL of the enterprise's website. */\n  websiteUrl?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseProfile */\nexport type UpdateEnterpriseProfilePayload = {\n  __typename?: 'UpdateEnterpriseProfilePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated enterprise. */\n  enterprise?: Maybe<Enterprise>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseRepositoryProjectsSetting */\nexport type UpdateEnterpriseRepositoryProjectsSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the repository projects setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the repository projects setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting */\nexport type UpdateEnterpriseRepositoryProjectsSettingPayload = {\n  __typename?: 'UpdateEnterpriseRepositoryProjectsSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated repository projects setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the repository projects setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting */\nexport type UpdateEnterpriseTeamDiscussionsSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the team discussions setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the team discussions setting on the enterprise. */\n  settingValue: EnterpriseEnabledDisabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting */\nexport type UpdateEnterpriseTeamDiscussionsSettingPayload = {\n  __typename?: 'UpdateEnterpriseTeamDiscussionsSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated team discussions setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the team discussions setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting */\nexport type UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the enterprise on which to set the two factor authentication required setting. */\n  enterpriseId: Scalars['ID'];\n  /** The value for the two factor authentication required setting on the enterprise. */\n  settingValue: EnterpriseEnabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting */\nexport type UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload = {\n  __typename?: 'UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The enterprise with the updated two factor authentication required setting. */\n  enterprise?: Maybe<Enterprise>;\n  /** A message confirming the result of updating the two factor authentication required setting. */\n  message?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateEnvironment */\nexport type UpdateEnvironmentInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The node ID of the environment. */\n  environmentId: Scalars['ID'];\n  /** The ids of users or teams that can approve deployments to this environment */\n  reviewers?: InputMaybe<Array<Scalars['ID']>>;\n  /** The wait timer in minutes. */\n  waitTimer?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateEnvironment */\nexport type UpdateEnvironmentPayload = {\n  __typename?: 'UpdateEnvironmentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated environment. */\n  environment?: Maybe<Environment>;\n};\n\n/** Autogenerated input type of UpdateIpAllowListEnabledSetting */\nexport type UpdateIpAllowListEnabledSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the owner on which to set the IP allow list enabled setting. */\n  ownerId: Scalars['ID'];\n  /** The value for the IP allow list enabled setting. */\n  settingValue: IpAllowListEnabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateIpAllowListEnabledSetting */\nexport type UpdateIpAllowListEnabledSettingPayload = {\n  __typename?: 'UpdateIpAllowListEnabledSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The IP allow list owner on which the setting was updated. */\n  owner?: Maybe<IpAllowListOwner>;\n};\n\n/** Autogenerated input type of UpdateIpAllowListEntry */\nexport type UpdateIpAllowListEntryInput = {\n  /** An IP address or range of addresses in CIDR notation. */\n  allowListValue: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the IP allow list entry to update. */\n  ipAllowListEntryId: Scalars['ID'];\n  /** Whether the IP allow list entry is active when an IP allow list is enabled. */\n  isActive: Scalars['Boolean'];\n  /** An optional name for the IP allow list entry. */\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateIpAllowListEntry */\nexport type UpdateIpAllowListEntryPayload = {\n  __typename?: 'UpdateIpAllowListEntryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The IP allow list entry that was updated. */\n  ipAllowListEntry?: Maybe<IpAllowListEntry>;\n};\n\n/** Autogenerated input type of UpdateIpAllowListForInstalledAppsEnabledSetting */\nexport type UpdateIpAllowListForInstalledAppsEnabledSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the owner. */\n  ownerId: Scalars['ID'];\n  /** The value for the IP allow list configuration for installed GitHub Apps setting. */\n  settingValue: IpAllowListForInstalledAppsEnabledSettingValue;\n};\n\n/** Autogenerated return type of UpdateIpAllowListForInstalledAppsEnabledSetting */\nexport type UpdateIpAllowListForInstalledAppsEnabledSettingPayload = {\n  __typename?: 'UpdateIpAllowListForInstalledAppsEnabledSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The IP allow list owner on which the setting was updated. */\n  owner?: Maybe<IpAllowListOwner>;\n};\n\n/** Autogenerated input type of UpdateIssueComment */\nexport type UpdateIssueCommentInput = {\n  /** The updated text of the comment. */\n  body: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the IssueComment to modify. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateIssueComment */\nexport type UpdateIssueCommentPayload = {\n  __typename?: 'UpdateIssueCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated comment. */\n  issueComment?: Maybe<IssueComment>;\n};\n\n/** Autogenerated input type of UpdateIssue */\nexport type UpdateIssueInput = {\n  /** An array of Node IDs of users for this issue. */\n  assigneeIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The body for the issue description. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the Issue to modify. */\n  id: Scalars['ID'];\n  /** An array of Node IDs of labels for this issue. */\n  labelIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The Node ID of the milestone for this issue. */\n  milestoneId?: InputMaybe<Scalars['ID']>;\n  /** An array of Node IDs for projects associated with this issue. */\n  projectIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The desired issue state. */\n  state?: InputMaybe<IssueState>;\n  /** The title for the issue. */\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateIssue */\nexport type UpdateIssuePayload = {\n  __typename?: 'UpdateIssuePayload';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The issue. */\n  issue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of UpdateLabel */\nexport type UpdateLabelInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** A 6 character hex code, without the leading #, identifying the updated color of the label. */\n  color?: InputMaybe<Scalars['String']>;\n  /** A brief description of the label, such as its purpose. */\n  description?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the label to be updated. */\n  id: Scalars['ID'];\n  /** The updated name of the label. */\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateLabel */\nexport type UpdateLabelPayload = {\n  __typename?: 'UpdateLabelPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated label. */\n  label?: Maybe<Label>;\n};\n\n/** Autogenerated input type of UpdateNotificationRestrictionSetting */\nexport type UpdateNotificationRestrictionSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the owner on which to set the restrict notifications setting. */\n  ownerId: Scalars['ID'];\n  /** The value for the restrict notifications setting. */\n  settingValue: NotificationRestrictionSettingValue;\n};\n\n/** Autogenerated return type of UpdateNotificationRestrictionSetting */\nexport type UpdateNotificationRestrictionSettingPayload = {\n  __typename?: 'UpdateNotificationRestrictionSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The owner on which the setting was updated. */\n  owner?: Maybe<VerifiableDomainOwner>;\n};\n\n/** Autogenerated input type of UpdateOrganizationAllowPrivateRepositoryForkingSetting */\nexport type UpdateOrganizationAllowPrivateRepositoryForkingSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Enable forking of private repositories in the organization? */\n  forkingEnabled: Scalars['Boolean'];\n  /** The ID of the organization on which to set the allow private repository forking setting. */\n  organizationId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateOrganizationAllowPrivateRepositoryForkingSetting */\nexport type UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload = {\n  __typename?: 'UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** A message confirming the result of updating the allow private repository forking setting. */\n  message?: Maybe<Scalars['String']>;\n  /** The organization with the updated allow private repository forking setting. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of UpdateOrganizationWebCommitSignoffSetting */\nexport type UpdateOrganizationWebCommitSignoffSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the organization on which to set the web commit signoff setting. */\n  organizationId: Scalars['ID'];\n  /** Enable signoff on web-based commits for repositories in the organization? */\n  webCommitSignoffRequired: Scalars['Boolean'];\n};\n\n/** Autogenerated return type of UpdateOrganizationWebCommitSignoffSetting */\nexport type UpdateOrganizationWebCommitSignoffSettingPayload = {\n  __typename?: 'UpdateOrganizationWebCommitSignoffSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** A message confirming the result of updating the web commit signoff setting. */\n  message?: Maybe<Scalars['String']>;\n  /** The organization with the updated web commit signoff setting. */\n  organization?: Maybe<Organization>;\n};\n\n/** Only allow users with bypass permission to update matching refs. */\nexport type UpdateParameters = {\n  __typename?: 'UpdateParameters';\n  /** Branch can pull changes from its upstream repository */\n  updateAllowsFetchAndMerge: Scalars['Boolean'];\n};\n\n/** Only allow users with bypass permission to update matching refs. */\nexport type UpdateParametersInput = {\n  /** Branch can pull changes from its upstream repository */\n  updateAllowsFetchAndMerge: Scalars['Boolean'];\n};\n\n/** Autogenerated input type of UpdateProjectCard */\nexport type UpdateProjectCardInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Whether or not the ProjectCard should be archived */\n  isArchived?: InputMaybe<Scalars['Boolean']>;\n  /** The note of ProjectCard. */\n  note?: InputMaybe<Scalars['String']>;\n  /** The ProjectCard ID to update. */\n  projectCardId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateProjectCard */\nexport type UpdateProjectCardPayload = {\n  __typename?: 'UpdateProjectCardPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated ProjectCard. */\n  projectCard?: Maybe<ProjectCard>;\n};\n\n/** Autogenerated input type of UpdateProjectColumn */\nexport type UpdateProjectColumnInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The name of project column. */\n  name: Scalars['String'];\n  /** The ProjectColumn ID to update. */\n  projectColumnId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateProjectColumn */\nexport type UpdateProjectColumnPayload = {\n  __typename?: 'UpdateProjectColumnPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated project column. */\n  projectColumn?: Maybe<ProjectColumn>;\n};\n\n/** Autogenerated input type of UpdateProject */\nexport type UpdateProjectInput = {\n  /** The description of project. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The name of project. */\n  name?: InputMaybe<Scalars['String']>;\n  /** The Project ID to update. */\n  projectId: Scalars['ID'];\n  /** Whether the project is public or not. */\n  public?: InputMaybe<Scalars['Boolean']>;\n  /** Whether the project is open or closed. */\n  state?: InputMaybe<ProjectState>;\n};\n\n/** Autogenerated return type of UpdateProject */\nexport type UpdateProjectPayload = {\n  __typename?: 'UpdateProjectPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated project. */\n  project?: Maybe<Project>;\n};\n\n/** Autogenerated input type of UpdateProjectV2Collaborators */\nexport type UpdateProjectV2CollaboratorsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The collaborators to update. */\n  collaborators: Array<ProjectV2Collaborator>;\n  /** The ID of the project to update the collaborators for. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateProjectV2Collaborators */\nexport type UpdateProjectV2CollaboratorsPayload = {\n  __typename?: 'UpdateProjectV2CollaboratorsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The collaborators granted a role */\n  collaborators?: Maybe<ProjectV2ActorConnection>;\n};\n\n\n/** Autogenerated return type of UpdateProjectV2Collaborators */\nexport type UpdateProjectV2CollaboratorsPayloadCollaboratorsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of UpdateProjectV2DraftIssue */\nexport type UpdateProjectV2DraftIssueInput = {\n  /** The IDs of the assignees of the draft issue. */\n  assigneeIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The body of the draft issue. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the draft issue to update. */\n  draftIssueId: Scalars['ID'];\n  /** The title of the draft issue. */\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateProjectV2DraftIssue */\nexport type UpdateProjectV2DraftIssuePayload = {\n  __typename?: 'UpdateProjectV2DraftIssuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The draft issue updated in the project. */\n  draftIssue?: Maybe<DraftIssue>;\n};\n\n/** Autogenerated input type of UpdateProjectV2 */\nexport type UpdateProjectV2Input = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Set the project to closed or open. */\n  closed?: InputMaybe<Scalars['Boolean']>;\n  /** The ID of the Project to update. */\n  projectId: Scalars['ID'];\n  /** Set the project to public or private. */\n  public?: InputMaybe<Scalars['Boolean']>;\n  /** Set the readme description of the project. */\n  readme?: InputMaybe<Scalars['String']>;\n  /** Set the short description of the project. */\n  shortDescription?: InputMaybe<Scalars['String']>;\n  /** Set the title of the project. */\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateProjectV2ItemFieldValue */\nexport type UpdateProjectV2ItemFieldValueInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the field to be updated. */\n  fieldId: Scalars['ID'];\n  /** The ID of the item to be updated. */\n  itemId: Scalars['ID'];\n  /** The ID of the Project. */\n  projectId: Scalars['ID'];\n  /** The value which will be set on the field. */\n  value: ProjectV2FieldValue;\n};\n\n/** Autogenerated return type of UpdateProjectV2ItemFieldValue */\nexport type UpdateProjectV2ItemFieldValuePayload = {\n  __typename?: 'UpdateProjectV2ItemFieldValuePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated item. */\n  projectV2Item?: Maybe<ProjectV2Item>;\n};\n\n/** Autogenerated input type of UpdateProjectV2ItemPosition */\nexport type UpdateProjectV2ItemPositionInput = {\n  /** The ID of the item to position this item after. If omitted or set to null the item will be moved to top. */\n  afterId?: InputMaybe<Scalars['ID']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the item to be moved. */\n  itemId: Scalars['ID'];\n  /** The ID of the Project. */\n  projectId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateProjectV2ItemPosition */\nexport type UpdateProjectV2ItemPositionPayload = {\n  __typename?: 'UpdateProjectV2ItemPositionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The items in the new order */\n  items?: Maybe<ProjectV2ItemConnection>;\n};\n\n\n/** Autogenerated return type of UpdateProjectV2ItemPosition */\nexport type UpdateProjectV2ItemPositionPayloadItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateProjectV2 */\nexport type UpdateProjectV2Payload = {\n  __typename?: 'UpdateProjectV2Payload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated Project. */\n  projectV2?: Maybe<ProjectV2>;\n};\n\n/** Autogenerated input type of UpdatePullRequestBranch */\nexport type UpdatePullRequestBranchInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The head ref oid for the upstream branch. */\n  expectedHeadOid?: InputMaybe<Scalars['GitObjectID']>;\n  /** The Node ID of the pull request. */\n  pullRequestId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdatePullRequestBranch */\nexport type UpdatePullRequestBranchPayload = {\n  __typename?: 'UpdatePullRequestBranchPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated pull request. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of UpdatePullRequest */\nexport type UpdatePullRequestInput = {\n  /** An array of Node IDs of users for this pull request. */\n  assigneeIds?: InputMaybe<Array<Scalars['ID']>>;\n  /**\n   * The name of the branch you want your changes pulled into. This should be an existing branch\n   * on the current repository.\n   */\n  baseRefName?: InputMaybe<Scalars['String']>;\n  /** The contents of the pull request. */\n  body?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** An array of Node IDs of labels for this pull request. */\n  labelIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** Indicates whether maintainers can modify the pull request. */\n  maintainerCanModify?: InputMaybe<Scalars['Boolean']>;\n  /** The Node ID of the milestone for this pull request. */\n  milestoneId?: InputMaybe<Scalars['ID']>;\n  /** An array of Node IDs for projects associated with this pull request. */\n  projectIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The Node ID of the pull request. */\n  pullRequestId: Scalars['ID'];\n  /** The target state of the pull request. */\n  state?: InputMaybe<PullRequestUpdateState>;\n  /** The title of the pull request. */\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdatePullRequest */\nexport type UpdatePullRequestPayload = {\n  __typename?: 'UpdatePullRequestPayload';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated pull request. */\n  pullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of UpdatePullRequestReviewComment */\nexport type UpdatePullRequestReviewCommentInput = {\n  /** The text of the comment. */\n  body: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the comment to modify. */\n  pullRequestReviewCommentId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdatePullRequestReviewComment */\nexport type UpdatePullRequestReviewCommentPayload = {\n  __typename?: 'UpdatePullRequestReviewCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated comment. */\n  pullRequestReviewComment?: Maybe<PullRequestReviewComment>;\n};\n\n/** Autogenerated input type of UpdatePullRequestReview */\nexport type UpdatePullRequestReviewInput = {\n  /** The contents of the pull request review body. */\n  body: Scalars['String'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the pull request review to modify. */\n  pullRequestReviewId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdatePullRequestReview */\nexport type UpdatePullRequestReviewPayload = {\n  __typename?: 'UpdatePullRequestReviewPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated pull request review. */\n  pullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** Autogenerated input type of UpdateRef */\nexport type UpdateRefInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Permit updates of branch Refs that are not fast-forwards? */\n  force?: InputMaybe<Scalars['Boolean']>;\n  /** The GitObjectID that the Ref shall be updated to target. */\n  oid: Scalars['GitObjectID'];\n  /** The Node ID of the Ref to be updated. */\n  refId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateRef */\nexport type UpdateRefPayload = {\n  __typename?: 'UpdateRefPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated Ref. */\n  ref?: Maybe<Ref>;\n};\n\n/** Autogenerated input type of UpdateRefs */\nexport type UpdateRefsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** A list of ref updates. */\n  refUpdates: Array<RefUpdate>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateRefs */\nexport type UpdateRefsPayload = {\n  __typename?: 'UpdateRefsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateRepository */\nexport type UpdateRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** A new description for the repository. Pass an empty string to erase the existing description. */\n  description?: InputMaybe<Scalars['String']>;\n  /** Indicates if the repository should have the discussions feature enabled. */\n  hasDiscussionsEnabled?: InputMaybe<Scalars['Boolean']>;\n  /** Indicates if the repository should have the issues feature enabled. */\n  hasIssuesEnabled?: InputMaybe<Scalars['Boolean']>;\n  /** Indicates if the repository should have the project boards feature enabled. */\n  hasProjectsEnabled?: InputMaybe<Scalars['Boolean']>;\n  /** Indicates if the repository should have the wiki feature enabled. */\n  hasWikiEnabled?: InputMaybe<Scalars['Boolean']>;\n  /** The URL for a web page about this repository. Pass an empty string to erase the existing URL. */\n  homepageUrl?: InputMaybe<Scalars['URI']>;\n  /** The new name of the repository. */\n  name?: InputMaybe<Scalars['String']>;\n  /** The ID of the repository to update. */\n  repositoryId: Scalars['ID'];\n  /**\n   * Whether this repository should be marked as a template such that anyone who\n   * can access it can create new repositories with the same files and directory structure.\n   */\n  template?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Autogenerated return type of UpdateRepository */\nexport type UpdateRepositoryPayload = {\n  __typename?: 'UpdateRepositoryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UpdateRepositoryRuleset */\nexport type UpdateRepositoryRulesetInput = {\n  /** A list of Team or App IDs allowed to bypass rules in this ruleset. */\n  bypassActorIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The bypass mode for this ruleset */\n  bypassMode?: InputMaybe<RuleBypassMode>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The list of conditions for this ruleset */\n  conditions?: InputMaybe<RepositoryRuleConditionsInput>;\n  /** The enforcement level for this ruleset */\n  enforcement?: InputMaybe<RuleEnforcement>;\n  /** The name of the ruleset. */\n  name?: InputMaybe<Scalars['String']>;\n  /** The global relay id of the repository ruleset to be updated. */\n  repositoryRulesetId: Scalars['ID'];\n  /** The list of rules for this ruleset */\n  rules?: InputMaybe<Array<RepositoryRuleInput>>;\n  /** The target of the ruleset. */\n  target?: InputMaybe<RepositoryRulesetTarget>;\n};\n\n/** Autogenerated return type of UpdateRepositoryRuleset */\nexport type UpdateRepositoryRulesetPayload = {\n  __typename?: 'UpdateRepositoryRulesetPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The newly created Ruleset. */\n  ruleset?: Maybe<RepositoryRuleset>;\n};\n\n/** Autogenerated input type of UpdateRepositoryWebCommitSignoffSetting */\nexport type UpdateRepositoryWebCommitSignoffSettingInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the repository to update. */\n  repositoryId: Scalars['ID'];\n  /** Indicates if the repository should require signoff on web-based commits. */\n  webCommitSignoffRequired: Scalars['Boolean'];\n};\n\n/** Autogenerated return type of UpdateRepositoryWebCommitSignoffSetting */\nexport type UpdateRepositoryWebCommitSignoffSettingPayload = {\n  __typename?: 'UpdateRepositoryWebCommitSignoffSettingPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** A message confirming the result of updating the web commit signoff setting. */\n  message?: Maybe<Scalars['String']>;\n  /** The updated repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UpdateSponsorshipPreferences */\nexport type UpdateSponsorshipPreferencesInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /**\n   * Specify whether others should be able to see that the sponsor is sponsoring\n   * the sponsorable. Public visibility still does not reveal which tier is used.\n   */\n  privacyLevel?: InputMaybe<SponsorshipPrivacy>;\n  /** Whether the sponsor should receive email updates from the sponsorable. */\n  receiveEmails?: InputMaybe<Scalars['Boolean']>;\n  /**\n   * The ID of the user or organization who is acting as the sponsor, paying for\n   * the sponsorship. Required if sponsorLogin is not given.\n   */\n  sponsorId?: InputMaybe<Scalars['ID']>;\n  /**\n   * The username of the user or organization who is acting as the sponsor, paying\n   * for the sponsorship. Required if sponsorId is not given.\n   */\n  sponsorLogin?: InputMaybe<Scalars['String']>;\n  /** The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given. */\n  sponsorableId?: InputMaybe<Scalars['ID']>;\n  /** The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given. */\n  sponsorableLogin?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateSponsorshipPreferences */\nexport type UpdateSponsorshipPreferencesPayload = {\n  __typename?: 'UpdateSponsorshipPreferencesPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The sponsorship that was updated. */\n  sponsorship?: Maybe<Sponsorship>;\n};\n\n/** Autogenerated input type of UpdateSubscription */\nexport type UpdateSubscriptionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The new state of the subscription. */\n  state: SubscriptionState;\n  /** The Node ID of the subscribable object to modify. */\n  subscribableId: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateSubscription */\nexport type UpdateSubscriptionPayload = {\n  __typename?: 'UpdateSubscriptionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The input subscribable entity. */\n  subscribable?: Maybe<Subscribable>;\n};\n\n/** Autogenerated input type of UpdateTeamDiscussionComment */\nexport type UpdateTeamDiscussionCommentInput = {\n  /** The updated text of the comment. */\n  body: Scalars['String'];\n  /** The current version of the body content. */\n  bodyVersion?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the comment to modify. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateTeamDiscussionComment */\nexport type UpdateTeamDiscussionCommentPayload = {\n  __typename?: 'UpdateTeamDiscussionCommentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated comment. */\n  teamDiscussionComment?: Maybe<TeamDiscussionComment>;\n};\n\n/** Autogenerated input type of UpdateTeamDiscussion */\nexport type UpdateTeamDiscussionInput = {\n  /** The updated text of the discussion. */\n  body?: InputMaybe<Scalars['String']>;\n  /**\n   * The current version of the body content. If provided, this update operation\n   * will be rejected if the given version does not match the latest version on the server.\n   */\n  bodyVersion?: InputMaybe<Scalars['String']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the discussion to modify. */\n  id: Scalars['ID'];\n  /** If provided, sets the pinned state of the updated discussion. */\n  pinned?: InputMaybe<Scalars['Boolean']>;\n  /** The updated title of the discussion. */\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateTeamDiscussion */\nexport type UpdateTeamDiscussionPayload = {\n  __typename?: 'UpdateTeamDiscussionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The updated discussion. */\n  teamDiscussion?: Maybe<TeamDiscussion>;\n};\n\n/** Autogenerated input type of UpdateTeamReviewAssignment */\nexport type UpdateTeamReviewAssignmentInput = {\n  /** The algorithm to use for review assignment */\n  algorithm?: InputMaybe<TeamReviewAssignmentAlgorithm>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Turn on or off review assignment */\n  enabled: Scalars['Boolean'];\n  /** An array of team member IDs to exclude */\n  excludedTeamMemberIds?: InputMaybe<Array<Scalars['ID']>>;\n  /** The Node ID of the team to update review assignments of */\n  id: Scalars['ID'];\n  /** Notify the entire team of the PR if it is delegated */\n  notifyTeam?: InputMaybe<Scalars['Boolean']>;\n  /** The number of team members to assign */\n  teamMemberCount?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateTeamReviewAssignment */\nexport type UpdateTeamReviewAssignmentPayload = {\n  __typename?: 'UpdateTeamReviewAssignmentPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The team that was modified */\n  team?: Maybe<Team>;\n};\n\n/** Autogenerated input type of UpdateTeamsRepository */\nexport type UpdateTeamsRepositoryInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** Permission that should be granted to the teams. */\n  permission: RepositoryPermission;\n  /** Repository ID being granted access to. */\n  repositoryId: Scalars['ID'];\n  /** A list of teams being granted access. Limit: 10 */\n  teamIds: Array<Scalars['ID']>;\n};\n\n/** Autogenerated return type of UpdateTeamsRepository */\nexport type UpdateTeamsRepositoryPayload = {\n  __typename?: 'UpdateTeamsRepositoryPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The repository that was updated. */\n  repository?: Maybe<Repository>;\n  /** The teams granted permission on the repository. */\n  teams?: Maybe<Array<Team>>;\n};\n\n/** Autogenerated input type of UpdateTopics */\nexport type UpdateTopicsInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The Node ID of the repository. */\n  repositoryId: Scalars['ID'];\n  /** An array of topic names. */\n  topicNames: Array<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateTopics */\nexport type UpdateTopicsPayload = {\n  __typename?: 'UpdateTopicsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** Names of the provided topics that are not valid. */\n  invalidTopicNames?: Maybe<Array<Scalars['String']>>;\n  /** The updated repository. */\n  repository?: Maybe<Repository>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type User = Actor & Node & PackageOwner & ProfileOwner & ProjectOwner & ProjectV2Owner & ProjectV2Recent & RepositoryDiscussionAuthor & RepositoryDiscussionCommentAuthor & RepositoryOwner & Sponsorable & UniformResourceLocatable & {\n  __typename?: 'User';\n  /** Determine if this repository owner has any items that can be pinned to their profile. */\n  anyPinnableItems: Scalars['Boolean'];\n  /** A URL pointing to the user's public avatar. */\n  avatarUrl: Scalars['URI'];\n  /** The user's public profile bio. */\n  bio?: Maybe<Scalars['String']>;\n  /** The user's public profile bio as HTML. */\n  bioHTML: Scalars['HTML'];\n  /** Could this user receive email notifications, if the organization had notification restrictions enabled? */\n  canReceiveOrganizationEmailsWhenNotificationsRestricted: Scalars['Boolean'];\n  /** A list of commit comments made by this user. */\n  commitComments: CommitCommentConnection;\n  /** The user's public profile company. */\n  company?: Maybe<Scalars['String']>;\n  /** The user's public profile company as HTML. */\n  companyHTML: Scalars['HTML'];\n  /** The collection of contributions this user has made to different repositories. */\n  contributionsCollection: ContributionsCollection;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The user's publicly visible profile email. */\n  email: Scalars['String'];\n  /** The estimated next GitHub Sponsors payout for this user/organization in cents (USD). */\n  estimatedNextSponsorsPayoutInCents: Scalars['Int'];\n  /** A list of users the given user is followed by. */\n  followers: FollowerConnection;\n  /** A list of users the given user is following. */\n  following: FollowingConnection;\n  /** Find gist by repo name. */\n  gist?: Maybe<Gist>;\n  /** A list of gist comments made by this user. */\n  gistComments: GistCommentConnection;\n  /** A list of the Gists the user has created. */\n  gists: GistConnection;\n  /** True if this user/organization has a GitHub Sponsors listing. */\n  hasSponsorsListing: Scalars['Boolean'];\n  /** The hovercard information for this user in a given context */\n  hovercard: Hovercard;\n  id: Scalars['ID'];\n  /** The interaction ability settings for this user. */\n  interactionAbility?: Maybe<RepositoryInteractionAbility>;\n  /** Whether or not this user is a participant in the GitHub Security Bug Bounty. */\n  isBountyHunter: Scalars['Boolean'];\n  /** Whether or not this user is a participant in the GitHub Campus Experts Program. */\n  isCampusExpert: Scalars['Boolean'];\n  /** Whether or not this user is a GitHub Developer Program member. */\n  isDeveloperProgramMember: Scalars['Boolean'];\n  /** Whether or not this user is a GitHub employee. */\n  isEmployee: Scalars['Boolean'];\n  /** Whether or not this user is following the viewer. Inverse of viewerIsFollowing */\n  isFollowingViewer: Scalars['Boolean'];\n  /** Whether or not this user is a member of the GitHub Stars Program. */\n  isGitHubStar: Scalars['Boolean'];\n  /** Whether or not the user has marked themselves as for hire. */\n  isHireable: Scalars['Boolean'];\n  /** Whether or not this user is a site administrator. */\n  isSiteAdmin: Scalars['Boolean'];\n  /** Whether the given account is sponsoring this user/organization. */\n  isSponsoredBy: Scalars['Boolean'];\n  /** True if the viewer is sponsored by this user/organization. */\n  isSponsoringViewer: Scalars['Boolean'];\n  /** Whether or not this user is the viewing user. */\n  isViewer: Scalars['Boolean'];\n  /** A list of issue comments made by this user. */\n  issueComments: IssueCommentConnection;\n  /** A list of issues associated with this user. */\n  issues: IssueConnection;\n  /**\n   * Showcases a selection of repositories and gists that the profile owner has\n   * either curated or that have been selected automatically based on popularity.\n   */\n  itemShowcase: ProfileItemShowcase;\n  /** The user's public profile location. */\n  location?: Maybe<Scalars['String']>;\n  /** The username used to login. */\n  login: Scalars['String'];\n  /** The estimated monthly GitHub Sponsors income for this user/organization in cents (USD). */\n  monthlyEstimatedSponsorsIncomeInCents: Scalars['Int'];\n  /** The user's public profile name. */\n  name?: Maybe<Scalars['String']>;\n  /** Find an organization by its login that the user belongs to. */\n  organization?: Maybe<Organization>;\n  /** Verified email addresses that match verified domains for a specified organization the user is a member of. */\n  organizationVerifiedDomainEmails: Array<Scalars['String']>;\n  /** A list of organizations the user belongs to. */\n  organizations: OrganizationConnection;\n  /** A list of packages under the owner. */\n  packages: PackageConnection;\n  /** A list of repositories and gists this profile owner can pin to their profile. */\n  pinnableItems: PinnableItemConnection;\n  /** A list of repositories and gists this profile owner has pinned to their profile */\n  pinnedItems: PinnableItemConnection;\n  /** Returns how many more items this profile owner can pin to their profile. */\n  pinnedItemsRemaining: Scalars['Int'];\n  /** Find project by number. */\n  project?: Maybe<Project>;\n  /** Find a project by number. */\n  projectV2?: Maybe<ProjectV2>;\n  /** A list of projects under the owner. */\n  projects: ProjectConnection;\n  /** The HTTP path listing user's projects */\n  projectsResourcePath: Scalars['URI'];\n  /** The HTTP URL listing user's projects */\n  projectsUrl: Scalars['URI'];\n  /** A list of projects under the owner. */\n  projectsV2: ProjectV2Connection;\n  /** The user's profile pronouns */\n  pronouns?: Maybe<Scalars['String']>;\n  /** A list of public keys associated with this user. */\n  publicKeys: PublicKeyConnection;\n  /** A list of pull requests associated with this user. */\n  pullRequests: PullRequestConnection;\n  /** Recent projects that this user has modified in the context of the owner. */\n  recentProjects: ProjectV2Connection;\n  /** A list of repositories that the user owns. */\n  repositories: RepositoryConnection;\n  /** A list of repositories that the user recently contributed to. */\n  repositoriesContributedTo: RepositoryConnection;\n  /** Find Repository. */\n  repository?: Maybe<Repository>;\n  /** Discussion comments this user has authored. */\n  repositoryDiscussionComments: DiscussionCommentConnection;\n  /** Discussions this user has started. */\n  repositoryDiscussions: DiscussionConnection;\n  /** The HTTP path for this user */\n  resourcePath: Scalars['URI'];\n  /** Replies this user has saved */\n  savedReplies?: Maybe<SavedReplyConnection>;\n  /** The user's social media accounts, ordered as they appear on the user's profile. */\n  socialAccounts: SocialAccountConnection;\n  /** List of users and organizations this entity is sponsoring. */\n  sponsoring: SponsorConnection;\n  /** List of sponsors for this user or organization. */\n  sponsors: SponsorConnection;\n  /** Events involving this sponsorable, such as new sponsorships. */\n  sponsorsActivities: SponsorsActivityConnection;\n  /** The GitHub Sponsors listing for this user or organization. */\n  sponsorsListing?: Maybe<SponsorsListing>;\n  /** The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor. */\n  sponsorshipForViewerAsSponsor?: Maybe<Sponsorship>;\n  /** The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving. */\n  sponsorshipForViewerAsSponsorable?: Maybe<Sponsorship>;\n  /** List of sponsorship updates sent from this sponsorable to sponsors. */\n  sponsorshipNewsletters: SponsorshipNewsletterConnection;\n  /** The sponsorships where this user or organization is the maintainer receiving the funds. */\n  sponsorshipsAsMaintainer: SponsorshipConnection;\n  /** The sponsorships where this user or organization is the funder. */\n  sponsorshipsAsSponsor: SponsorshipConnection;\n  /** Repositories the user has starred. */\n  starredRepositories: StarredRepositoryConnection;\n  /** The user's description of what they're currently doing. */\n  status?: Maybe<UserStatus>;\n  /** Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created */\n  topRepositories: RepositoryConnection;\n  /**\n   * The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has\n   * spent on GitHub to fund sponsorships. Only returns a value when viewed by the\n   * user themselves or by a user who can manage sponsorships for the requested organization.\n   */\n  totalSponsorshipAmountAsSponsorInCents?: Maybe<Scalars['Int']>;\n  /** The user's Twitter username. */\n  twitterUsername?: Maybe<Scalars['String']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this user */\n  url: Scalars['URI'];\n  /** Can the viewer pin repositories and gists to the profile? */\n  viewerCanChangePinnedItems: Scalars['Boolean'];\n  /** Can the current viewer create new projects on this owner. */\n  viewerCanCreateProjects: Scalars['Boolean'];\n  /** Whether or not the viewer is able to follow the user. */\n  viewerCanFollow: Scalars['Boolean'];\n  /** Whether or not the viewer is able to sponsor this user/organization. */\n  viewerCanSponsor: Scalars['Boolean'];\n  /** Whether or not this user is followed by the viewer. Inverse of isFollowingViewer. */\n  viewerIsFollowing: Scalars['Boolean'];\n  /** True if the viewer is sponsoring this user/organization. */\n  viewerIsSponsoring: Scalars['Boolean'];\n  /** A list of repositories the given user is watching. */\n  watching: RepositoryConnection;\n  /** A URL pointing to the user's public website/blog. */\n  websiteUrl?: Maybe<Scalars['URI']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserAnyPinnableItemsArgs = {\n  type?: InputMaybe<PinnableItemType>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserAvatarUrlArgs = {\n  size?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserCanReceiveOrganizationEmailsWhenNotificationsRestrictedArgs = {\n  login: Scalars['String'];\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserCommitCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserContributionsCollectionArgs = {\n  from?: InputMaybe<Scalars['DateTime']>;\n  organizationID?: InputMaybe<Scalars['ID']>;\n  to?: InputMaybe<Scalars['DateTime']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserFollowersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserFollowingArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserGistArgs = {\n  name: Scalars['String'];\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserGistCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserGistsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GistOrder>;\n  privacy?: InputMaybe<GistPrivacy>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserHovercardArgs = {\n  primarySubjectId?: InputMaybe<Scalars['ID']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserIsSponsoredByArgs = {\n  accountLogin: Scalars['String'];\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserIssueCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueCommentOrder>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserIssuesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filterBy?: InputMaybe<IssueFilters>;\n  first?: InputMaybe<Scalars['Int']>;\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<IssueState>>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserOrganizationArgs = {\n  login: Scalars['String'];\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserOrganizationVerifiedDomainEmailsArgs = {\n  login: Scalars['String'];\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<OrganizationOrder>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPackagesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  names?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  orderBy?: InputMaybe<PackageOrder>;\n  packageType?: InputMaybe<PackageType>;\n  repositoryId?: InputMaybe<Scalars['ID']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPinnableItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPinnedItemsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  types?: InputMaybe<Array<PinnableItemType>>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserProjectArgs = {\n  number: Scalars['Int'];\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserProjectV2Args = {\n  number: Scalars['Int'];\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserProjectsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectOrder>;\n  search?: InputMaybe<Scalars['String']>;\n  states?: InputMaybe<Array<ProjectState>>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserProjectsV2Args = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ProjectV2Order>;\n  query?: InputMaybe<Scalars['String']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPublicKeysArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPullRequestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  baseRefName?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  headRefName?: InputMaybe<Scalars['String']>;\n  labels?: InputMaybe<Array<Scalars['String']>>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<IssueOrder>;\n  states?: InputMaybe<Array<PullRequestState>>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRecentProjectsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoriesArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  isFork?: InputMaybe<Scalars['Boolean']>;\n  isLocked?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoriesContributedToArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  contributionTypes?: InputMaybe<Array<InputMaybe<RepositoryContributionType>>>;\n  first?: InputMaybe<Scalars['Int']>;\n  includeUserRepositories?: InputMaybe<Scalars['Boolean']>;\n  isLocked?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoryArgs = {\n  followRenames?: InputMaybe<Scalars['Boolean']>;\n  name: Scalars['String'];\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoryDiscussionCommentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  onlyAnswers?: InputMaybe<Scalars['Boolean']>;\n  repositoryId?: InputMaybe<Scalars['ID']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoryDiscussionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  answered?: InputMaybe<Scalars['Boolean']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<DiscussionOrder>;\n  repositoryId?: InputMaybe<Scalars['ID']>;\n  states?: InputMaybe<Array<DiscussionState>>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSavedRepliesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SavedReplyOrder>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSocialAccountsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsoringArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorOrder>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorOrder>;\n  tierId?: InputMaybe<Scalars['ID']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorsActivitiesArgs = {\n  actions?: InputMaybe<Array<SponsorsActivityAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includeAsSponsor?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorsActivityOrder>;\n  period?: InputMaybe<SponsorsActivityPeriod>;\n  since?: InputMaybe<Scalars['DateTime']>;\n  until?: InputMaybe<Scalars['DateTime']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipForViewerAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipForViewerAsSponsorableArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipNewslettersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorshipNewsletterOrder>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipsAsMaintainerArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  includePrivate?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipsAsSponsorArgs = {\n  activeOnly?: InputMaybe<Scalars['Boolean']>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  maintainerLogins?: InputMaybe<Array<Scalars['String']>>;\n  orderBy?: InputMaybe<SponsorshipOrder>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserStarredRepositoriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<StarOrder>;\n  ownedByViewer?: InputMaybe<Scalars['Boolean']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserTopRepositoriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy: RepositoryOrder;\n  since?: InputMaybe<Scalars['DateTime']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserTotalSponsorshipAmountAsSponsorInCentsArgs = {\n  since?: InputMaybe<Scalars['DateTime']>;\n  sponsorableLogins?: InputMaybe<Array<Scalars['String']>>;\n  until?: InputMaybe<Scalars['DateTime']>;\n};\n\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserWatchingArgs = {\n  affiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  isLocked?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RepositoryOrder>;\n  ownerAffiliations?: InputMaybe<Array<InputMaybe<RepositoryAffiliation>>>;\n  privacy?: InputMaybe<RepositoryPrivacy>;\n};\n\n/** The possible durations that a user can be blocked for. */\nexport enum UserBlockDuration {\n  /** The user was blocked for 1 day */\n  OneDay = 'ONE_DAY',\n  /** The user was blocked for 30 days */\n  OneMonth = 'ONE_MONTH',\n  /** The user was blocked for 7 days */\n  OneWeek = 'ONE_WEEK',\n  /** The user was blocked permanently */\n  Permanent = 'PERMANENT',\n  /** The user was blocked for 3 days */\n  ThreeDays = 'THREE_DAYS'\n}\n\n/** Represents a 'user_blocked' event on a given user. */\nexport type UserBlockedEvent = Node & {\n  __typename?: 'UserBlockedEvent';\n  /** Identifies the actor who performed the event. */\n  actor?: Maybe<Actor>;\n  /** Number of days that the user was blocked for. */\n  blockDuration: UserBlockDuration;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  /** The user who was blocked. */\n  subject?: Maybe<User>;\n};\n\n/** The connection type for User. */\nexport type UserConnection = {\n  __typename?: 'UserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<UserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edit on user content */\nexport type UserContentEdit = Node & {\n  __typename?: 'UserContentEdit';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the date and time when the object was deleted. */\n  deletedAt?: Maybe<Scalars['DateTime']>;\n  /** The actor who deleted this content */\n  deletedBy?: Maybe<Actor>;\n  /** A summary of the changes for this edit */\n  diff?: Maybe<Scalars['String']>;\n  /** When this content was edited */\n  editedAt: Scalars['DateTime'];\n  /** The actor who edited this content */\n  editor?: Maybe<Actor>;\n  id: Scalars['ID'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n};\n\n/** A list of edits to content. */\nexport type UserContentEditConnection = {\n  __typename?: 'UserContentEditConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<UserContentEditEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<UserContentEdit>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type UserContentEditEdge = {\n  __typename?: 'UserContentEditEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<UserContentEdit>;\n};\n\n/** Represents a user. */\nexport type UserEdge = {\n  __typename?: 'UserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<User>;\n};\n\n/** Email attributes from External Identity */\nexport type UserEmailMetadata = {\n  __typename?: 'UserEmailMetadata';\n  /** Boolean to identify primary emails */\n  primary?: Maybe<Scalars['Boolean']>;\n  /** Type of email */\n  type?: Maybe<Scalars['String']>;\n  /** Email id */\n  value: Scalars['String'];\n};\n\n/** The user's description of what they're currently doing. */\nexport type UserStatus = Node & {\n  __typename?: 'UserStatus';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** An emoji summarizing the user's status. */\n  emoji?: Maybe<Scalars['String']>;\n  /** The status emoji as HTML. */\n  emojiHTML?: Maybe<Scalars['HTML']>;\n  /** If set, the status will not be shown after this date. */\n  expiresAt?: Maybe<Scalars['DateTime']>;\n  id: Scalars['ID'];\n  /** Whether this status indicates the user is not fully available on GitHub. */\n  indicatesLimitedAvailability: Scalars['Boolean'];\n  /** A brief message describing what the user is doing. */\n  message?: Maybe<Scalars['String']>;\n  /** The organization whose members can see this status. If null, this status is publicly visible. */\n  organization?: Maybe<Organization>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The user who has this status. */\n  user: User;\n};\n\n/** The connection type for UserStatus. */\nexport type UserStatusConnection = {\n  __typename?: 'UserStatusConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<UserStatusEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<UserStatus>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type UserStatusEdge = {\n  __typename?: 'UserStatusEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<UserStatus>;\n};\n\n/** Ordering options for user status connections. */\nexport type UserStatusOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order user statuses by. */\n  field: UserStatusOrderField;\n};\n\n/** Properties by which user status connections can be ordered. */\nexport enum UserStatusOrderField {\n  /** Order user statuses by when they were updated. */\n  UpdatedAt = 'UPDATED_AT'\n}\n\n/** A domain that can be verified or approved for an organization or an enterprise. */\nexport type VerifiableDomain = Node & {\n  __typename?: 'VerifiableDomain';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The DNS host name that should be used for verification. */\n  dnsHostName?: Maybe<Scalars['URI']>;\n  /** The unicode encoded domain. */\n  domain: Scalars['URI'];\n  /** Whether a TXT record for verification with the expected host name was found. */\n  hasFoundHostName: Scalars['Boolean'];\n  /** Whether a TXT record for verification with the expected verification token was found. */\n  hasFoundVerificationToken: Scalars['Boolean'];\n  id: Scalars['ID'];\n  /** Whether or not the domain is approved. */\n  isApproved: Scalars['Boolean'];\n  /** Whether this domain is required to exist for an organization or enterprise policy to be enforced. */\n  isRequiredForPolicyEnforcement: Scalars['Boolean'];\n  /** Whether or not the domain is verified. */\n  isVerified: Scalars['Boolean'];\n  /** The owner of the domain. */\n  owner: VerifiableDomainOwner;\n  /** The punycode encoded domain. */\n  punycodeEncodedDomain: Scalars['URI'];\n  /** The time that the current verification token will expire. */\n  tokenExpirationTime?: Maybe<Scalars['DateTime']>;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The current verification token for the domain. */\n  verificationToken?: Maybe<Scalars['String']>;\n};\n\n/** The connection type for VerifiableDomain. */\nexport type VerifiableDomainConnection = {\n  __typename?: 'VerifiableDomainConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<VerifiableDomainEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<VerifiableDomain>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type VerifiableDomainEdge = {\n  __typename?: 'VerifiableDomainEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<VerifiableDomain>;\n};\n\n/** Ordering options for verifiable domain connections. */\nexport type VerifiableDomainOrder = {\n  /** The ordering direction. */\n  direction: OrderDirection;\n  /** The field to order verifiable domains by. */\n  field: VerifiableDomainOrderField;\n};\n\n/** Properties by which verifiable domain connections can be ordered. */\nexport enum VerifiableDomainOrderField {\n  /** Order verifiable domains by their creation date. */\n  CreatedAt = 'CREATED_AT',\n  /** Order verifiable domains by the domain name. */\n  Domain = 'DOMAIN'\n}\n\n/** Types that can own a verifiable domain. */\nexport type VerifiableDomainOwner = Enterprise | Organization;\n\n/** Autogenerated input type of VerifyVerifiableDomain */\nexport type VerifyVerifiableDomainInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the verifiable domain to verify. */\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of VerifyVerifiableDomain */\nexport type VerifyVerifiableDomainPayload = {\n  __typename?: 'VerifyVerifiableDomainPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  /** The verifiable domain that was verified. */\n  domain?: Maybe<VerifiableDomain>;\n};\n\n/** A hovercard context with a message describing how the viewer is related. */\nexport type ViewerHovercardContext = HovercardContext & {\n  __typename?: 'ViewerHovercardContext';\n  /** A string describing this context */\n  message: Scalars['String'];\n  /** An octicon to accompany this context */\n  octicon: Scalars['String'];\n  /** Identifies the user who is related to this context. */\n  viewer: User;\n};\n\n/** A subject that may be upvoted. */\nexport type Votable = {\n  /** Number of upvotes that this subject has received. */\n  upvoteCount: Scalars['Int'];\n  /** Whether or not the current user can add or remove an upvote on this subject. */\n  viewerCanUpvote: Scalars['Boolean'];\n  /** Whether or not the current user has already upvoted this subject. */\n  viewerHasUpvoted: Scalars['Boolean'];\n};\n\n/** A workflow contains meta information about an Actions workflow file. */\nexport type Workflow = Node & UniformResourceLocatable & {\n  __typename?: 'Workflow';\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  /** The name of the workflow. */\n  name: Scalars['String'];\n  /** The HTTP path for this workflow */\n  resourcePath: Scalars['URI'];\n  /** The runs of the workflow. */\n  runs: WorkflowRunConnection;\n  /** The state of the workflow. */\n  state: WorkflowState;\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this workflow */\n  url: Scalars['URI'];\n};\n\n\n/** A workflow contains meta information about an Actions workflow file. */\nexport type WorkflowRunsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<WorkflowRunOrder>;\n};\n\n/** A workflow run. */\nexport type WorkflowRun = Node & UniformResourceLocatable & {\n  __typename?: 'WorkflowRun';\n  /** The check suite this workflow run belongs to. */\n  checkSuite: CheckSuite;\n  /** Identifies the date and time when the object was created. */\n  createdAt: Scalars['DateTime'];\n  /** Identifies the primary key from the database. */\n  databaseId?: Maybe<Scalars['Int']>;\n  /** The log of deployment reviews */\n  deploymentReviews: DeploymentReviewConnection;\n  /** The event that triggered the workflow run */\n  event: Scalars['String'];\n  /** The workflow file */\n  file?: Maybe<WorkflowRunFile>;\n  id: Scalars['ID'];\n  /** The pending deployment requests of all check runs in this workflow run */\n  pendingDeploymentRequests: DeploymentRequestConnection;\n  /** The HTTP path for this workflow run */\n  resourcePath: Scalars['URI'];\n  /** A number that uniquely identifies this workflow run in its parent workflow. */\n  runNumber: Scalars['Int'];\n  /** Identifies the date and time when the object was last updated. */\n  updatedAt: Scalars['DateTime'];\n  /** The HTTP URL for this workflow run */\n  url: Scalars['URI'];\n  /** The workflow executed in this workflow run. */\n  workflow: Workflow;\n};\n\n\n/** A workflow run. */\nexport type WorkflowRunDeploymentReviewsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** A workflow run. */\nexport type WorkflowRunPendingDeploymentRequestsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for WorkflowRun. */\nexport type WorkflowRunConnection = {\n  __typename?: 'WorkflowRunConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<WorkflowRunEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<WorkflowRun>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Identifies the total count of items in the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** An edge in a connection. */\nexport type WorkflowRunEdge = {\n  __typename?: 'WorkflowRunEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<WorkflowRun>;\n};\n\n/** An executed workflow file for a workflow run. */\nexport type WorkflowRunFile = Node & UniformResourceLocatable & {\n  __typename?: 'WorkflowRunFile';\n  id: Scalars['ID'];\n  /** The path of the workflow file relative to its repository. */\n  path: Scalars['String'];\n  /** The direct link to the file in the repository which stores the workflow file. */\n  repositoryFileUrl: Scalars['URI'];\n  /** The repository name and owner which stores the workflow file. */\n  repositoryName: Scalars['URI'];\n  /** The HTTP path for this workflow run file */\n  resourcePath: Scalars['URI'];\n  /** The parent workflow run execution for this file. */\n  run: WorkflowRun;\n  /** The HTTP URL for this workflow run file */\n  url: Scalars['URI'];\n  /** If the viewer has permissions to push to the repository which stores the workflow. */\n  viewerCanPushRepository: Scalars['Boolean'];\n  /** If the viewer has permissions to read the repository which stores the workflow. */\n  viewerCanReadRepository: Scalars['Boolean'];\n};\n\n/** Ways in which lists of workflow runs can be ordered upon return. */\nexport type WorkflowRunOrder = {\n  /** The direction in which to order workflow runs by the specified field. */\n  direction: OrderDirection;\n  /** The field by which to order workflows. */\n  field: WorkflowRunOrderField;\n};\n\n/** Properties by which workflow run connections can be ordered. */\nexport enum WorkflowRunOrderField {\n  /** Order workflow runs by most recently created */\n  CreatedAt = 'CREATED_AT'\n}\n\n/** The possible states for a workflow. */\nexport enum WorkflowState {\n  /** The workflow is active. */\n  Active = 'ACTIVE',\n  /** The workflow was deleted from the git repository. */\n  Deleted = 'DELETED',\n  /** The workflow was disabled by default on a fork. */\n  DisabledFork = 'DISABLED_FORK',\n  /** The workflow was disabled for inactivity in the repository. */\n  DisabledInactivity = 'DISABLED_INACTIVITY',\n  /** The workflow was disabled manually. */\n  DisabledManually = 'DISABLED_MANUALLY'\n}\n\nexport type AddCommentMutationVariables = Exact<{\n  id: Scalars['ID'];\n  body: Scalars['String'];\n}>;\n\n\nexport type AddCommentMutationData = { __typename?: 'Mutation', addComment?: { __typename?: 'AddCommentPayload', subject?: { __typename?: 'AddedToMergeQueueEvent', id: string } | { __typename?: 'AddedToProjectEvent', id: string } | { __typename?: 'App', id: string } | { __typename?: 'AssignedEvent', id: string } | { __typename?: 'AutoMergeDisabledEvent', id: string } | { __typename?: 'AutoMergeEnabledEvent', id: string } | { __typename?: 'AutoRebaseEnabledEvent', id: string } | { __typename?: 'AutoSquashEnabledEvent', id: string } | { __typename?: 'AutomaticBaseChangeFailedEvent', id: string } | { __typename?: 'AutomaticBaseChangeSucceededEvent', id: string } | { __typename?: 'BaseRefChangedEvent', id: string } | { __typename?: 'BaseRefDeletedEvent', id: string } | { __typename?: 'BaseRefForcePushedEvent', id: string } | { __typename?: 'Blob', id: string } | { __typename?: 'Bot', id: string } | { __typename?: 'BranchProtectionRule', id: string } | { __typename?: 'BypassForcePushAllowance', id: string } | { __typename?: 'BypassPullRequestAllowance', id: string } | { __typename?: 'CWE', id: string } | { __typename?: 'CheckRun', id: string } | { __typename?: 'CheckSuite', id: string } | { __typename?: 'ClosedEvent', id: string } | { __typename?: 'CodeOfConduct', id: string } | { __typename?: 'CommentDeletedEvent', id: string } | { __typename?: 'Commit', id: string } | { __typename?: 'CommitComment', id: string } | { __typename?: 'CommitCommentThread', id: string } | { __typename?: 'Comparison', id: string } | { __typename?: 'ConnectedEvent', id: string } | { __typename?: 'ConvertToDraftEvent', id: string } | { __typename?: 'ConvertedNoteToIssueEvent', id: string } | { __typename?: 'ConvertedToDiscussionEvent', id: string } | { __typename?: 'CrossReferencedEvent', id: string } | { __typename?: 'DemilestonedEvent', id: string } | { __typename?: 'DependencyGraphManifest', id: string } | { __typename?: 'DeployKey', id: string } | { __typename?: 'DeployedEvent', id: string } | { __typename?: 'Deployment', id: string } | { __typename?: 'DeploymentEnvironmentChangedEvent', id: string } | { __typename?: 'DeploymentReview', id: string } | { __typename?: 'DeploymentStatus', id: string } | { __typename?: 'DisconnectedEvent', id: string } | { __typename?: 'Discussion', id: string } | { __typename?: 'DiscussionCategory', id: string } | { __typename?: 'DiscussionComment', id: string } | { __typename?: 'DiscussionPoll', id: string } | { __typename?: 'DiscussionPollOption', id: string } | { __typename?: 'DraftIssue', id: string } | { __typename?: 'Enterprise', id: string } | { __typename?: 'EnterpriseAdministratorInvitation', id: string } | { __typename?: 'EnterpriseIdentityProvider', id: string } | { __typename?: 'EnterpriseRepositoryInfo', id: string } | { __typename?: 'EnterpriseServerInstallation', id: string } | { __typename?: 'EnterpriseServerUserAccount', id: string } | { __typename?: 'EnterpriseServerUserAccountEmail', id: string } | { __typename?: 'EnterpriseServerUserAccountsUpload', id: string } | { __typename?: 'EnterpriseUserAccount', id: string } | { __typename?: 'Environment', id: string } | { __typename?: 'ExternalIdentity', id: string } | { __typename?: 'Gist', id: string } | { __typename?: 'GistComment', id: string } | { __typename?: 'HeadRefDeletedEvent', id: string } | { __typename?: 'HeadRefForcePushedEvent', id: string } | { __typename?: 'HeadRefRestoredEvent', id: string } | { __typename?: 'IpAllowListEntry', id: string } | { __typename?: 'Issue', id: string } | { __typename?: 'IssueComment', id: string } | { __typename?: 'Label', id: string } | { __typename?: 'LabeledEvent', id: string } | { __typename?: 'Language', id: string } | { __typename?: 'License', id: string } | { __typename?: 'LinkedBranch', id: string } | { __typename?: 'LockedEvent', id: string } | { __typename?: 'Mannequin', id: string } | { __typename?: 'MarkedAsDuplicateEvent', id: string } | { __typename?: 'MarketplaceCategory', id: string } | { __typename?: 'MarketplaceListing', id: string } | { __typename?: 'MembersCanDeleteReposClearAuditEntry', id: string } | { __typename?: 'MembersCanDeleteReposDisableAuditEntry', id: string } | { __typename?: 'MembersCanDeleteReposEnableAuditEntry', id: string } | { __typename?: 'MentionedEvent', id: string } | { __typename?: 'MergeQueue', id: string } | { __typename?: 'MergeQueueEntry', id: string } | { __typename?: 'MergedEvent', id: string } | { __typename?: 'MigrationSource', id: string } | { __typename?: 'Milestone', id: string } | { __typename?: 'MilestonedEvent', id: string } | { __typename?: 'MovedColumnsInProjectEvent', id: string } | { __typename?: 'OIDCProvider', id: string } | { __typename?: 'OauthApplicationCreateAuditEntry', id: string } | { __typename?: 'OrgAddBillingManagerAuditEntry', id: string } | { __typename?: 'OrgAddMemberAuditEntry', id: string } | { __typename?: 'OrgBlockUserAuditEntry', id: string } | { __typename?: 'OrgConfigDisableCollaboratorsOnlyAuditEntry', id: string } | { __typename?: 'OrgConfigEnableCollaboratorsOnlyAuditEntry', id: string } | { __typename?: 'OrgCreateAuditEntry', id: string } | { __typename?: 'OrgDisableOauthAppRestrictionsAuditEntry', id: string } | { __typename?: 'OrgDisableSamlAuditEntry', id: string } | { __typename?: 'OrgDisableTwoFactorRequirementAuditEntry', id: string } | { __typename?: 'OrgEnableOauthAppRestrictionsAuditEntry', id: string } | { __typename?: 'OrgEnableSamlAuditEntry', id: string } | { __typename?: 'OrgEnableTwoFactorRequirementAuditEntry', id: string } | { __typename?: 'OrgInviteMemberAuditEntry', id: string } | { __typename?: 'OrgInviteToBusinessAuditEntry', id: string } | { __typename?: 'OrgOauthAppAccessApprovedAuditEntry', id: string } | { __typename?: 'OrgOauthAppAccessDeniedAuditEntry', id: string } | { __typename?: 'OrgOauthAppAccessRequestedAuditEntry', id: string } | { __typename?: 'OrgRemoveBillingManagerAuditEntry', id: string } | { __typename?: 'OrgRemoveMemberAuditEntry', id: string } | { __typename?: 'OrgRemoveOutsideCollaboratorAuditEntry', id: string } | { __typename?: 'OrgRestoreMemberAuditEntry', id: string } | { __typename?: 'OrgUnblockUserAuditEntry', id: string } | { __typename?: 'OrgUpdateDefaultRepositoryPermissionAuditEntry', id: string } | { __typename?: 'OrgUpdateMemberAuditEntry', id: string } | { __typename?: 'OrgUpdateMemberRepositoryCreationPermissionAuditEntry', id: string } | { __typename?: 'OrgUpdateMemberRepositoryInvitationPermissionAuditEntry', id: string } | { __typename?: 'Organization', id: string } | { __typename?: 'OrganizationIdentityProvider', id: string } | { __typename?: 'OrganizationInvitation', id: string } | { __typename?: 'OrganizationMigration', id: string } | { __typename?: 'Package', id: string } | { __typename?: 'PackageFile', id: string } | { __typename?: 'PackageTag', id: string } | { __typename?: 'PackageVersion', id: string } | { __typename?: 'PinnedDiscussion', id: string } | { __typename?: 'PinnedEvent', id: string } | { __typename?: 'PinnedIssue', id: string } | { __typename?: 'PrivateRepositoryForkingDisableAuditEntry', id: string } | { __typename?: 'PrivateRepositoryForkingEnableAuditEntry', id: string } | { __typename?: 'Project', id: string } | { __typename?: 'ProjectCard', id: string } | { __typename?: 'ProjectColumn', id: string } | { __typename?: 'ProjectV2', id: string } | { __typename?: 'ProjectV2Field', id: string } | { __typename?: 'ProjectV2Item', id: string } | { __typename?: 'ProjectV2ItemFieldDateValue', id: string } | { __typename?: 'ProjectV2ItemFieldIterationValue', id: string } | { __typename?: 'ProjectV2ItemFieldNumberValue', id: string } | { __typename?: 'ProjectV2ItemFieldSingleSelectValue', id: string } | { __typename?: 'ProjectV2ItemFieldTextValue', id: string } | { __typename?: 'ProjectV2IterationField', id: string } | { __typename?: 'ProjectV2SingleSelectField', id: string } | { __typename?: 'ProjectV2View', id: string } | { __typename?: 'ProjectV2Workflow', id: string } | { __typename?: 'PublicKey', id: string } | { __typename?: 'PullRequest', id: string } | { __typename?: 'PullRequestCommit', id: string } | { __typename?: 'PullRequestCommitCommentThread', id: string } | { __typename?: 'PullRequestReview', id: string } | { __typename?: 'PullRequestReviewComment', id: string } | { __typename?: 'PullRequestReviewThread', id: string } | { __typename?: 'PullRequestThread', id: string } | { __typename?: 'Push', id: string } | { __typename?: 'PushAllowance', id: string } | { __typename?: 'Reaction', id: string } | { __typename?: 'ReadyForReviewEvent', id: string } | { __typename?: 'Ref', id: string } | { __typename?: 'ReferencedEvent', id: string } | { __typename?: 'Release', id: string } | { __typename?: 'ReleaseAsset', id: string } | { __typename?: 'RemovedFromMergeQueueEvent', id: string } | { __typename?: 'RemovedFromProjectEvent', id: string } | { __typename?: 'RenamedTitleEvent', id: string } | { __typename?: 'ReopenedEvent', id: string } | { __typename?: 'RepoAccessAuditEntry', id: string } | { __typename?: 'RepoAddMemberAuditEntry', id: string } | { __typename?: 'RepoAddTopicAuditEntry', id: string } | { __typename?: 'RepoArchivedAuditEntry', id: string } | { __typename?: 'RepoChangeMergeSettingAuditEntry', id: string } | { __typename?: 'RepoConfigDisableAnonymousGitAccessAuditEntry', id: string } | { __typename?: 'RepoConfigDisableCollaboratorsOnlyAuditEntry', id: string } | { __typename?: 'RepoConfigDisableContributorsOnlyAuditEntry', id: string } | { __typename?: 'RepoConfigDisableSockpuppetDisallowedAuditEntry', id: string } | { __typename?: 'RepoConfigEnableAnonymousGitAccessAuditEntry', id: string } | { __typename?: 'RepoConfigEnableCollaboratorsOnlyAuditEntry', id: string } | { __typename?: 'RepoConfigEnableContributorsOnlyAuditEntry', id: string } | { __typename?: 'RepoConfigEnableSockpuppetDisallowedAuditEntry', id: string } | { __typename?: 'RepoConfigLockAnonymousGitAccessAuditEntry', id: string } | { __typename?: 'RepoConfigUnlockAnonymousGitAccessAuditEntry', id: string } | { __typename?: 'RepoCreateAuditEntry', id: string } | { __typename?: 'RepoDestroyAuditEntry', id: string } | { __typename?: 'RepoRemoveMemberAuditEntry', id: string } | { __typename?: 'RepoRemoveTopicAuditEntry', id: string } | { __typename?: 'Repository', id: string } | { __typename?: 'RepositoryInvitation', id: string } | { __typename?: 'RepositoryMigration', id: string } | { __typename?: 'RepositoryRule', id: string } | { __typename?: 'RepositoryRuleset', id: string } | { __typename?: 'RepositoryRulesetBypassActor', id: string } | { __typename?: 'RepositoryTopic', id: string } | { __typename?: 'RepositoryVisibilityChangeDisableAuditEntry', id: string } | { __typename?: 'RepositoryVisibilityChangeEnableAuditEntry', id: string } | { __typename?: 'RepositoryVulnerabilityAlert', id: string } | { __typename?: 'ReviewDismissalAllowance', id: string } | { __typename?: 'ReviewDismissedEvent', id: string } | { __typename?: 'ReviewRequest', id: string } | { __typename?: 'ReviewRequestRemovedEvent', id: string } | { __typename?: 'ReviewRequestedEvent', id: string } | { __typename?: 'SavedReply', id: string } | { __typename?: 'SecurityAdvisory', id: string } | { __typename?: 'SponsorsActivity', id: string } | { __typename?: 'SponsorsListing', id: string } | { __typename?: 'SponsorsListingFeaturedItem', id: string } | { __typename?: 'SponsorsTier', id: string } | { __typename?: 'Sponsorship', id: string } | { __typename?: 'SponsorshipNewsletter', id: string } | { __typename?: 'Status', id: string } | { __typename?: 'StatusCheckRollup', id: string } | { __typename?: 'StatusContext', id: string } | { __typename?: 'SubscribedEvent', id: string } | { __typename?: 'Tag', id: string } | { __typename?: 'Team', id: string } | { __typename?: 'TeamAddMemberAuditEntry', id: string } | { __typename?: 'TeamAddRepositoryAuditEntry', id: string } | { __typename?: 'TeamChangeParentTeamAuditEntry', id: string } | { __typename?: 'TeamDiscussion', id: string } | { __typename?: 'TeamDiscussionComment', id: string } | { __typename?: 'TeamRemoveMemberAuditEntry', id: string } | { __typename?: 'TeamRemoveRepositoryAuditEntry', id: string } | { __typename?: 'Topic', id: string } | { __typename?: 'TransferredEvent', id: string } | { __typename?: 'Tree', id: string } | { __typename?: 'UnassignedEvent', id: string } | { __typename?: 'UnlabeledEvent', id: string } | { __typename?: 'UnlockedEvent', id: string } | { __typename?: 'UnmarkedAsDuplicateEvent', id: string } | { __typename?: 'UnpinnedEvent', id: string } | { __typename?: 'UnsubscribedEvent', id: string } | { __typename?: 'User', id: string } | { __typename?: 'UserBlockedEvent', id: string } | { __typename?: 'UserContentEdit', id: string } | { __typename?: 'UserStatus', id: string } | { __typename?: 'VerifiableDomain', id: string } | { __typename?: 'Workflow', id: string } | { __typename?: 'WorkflowRun', id: string } | { __typename?: 'WorkflowRunFile', id: string } | null, commentEdge?: { __typename?: 'IssueCommentEdge', cursor: string, node?: { __typename?: 'IssueComment', id: string } | null } | null, timelineEdge?: { __typename?: 'IssueTimelineItemEdge', cursor: string, node?: { __typename: 'AssignedEvent' } | { __typename: 'ClosedEvent' } | { __typename: 'Commit' } | { __typename: 'CrossReferencedEvent' } | { __typename: 'DemilestonedEvent' } | { __typename: 'IssueComment' } | { __typename: 'LabeledEvent' } | { __typename: 'LockedEvent' } | { __typename: 'MilestonedEvent' } | { __typename: 'ReferencedEvent' } | { __typename: 'RenamedTitleEvent' } | { __typename: 'ReopenedEvent' } | { __typename: 'SubscribedEvent' } | { __typename: 'TransferredEvent' } | { __typename: 'UnassignedEvent' } | { __typename: 'UnlabeledEvent' } | { __typename: 'UnlockedEvent' } | { __typename: 'UnsubscribedEvent' } | { __typename: 'UserBlockedEvent' } | null } | null } | null };\n\nexport type AddLabelsToLabelableMutationVariables = Exact<{\n  input: AddLabelsToLabelableInput;\n}>;\n\n\nexport type AddLabelsToLabelableMutationData = { __typename?: 'Mutation', addLabelsToLabelable?: { __typename?: 'AddLabelsToLabelablePayload', labelable?: { __typename?: 'Discussion', labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', id: string, name: string, color: string, description?: string | null } | null> | null } | null } | { __typename?: 'Issue', labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', id: string, name: string, color: string, description?: string | null } | null> | null } | null } | { __typename?: 'PullRequest', labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', id: string, name: string, color: string, description?: string | null } | null> | null } | null } | null } | null };\n\nexport type AddPullRequestReviewCommentMutationVariables = Exact<{\n  input: AddPullRequestReviewCommentInput;\n}>;\n\n\nexport type AddPullRequestReviewCommentMutationData = { __typename?: 'Mutation', addPullRequestReviewComment?: { __typename?: 'AddPullRequestReviewCommentPayload', comment?: { __typename?: 'PullRequestReviewComment', id: string, bodyHTML: string, state: PullRequestReviewCommentState, outdated: boolean, path: string, originalPosition: number, position?: number | null, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, replyTo?: { __typename?: 'PullRequestReviewComment', id: string } | null, originalCommit?: { __typename?: 'Commit', oid: string } | null, commit?: { __typename?: 'Commit', oid: string } | null } | null } | null };\n\nexport type AddPullRequestReviewMutationVariables = Exact<{\n  input: AddPullRequestReviewInput;\n}>;\n\n\nexport type AddPullRequestReviewMutationData = { __typename?: 'Mutation', addPullRequestReview?: { __typename?: 'AddPullRequestReviewPayload', pullRequestReview?: { __typename?: 'PullRequestReview', id: string } | null } | null };\n\nexport type RemoveLabelsFromLabelableMutationVariables = Exact<{\n  input: RemoveLabelsFromLabelableInput;\n}>;\n\n\nexport type RemoveLabelsFromLabelableMutationData = { __typename?: 'Mutation', removeLabelsFromLabelable?: { __typename?: 'RemoveLabelsFromLabelablePayload', labelable?: { __typename?: 'Discussion', labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', id: string, name: string, color: string, description?: string | null } | null> | null } | null } | { __typename?: 'Issue', labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', id: string, name: string, color: string, description?: string | null } | null> | null } | null } | { __typename?: 'PullRequest', labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', id: string, name: string, color: string, description?: string | null } | null> | null } | null } | null } | null };\n\nexport type RequestReviewsMutationVariables = Exact<{\n  input: RequestReviewsInput;\n}>;\n\n\nexport type RequestReviewsMutationData = { __typename?: 'Mutation', requestReviews?: { __typename?: 'RequestReviewsPayload', requestedReviewersEdge?: { __typename?: 'UserEdge', node?: { __typename?: 'User', id: string } | null } | null } | null };\n\nexport type SubmitPullRequestReviewMutationVariables = Exact<{\n  input: SubmitPullRequestReviewInput;\n}>;\n\n\nexport type SubmitPullRequestReviewMutationData = { __typename?: 'Mutation', submitPullRequestReview?: { __typename?: 'SubmitPullRequestReviewPayload', pullRequestReview?: { __typename?: 'PullRequestReview', id: string } | null } | null };\n\nexport type ActorFragment_Bot_ = { __typename?: 'Bot', login: string, avatarUrl: string };\n\nexport type ActorFragment_EnterpriseUserAccount_ = { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string };\n\nexport type ActorFragment_Mannequin_ = { __typename?: 'Mannequin', login: string, avatarUrl: string };\n\nexport type ActorFragment_Organization_ = { __typename?: 'Organization', login: string, avatarUrl: string };\n\nexport type ActorFragment_User_ = { __typename?: 'User', id: string, login: string, avatarUrl: string };\n\nexport type ActorFragment = ActorFragment_Bot_ | ActorFragment_EnterpriseUserAccount_ | ActorFragment_Mannequin_ | ActorFragment_Organization_ | ActorFragment_User_;\n\nexport type CheckRunFragment = { __typename?: 'CheckRun', conclusion?: CheckConclusionState | null, name: string, status: CheckStatusState, url: string };\n\nexport type CommitFragment = { __typename?: 'Commit', oid: string, committedDate: string, tree: { __typename?: 'Tree', oid: string }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } };\n\nexport type CommitQueryVariables = Exact<{\n  org: Scalars['String'];\n  repo: Scalars['String'];\n  oid: Scalars['GitObjectID'];\n  numParents: Scalars['Int'];\n}>;\n\n\nexport type CommitQueryData = { __typename?: 'Query', repositoryOwner?: { __typename?: 'Organization', repository?: { __typename?: 'Repository', object?: { __typename?: 'Blob' } | { __typename: 'Commit', id: string, oid: string, committedDate: string, url: string, message: string, messageBody: string, messageBodyHTML: string, messageHeadline: string, messageHeadlineHTML: string, tree: { __typename?: 'Tree', id: string, oid: string, entries?: Array<{ __typename?: 'TreeEntry', oid: string, name: string, path?: string | null, type: string, mode: number }> | null }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } } | { __typename?: 'Tag' } | { __typename?: 'Tree' } | null } | null } | { __typename?: 'User', repository?: { __typename?: 'Repository', object?: { __typename?: 'Blob' } | { __typename: 'Commit', id: string, oid: string, committedDate: string, url: string, message: string, messageBody: string, messageBodyHTML: string, messageHeadline: string, messageHeadlineHTML: string, tree: { __typename?: 'Tree', id: string, oid: string, entries?: Array<{ __typename?: 'TreeEntry', oid: string, name: string, path?: string | null, type: string, mode: number }> | null }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } } | { __typename?: 'Tag' } | { __typename?: 'Tree' } | null } | null } | null };\n\nexport type HomePagePullRequestFragment = { __typename: 'PullRequest', number: number, titleHTML: string, state: PullRequestState, reviewDecision?: PullRequestReviewDecision | null, repository: { __typename?: 'Repository', nameWithOwner: string } };\n\nexport type LabelFragment = { __typename?: 'Label', id: string, name: string, color: string, description?: string | null };\n\nexport type PageInfoFragment = { __typename?: 'PageInfo', startCursor?: string | null, endCursor?: string | null, hasPreviousPage: boolean, hasNextPage: boolean };\n\nexport type PullRequestQueryVariables = Exact<{\n  name: Scalars['String'];\n  owner: Scalars['String'];\n  pr: Scalars['Int'];\n  numComments: Scalars['Int'];\n  numTimelineItems: Scalars['Int'];\n}>;\n\n\nexport type PullRequestQueryData = { __typename?: 'Query', repository?: { __typename?: 'Repository', pullRequest?: { __typename?: 'PullRequest', additions: number, deletions: number, id: string, number: number, url: string, title: string, titleHTML: string, body: string, bodyHTML: string, baseRefOid: string, state: PullRequestState, reviewDecision?: PullRequestReviewDecision | null, viewerDidAuthor: boolean, timelineItems: { __typename?: 'PullRequestTimelineItemsConnection', nodes?: Array<{ __typename: 'AddedToMergeQueueEvent' } | { __typename: 'AddedToProjectEvent' } | { __typename: 'AssignedEvent' } | { __typename: 'AutoMergeDisabledEvent' } | { __typename: 'AutoMergeEnabledEvent' } | { __typename: 'AutoRebaseEnabledEvent' } | { __typename: 'AutoSquashEnabledEvent' } | { __typename: 'AutomaticBaseChangeFailedEvent' } | { __typename: 'AutomaticBaseChangeSucceededEvent' } | { __typename: 'BaseRefChangedEvent' } | { __typename: 'BaseRefDeletedEvent' } | { __typename: 'BaseRefForcePushedEvent' } | { __typename: 'ClosedEvent', actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, closable: { __typename: 'Discussion' } | { __typename: 'Issue' } | { __typename: 'Milestone' } | { __typename: 'Project' } | { __typename: 'ProjectV2' } | { __typename: 'PullRequest', merged: boolean } } | { __typename: 'CommentDeletedEvent' } | { __typename: 'ConnectedEvent' } | { __typename: 'ConvertToDraftEvent' } | { __typename: 'ConvertedNoteToIssueEvent' } | { __typename: 'ConvertedToDiscussionEvent' } | { __typename: 'CrossReferencedEvent' } | { __typename: 'DemilestonedEvent' } | { __typename: 'DeployedEvent' } | { __typename: 'DeploymentEnvironmentChangedEvent' } | { __typename: 'DisconnectedEvent' } | { __typename: 'HeadRefDeletedEvent' } | { __typename: 'HeadRefForcePushedEvent', createdAt: string, actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, beforeCommit?: { __typename?: 'Commit', oid: string, committedDate: string, tree: { __typename?: 'Tree', oid: string }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } } | null, afterCommit?: { __typename?: 'Commit', oid: string, committedDate: string, tree: { __typename?: 'Tree', oid: string }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } } | null } | { __typename: 'HeadRefRestoredEvent' } | { __typename: 'IssueComment', bodyHTML: string, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null } | { __typename: 'LabeledEvent' } | { __typename: 'LockedEvent' } | { __typename: 'MarkedAsDuplicateEvent' } | { __typename: 'MentionedEvent' } | { __typename: 'MergedEvent', mergeRefName: string, actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, mergedCommit?: { __typename?: 'Commit', oid: string, committedDate: string, tree: { __typename?: 'Tree', oid: string }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } } | null } | { __typename: 'MilestonedEvent' } | { __typename: 'MovedColumnsInProjectEvent' } | { __typename: 'PinnedEvent' } | { __typename: 'PullRequestCommit', commit: { __typename?: 'Commit', oid: string, committedDate: string, tree: { __typename?: 'Tree', oid: string }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } } } | { __typename: 'PullRequestCommitCommentThread' } | { __typename: 'PullRequestReview', id: string, state: PullRequestReviewState, bodyHTML: string, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, comments: { __typename?: 'PullRequestReviewCommentConnection', nodes?: Array<{ __typename?: 'PullRequestReviewComment', id: string, bodyHTML: string, state: PullRequestReviewCommentState, outdated: boolean, path: string, originalPosition: number, position?: number | null, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, replyTo?: { __typename?: 'PullRequestReviewComment', id: string } | null, originalCommit?: { __typename?: 'Commit', oid: string } | null, commit?: { __typename?: 'Commit', oid: string } | null } | null> | null } } | { __typename: 'PullRequestReviewThread' } | { __typename: 'PullRequestRevisionMarker' } | { __typename: 'ReadyForReviewEvent' } | { __typename: 'ReferencedEvent' } | { __typename: 'RemovedFromMergeQueueEvent' } | { __typename: 'RemovedFromProjectEvent' } | { __typename: 'RenamedTitleEvent', previousTitle: string, currentTitle: string, actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null } | { __typename: 'ReopenedEvent' } | { __typename: 'ReviewDismissedEvent' } | { __typename: 'ReviewRequestRemovedEvent', actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, requestedReviewer?: { __typename: 'Mannequin', login: string } | { __typename: 'Team' } | { __typename: 'User', login: string } | null } | { __typename: 'ReviewRequestedEvent', createdAt: string, actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, requestedReviewer?: { __typename: 'Mannequin', login: string } | { __typename: 'Team' } | { __typename: 'User', login: string } | null } | { __typename: 'SubscribedEvent' } | { __typename: 'TransferredEvent' } | { __typename: 'UnassignedEvent' } | { __typename: 'UnlabeledEvent' } | { __typename: 'UnlockedEvent' } | { __typename: 'UnmarkedAsDuplicateEvent' } | { __typename: 'UnpinnedEvent' } | { __typename: 'UnsubscribedEvent' } | { __typename: 'UserBlockedEvent' } | null> | null }, reviews?: { __typename?: 'PullRequestReviewConnection', nodes?: Array<{ __typename?: 'PullRequestReview', author?: { __typename?: 'Bot' } | { __typename?: 'EnterpriseUserAccount' } | { __typename?: 'Mannequin' } | { __typename?: 'Organization' } | { __typename: 'User', id: string, login: string, avatarUrl: string } | null } | null> | null } | null, reviewThreads: { __typename?: 'PullRequestReviewThreadConnection', nodes?: Array<{ __typename?: 'PullRequestReviewThread', originalLine?: number | null, diffSide: DiffSide, comments: { __typename?: 'PullRequestReviewCommentConnection', nodes?: Array<{ __typename?: 'PullRequestReviewComment', id: string, bodyHTML: string, state: PullRequestReviewCommentState, outdated: boolean, path: string, originalPosition: number, position?: number | null, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, replyTo?: { __typename?: 'PullRequestReviewComment', id: string } | null, originalCommit?: { __typename?: 'Commit', oid: string } | null, commit?: { __typename?: 'Commit', oid: string } | null } | null> | null } } | null> | null }, reviewRequests?: { __typename?: 'ReviewRequestConnection', nodes?: Array<{ __typename?: 'ReviewRequest', requestedReviewer?: { __typename?: 'Mannequin' } | { __typename?: 'Team' } | { __typename: 'User', id: string, login: string, avatarUrl: string } | null } | null> | null } | null, labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', id: string, name: string, color: string, description?: string | null } | null> | null } | null, commits: { __typename?: 'PullRequestCommitConnection', nodes?: Array<{ __typename?: 'PullRequestCommit', commit: { __typename?: 'Commit', checkSuites?: { __typename?: 'CheckSuiteConnection', nodes?: Array<{ __typename?: 'CheckSuite', workflowRun?: { __typename?: 'WorkflowRun', workflow: { __typename?: 'Workflow', name: string } } | null, checkRuns?: { __typename?: 'CheckRunConnection', nodes?: Array<{ __typename?: 'CheckRun', conclusion?: CheckConclusionState | null, name: string, status: CheckStatusState, url: string } | null> | null } | null } | null> | null } | null } } | null> | null } } | null } | null };\n\nexport type PullRequestReviewCommentFragment = { __typename?: 'PullRequestReviewComment', id: string, bodyHTML: string, state: PullRequestReviewCommentState, outdated: boolean, path: string, originalPosition: number, position?: number | null, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, replyTo?: { __typename?: 'PullRequestReviewComment', id: string } | null, originalCommit?: { __typename?: 'Commit', oid: string } | null, commit?: { __typename?: 'Commit', oid: string } | null };\n\nexport type PullRequestReviewThreadFragment = { __typename?: 'PullRequestReviewThread', originalLine?: number | null, diffSide: DiffSide, comments: { __typename?: 'PullRequestReviewCommentConnection', nodes?: Array<{ __typename?: 'PullRequestReviewComment', id: string, bodyHTML: string, state: PullRequestReviewCommentState, outdated: boolean, path: string, originalPosition: number, position?: number | null, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, replyTo?: { __typename?: 'PullRequestReviewComment', id: string } | null, originalCommit?: { __typename?: 'Commit', oid: string } | null, commit?: { __typename?: 'Commit', oid: string } | null } | null> | null } };\n\nexport type PullRequestTimelineItemFragment_AddedToMergeQueueEvent_ = { __typename: 'AddedToMergeQueueEvent' };\n\nexport type PullRequestTimelineItemFragment_AddedToProjectEvent_ = { __typename: 'AddedToProjectEvent' };\n\nexport type PullRequestTimelineItemFragment_AssignedEvent_ = { __typename: 'AssignedEvent' };\n\nexport type PullRequestTimelineItemFragment_AutoMergeDisabledEvent_ = { __typename: 'AutoMergeDisabledEvent' };\n\nexport type PullRequestTimelineItemFragment_AutoMergeEnabledEvent_ = { __typename: 'AutoMergeEnabledEvent' };\n\nexport type PullRequestTimelineItemFragment_AutoRebaseEnabledEvent_ = { __typename: 'AutoRebaseEnabledEvent' };\n\nexport type PullRequestTimelineItemFragment_AutoSquashEnabledEvent_ = { __typename: 'AutoSquashEnabledEvent' };\n\nexport type PullRequestTimelineItemFragment_AutomaticBaseChangeFailedEvent_ = { __typename: 'AutomaticBaseChangeFailedEvent' };\n\nexport type PullRequestTimelineItemFragment_AutomaticBaseChangeSucceededEvent_ = { __typename: 'AutomaticBaseChangeSucceededEvent' };\n\nexport type PullRequestTimelineItemFragment_BaseRefChangedEvent_ = { __typename: 'BaseRefChangedEvent' };\n\nexport type PullRequestTimelineItemFragment_BaseRefDeletedEvent_ = { __typename: 'BaseRefDeletedEvent' };\n\nexport type PullRequestTimelineItemFragment_BaseRefForcePushedEvent_ = { __typename: 'BaseRefForcePushedEvent' };\n\nexport type PullRequestTimelineItemFragment_ClosedEvent_ = { __typename: 'ClosedEvent', actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, closable: { __typename: 'Discussion' } | { __typename: 'Issue' } | { __typename: 'Milestone' } | { __typename: 'Project' } | { __typename: 'ProjectV2' } | { __typename: 'PullRequest', merged: boolean } };\n\nexport type PullRequestTimelineItemFragment_CommentDeletedEvent_ = { __typename: 'CommentDeletedEvent' };\n\nexport type PullRequestTimelineItemFragment_ConnectedEvent_ = { __typename: 'ConnectedEvent' };\n\nexport type PullRequestTimelineItemFragment_ConvertToDraftEvent_ = { __typename: 'ConvertToDraftEvent' };\n\nexport type PullRequestTimelineItemFragment_ConvertedNoteToIssueEvent_ = { __typename: 'ConvertedNoteToIssueEvent' };\n\nexport type PullRequestTimelineItemFragment_ConvertedToDiscussionEvent_ = { __typename: 'ConvertedToDiscussionEvent' };\n\nexport type PullRequestTimelineItemFragment_CrossReferencedEvent_ = { __typename: 'CrossReferencedEvent' };\n\nexport type PullRequestTimelineItemFragment_DemilestonedEvent_ = { __typename: 'DemilestonedEvent' };\n\nexport type PullRequestTimelineItemFragment_DeployedEvent_ = { __typename: 'DeployedEvent' };\n\nexport type PullRequestTimelineItemFragment_DeploymentEnvironmentChangedEvent_ = { __typename: 'DeploymentEnvironmentChangedEvent' };\n\nexport type PullRequestTimelineItemFragment_DisconnectedEvent_ = { __typename: 'DisconnectedEvent' };\n\nexport type PullRequestTimelineItemFragment_HeadRefDeletedEvent_ = { __typename: 'HeadRefDeletedEvent' };\n\nexport type PullRequestTimelineItemFragment_HeadRefForcePushedEvent_ = { __typename: 'HeadRefForcePushedEvent', createdAt: string, actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, beforeCommit?: { __typename?: 'Commit', oid: string, committedDate: string, tree: { __typename?: 'Tree', oid: string }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } } | null, afterCommit?: { __typename?: 'Commit', oid: string, committedDate: string, tree: { __typename?: 'Tree', oid: string }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } } | null };\n\nexport type PullRequestTimelineItemFragment_HeadRefRestoredEvent_ = { __typename: 'HeadRefRestoredEvent' };\n\nexport type PullRequestTimelineItemFragment_IssueComment_ = { __typename: 'IssueComment', bodyHTML: string, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null };\n\nexport type PullRequestTimelineItemFragment_LabeledEvent_ = { __typename: 'LabeledEvent' };\n\nexport type PullRequestTimelineItemFragment_LockedEvent_ = { __typename: 'LockedEvent' };\n\nexport type PullRequestTimelineItemFragment_MarkedAsDuplicateEvent_ = { __typename: 'MarkedAsDuplicateEvent' };\n\nexport type PullRequestTimelineItemFragment_MentionedEvent_ = { __typename: 'MentionedEvent' };\n\nexport type PullRequestTimelineItemFragment_MergedEvent_ = { __typename: 'MergedEvent', mergeRefName: string, actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, mergedCommit?: { __typename?: 'Commit', oid: string, committedDate: string, tree: { __typename?: 'Tree', oid: string }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } } | null };\n\nexport type PullRequestTimelineItemFragment_MilestonedEvent_ = { __typename: 'MilestonedEvent' };\n\nexport type PullRequestTimelineItemFragment_MovedColumnsInProjectEvent_ = { __typename: 'MovedColumnsInProjectEvent' };\n\nexport type PullRequestTimelineItemFragment_PinnedEvent_ = { __typename: 'PinnedEvent' };\n\nexport type PullRequestTimelineItemFragment_PullRequestCommit_ = { __typename: 'PullRequestCommit', commit: { __typename?: 'Commit', oid: string, committedDate: string, tree: { __typename?: 'Tree', oid: string }, parents: { __typename?: 'CommitConnection', totalCount: number, nodes?: Array<{ __typename?: 'Commit', oid: string } | null> | null } } };\n\nexport type PullRequestTimelineItemFragment_PullRequestCommitCommentThread_ = { __typename: 'PullRequestCommitCommentThread' };\n\nexport type PullRequestTimelineItemFragment_PullRequestReview_ = { __typename: 'PullRequestReview', id: string, state: PullRequestReviewState, bodyHTML: string, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, comments: { __typename?: 'PullRequestReviewCommentConnection', nodes?: Array<{ __typename?: 'PullRequestReviewComment', id: string, bodyHTML: string, state: PullRequestReviewCommentState, outdated: boolean, path: string, originalPosition: number, position?: number | null, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, replyTo?: { __typename?: 'PullRequestReviewComment', id: string } | null, originalCommit?: { __typename?: 'Commit', oid: string } | null, commit?: { __typename?: 'Commit', oid: string } | null } | null> | null } };\n\nexport type PullRequestTimelineItemFragment_PullRequestReviewThread_ = { __typename: 'PullRequestReviewThread' };\n\nexport type PullRequestTimelineItemFragment_PullRequestRevisionMarker_ = { __typename: 'PullRequestRevisionMarker' };\n\nexport type PullRequestTimelineItemFragment_ReadyForReviewEvent_ = { __typename: 'ReadyForReviewEvent' };\n\nexport type PullRequestTimelineItemFragment_ReferencedEvent_ = { __typename: 'ReferencedEvent' };\n\nexport type PullRequestTimelineItemFragment_RemovedFromMergeQueueEvent_ = { __typename: 'RemovedFromMergeQueueEvent' };\n\nexport type PullRequestTimelineItemFragment_RemovedFromProjectEvent_ = { __typename: 'RemovedFromProjectEvent' };\n\nexport type PullRequestTimelineItemFragment_RenamedTitleEvent_ = { __typename: 'RenamedTitleEvent', previousTitle: string, currentTitle: string, actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null };\n\nexport type PullRequestTimelineItemFragment_ReopenedEvent_ = { __typename: 'ReopenedEvent' };\n\nexport type PullRequestTimelineItemFragment_ReviewDismissedEvent_ = { __typename: 'ReviewDismissedEvent' };\n\nexport type PullRequestTimelineItemFragment_ReviewRequestRemovedEvent_ = { __typename: 'ReviewRequestRemovedEvent', actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, requestedReviewer?: { __typename: 'Mannequin', login: string } | { __typename: 'Team' } | { __typename: 'User', login: string } | null };\n\nexport type PullRequestTimelineItemFragment_ReviewRequestedEvent_ = { __typename: 'ReviewRequestedEvent', createdAt: string, actor?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, requestedReviewer?: { __typename: 'Mannequin', login: string } | { __typename: 'Team' } | { __typename: 'User', login: string } | null };\n\nexport type PullRequestTimelineItemFragment_SubscribedEvent_ = { __typename: 'SubscribedEvent' };\n\nexport type PullRequestTimelineItemFragment_TransferredEvent_ = { __typename: 'TransferredEvent' };\n\nexport type PullRequestTimelineItemFragment_UnassignedEvent_ = { __typename: 'UnassignedEvent' };\n\nexport type PullRequestTimelineItemFragment_UnlabeledEvent_ = { __typename: 'UnlabeledEvent' };\n\nexport type PullRequestTimelineItemFragment_UnlockedEvent_ = { __typename: 'UnlockedEvent' };\n\nexport type PullRequestTimelineItemFragment_UnmarkedAsDuplicateEvent_ = { __typename: 'UnmarkedAsDuplicateEvent' };\n\nexport type PullRequestTimelineItemFragment_UnpinnedEvent_ = { __typename: 'UnpinnedEvent' };\n\nexport type PullRequestTimelineItemFragment_UnsubscribedEvent_ = { __typename: 'UnsubscribedEvent' };\n\nexport type PullRequestTimelineItemFragment_UserBlockedEvent_ = { __typename: 'UserBlockedEvent' };\n\nexport type PullRequestTimelineItemFragment = PullRequestTimelineItemFragment_AddedToMergeQueueEvent_ | PullRequestTimelineItemFragment_AddedToProjectEvent_ | PullRequestTimelineItemFragment_AssignedEvent_ | PullRequestTimelineItemFragment_AutoMergeDisabledEvent_ | PullRequestTimelineItemFragment_AutoMergeEnabledEvent_ | PullRequestTimelineItemFragment_AutoRebaseEnabledEvent_ | PullRequestTimelineItemFragment_AutoSquashEnabledEvent_ | PullRequestTimelineItemFragment_AutomaticBaseChangeFailedEvent_ | PullRequestTimelineItemFragment_AutomaticBaseChangeSucceededEvent_ | PullRequestTimelineItemFragment_BaseRefChangedEvent_ | PullRequestTimelineItemFragment_BaseRefDeletedEvent_ | PullRequestTimelineItemFragment_BaseRefForcePushedEvent_ | PullRequestTimelineItemFragment_ClosedEvent_ | PullRequestTimelineItemFragment_CommentDeletedEvent_ | PullRequestTimelineItemFragment_ConnectedEvent_ | PullRequestTimelineItemFragment_ConvertToDraftEvent_ | PullRequestTimelineItemFragment_ConvertedNoteToIssueEvent_ | PullRequestTimelineItemFragment_ConvertedToDiscussionEvent_ | PullRequestTimelineItemFragment_CrossReferencedEvent_ | PullRequestTimelineItemFragment_DemilestonedEvent_ | PullRequestTimelineItemFragment_DeployedEvent_ | PullRequestTimelineItemFragment_DeploymentEnvironmentChangedEvent_ | PullRequestTimelineItemFragment_DisconnectedEvent_ | PullRequestTimelineItemFragment_HeadRefDeletedEvent_ | PullRequestTimelineItemFragment_HeadRefForcePushedEvent_ | PullRequestTimelineItemFragment_HeadRefRestoredEvent_ | PullRequestTimelineItemFragment_IssueComment_ | PullRequestTimelineItemFragment_LabeledEvent_ | PullRequestTimelineItemFragment_LockedEvent_ | PullRequestTimelineItemFragment_MarkedAsDuplicateEvent_ | PullRequestTimelineItemFragment_MentionedEvent_ | PullRequestTimelineItemFragment_MergedEvent_ | PullRequestTimelineItemFragment_MilestonedEvent_ | PullRequestTimelineItemFragment_MovedColumnsInProjectEvent_ | PullRequestTimelineItemFragment_PinnedEvent_ | PullRequestTimelineItemFragment_PullRequestCommit_ | PullRequestTimelineItemFragment_PullRequestCommitCommentThread_ | PullRequestTimelineItemFragment_PullRequestReview_ | PullRequestTimelineItemFragment_PullRequestReviewThread_ | PullRequestTimelineItemFragment_PullRequestRevisionMarker_ | PullRequestTimelineItemFragment_ReadyForReviewEvent_ | PullRequestTimelineItemFragment_ReferencedEvent_ | PullRequestTimelineItemFragment_RemovedFromMergeQueueEvent_ | PullRequestTimelineItemFragment_RemovedFromProjectEvent_ | PullRequestTimelineItemFragment_RenamedTitleEvent_ | PullRequestTimelineItemFragment_ReopenedEvent_ | PullRequestTimelineItemFragment_ReviewDismissedEvent_ | PullRequestTimelineItemFragment_ReviewRequestRemovedEvent_ | PullRequestTimelineItemFragment_ReviewRequestedEvent_ | PullRequestTimelineItemFragment_SubscribedEvent_ | PullRequestTimelineItemFragment_TransferredEvent_ | PullRequestTimelineItemFragment_UnassignedEvent_ | PullRequestTimelineItemFragment_UnlabeledEvent_ | PullRequestTimelineItemFragment_UnlockedEvent_ | PullRequestTimelineItemFragment_UnmarkedAsDuplicateEvent_ | PullRequestTimelineItemFragment_UnpinnedEvent_ | PullRequestTimelineItemFragment_UnsubscribedEvent_ | PullRequestTimelineItemFragment_UserBlockedEvent_;\n\nexport type PullsPullRequestFragment = { __typename?: 'PullRequest', number: number, title: string, updatedAt: string, reviewDecision?: PullRequestReviewDecision | null, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, comments: { __typename?: 'IssueCommentConnection', totalCount: number }, labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', id: string, name: string, color: string, description?: string | null } | null> | null } | null };\n\nexport type PullsQueryVariables = Exact<{\n  name: Scalars['String'];\n  owner: Scalars['String'];\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  labels?: InputMaybe<Array<Scalars['String']> | Scalars['String']>;\n  states: Array<PullRequestState> | PullRequestState;\n}>;\n\n\nexport type PullsQueryData = { __typename?: 'Query', repository?: { __typename?: 'Repository', pullRequests: { __typename?: 'PullRequestConnection', totalCount: number, nodes?: Array<{ __typename?: 'PullRequest', number: number, title: string, updatedAt: string, reviewDecision?: PullRequestReviewDecision | null, author?: { __typename?: 'Bot', login: string, avatarUrl: string } | { __typename?: 'EnterpriseUserAccount', login: string, avatarUrl: string } | { __typename?: 'Mannequin', login: string, avatarUrl: string } | { __typename?: 'Organization', login: string, avatarUrl: string } | { __typename?: 'User', id: string, login: string, avatarUrl: string } | null, comments: { __typename?: 'IssueCommentConnection', totalCount: number }, labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', id: string, name: string, color: string, description?: string | null } | null> | null } | null } | null> | null, pageInfo: { __typename?: 'PageInfo', startCursor?: string | null, endCursor?: string | null, hasPreviousPage: boolean, hasNextPage: boolean } } } | null };\n\nexport type RepoAssignableUsersQueryVariables = Exact<{\n  name: Scalars['String'];\n  owner: Scalars['String'];\n  query?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type RepoAssignableUsersQueryData = { __typename?: 'Query', repository?: { __typename?: 'Repository', assignableUsers: { __typename?: 'UserConnection', nodes?: Array<{ __typename: 'User', id: string, login: string, avatarUrl: string } | null> | null } } | null };\n\nexport type RepoLabelsQueryVariables = Exact<{\n  name: Scalars['String'];\n  owner: Scalars['String'];\n  query?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type RepoLabelsQueryData = { __typename?: 'Query', repository?: { __typename?: 'Repository', labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', id: string, name: string, color: string, description?: string | null } | null> | null } | null } | null };\n\nexport type RequestedReviewerFragment_Mannequin_ = { __typename: 'Mannequin', login: string };\n\nexport type RequestedReviewerFragment_Team_ = { __typename: 'Team' };\n\nexport type RequestedReviewerFragment_User_ = { __typename: 'User', login: string };\n\nexport type RequestedReviewerFragment = RequestedReviewerFragment_Mannequin_ | RequestedReviewerFragment_Team_ | RequestedReviewerFragment_User_;\n\nexport type StackPullRequestFragment = { __typename?: 'PullRequest', number: number, title: string, updatedAt: string, state: PullRequestState, reviewDecision?: PullRequestReviewDecision | null, headRefOid: string, comments: { __typename?: 'IssueCommentConnection', totalCount: number } };\n\nexport type StackPullRequestQueryVariables = Exact<{\n  name: Scalars['String'];\n  owner: Scalars['String'];\n  pr: Scalars['Int'];\n}>;\n\n\nexport type StackPullRequestQueryData = { __typename?: 'Query', repository?: { __typename?: 'Repository', pullRequest?: { __typename?: 'PullRequest', number: number, title: string, updatedAt: string, state: PullRequestState, reviewDecision?: PullRequestReviewDecision | null, headRefOid: string, comments: { __typename?: 'IssueCommentConnection', totalCount: number } } | null } | null };\n\nexport type TreeFragment = { __typename?: 'Tree', id: string, oid: string, entries?: Array<{ __typename?: 'TreeEntry', oid: string, name: string, path?: string | null, type: string, mode: number }> | null };\n\nexport type TreeQueryVariables = Exact<{\n  org: Scalars['String'];\n  repo: Scalars['String'];\n  oid: Scalars['GitObjectID'];\n}>;\n\n\nexport type TreeQueryData = { __typename?: 'Query', repositoryOwner?: { __typename?: 'Organization', repository?: { __typename?: 'Repository', object?: { __typename?: 'Blob' } | { __typename?: 'Commit' } | { __typename?: 'Tag' } | { __typename?: 'Tree', id: string, oid: string, entries?: Array<{ __typename?: 'TreeEntry', oid: string, name: string, path?: string | null, type: string, mode: number }> | null } | null } | null } | { __typename?: 'User', repository?: { __typename?: 'Repository', object?: { __typename?: 'Blob' } | { __typename?: 'Commit' } | { __typename?: 'Tag' } | { __typename?: 'Tree', id: string, oid: string, entries?: Array<{ __typename?: 'TreeEntry', oid: string, name: string, path?: string | null, type: string, mode: number }> | null } | null } | null } | null };\n\nexport type UserFragment = { __typename: 'User', id: string, login: string, avatarUrl: string };\n\nexport type UserHomePageQueryVariables = Exact<{\n  reviewRequestedQuery: Scalars['String'];\n}>;\n\n\nexport type UserHomePageQueryData = { __typename?: 'Query', viewer: { __typename?: 'User', repositories: { __typename?: 'RepositoryConnection', nodes?: Array<{ __typename?: 'Repository', nameWithOwner: string } | null> | null }, pullRequests: { __typename?: 'PullRequestConnection', nodes?: Array<{ __typename: 'PullRequest', number: number, titleHTML: string, state: PullRequestState, reviewDecision?: PullRequestReviewDecision | null, repository: { __typename?: 'Repository', nameWithOwner: string } } | null> | null } }, search: { __typename?: 'SearchResultItemConnection', nodes?: Array<{ __typename?: 'App' } | { __typename?: 'Discussion' } | { __typename?: 'Issue' } | { __typename?: 'MarketplaceListing' } | { __typename?: 'Organization' } | { __typename: 'PullRequest', number: number, titleHTML: string, state: PullRequestState, reviewDecision?: PullRequestReviewDecision | null, repository: { __typename?: 'Repository', nameWithOwner: string } } | { __typename?: 'Repository' } | { __typename?: 'User' } | null> | null } };\n\nexport type UsernameQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UsernameQueryData = { __typename?: 'Query', viewer: { __typename?: 'User', login: string } };\n\nexport const CheckRunFragment = `\n    fragment CheckRunFragment on CheckRun {\n  conclusion\n  name\n  status\n  url\n}\n    `;\nexport const HomePagePullRequestFragment = `\n    fragment HomePagePullRequestFragment on PullRequest {\n  __typename\n  number\n  titleHTML\n  repository {\n    nameWithOwner\n  }\n  state\n  reviewDecision\n}\n    `;\nexport const PageInfoFragment = `\n    fragment PageInfoFragment on PageInfo {\n  startCursor\n  endCursor\n  hasPreviousPage\n  hasNextPage\n}\n    `;\nexport const ActorFragment = `\n    fragment ActorFragment on Actor {\n  login\n  avatarUrl(size: 24)\n  ... on User {\n    id\n  }\n}\n    `;\nexport const PullRequestReviewCommentFragment = `\n    fragment PullRequestReviewCommentFragment on PullRequestReviewComment {\n  id\n  author {\n    ...ActorFragment\n  }\n  replyTo {\n    id\n  }\n  bodyHTML\n  state\n  outdated\n  path\n  originalCommit {\n    oid\n  }\n  originalPosition\n  commit {\n    oid\n  }\n  position\n}\n    `;\nexport const PullRequestReviewThreadFragment = `\n    fragment PullRequestReviewThreadFragment on PullRequestReviewThread {\n  originalLine\n  diffSide\n  comments(first: $numComments) {\n    nodes {\n      ...PullRequestReviewCommentFragment\n    }\n  }\n}\n    `;\nexport const CommitFragment = `\n    fragment CommitFragment on Commit {\n  oid\n  committedDate\n  tree {\n    oid\n  }\n  parents(first: 10) {\n    nodes {\n      oid\n    }\n    totalCount\n  }\n}\n    `;\nexport const RequestedReviewerFragment = `\n    fragment RequestedReviewerFragment on RequestedReviewer {\n  ... on User {\n    login\n  }\n  ... on Mannequin {\n    login\n  }\n  __typename\n}\n    `;\nexport const PullRequestTimelineItemFragment = `\n    fragment PullRequestTimelineItemFragment on PullRequestTimelineItems {\n  ... on PullRequestCommit {\n    commit {\n      ...CommitFragment\n    }\n  }\n  ... on PullRequestReview {\n    id\n    author {\n      ...ActorFragment\n    }\n    state\n    bodyHTML\n    comments(first: $numComments) {\n      nodes {\n        ...PullRequestReviewCommentFragment\n      }\n    }\n  }\n  ... on HeadRefForcePushedEvent {\n    actor {\n      ...ActorFragment\n    }\n    createdAt\n    beforeCommit {\n      ...CommitFragment\n    }\n    afterCommit {\n      ...CommitFragment\n    }\n  }\n  ... on ReviewRequestedEvent {\n    actor {\n      ...ActorFragment\n    }\n    createdAt\n    requestedReviewer {\n      ...RequestedReviewerFragment\n    }\n  }\n  ... on ReviewRequestRemovedEvent {\n    actor {\n      ...ActorFragment\n    }\n    requestedReviewer {\n      ...RequestedReviewerFragment\n    }\n  }\n  ... on IssueComment {\n    author {\n      ...ActorFragment\n    }\n    bodyHTML\n  }\n  ... on RenamedTitleEvent {\n    actor {\n      ...ActorFragment\n    }\n    previousTitle\n    currentTitle\n  }\n  ... on MergedEvent {\n    actor {\n      ...ActorFragment\n    }\n    mergedCommit: commit {\n      ...CommitFragment\n    }\n    mergeRefName\n  }\n  ... on ClosedEvent {\n    actor {\n      ...ActorFragment\n    }\n    closable {\n      __typename\n      ... on PullRequest {\n        merged\n      }\n    }\n  }\n  __typename\n}\n    `;\nexport const LabelFragment = `\n    fragment LabelFragment on Label {\n  id\n  name\n  color\n  description\n}\n    `;\nexport const PullsPullRequestFragment = `\n    fragment PullsPullRequestFragment on PullRequest {\n  number\n  title\n  updatedAt\n  author {\n    ...ActorFragment\n  }\n  comments {\n    totalCount\n  }\n  reviewDecision\n  labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n    nodes {\n      ...LabelFragment\n    }\n  }\n}\n    `;\nexport const StackPullRequestFragment = `\n    fragment StackPullRequestFragment on PullRequest {\n  number\n  title\n  updatedAt\n  state\n  reviewDecision\n  headRefOid\n  comments {\n    totalCount\n  }\n}\n    `;\nexport const TreeFragment = `\n    fragment TreeFragment on Tree {\n  id\n  oid\n  entries {\n    oid\n    name\n    path\n    type\n    mode\n  }\n}\n    `;\nexport const UserFragment = `\n    fragment UserFragment on User {\n  __typename\n  id\n  ...ActorFragment\n}\n    `;\nexport const AddCommentMutation = `\n    mutation AddCommentMutation($id: ID!, $body: String!) {\n  addComment(input: {subjectId: $id, body: $body}) {\n    subject {\n      id\n    }\n    commentEdge {\n      cursor\n      node {\n        id\n      }\n    }\n    timelineEdge {\n      cursor\n      node {\n        __typename\n      }\n    }\n  }\n}\n    `;\nexport const AddLabelsToLabelableMutation = `\n    mutation AddLabelsToLabelableMutation($input: AddLabelsToLabelableInput!) {\n  addLabelsToLabelable(input: $input) {\n    labelable {\n      labels(first: 100) {\n        nodes {\n          ...LabelFragment\n        }\n      }\n    }\n  }\n}\n    ${LabelFragment}`;\nexport const AddPullRequestReviewCommentMutation = `\n    mutation AddPullRequestReviewCommentMutation($input: AddPullRequestReviewCommentInput!) {\n  addPullRequestReviewComment(input: $input) {\n    comment {\n      ...PullRequestReviewCommentFragment\n    }\n  }\n}\n    ${PullRequestReviewCommentFragment}\n${ActorFragment}`;\nexport const AddPullRequestReviewMutation = `\n    mutation AddPullRequestReviewMutation($input: AddPullRequestReviewInput!) {\n  addPullRequestReview(input: $input) {\n    pullRequestReview {\n      id\n    }\n  }\n}\n    `;\nexport const RemoveLabelsFromLabelableMutation = `\n    mutation RemoveLabelsFromLabelableMutation($input: RemoveLabelsFromLabelableInput!) {\n  removeLabelsFromLabelable(input: $input) {\n    labelable {\n      labels(first: 100) {\n        nodes {\n          ...LabelFragment\n        }\n      }\n    }\n  }\n}\n    ${LabelFragment}`;\nexport const RequestReviewsMutation = `\n    mutation RequestReviewsMutation($input: RequestReviewsInput!) {\n  requestReviews(input: $input) {\n    requestedReviewersEdge {\n      node {\n        id\n      }\n    }\n  }\n}\n    `;\nexport const SubmitPullRequestReviewMutation = `\n    mutation SubmitPullRequestReviewMutation($input: SubmitPullRequestReviewInput!) {\n  submitPullRequestReview(input: $input) {\n    pullRequestReview {\n      id\n    }\n  }\n}\n    `;\nexport const CommitQuery = `\n    query CommitQuery($org: String!, $repo: String!, $oid: GitObjectID!, $numParents: Int!) {\n  repositoryOwner(login: $org) {\n    repository(name: $repo) {\n      object(oid: $oid) {\n        ... on Commit {\n          __typename\n          id\n          oid\n          committedDate\n          url\n          message\n          messageBody\n          messageBodyHTML\n          messageHeadline\n          messageHeadlineHTML\n          tree {\n            ...TreeFragment\n          }\n          parents(first: $numParents) {\n            nodes {\n              oid\n            }\n            totalCount\n          }\n        }\n      }\n    }\n  }\n}\n    ${TreeFragment}`;\nexport const PullRequestQuery = `\n    query PullRequestQuery($name: String!, $owner: String!, $pr: Int!, $numComments: Int!, $numTimelineItems: Int!) {\n  repository(name: $name, owner: $owner) {\n    pullRequest(number: $pr) {\n      additions\n      deletions\n      id\n      number\n      url\n      title\n      titleHTML\n      body\n      bodyHTML\n      baseRefOid\n      state\n      reviewDecision\n      viewerDidAuthor\n      timelineItems(\n        first: $numTimelineItems\n        itemTypes: [PULL_REQUEST_COMMIT, PULL_REQUEST_REVIEW, HEAD_REF_FORCE_PUSHED_EVENT, REVIEW_REQUESTED_EVENT, REVIEW_REQUEST_REMOVED_EVENT, ISSUE_COMMENT, RENAMED_TITLE_EVENT, MERGED_EVENT, CLOSED_EVENT]\n      ) {\n        nodes {\n          ...PullRequestTimelineItemFragment\n        }\n      }\n      reviews(first: 100) {\n        nodes {\n          author {\n            ...UserFragment\n          }\n        }\n      }\n      reviewThreads(first: 100) {\n        nodes {\n          ...PullRequestReviewThreadFragment\n        }\n      }\n      reviewRequests(first: 100) {\n        nodes {\n          requestedReviewer {\n            ...UserFragment\n          }\n        }\n      }\n      labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n        nodes {\n          ...LabelFragment\n        }\n      }\n      commits(last: 1) {\n        nodes {\n          commit {\n            checkSuites(last: 100) {\n              nodes {\n                workflowRun {\n                  workflow {\n                    name\n                  }\n                }\n                checkRuns(last: 100) {\n                  nodes {\n                    ...CheckRunFragment\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ${PullRequestTimelineItemFragment}\n${CommitFragment}\n${ActorFragment}\n${PullRequestReviewCommentFragment}\n${RequestedReviewerFragment}\n${UserFragment}\n${PullRequestReviewThreadFragment}\n${LabelFragment}\n${CheckRunFragment}`;\nexport const PullsQuery = `\n    query PullsQuery($name: String!, $owner: String!, $after: String, $before: String, $first: Int, $last: Int, $labels: [String!], $states: [PullRequestState!]!) {\n  repository(name: $name, owner: $owner) {\n    pullRequests(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      labels: $labels\n      states: $states\n      orderBy: {field: UPDATED_AT, direction: DESC}\n    ) {\n      nodes {\n        ...PullsPullRequestFragment\n      }\n      pageInfo {\n        ...PageInfoFragment\n      }\n      totalCount\n    }\n  }\n}\n    ${PullsPullRequestFragment}\n${ActorFragment}\n${LabelFragment}\n${PageInfoFragment}`;\nexport const RepoAssignableUsersQuery = `\n    query RepoAssignableUsersQuery($name: String!, $owner: String!, $query: String) {\n  repository(name: $name, owner: $owner) {\n    assignableUsers(first: 20, query: $query) {\n      nodes {\n        ...UserFragment\n      }\n    }\n  }\n}\n    ${UserFragment}\n${ActorFragment}`;\nexport const RepoLabelsQuery = `\n    query RepoLabelsQuery($name: String!, $owner: String!, $query: String) {\n  repository(name: $name, owner: $owner) {\n    labels(first: 20, query: $query) {\n      nodes {\n        ...LabelFragment\n      }\n    }\n  }\n}\n    ${LabelFragment}`;\nexport const StackPullRequestQuery = `\n    query StackPullRequestQuery($name: String!, $owner: String!, $pr: Int!) {\n  repository(name: $name, owner: $owner) {\n    pullRequest(number: $pr) {\n      ...StackPullRequestFragment\n    }\n  }\n}\n    ${StackPullRequestFragment}`;\nexport const TreeQuery = `\n    query TreeQuery($org: String!, $repo: String!, $oid: GitObjectID!) {\n  repositoryOwner(login: $org) {\n    repository(name: $repo) {\n      object(oid: $oid) {\n        ...TreeFragment\n      }\n    }\n  }\n}\n    ${TreeFragment}`;\nexport const UserHomePageQuery = `\n    query UserHomePageQuery($reviewRequestedQuery: String!) {\n  viewer {\n    repositories(first: 10, orderBy: {field: UPDATED_AT, direction: DESC}) {\n      nodes {\n        nameWithOwner\n      }\n    }\n    pullRequests(first: 10, orderBy: {field: UPDATED_AT, direction: DESC}) {\n      nodes {\n        ...HomePagePullRequestFragment\n      }\n    }\n  }\n  search(first: 10, query: $reviewRequestedQuery, type: ISSUE) {\n    nodes {\n      ...HomePagePullRequestFragment\n    }\n  }\n}\n    ${HomePagePullRequestFragment}`;\nexport const UsernameQuery = `\n    query UsernameQuery {\n  viewer {\n    login\n  }\n}\n    `;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * As of Nov 16, 2022, Firefox does not support indexedDB.databases():\n * https://bugzilla.mozilla.org/show_bug.cgi?id=934640.\n * To support deleting all databases, we have to keep a list of every\n * IndexedDB database that was *ever* created by ReviewStack so that we can\n * be sure to delete all of them during login/logout.\n */\nexport const ALL_DB_NAMES_EVER: ReadonlyArray<string> = ['github-objects-v2'];\n\n/** Update ALL_DB_NAMES_EVER as appropriate, if DB_VERSION changes. */\nexport const DB_VERSION = 2;\n/** Update ALL_DB_NAMES_EVER as appropriate, if DB_NAME changes. */\nexport const DB_NAME = `github-objects-v${DB_VERSION}`;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {UsernameQueryData, UsernameQueryVariables} from '../generated/graphql';\nimport type {Loadable} from 'recoil';\n\nimport {UsernameQuery} from '../generated/graphql';\nimport {ALL_DB_NAMES_EVER} from './databaseInfo';\nimport {broadcastLogoutMessage, subscribeToLogout} from './logoutBroadcastChannel';\nimport queryGraphQL from './queryGraphQL';\nimport {atom, selector, DefaultValue, RecoilLoadable} from 'recoil';\nimport {createRequestHeaders} from 'shared/github/auth';\nimport rejectAfterTimeout from 'shared/rejectAfterTimeout';\n\n/*\n * We take the following approach to ensure that when a user hits Logout, we\n * remove all of the user's local data stored in the browser for the hostname on\n * which ReviewStack is being served. Likewise, when a user logs in, we also\n * remove any existing local data for the hostname so that it cannot interfere\n * with the user's experience.\n *\n * Because we store user data in a combination of localStorage and indexedDB,\n * and because indexedDB has async access patterns while localStorage is\n * accessed synchronously, we delete all of the data from indexedDB before we\n * call `localStorage.clear()`. In this way:\n *\n * - If \"github.token\" is set in localStorage, this signals that there may be\n *   corresponding user data in indexedDB.\n * - If \"github.token\" is not set in localStorage, then ReviewStack has deleted\n *   all user data from indexedDB (or has never written any).\n *\n * Updates to `gitHubPersonalAccessToken` must go through\n * `gitHubTokenPersistence`. Note that `gitHubTokenPersistence` ensures that\n * `clearAllLocalData()` has completed successfully before\n * `localStorage.setItem(\"github.token\")` is called.\n */\n\nconst GITHUB_TOKEN_PROPERTY = 'github.token';\nconst GITHUB_HOSTNAME_PROPERTY = 'github.hostname';\n\n/**\n * This should not be accessed directly: readers and writers must go\n * through gitHubTokenPersistence.\n */\nconst gitHubPersonalAccessToken = atom<Loadable<string | null>>({\n  key: 'gitHubPersonalAccessToken',\n  default: RecoilLoadable.of(localStorage.getItem(GITHUB_TOKEN_PROPERTY)),\n  // The Loadable may be backed by a Promise, which has mutable state.\n  dangerouslyAllowMutability: true,\n  effects: [\n    // Handle \"logout\" events.\n    ({setSelf}) => {\n      // If we receive a \"logout\" event, we know that it must have come from\n      // another tab. We should present the UI as if the user hit Logout in this\n      // tab, even if localStorage has not been cleared yet.\n      const unsubscribe = subscribeToLogout(() => {\n        const token = localStorage.getItem(GITHUB_TOKEN_PROPERTY);\n        if (token == null) {\n          // It appears the tab where the user hit Logout already cleared\n          // localStorage, so set ourselves to null.\n          setSelf(RecoilLoadable.of(null));\n        } else {\n          // Return a Loadable that is backed by a Promise that is not fulfilled\n          // until we observe localStorage being cleared.\n          setSelf(\n            RecoilLoadable.of(\n              new Promise(resolve => {\n                window.addEventListener('storage', (event: StorageEvent) => {\n                  // We want to be sure we only respond to localStorage events.\n                  if (event.storageArea !== localStorage) {\n                    return;\n                  }\n\n                  // If localStorage.clear() was called, event.key will be null.\n                  if (\n                    event.key === null ||\n                    (event.key === GITHUB_TOKEN_PROPERTY && event.newValue == null)\n                  ) {\n                    resolve(null);\n                  }\n                });\n              }),\n            ),\n          );\n        }\n      });\n      return unsubscribe;\n    },\n    // Write new, non-null value to localStorage.\n    ({onSet}) => {\n      onSet(loadable => {\n        loadable.toPromise().then(token => {\n          if (token != null) {\n            localStorage.setItem(GITHUB_TOKEN_PROPERTY, token);\n          }\n        });\n      });\n    },\n  ],\n});\n\n/**\n * Before writing this value via `useSetRecoilState()`, ensure that\n * the `gitHubHostname` atom has been written first.\n *\n * TODO(mbolin): Modify this selector so that it takes {token, hostname} as a\n * pair and change the use of the underlying storage to ensure they are\n * persisted atomically.\n */\nexport const gitHubTokenPersistence = selector<string | null>({\n  key: 'gitHubTokenPersistence',\n  get: ({get}) => get(gitHubPersonalAccessToken),\n  set: ({get, set}, tokenArg) => {\n    // If DefaultValue is passed in, this called via a reset action, so treat\n    // it as if the value were null.\n    const token = tokenArg instanceof DefaultValue ? null : tokenArg;\n    if (token == null) {\n      broadcastLogoutMessage();\n    }\n\n    // Whenever the value of the token changes, either null to non-null or\n    // non-null to null, we want to clear out any data that may have been\n    // persisted locally.\n    //\n    // - For a user logging in, we do not want to pick up any state written\n    //   previously by a potentially nefarious user.\n    // - For a user logging out, we want to remove all of their data.\n    const hostname = get(gitHubHostname);\n    const promise: Promise<string | null> = clearAllLocalData().then(() => {\n      // localStorage was just cleared, so we need to ensure the GitHub hostname\n      // is persisted in localStorage.\n      if (token != null && hostname != null) {\n        localStorage.setItem(GITHUB_HOSTNAME_PROPERTY, hostname);\n      }\n      return token;\n    });\n    const loadable = RecoilLoadable.of(promise);\n    set(gitHubPersonalAccessToken, loadable);\n  },\n});\n\n/**\n * If all databases are not dropped within this time window, then it seems\n * unlikely that the operation will succeed, as it is likely an issue where\n * something else is holding a connection open, preventing deletion.\n */\nconst DELETE_ALL_DATABASES_TIMEOUT_MS = 10_000;\n\n/**\n * Remove all local data stored for the user, which means clearing out\n * everything in indexedDB and localStorage.\n *\n * If this Promise rejects, there are no guarantees that all of the user's data\n * was deleted.\n */\nasync function clearAllLocalData(): Promise<void> {\n  if (typeof indexedDB !== 'undefined') {\n    await rejectAfterTimeout(\n      dropAllDatabases(indexedDB),\n      DELETE_ALL_DATABASES_TIMEOUT_MS,\n      `databases not dropped within ${DELETE_ALL_DATABASES_TIMEOUT_MS}ms`,\n    );\n  }\n  localStorage.clear();\n}\n\nasync function dropAllDatabases(indexedDB: IDBFactory): Promise<unknown> {\n  let databaseNames: string[];\n  if (indexedDB.databases == null) {\n    // As of Nov 16, 2022, Firefox does not support indexedDB.databases():\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=934640.\n    databaseNames = [...ALL_DB_NAMES_EVER];\n  } else {\n    const databases = await indexedDB.databases();\n    databaseNames = databases.map(db => {\n      const {name} = db;\n      if (name != null) {\n        return name;\n      } else {\n        throw Error('IDBDatabaseInfo with no name');\n      }\n    });\n  }\n\n  return Promise.all(\n    databaseNames.map(name => {\n      return new Promise((resolve, reject) => {\n        // Note: deleteDatabase() is considered a \"success\" even if no database\n        // exists with the specified name.\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = event => reject(`failed to delete db ${name}: ${event}`);\n        request.onsuccess = event => resolve(`successfully deleted db ${name}: ${event}`);\n      });\n    }),\n  );\n}\n\nexport const gitHubUsername = selector<string | null>({\n  key: 'gitHubUsername',\n  get: ({get}) => {\n    const token = get(gitHubTokenPersistence);\n    if (token == null) {\n      return null;\n    }\n\n    const key = deriveLocalStoragePropForUsername(token);\n    const username = localStorage.getItem(key);\n    if (username != null) {\n      return username;\n    }\n\n    const graphQLEndpoint = get(gitHubGraphQLEndpoint);\n    return queryGraphQL<UsernameQueryData, UsernameQueryVariables>(\n      UsernameQuery,\n      {},\n      createRequestHeaders(token),\n      graphQLEndpoint,\n    ).then(data => {\n      const username = data.viewer.login;\n      localStorage.setItem(key, username);\n      return username;\n    });\n  },\n});\n\nexport const gitHubHostname = atom<string>({\n  key: 'gitHubHostname',\n  default: localStorage.getItem(GITHUB_HOSTNAME_PROPERTY) || 'github.com',\n});\n\nexport const isConsumerGitHub = selector<boolean>({\n  key: 'isConsumerGitHub',\n  get: ({get}) => get(gitHubHostname) === 'github.com',\n});\n\nexport const gitHubGraphQLEndpoint = selector<string>({\n  key: 'gitHubGraphQLEndpoint',\n  get: ({get}) => {\n    const hostname = get(gitHubHostname);\n    return createGraphQLEndpointForHostname(hostname);\n  },\n});\n\nexport function createGraphQLEndpointForHostname(hostname: string): string {\n  // According to GitHub's documentation:\n  //\n  // https://docs.github.com/en/enterprise-server@3.6/graphql/guides/introduction-to-graphql#discovering-the-graphql-api\n  //\n  // The URL to use for the GraphQL API is:\n  //\n  //   http(s)://HOSTNAME/api/graphql\n  //\n  // Though for the GHE instance we tested, both of these appear to work:\n  //\n  //   https://api.HOSTNAME/graphql\n  //   https://HOSTNAME/api/graphql\n  //\n  // And for consumer GitHub, trying to make API requests using curl:\n  //\n  //   https://api.github.com/graphql works\n  //   https://github.com/api/graphql fails with \"Cookies must be enabled to use GitHub.\"\n  //\n  // While it is possible that https://api.HOSTNAME/graphql always works for\n  // both enterprise and consume GitHub, we'll go with what is documented to\n  // play it safe.\n  if (hostname === 'github.com') {\n    return 'https://api.github.com/graphql';\n  } else {\n    return `https://${hostname}/api/graphql`;\n  }\n}\n\nfunction deriveLocalStoragePropForUsername(token: string): string {\n  return `username.${token}`;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n * This file contains the logic that coordinates logout activity across multiple\n * instances of ReviewStack opened within the same web browser. It leverages a\n * BroadcastChannel to notify all of the relevant windows and SharedWorkers\n * (e.g., \"browsing contexts\") that the user has opted to logout, which means\n * that:\n *\n * - The context should close any open connection to IndexedDB that it has.\n * - The context should not do any more writes to the IndexedDB (which should\n *   follow from the previous bullet point).\n * - The context in which the user initiated the logout should take\n *   responsibility for calling `clearAllLocalData()` in gitHubCredentials.ts.\n *   In order for the `indexedDB.deleteDatabase()` call to succeed, all of the\n *   other contexts will have had to close their database connections first.\n */\n\nconst LOGOUT_CHANNEL_NAME = 'reviewstack-logout';\nconst INTERNAL_LOGOUT_EVENT_NAME = 'reviewstack-logout-this-window';\n\nconst logoutBroadcastChannel = new BroadcastChannel(LOGOUT_CHANNEL_NAME);\n\ntype LogoutMessage = {\n  logout: true;\n};\n\n/**\n * Used to register listeners via subscribeToLogout() for clients that also\n * want to be notified of logout events from the source window.\n *\n * We use this EventTarget with the INTERNAL_LOGOUT_EVENT_NAME Event that is\n * private to this module.\n */\nconst localSubscribers = new EventTarget();\n\n/**\n * Calls the specified callback when a \"logout\" event is received on the\n * channel. By default, the callback will only be called when the message was\n * fired from another browser tab.\n *\n * Returns a function to remove the subscriptions.\n */\nexport function subscribeToLogout(\n  callback: () => void,\n  includeLogoutEventsFromThisWindow = false,\n): () => void {\n  const unsubscribeCalls: Array<() => void> = [];\n\n  const channelListener = ({data}: MessageEvent) => {\n    if ((data as LogoutMessage).logout === true) {\n      callback();\n    }\n  };\n  logoutBroadcastChannel.addEventListener('message', channelListener);\n  unsubscribeCalls.push(() =>\n    logoutBroadcastChannel.removeEventListener('message', channelListener),\n  );\n\n  if (includeLogoutEventsFromThisWindow) {\n    // Ensure the original callback does not see the Event.\n    const localSubscribersListener = (_event: Event) => {\n      callback();\n    };\n    localSubscribers.addEventListener(INTERNAL_LOGOUT_EVENT_NAME, localSubscribersListener);\n    unsubscribeCalls.push(() =>\n      localSubscribers.removeEventListener(INTERNAL_LOGOUT_EVENT_NAME, localSubscribersListener),\n    );\n  }\n\n  return () => unsubscribeCalls.forEach(callback => callback());\n}\n\nexport function broadcastLogoutMessage() {\n  localSubscribers.dispatchEvent(new Event(INTERNAL_LOGOUT_EVENT_NAME));\n  const message: LogoutMessage = {logout: true};\n  logoutBroadcastChannel.postMessage(message);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport default async function queryGraphQL<TData, TVariables>(\n  query: string,\n  variables: TVariables,\n  requestHeaders: Record<string, string>,\n  graphQLEndpoint: string,\n): Promise<TData> {\n  const response = await fetch(graphQLEndpoint, {\n    headers: requestHeaders,\n    method: 'POST',\n    body: JSON.stringify({query, variables}),\n  });\n\n  if (!response.ok) {\n    if (response.status === 401) {\n      return Promise.reject(\n        `HTTP request error: ${response.status}: ${\n          response.statusText || 'Unauthorized'\n        }. Is your access token still valid?`,\n      );\n    }\n    return Promise.reject(`HTTP request error: ${response.status}: ${response.statusText}`);\n  }\n\n  const json = await response.json();\n\n  if (Array.isArray(json.errors)) {\n    return Promise.reject(`Error: ${json.errors[0].message}`);\n  }\n\n  return json.data;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {Loadable} from 'recoil';\n\nimport {colorMap} from './diffServiceClient';\nimport {atom, noWait, selector} from 'recoil';\nimport {updateTextMateGrammarCSS} from 'shared/textmate-lib/textmateStyles';\n\n/**\n * See https://primer.style/react/theming#color-modes-and-color-schemes\n * Note that \"day\" is the default. Currently, we choose not to include \"auto\"\n * because <ThemeProvider> does not appear to support an event to tell us\n * when the colorMode changes?\n */\nexport type SupportedPrimerColorMode = 'day' | 'night';\n\nconst LOCAL_STORAGE_KEY = 'reviewstack-color-mode';\n\nexport function getColorModeFromLocalStorage(): SupportedPrimerColorMode {\n  return localStorage.getItem(LOCAL_STORAGE_KEY) !== 'night' ? 'day' : 'night';\n}\n\nexport const primerColorMode = atom<SupportedPrimerColorMode>({\n  key: 'primerColorMode',\n  // We define the default value as a selector to give us an opportunity to call\n  // updateTextMateGrammarCSS() with the initial value of this atom.\n  default: selector({\n    key: 'primerColorMode/default',\n    get: ({get}) => {\n      const colorMode = getColorModeFromLocalStorage();\n      const loadable = get(noWait(colorMap(colorMode)));\n      scheduleCSSUpdate(colorMode, loadable);\n      return colorMode;\n    },\n  }),\n  effects: [\n    // Persist the user's preference in localStorage.\n    ({onSet}) => {\n      onSet(newValue => {\n        localStorage.setItem(LOCAL_STORAGE_KEY, newValue);\n      });\n    },\n    // Update the global <style> element for TextMate CSS to reflect the change\n    // to the page's theme.\n    ({onSet, getLoadable}) => {\n      onSet(colorMode => {\n        const loadable = getLoadable(colorMap(colorMode));\n        scheduleCSSUpdate(colorMode, loadable);\n      });\n    },\n  ],\n});\n\nfunction scheduleCSSUpdate(colorMode: SupportedPrimerColorMode, loadable: Loadable<string[]>) {\n  const colorScheme = colorMode === 'day' ? 'light' : 'dark';\n  // Note that we update the colorScheme on document.documentElement rather than\n  // <App>, but we can revisit this if it is an issue.\n  document.documentElement.style.colorScheme = colorScheme;\n\n  // We try to use getLoadable().valueMaybe() rather than getPromise() to\n  // try to minimize the delay between the user toggling the theme switch\n  // and seeing the update to syntax highlighting.\n  const map = loadable.valueMaybe();\n  if (map != null) {\n    updateTextMateGrammarCSS(map);\n  } else {\n    loadable.toPromise().then(updateTextMateGrammarCSS);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function createRequestHeaders(token: string): Record<string, string> {\n  return {\n    Authorization: `token ${token}`,\n    Accept: 'application/vnd.github.v3+json',\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Takes an existing Promise and wraps it with a new Promise that will either:\n * - be fulfilled with the result from the original promise\n * - be rejected with the provided error message after `timeoutInMillis`\n *   milliseconds.\n *\n * Note that in the case where the returned Promise rejects, there is nothing\n * that stops the execution of the executor function used to create the\n * original Promise.\n */\nexport default function rejectAfterTimeout<T>(\n  promise: Promise<T>,\n  timeoutInMillis: number,\n  message: string,\n): Promise<T> {\n  return Promise.race([\n    promise,\n    new Promise<T>((_resolve, reject) => {\n      setTimeout(() => reject(message), timeoutInMillis);\n    }),\n  ]);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * This is the prefix used by Monaco for the CSS classes it uses for syntax\n * highlighting. Each token returned by `IGrammar.tokenizeLine2()` has a\n * `number` associated with it. To construct the appropriate CSS class name for\n * color number `n`, do: `${CSS_CLASS_PREFIX}${n}`.\n */\nexport const CSS_CLASS_PREFIX = 'mtk';\n\n/**\n * Updates the <style> element on the page to define the CSS rules necessary to\n * honor the user's selected theme.\n * @param colorMap as returned by `Registry.getColorMap()` where each value in\n *   the array is a CSS hex value, such as \"#AA0000\".\n */\nexport function updateTextMateGrammarCSS(colorMap: string[]): void {\n  // Note that if the Monaco editor is used on the page, then we also need to do\n  // something like:\n  //\n  //     const colorMap = cssColors.map(Color.Format.CSS.parseHex);\n  //     TokenizationRegistry.setColorMap(colorMap);\n  //\n  // though that will require loading code from the monaco-editor npm module.\n\n  const css = generateTokensCSSForColorMap(colorMap);\n  const style = getOrCreateStyleElementForColorsCSS();\n  style.innerHTML = css;\n}\n\nlet styleElementForTextMateCSS: HTMLStyleElement | null = null;\n\nfunction getOrCreateStyleElementForColorsCSS(): HTMLStyleElement {\n  // If there is an existing <style> element, then overwrite its contents\n  // rather than create a new one. (Yes, this means that we support only one\n  // theme globally on the page at a time, at least for now.)\n  if (styleElementForTextMateCSS != null) {\n    return styleElementForTextMateCSS;\n  }\n\n  // We want to ensure that our <style> element appears after Monaco's so that\n  // we can override some styles it inserted for the default theme.\n  styleElementForTextMateCSS = document.createElement('style');\n\n  // If an instance of the Monaco editor is being used on the page, then it will\n  // have injected a stylesheet that we need to override. We expect these styles\n  // to be in an element with the class name 'monaco-colors' based on:\n  // https://github.com/microsoft/vscode/blob/f78d84606cd16d75549c82c68888de91d8bdec9f/src/vs/editor/standalone/browser/standaloneThemeServiceImpl.ts#L206-L214\n  //\n  // However, .monaco-colors may not have been inserted yet (this could be the\n  // case depending on where Monaco is in its own initialization process), so we\n  // just append the <style> tag to <body> so that when .monaco-colors is\n  // inserted to the <head> tag, our <style> tag will be guaranteed to appear\n  // later in the DOM and therefore its styles will take precedence.\n  document.body.appendChild(styleElementForTextMateCSS);\n\n  return styleElementForTextMateCSS;\n}\n\n/**\n * Adapted from the `generateTokensCSSForColorMap()` implementation in\n * `monaco-editor/esm/vs/editor/common/modes/supports/tokenization.js`.\n * Note that the original takes an Array<Color>, but while the Color class has\n * all sorts of fancy methods like `getRelativeLuminance()` and `blend()`, the\n * only thing this function needs is its `toString()` method, which formats it\n * as a CSS hex value, which is what `registry.getColorMap()` returned in the\n * first place!\n */\nfunction generateTokensCSSForColorMap(cssColors: readonly string[]): string {\n  const rules: string[] = [];\n  for (let i = 1, len = cssColors.length; i < len; i++) {\n    const color = cssColors[i];\n    rules[i] = `.${CSS_CLASS_PREFIX}${i} { color: ${color}; }`;\n  }\n  rules.push(`.${CSS_CLASS_PREFIX}i { font-style: italic; }`);\n  rules.push(`.${CSS_CLASS_PREFIX}b { font-weight: bold; }`);\n  rules.push(\n    `.${CSS_CLASS_PREFIX}u { text-decoration: underline; text-underline-position: under; }`,\n  );\n  rules.push(`.${CSS_CLASS_PREFIX}s { text-decoration: line-through; }`);\n  rules.push(\n    `.${CSS_CLASS_PREFIX}s.${CSS_CLASS_PREFIX}u { text-decoration: underline line-through; text-underline-position: under; }`,\n  );\n  return rules.join('\\n');\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {Json} from './typeUtils';\n\nexport function notEmpty<T>(value: T | null | undefined): value is T {\n  return value !== null && value !== undefined;\n}\n\n/**\n * Throw if value is `null` or `undefined`.\n */\nexport function unwrap<T>(value: T | undefined | null): T {\n  if (value == null) {\n    throw new Error(`expected value not to be ${value}`);\n  }\n  return value;\n}\n\n/**\n * generate a small random ID string via time in ms + random number encoded as a [0-9a-z]+ string\n * This should not be used for cryptographic purposes or if universal uniqueness is absolutely necessary\n */\nexport function randomId(): string {\n  return Date.now().toString(36) + Math.random().toString(36);\n}\n\nexport type Deferred<T> = {\n  promise: Promise<T>;\n  resolve: (t: T) => void;\n  reject: (e: Error) => void;\n};\n/**\n * Wraps `new Promise<T>()`, so you can access resolve/reject outside of the callback.\n * Useful for externally resolving promises in tests.\n */\nexport function defer<T>(): Deferred<T> {\n  const deferred = {\n    promise: undefined as unknown as Promise<T>,\n    resolve: undefined as unknown as (t: T) => void,\n    reject: undefined as unknown as (e: Error) => void,\n  };\n  deferred.promise = new Promise<T>((resolve: (t: T) => void, reject: (e: Error) => void) => {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n\n/**\n * Returns the part of the string after the last occurrence of delimiter,\n * or the entire string if no matches are found.\n * (default delimiter is '/')\n *\n * ```\n * basename('/path/to/foo.txt', '/') -> 'foo.txt'\n * basename('foo.txt', '/') -> 'foo.txt'\n * basename('/path/', '/') -> ''\n * ```\n */\nexport function basename(s: string, delimiter = '/') {\n  const foundIndex = s.lastIndexOf(delimiter);\n  if (foundIndex === -1) {\n    return s;\n  }\n  return s.slice(foundIndex + 1);\n}\n\nexport function findParentWithClassName(\n  start: HTMLElement,\n  className: string,\n): HTMLElement | undefined {\n  let el = start as HTMLElement | null;\n  while (el) {\n    if (el.classList?.contains(className)) {\n      return el;\n    } else {\n      el = el.parentElement;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Applies a function to each key & value in an Object.\n * ```\n * mapObject(\n *   {foo: 1, bar: 2},\n *   ([key, value]) => ['_' + key, value + 1]\n * )\n * => {_foo: 2, _bar: 3}\n * ```\n */\nexport function mapObject<K1 extends string | number, V1, K2 extends string | number, V2>(\n  o: Record<K1, V1>,\n  func: (param: [K1, V1]) => [K2, V2],\n): Record<K2, V2> {\n  return Object.fromEntries((Object.entries(o) as Array<[K1, V1]>).map(func)) as Record<K2, V2>;\n}\n\n/**\n * Test if a generator yields the given value.\n * `value` can be either a value to test equality, or a function to customize the equality test.\n */\nexport function generatorContains<V>(\n  gen: IterableIterator<V>,\n  value: V | ((v: V) => boolean),\n): boolean {\n  const test = typeof value === 'function' ? (value as (v: V) => boolean) : (v: V) => v === value;\n  for (const v of gen) {\n    if (test(v)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Zip 2 iterators.\n */\nexport function* zip<T, U>(iter1: Iterable<T>, iter2: Iterable<U>): IterableIterator<[T, U]> {\n  const iterator1 = iter1[Symbol.iterator]();\n  const iterator2 = iter2[Symbol.iterator]();\n  while (true) {\n    const result1 = iterator1.next();\n    const result2 = iterator2.next();\n    if (result1.done || result2.done) {\n      break;\n    }\n    yield [result1.value, result2.value];\n  }\n}\n\n/** Truncate a long string. */\nexport function truncate(text: string, maxLength = 100): string {\n  return text.length > maxLength ? text.substring(0, Math.max(0, maxLength - 1)) + '…' : text;\n}\n\nexport function isPromise<T>(o: unknown): o is Promise<T> {\n  return typeof (o as {then?: () => void})?.then === 'function';\n}\n\nexport function tryJsonParse(s: string): Json | undefined {\n  try {\n    return JSON.parse(s);\n  } catch {\n    return undefined;\n  }\n}\n\n/**\n * Like Array.filter, but separates elements that pass from those that don't pass and return both arrays.\n * For example, partition([1, 2, 3], n => n % 2 === 0) returns [[2], [1, 3]]\n */\nexport function partition<T>(a: Array<T>, predicate: (item: T) => boolean): [Array<T>, Array<T>] {\n  const [passed, failed] = [[], []] as [Array<T>, Array<T>];\n  for (const item of a) {\n    (predicate(item) ? passed : failed).push(item);\n  }\n  return [passed, failed];\n}\n\n/**\n * Like Array.filter, but separates elements that pass from those that don't pass and return both arrays.\n * For example, partition([1, 2, 3], n => n % 2 === 0) returns [[2], [1, 3]]\n */\nexport function group<ArrayType, BucketType extends string | number>(\n  a: ReadonlyArray<ArrayType>,\n  bucket: (item: ArrayType) => BucketType,\n): Record<BucketType, Array<ArrayType> | undefined> {\n  const result = {} as Record<BucketType, Array<ArrayType>>;\n  for (const item of a) {\n    const b = bucket(item);\n    const existing = result[b] ?? [];\n    existing.push(item);\n    result[b] = existing;\n  }\n  return result;\n}\n\n/**\n * Split string `s` with the `sep` once.\n * If `s` does not contain `sep`, return undefined.\n */\nexport function splitOnce(s: string, sep: string): [string, string] | undefined {\n  const index = s.indexOf(sep);\n  if (index < 0) {\n    return undefined;\n  }\n  return [s.substring(0, index), s.substring(index + sep.length)];\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1024__;","module.exports = __WEBPACK_EXTERNAL_MODULE__314__;","module.exports = __WEBPACK_EXTERNAL_MODULE__742__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"20\":\"cae28d90\",\"222\":\"17388b57\",\"427\":\"03a36e85\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/css/\" + chunkId + \".\" + \"5d187311\" + \".chunk.css\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"ReviewStack:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","var createStylesheet = (chunkId, fullhref, resolve, reject) => {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = (event) => {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = (href, fullhref) => {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = (chunkId) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.miniCss = (chunkId, promises) => {\n\tvar cssChunks = {\"427\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, (e) => {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkReviewStack\"] = globalThis[\"webpackChunkReviewStack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {Suspense} from 'react';\n\nconst DefaultLoginDialog = React.lazy(() => import('./DefaultLoginDialog'));\nconst NetlifyLoginDialog = React.lazy(() => import('./NetlifyLoginDialog'));\n\nexport default function LazyLoginDialog({\n  setTokenAndHostname,\n}: {\n  setTokenAndHostname: (token: string, hostname: string) => void;\n}) {\n  const {hostname} = window.location;\n  const LoginComponent =\n    hostname === 'reviewstack.netlify.app' || hostname === 'reviewstack.dev'\n      ? NetlifyLoginDialog\n      : DefaultLoginDialog;\n\n  return (\n    <div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <LoginComponent setTokenAndHostname={setTokenAndHostname} />\n      </Suspense>\n    </div>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {gitHubHostname, gitHubTokenPersistence} from './github/gitHubCredentials';\nimport {useSetRecoilState} from 'recoil';\n\nexport type CustomLoginDialogProps = {\n  setTokenAndHostname(token: string, hostname: string): void;\n};\n\nlet CustomLoginDialogComponent: React.FunctionComponent<CustomLoginDialogProps> | null = null;\n\nexport function setCustomLoginDialogComponent(\n  component: React.FunctionComponent<CustomLoginDialogProps>,\n) {\n  CustomLoginDialogComponent = component;\n}\n\nexport default function LoginDialog(): React.ReactElement {\n  const setToken = useSetRecoilState(gitHubTokenPersistence);\n  const setHostname = useSetRecoilState(gitHubHostname);\n  function setTokenAndHostname(token: string, hostname: string): void {\n    setHostname(hostname);\n    setToken(token);\n  }\n  if (CustomLoginDialogComponent != null) {\n    return <CustomLoginDialogComponent setTokenAndHostname={setTokenAndHostname} />;\n  } else {\n    return <></>;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {Box, Spinner, Text} from '@primer/react';\nimport React from 'react';\n\ntype Props = {\n  message?: string;\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function CenteredSpinner({message}: Props): React.ReactElement {\n  const messageEl = message == null ? null : <Text>{message}</Text>;\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" padding={2}>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" gridGap={1}>\n        <Spinner />\n        {messageEl}\n      </Box>\n    </Box>\n  );\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {createElement} from 'react';\n\nconst bodyHTMLClassName = 'PRT-bodyHTML';\n\n/**\n * Renders a string of HTML provided by the `trustedHTML` prop, so the caller\n * is responsible for ensuring `trustedHTML` contains \"safe\" HTML (i.e., no\n * <script> tags or presentation logic that could distort the page).\n *\n * Using dangerouslySetInnerHTML is generally frowned upon, but in our case, we\n * trust GitHub's GraphQL API to return sanitized HTML via fields such as\n * `bodyHTML` and `titleHTML`, which ensures GitHub issues and users get\n * linkified as they would on GitHub.\n *\n * This component renders the specified `trustedHTML` wrapped in a `<div>` that\n * will style the `trustedHTML` to match the host page, though additional\n * styling can be enforced via the optional `className` prop.\n */\nexport default function TrustedRenderedMarkdown({\n  trustedHTML,\n  inline,\n  className,\n}: {\n  trustedHTML: string;\n  inline?: boolean;\n  className?: string;\n}): React.ReactElement {\n  const clazz = className != null ? `${className} ${bodyHTMLClassName}` : bodyHTMLClassName;\n  // We may want to rewrite URLs to github.com to point to the equivalent URL\n  // in our own tool, if it is supported.\n  const type = inline ? 'span' : 'div';\n  return createElement(type, {className: clazz, dangerouslySetInnerHTML: {__html: trustedHTML}});\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const globalCacheStats = {\n  cacheBlobReads: 0,\n  cacheTreeReads: 0,\n  cacheCommitReads: 0,\n\n  duplicateKeyBlob: 0,\n  duplicateKeyTree: 0,\n  duplicateKeyCommit: 0,\n\n  gitHubGetBlob: 0,\n  gitHubGetTree: 0,\n  gitHubGetCommit: 0,\n  gitHubGetCommitComparison: 0,\n  gitHubGetPullRequest: 0,\n  gitHubGetPullRequests: 0,\n};\n\ndeclare global {\n  function getReviewStackCacheStats(): typeof globalCacheStats;\n  function printReviewStackCacheStats(): void;\n}\n\n// Make it so you can run `getReviewStackCacheStats()` in the Console.\nglobalThis.getReviewStackCacheStats = () => globalCacheStats;\n\nglobalThis.printReviewStackCacheStats = () => {\n  /* eslint-disable no-console */\n  console.log('== IndexedDB reads from cache ==');\n  console.log(`blobs: ${globalCacheStats.cacheBlobReads}`);\n  console.log(`trees: ${globalCacheStats.cacheTreeReads}`);\n  console.log(`commits: ${globalCacheStats.cacheCommitReads}`);\n\n  console.log('== IndexedDB duplicate writes ==');\n  console.log(`blobs: ${globalCacheStats.duplicateKeyBlob}`);\n  console.log(`trees: ${globalCacheStats.duplicateKeyTree}`);\n  console.log(`commits: ${globalCacheStats.duplicateKeyCommit}`);\n\n  console.log('== GitHub API calls ==');\n  console.log(`getBlob(): ${globalCacheStats.gitHubGetBlob}`);\n  console.log(`getTree(): ${globalCacheStats.gitHubGetTree}`);\n  console.log(`getCommit(): ${globalCacheStats.gitHubGetCommit}`);\n  console.log(`getCommitComparison(): ${globalCacheStats.gitHubGetCommitComparison}`);\n  console.log(`getPullRequest(): ${globalCacheStats.gitHubGetPullRequest}`);\n  console.log(`getPullRequests(): ${globalCacheStats.gitHubGetPullRequests}`);\n  /* eslint-enable no-console */\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {\n  AddCommentMutationData,\n  AddLabelsToLabelableInput,\n  AddLabelsToLabelableMutationData,\n  AddPullRequestReviewInput,\n  AddPullRequestReviewMutationData,\n  AddPullRequestReviewCommentInput,\n  AddPullRequestReviewCommentMutationData,\n  LabelFragment,\n  PullRequestReviewDecision,\n  PullRequestState,\n  RemoveLabelsFromLabelableInput,\n  RemoveLabelsFromLabelableMutationData,\n  RequestReviewsInput,\n  RequestReviewsMutationData,\n  StackPullRequestFragment,\n  SubmitPullRequestReviewInput,\n  SubmitPullRequestReviewMutationData,\n  UserFragment,\n} from '../generated/graphql';\nimport type GitHubClient from './GitHubClient';\nimport type {PullRequest} from './pullRequestTimelineTypes';\nimport type {PullsQueryInput, PullsWithPageInfo} from './pullsTypes';\nimport type {CommitComparison} from './restApiTypes';\nimport type {Blob, Commit, GitObject, GitObjectID, ID, Tree} from './types';\n\nimport {globalCacheStats} from './GitHubClientStats';\nimport {DB_VERSION, DB_NAME} from './databaseInfo';\nimport {subscribeToLogout} from './logoutBroadcastChannel';\nimport rejectAfterTimeout from 'shared/rejectAfterTimeout';\n\nconst DB_COMMIT_STORE_NAME = 'commit';\nconst DB_TREE_STORE_NAME = 'tree';\nconst DB_BLOB_STORE_NAME = 'blob';\nconst PR_FRAGMENT_STORE_NAME = 'pr-fragment';\n\ninterface NormalizedCommit extends GitObject {\n  oid: GitObjectID;\n  id: ID;\n  url: string;\n  message: string;\n  messageHeadline: string;\n  messageHeadlineHTML: string;\n  messageBody: string;\n  messageBodyHTML: string;\n  parents: GitObjectID[];\n  tree_oid: GitObjectID;\n  committedDate: string;\n}\n\ntype NormalizedStackPullRequestFragment = {\n  owner: string;\n  name: string;\n  number: number;\n  title: string;\n  updatedAt: string;\n  state: PullRequestState;\n  reviewDecision: PullRequestReviewDecision | null | undefined;\n  headRefOid: GitObjectID;\n  numComments: number;\n};\n\n/** Name of an IDBObjectStore in our IDBDatabase. */\ntype Store =\n  | typeof DB_COMMIT_STORE_NAME\n  | typeof DB_TREE_STORE_NAME\n  | typeof DB_BLOB_STORE_NAME\n  | typeof PR_FRAGMENT_STORE_NAME;\n\ntype StoreTypes = {\n  [DB_COMMIT_STORE_NAME]: NormalizedCommit;\n  [DB_TREE_STORE_NAME]: Tree;\n  [DB_BLOB_STORE_NAME]: Blob;\n  [PR_FRAGMENT_STORE_NAME]: NormalizedStackPullRequestFragment;\n};\n\n/**\n * Represents an open readwrite transaction for the specified store.\n * Callers are expected to invoke add() as many times as necessary\n * (awaiting the result if they want confirmation that the IDBRequest for the\n * corresponding add() call succeeded) and finally invoking commit() when\n * finished.\n */\nclass OpenTransaction<S extends Store, O = StoreTypes[S]> {\n  private tx: IDBTransaction;\n  private store: IDBObjectStore;\n  private txResult: Promise<void>;\n\n  constructor(db: IDBDatabase, private storeName: S) {\n    this.tx = db.transaction(storeName, 'readwrite');\n    this.store = this.tx.objectStore(storeName);\n    this.txResult = new Promise((resolve, reject) => {\n      this.tx.oncomplete = () => resolve();\n      this.tx.onerror = event => {\n        if ((event?.target as IDBRequest).error?.name === 'ConstraintError') {\n          switch (this.storeName) {\n            case DB_BLOB_STORE_NAME: {\n              ++globalCacheStats.duplicateKeyBlob;\n              break;\n            }\n            case DB_TREE_STORE_NAME: {\n              ++globalCacheStats.duplicateKeyTree;\n              break;\n            }\n            case DB_COMMIT_STORE_NAME: {\n              ++globalCacheStats.duplicateKeyCommit;\n              break;\n            }\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      };\n    });\n  }\n\n  add(obj: O): Promise<void> {\n    return new Promise((resolve, reject) => {\n      let request;\n      try {\n        request = this.store.add(obj);\n      } catch (e) {\n        return reject(e);\n      }\n\n      request.onsuccess = _event => resolve();\n      request.onerror = event => {\n        if ((event?.target as IDBRequest).error?.name === 'ConstraintError') {\n          let identifier = 'unknown';\n          if (implementsGitObject(obj)) {\n            identifier = obj.oid;\n          } else {\n            const pr = obj as unknown as NormalizedStackPullRequestFragment;\n            identifier = `${pr.owner}/${pr.name}/${pr.number}`;\n          }\n          // eslint-disable-next-line no-console\n          console.info(`${identifier} already added to store ${this.store.name}`);\n          resolve();\n        } else {\n          reject(event);\n        }\n      };\n    });\n  }\n\n  /**\n   * Returns a Promise that resolves when the underlying IDBTransaction\n   * completes.\n   */\n  commit(): Promise<void> {\n    this.tx.commit();\n    return this.txResult;\n  }\n}\n\nfunction implementsGitObject(obj: unknown): obj is GitObject {\n  return typeof obj === 'object' && obj !== null && 'oid' in obj;\n}\n\n/**\n * Decorates a GitHubClient, but uses IndexedDB as a caching layer.\n */\nexport default class CachingGitHubClient implements GitHubClient {\n  /**\n   * owner and name must be non-null if the getStackPullRequests() will be\n   * used.\n   */\n  constructor(\n    private db: IDBDatabase,\n    private client: GitHubClient,\n    private owner: string | null,\n    private name: string | null,\n  ) {}\n\n  async getCommit(oid: GitObjectID): Promise<Commit | null> {\n    const cachedCommit = await this.getCachedCommit(oid);\n    if (cachedCommit != null) {\n      ++globalCacheStats.cacheCommitReads;\n      return cachedCommit;\n    }\n\n    const commit = await this.client.getCommit(oid);\n    if (commit != null) {\n      // Note that multiple commits may have the same root Tree object (this is\n      // particularly common with stacks created via ghstack), in which case the\n      // underlying IDBTransaction will fail with a ConstraintError if the Tree\n      // already exists in IndexedDB as a result of persisting some other\n      // Commit. (Note that OpenTransaction will swallow this error so the\n      // Promise returned by add() will not reject.)\n      //\n      // There is no great way to avoid this without incurring the cost of an\n      // extra read, which hardly seems worth the cost and is not 100% reliable\n      // because it is subject to TOCTOU races. For the curious,\n      // GitHubClientStats is available to see how often this happens, in\n      // practice.\n      //\n      // Further, we choose not to await the calls to tx.add() (or even invoke\n      // tx.commit()) and return to the caller before the Tree or Commit is\n      // persisted to IndexedDB. This knowingly runs the risk of fetching the\n      // Tree or Commit multiple times.\n      {\n        const tx = new OpenTransaction(this.db, DB_TREE_STORE_NAME);\n        tx.add(commit.tree);\n      }\n      {\n        const tx = new OpenTransaction(this.db, DB_COMMIT_STORE_NAME);\n        const normalizedCommit = normalizeCommit(commit);\n        tx.add(normalizedCommit);\n      }\n    }\n    return commit;\n  }\n\n  getCommitComparison(base: GitObjectID, head: GitObjectID): Promise<CommitComparison | null> {\n    // No caching done for now.\n    return this.client.getCommitComparison(base, head);\n  }\n\n  async getTree(oid: GitObjectID): Promise<Tree | null> {\n    const cachedTree = await this.getCachedTree(oid);\n    if (cachedTree != null) {\n      ++globalCacheStats.cacheTreeReads;\n      return cachedTree;\n    }\n\n    const tree = await this.client.getTree(oid);\n    // Note that if tree is null, it is possible that a Tree with the\n    // GitObjectID comes into existence later, so we should not write a null\n    // entry to IndexedDB.\n    if (tree != null) {\n      // We choose not to await the call to tx.add() (or even invoke\n      // tx.commit()) and return to the caller before the Tree is persisted to\n      // IndexedDB. This knowingly runs the risk of fetching the Tree multiple\n      // times.\n      const tx = new OpenTransaction(this.db, DB_TREE_STORE_NAME);\n      tx.add(tree);\n    }\n    return tree;\n  }\n\n  async getBlob(oid: GitObjectID): Promise<Blob | null> {\n    const cachedBlob = await this.getCachedBlob(oid);\n    if (cachedBlob != null) {\n      ++globalCacheStats.cacheBlobReads;\n      return cachedBlob;\n    }\n\n    const blob = await this.client.getBlob(oid);\n    // Note that if blob is null, it is possible that a Blob with the\n    // GitObjectID comes into existence later, so we should not write a null\n    // entry to IndexedDB.\n    if (blob != null) {\n      // It is imperative that the blob be persisted to IndexedDB before\n      // returning because diffServiceWorker assumes that if it receives a\n      // GitObjectID for a Blob, it will be able to read it from IndexedDB.\n      const tx = new OpenTransaction(this.db, DB_BLOB_STORE_NAME);\n      await tx.add(blob);\n      await tx.commit();\n    }\n    return blob;\n  }\n\n  getPullRequest(pr: number): Promise<PullRequest | null> {\n    // No caching done because the PR could have been updated since the PR data\n    // were requested last.\n    return this.client.getPullRequest(pr);\n  }\n\n  getPullRequests(input: PullsQueryInput): Promise<PullsWithPageInfo | null> {\n    return this.client.getPullRequests(input);\n  }\n\n  getRepoAssignableUsers(query: string | null): Promise<UserFragment[]> {\n    return this.client.getRepoAssignableUsers(query);\n  }\n\n  getRepoLabels(query: string | null): Promise<LabelFragment[]> {\n    return this.client.getRepoLabels(query);\n  }\n\n  // TODO: It should be possible to invalidate these entries because they can\n  // get out of date.\n  async getStackPullRequests(prs: number[]): Promise<StackPullRequestFragment[]> {\n    // First, we try to read as many fragments from the cache as possible.\n    const cachedFragments = await this.getCachedPRFragments(prs);\n\n    // We record each cache miss with the necessary bookkeeping information to\n    // patch up the cachedFragments array.\n    const prsToFetch: number[] = [];\n    const prsToFetchIndex: number[] = [];\n    cachedFragments.forEach((fragment, index) => {\n      if (fragment == null) {\n        prsToFetch.push(prs[index]);\n        prsToFetchIndex.push(index);\n      }\n    });\n\n    // After fetching the cache misses, we write them back into the original\n    // cachedFragments array as well as IndexedDB.\n    const fetchedFragments = await this.client.getStackPullRequests(prsToFetch);\n    const {owner, name} = this.getOwnerAndName();\n\n    const tx = new OpenTransaction(this.db, PR_FRAGMENT_STORE_NAME);\n    await Promise.all(\n      fetchedFragments.map((fragment, index) => {\n        const originalIndex = prsToFetchIndex[index];\n        cachedFragments[originalIndex] = fragment;\n        const normalizedFragment = normalizePullRequestFragment(owner, name, fragment);\n        // Stores a StackPullRequestFragment in IndexedDB, which uses\n        // [owner, name, number] as the key. Of note:\n        // - Unlike blobs and trees where the key is a content hash, the value of a\n        //   StackPullRequestFragment associated with the key can change over time\n        //   because it includes fields like title, updatedAt, etc. It needs to be\n        //   possible to evict/update entries in the table, as appropriate.\n        // - StackPullRequestFragment is defined in StackPullRequestFragment.graphql,\n        //   so if it changes, then this must be updated, as well.\n        return tx.add(normalizedFragment);\n      }),\n    );\n    await tx.commit();\n    return cachedFragments as StackPullRequestFragment[];\n  }\n\n  addComment(id: ID, body: string): Promise<AddCommentMutationData> {\n    return this.client.addComment(id, body);\n  }\n\n  addLabels(input: AddLabelsToLabelableInput): Promise<AddLabelsToLabelableMutationData> {\n    return this.client.addLabels(input);\n  }\n\n  addPullRequestReview(\n    input: AddPullRequestReviewInput,\n  ): Promise<AddPullRequestReviewMutationData> {\n    return this.client.addPullRequestReview(input);\n  }\n\n  addPullRequestReviewComment(\n    input: AddPullRequestReviewCommentInput,\n  ): Promise<AddPullRequestReviewCommentMutationData> {\n    return this.client.addPullRequestReviewComment(input);\n  }\n\n  removeLabels(\n    input: RemoveLabelsFromLabelableInput,\n  ): Promise<RemoveLabelsFromLabelableMutationData> {\n    return this.client.removeLabels(input);\n  }\n\n  requestReviews(input: RequestReviewsInput): Promise<RequestReviewsMutationData> {\n    return this.client.requestReviews(input);\n  }\n\n  submitPullRequestReview(\n    input: SubmitPullRequestReviewInput,\n  ): Promise<SubmitPullRequestReviewMutationData> {\n    return this.client.submitPullRequestReview(input);\n  }\n\n  /**\n   * Attempts to fetch the commit from the local IndexedDB. Returns null if\n   * the commit could not be found in IndexedDB, though it could still exist on\n   * the server.\n   */\n  private getCachedCommit(oid: GitObjectID): Promise<Commit | null> {\n    const tx = this.db.transaction(DB_COMMIT_STORE_NAME, 'readonly');\n    const store = tx.objectStore(DB_COMMIT_STORE_NAME);\n    const request = store.get(oid);\n    return new Promise((resolve, reject) => {\n      request.onsuccess = async _event => {\n        const {result: normalizedCommit} = request;\n        if (normalizedCommit == null) {\n          return resolve(null);\n        }\n\n        const {\n          oid,\n          id,\n          url,\n          message,\n          messageHeadline,\n          messageHeadlineHTML,\n          messageBody,\n          messageBodyHTML,\n          parents,\n          tree_oid,\n          committedDate,\n        } = normalizedCommit;\n        const tree = await this.getTree(tree_oid);\n        if (tree == null) {\n          return reject(`tree ${tree_oid} not found for commit ${oid}`);\n        }\n\n        const commit = {\n          oid: oid as GitObjectID,\n          id: id as ID,\n          url,\n          message: message as string,\n          messageHeadline: messageHeadline as string,\n          messageHeadlineHTML,\n          messageBody,\n          messageBodyHTML,\n          parents: parents as GitObjectID[],\n          tree,\n          committedDate,\n        };\n        resolve(commit);\n      };\n      request.onerror = reject;\n    });\n  }\n\n  /**\n   * Attempts to fetch the tree from the local IndexedDB. Returns null if\n   * the tree could not be found in IndexedDB, though it could still exist on\n   * the server.\n   */\n  private getCachedTree(oid: GitObjectID): Promise<Tree | null> {\n    const tx = this.db.transaction(DB_TREE_STORE_NAME, 'readonly');\n    const store = tx.objectStore(DB_TREE_STORE_NAME);\n    const request = store.get(oid);\n    return new Promise((resolve, reject) => {\n      request.onsuccess = _event => {\n        resolve(request.result ?? null);\n      };\n      request.onerror = reject;\n    });\n  }\n\n  /**\n   * Attempts to fetch the blob from the local IndexedDB. Returns null if\n   * the blob could not be found in IndexedDB, though it could still exist on\n   * the server.\n   */\n  private getCachedBlob(oid: GitObjectID): Promise<Blob | null> {\n    const tx = this.db.transaction(DB_BLOB_STORE_NAME, 'readonly');\n    const store = tx.objectStore(DB_BLOB_STORE_NAME);\n    const request = store.get(oid);\n    return new Promise((resolve, reject) => {\n      request.onsuccess = _event => {\n        resolve(request.result ?? null);\n      };\n      request.onerror = reject;\n    });\n  }\n\n  private getCachedPRFragments(prs: number[]): Promise<Array<StackPullRequestFragment | null>> {\n    const tx = this.db.transaction(PR_FRAGMENT_STORE_NAME, 'readonly');\n    const store = tx.objectStore(PR_FRAGMENT_STORE_NAME);\n    const {owner, name} = this.getOwnerAndName();\n\n    return Promise.all(\n      prs.map(pr => {\n        const key = [owner, name, pr];\n        const request = store.get(key);\n        return new Promise<StackPullRequestFragment | null>((resolve, reject) => {\n          request.onsuccess = _event => {\n            const {result} = request;\n            if (result == null) {\n              resolve(null);\n              return;\n            }\n\n            const {title, updatedAt, state, reviewDecision, headRefOid, numComments} = result;\n            resolve({\n              __typename: 'PullRequest',\n              number: pr,\n              title,\n              updatedAt,\n              state,\n              reviewDecision,\n              headRefOid,\n              comments: {\n                __typename: 'IssueCommentConnection',\n                totalCount: numComments,\n              },\n            });\n          };\n          request.onerror = reject;\n        });\n      }),\n    );\n  }\n\n  private getOwnerAndName(): {owner: string; name: string} {\n    const {owner, name} = this;\n    if (owner == null || name == null) {\n      throw new Error('owner and name must be set in CachingGitHubClient');\n    }\n    return {owner, name};\n  }\n}\n\nconst OPEN_DATABASE_TIMEOUT_MS = 10 * 1000;\n\n/**\n * Returns an open connection to an IDBDatabase that will close if the user\n * logs out (from any window on this origin in the same browser).\n */\nexport function openDatabase(): Promise<IDBDatabase> {\n  return _openDatabase().then(db => {\n    // If we get a \"logout\" event from another window, close the connection in\n    // this window so that the other window can call indexedDB.deleteDatabase()\n    // on all the databases.\n    subscribeToLogout(() => db.close(), /* includeLogoutEventsFromThisWindow */ true);\n    return db;\n  });\n}\n\nasync function _openDatabase(): Promise<IDBDatabase> {\n  const openDatabaseRequest = new Promise((resolve, reject) => {\n    const request = self.indexedDB.open(DB_NAME, DB_VERSION);\n    request.onsuccess = _event => {\n      resolve(request.result);\n    };\n    request.onerror = event => reject(event.target);\n    request.onblocked = event =>\n      // eslint-disable-next-line no-console\n      console.error(\n        `indexedDB blocked while trying to open ${DB_NAME} with version ${DB_VERSION}:`,\n        event,\n      );\n    request.onupgradeneeded = (_event: IDBVersionChangeEvent) => {\n      const {result: db} = request;\n      const commitStore = db.createObjectStore(DB_COMMIT_STORE_NAME, {\n        keyPath: 'oid',\n        autoIncrement: false,\n      });\n      commitStore.createIndex('id', 'id', {unique: false});\n      commitStore.createIndex('url', 'url', {unique: false});\n      commitStore.createIndex('message', 'message', {unique: false});\n      commitStore.createIndex('messageHeadline', 'messageHeadline', {unique: false});\n      commitStore.createIndex('messageHeadlineHTML', 'messageHeadlineHTML', {unique: false});\n      commitStore.createIndex('messageBody', 'messageBody', {unique: false});\n      commitStore.createIndex('messageBodyHTML', 'messageBodyHTML', {unique: false});\n      commitStore.createIndex('parents', 'parents', {unique: false});\n      commitStore.createIndex('tree_oid', 'tree_oid', {unique: false});\n      commitStore.createIndex('committedDate', 'committedDate', {unique: false});\n\n      const treeStore = db.createObjectStore(DB_TREE_STORE_NAME, {\n        keyPath: 'oid',\n        autoIncrement: false,\n      });\n      treeStore.createIndex('id', 'id', {unique: false});\n      treeStore.createIndex('entries', 'entries', {unique: false});\n\n      const blobStore = db.createObjectStore(DB_BLOB_STORE_NAME, {\n        keyPath: 'oid',\n        autoIncrement: false,\n      });\n      blobStore.createIndex('id', 'id', {unique: false});\n      blobStore.createIndex('byteSize', 'byteSize', {unique: false});\n      blobStore.createIndex('isBinary', 'isBinary', {unique: false});\n      blobStore.createIndex('isTruncated', 'isTruncated', {unique: false});\n      blobStore.createIndex('text', 'text', {unique: false});\n\n      const pullRequestFragmentStore = db.createObjectStore(PR_FRAGMENT_STORE_NAME, {\n        keyPath: ['owner', 'name', 'number'],\n        autoIncrement: false,\n      });\n      pullRequestFragmentStore.createIndex('title', 'title', {unique: false});\n      pullRequestFragmentStore.createIndex('updatedAt', 'updatedAt', {unique: false});\n      pullRequestFragmentStore.createIndex('state', 'state', {unique: false});\n      pullRequestFragmentStore.createIndex('headRefOid', 'headRefOid', {unique: false});\n      pullRequestFragmentStore.createIndex('numComments', 'numComments', {unique: false});\n    };\n  });\n\n  // On one occasion, we saw indexedDB.open() fail to fire any of the\n  // expected events (success, error, blocked, upgradeneeded) such that\n  // openDatabaseRequest never settled, causing all queries into\n  // CachingGitHubClient to hang forever. As a safeguard, we leverage\n  // Promise.race() to introduce a timeout so force an explicit failure in this\n  // case.\n  //\n  // Closing all of the Google Chrome browser tabs that were serving content\n  // from the domain and then reopening them appeared to fix the issue.\n  // Presumably there was some sort of active connection that was preventing\n  // open calls from succeeding? Unclear.\n  const database = await rejectAfterTimeout(\n    openDatabaseRequest,\n    OPEN_DATABASE_TIMEOUT_MS,\n    `database failed to open within ${OPEN_DATABASE_TIMEOUT_MS}ms`,\n  );\n  if (database instanceof IDBDatabase) {\n    return database;\n  } else if (database instanceof Error) {\n    throw database;\n  } else {\n    throw Error(`invariant failed, database object was: ${database}`);\n  }\n}\n\nfunction normalizeCommit(commit: Commit): NormalizedCommit {\n  const {\n    oid,\n    id,\n    url,\n    message,\n    messageHeadline,\n    messageHeadlineHTML,\n    messageBody,\n    messageBodyHTML,\n    parents,\n    committedDate,\n  } = commit;\n  return {\n    oid,\n    id,\n    url,\n    message,\n    messageHeadline,\n    messageHeadlineHTML,\n    messageBody,\n    messageBodyHTML,\n    parents,\n    tree_oid: commit.tree.oid,\n    committedDate,\n  };\n}\n\nfunction normalizePullRequestFragment(\n  owner: string,\n  name: string,\n  fragment: StackPullRequestFragment,\n): NormalizedStackPullRequestFragment {\n  const {number, title, updatedAt, state, reviewDecision, headRefOid, comments} = fragment;\n  return {\n    owner,\n    name,\n    number,\n    title,\n    updatedAt,\n    state,\n    reviewDecision,\n    headRefOid,\n    numComments: comments.totalCount,\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {\n  AddCommentMutationData,\n  AddCommentMutationVariables,\n  AddLabelsToLabelableInput,\n  AddLabelsToLabelableMutationData,\n  AddLabelsToLabelableMutationVariables,\n  AddPullRequestReviewInput,\n  AddPullRequestReviewMutationData,\n  AddPullRequestReviewMutationVariables,\n  AddPullRequestReviewCommentInput,\n  AddPullRequestReviewCommentMutationData,\n  AddPullRequestReviewCommentMutationVariables,\n  CommitQueryData,\n  CommitQueryVariables,\n  LabelFragment,\n  PullRequestQueryData,\n  PullRequestQueryVariables,\n  PullsQueryData,\n  PullsQueryVariables,\n  RemoveLabelsFromLabelableInput,\n  RemoveLabelsFromLabelableMutationData,\n  RemoveLabelsFromLabelableMutationVariables,\n  RepoAssignableUsersQueryData,\n  RepoAssignableUsersQueryVariables,\n  RepoLabelsQueryData,\n  RepoLabelsQueryVariables,\n  RequestReviewsInput,\n  RequestReviewsMutationData,\n  RequestReviewsMutationVariables,\n  StackPullRequestFragment,\n  StackPullRequestQueryVariables,\n  StackPullRequestQueryData,\n  SubmitPullRequestReviewInput,\n  SubmitPullRequestReviewMutationData,\n  SubmitPullRequestReviewMutationVariables,\n  TreeQueryData,\n  TreeQueryVariables,\n  UserFragment,\n} from '../generated/graphql';\nimport type GitHubClient from './GitHubClient';\nimport type {PullRequest} from './pullRequestTimelineTypes';\nimport type {PullsQueryInput, PullsWithPageInfo} from './pullsTypes';\nimport type {CommitComparison} from './restApiTypes';\nimport type {Blob, Commit, GitObjectID, ID, Tree} from './types';\n\nimport {\n  AddCommentMutation,\n  AddLabelsToLabelableMutation,\n  AddPullRequestReviewMutation,\n  AddPullRequestReviewCommentMutation,\n  CommitQuery,\n  PullRequestQuery,\n  PullsQuery,\n  RemoveLabelsFromLabelableMutation,\n  RepoAssignableUsersQuery,\n  RepoLabelsQuery,\n  RequestReviewsMutation,\n  StackPullRequestQuery,\n  SubmitPullRequestReviewMutation,\n  TreeQuery,\n} from '../generated/graphql';\nimport {globalCacheStats} from './GitHubClientStats';\nimport {createGraphQLEndpointForHostname} from './gitHubCredentials';\nimport queryGraphQL from './queryGraphQL';\nimport {createRequestHeaders} from 'shared/github/auth';\nimport {notEmpty} from 'shared/utils';\n\nconst MAX_PARENT_COMMITS_TO_FETCH = 10;\nconst NUM_COMMENTS_TO_FETCH = 10;\nconst NUM_TIMELINE_ITEMS_TO_FETCH = 100;\n\n/**\n * Implementation of GitHub client that fetches data via GraphQL.\n */\nexport default class GraphQLGitHubClient implements GitHubClient {\n  private requestHeaders: Record<string, string>;\n  private graphQLEndpoint: string;\n\n  /**\n   * An instance of GraphQLGitHubClient is specific to a GitHub\n   * (hostname, organization, name). To query information about a different\n   * repo, create a new instance with a separate set of parameters.\n   *\n   * @param hostname to use when making API requests. For consumer GitHub, this\n   *   is \"github.com\". For GitHub Enterprise, it should be the hostname for\n   *   the GitHub Enterprise (GHE) account. Note that if the GHE hostname is\n   *   \"foo.example.com\", then \"foo.example.com\" should be passed as the value\n   *   of `hostname` rather than \"api.foo.example.com\".\n   * @param organization name of the GitHub organization to which the repository\n   *   belongs\n   * @param repositoryName name of the GitHub repository within the organization\n   * @param token GitHub Personal Access Token (PAT) to authenticate requests\n   */\n  constructor(\n    private hostname: string,\n    private organization: string,\n    private repositoryName: string,\n    token: string,\n  ) {\n    this.requestHeaders = createRequestHeaders(token);\n    this.graphQLEndpoint = createGraphQLEndpointForHostname(hostname);\n  }\n\n  async getCommit(oid: GitObjectID): Promise<Commit | null> {\n    const variables = {\n      oid,\n      org: this.organization,\n      repo: this.repositoryName,\n      numParents: MAX_PARENT_COMMITS_TO_FETCH,\n    };\n\n    const data = await this.query<CommitQueryData, CommitQueryVariables>(CommitQuery, variables);\n    ++globalCacheStats.gitHubGetCommit;\n    const object = data?.repositoryOwner?.repository?.object;\n\n    if (object?.__typename !== 'Commit') {\n      return null;\n    }\n\n    const {\n      id,\n      oid: resolvedOid,\n      committedDate,\n      url,\n      message,\n      messageBody,\n      messageBodyHTML,\n      messageHeadline,\n      messageHeadlineHTML,\n      tree,\n      parents: rawParents,\n    } = object;\n    // TODO(mbolin): Check rawParents.totalCount against MAX_PARENT_COMMITS_TO_FETCH\n    const parents = (rawParents?.nodes ?? []).map(obj => obj?.oid).filter(notEmpty);\n    return {\n      id,\n      oid: resolvedOid,\n      committedDate,\n      url,\n      message,\n      messageHeadline,\n      messageHeadlineHTML,\n      messageBody,\n      messageBodyHTML,\n      parents,\n      tree: objectToTree(tree),\n    };\n  }\n\n  async getTree(oid: GitObjectID): Promise<Tree | null> {\n    const variables = {\n      org: this.organization,\n      repo: this.repositoryName,\n      oid,\n    };\n\n    const data = await this.query<TreeQueryData, TreeQueryVariables>(TreeQuery, variables);\n    ++globalCacheStats.gitHubGetTree;\n    return objectToTree(data?.repositoryOwner?.repository?.object);\n  }\n\n  async getBlob(oid: GitObjectID): Promise<Blob | null> {\n    // At the time of this writing, the GitHub GraphQL API v4 does not appear to\n    // support fetching the content for binary blobs. For now, we use GitHub's\n    // database API as a workaround.\n    const url = `https://api.${this.hostname}/repos/${encodeURIComponent(\n      this.organization,\n    )}/${encodeURIComponent(this.repositoryName)}/git/blobs/${oid}`;\n    const response = await fetch(url, {\n      headers: this.requestHeaders,\n      method: 'GET',\n    });\n    ++globalCacheStats.gitHubGetBlob;\n\n    // Specifying a well-formed oid for a non-existent blob appears to return a\n    // 403. For good measure, also check for 404, as that would also imply\n    // \"Not found,\" such that null would be the appropriate response rather\n    // than throwing an error.\n    const {status} = response;\n    if (status === 403 || status === 404) {\n      return null;\n    }\n\n    if (!response.ok) {\n      return Promise.reject(`HTTP request error: ${status}: ${response.statusText}`);\n    }\n\n    const json = await response.json();\n    const {content, encoding, sha, size, node_id} = json;\n    const decodedContent = encoding === 'base64' ? window.atob(content) : null;\n    // If we were unable to get the text contents, tag blob as binary.\n    const isBinary = decodedContent == null || isBinaryContent(decodedContent);\n    const text =\n      decodedContent != null && !isBinary\n        ? // Takes the result of the original base64-encoded string (whose\n          // encoded value may contain non-ASCII UTF-8 characters) from the\n          // call to atob() and uses a combination of decodeURIComponent()\n          // and escape() to ensure the non-ASCII characters are decoded\n          // correctly in the resulting JavaScript string.\n          //\n          // https://stackoverflow.com/a/30106551 details the problem and\n          // proposes this code as one of the solutions. Note that this uses\n          // the deprecated escape() function, and while we could use an\n          // alternative implementation that does not use escape(), using\n          // escape() is attractive because it is a built-in and is likely\n          // faster than a solution we could code by hand.\n          decodeURIComponent(escape(decodedContent))\n        : content;\n    return {\n      id: node_id,\n      oid: sha,\n      byteSize: size,\n      isBinary,\n      isTruncated: false,\n      text,\n    };\n  }\n\n  async getCommitComparison(\n    base: GitObjectID,\n    head: GitObjectID,\n  ): Promise<CommitComparison | null> {\n    // The GitHub GraphQL API v4 does not appear to support comparison of two\n    // commits. For now, we use GitHub's REST API `compare` endpoint. The\n    // `basehead` param comprises two parts, `base` and `head`, each of which\n    // can be either a branch name or commit hash.\n    // https://docs.github.com/en/rest/reference/commits#compare-two-commits\n    const url = `https://api.${this.hostname}/repos/${encodeURIComponent(\n      this.organization,\n    )}/${encodeURIComponent(this.repositoryName)}/compare/${base}...${head}`;\n    const response = await fetch(url, {\n      headers: this.requestHeaders,\n      method: 'GET',\n    });\n    ++globalCacheStats.gitHubGetCommitComparison;\n\n    // Specifying an invalid `basehead` returns a 404 Not Found.\n    const {status} = response;\n    if (status === 403 || status === 404) {\n      return null;\n    }\n\n    if (!response.ok) {\n      return Promise.reject(`HTTP request error: ${status}: ${response.statusText}`);\n    }\n\n    const json = await response.json();\n\n    return {\n      mergeBaseCommit: json.merge_base_commit,\n      commits: json.commits,\n    };\n  }\n\n  async getPullRequest(pr: number): Promise<PullRequest | null> {\n    const variables = {\n      owner: this.organization,\n      name: this.repositoryName,\n      pr,\n      numComments: NUM_COMMENTS_TO_FETCH,\n      numTimelineItems: NUM_TIMELINE_ITEMS_TO_FETCH,\n    };\n    const data = await this.query<PullRequestQueryData, PullRequestQueryVariables>(\n      PullRequestQuery,\n      variables,\n    );\n    ++globalCacheStats.gitHubGetPullRequest;\n    return data?.repository?.pullRequest ?? null;\n  }\n\n  async getPullRequests(input: PullsQueryInput): Promise<PullsWithPageInfo | null> {\n    const variables = {\n      ...input,\n      labels: input.labels.length === 0 ? null : input.labels,\n      owner: this.organization,\n      name: this.repositoryName,\n    };\n    const data = await this.query<PullsQueryData, PullsQueryVariables>(PullsQuery, variables);\n    ++globalCacheStats.gitHubGetPullRequests;\n    const repository = data.repository;\n    if (repository == null) {\n      return null;\n    }\n\n    const {nodes, pageInfo, totalCount} = repository.pullRequests;\n    const pullRequests = (nodes ?? []).filter(notEmpty);\n\n    return {pullRequests, pageInfo, totalCount};\n  }\n\n  async getRepoAssignableUsers(query: string | null): Promise<UserFragment[]> {\n    const variables = {\n      owner: this.organization,\n      name: this.repositoryName,\n      query,\n    };\n    const data = await this.query<RepoAssignableUsersQueryData, RepoAssignableUsersQueryVariables>(\n      RepoAssignableUsersQuery,\n      variables,\n    );\n\n    return (data.repository?.assignableUsers?.nodes ?? []).filter(notEmpty);\n  }\n\n  async getRepoLabels(query: string | null): Promise<LabelFragment[]> {\n    const variables = {\n      owner: this.organization,\n      name: this.repositoryName,\n      query,\n    };\n    const data = await this.query<RepoLabelsQueryData, RepoLabelsQueryVariables>(\n      RepoLabelsQuery,\n      variables,\n    );\n\n    return (data.repository?.labels?.nodes ?? []).filter(notEmpty);\n  }\n\n  async getStackPullRequests(prs: number[]): Promise<StackPullRequestFragment[]> {\n    // Note that Repository.pullRequests() in GitHub's GraphQL API supports\n    // a number of filters, but unfortunately giving it a set of PR numbers is\n    // not one of them, so we have to make a separate GraphQL call for each PR.\n    // It would be nice to update this if the API changes.\n    const data = await Promise.all(\n      prs.map(pr =>\n        this.query<StackPullRequestQueryData, StackPullRequestQueryVariables>(\n          StackPullRequestQuery,\n          {\n            owner: this.organization,\n            name: this.repositoryName,\n            pr,\n          },\n        ),\n      ),\n    );\n\n    return data.map(({repository}) => repository?.pullRequest).filter(notEmpty);\n  }\n\n  addComment(id: ID, body: string): Promise<AddCommentMutationData> {\n    const variables = {\n      id,\n      body,\n    };\n    return this.query<AddCommentMutationData, AddCommentMutationVariables>(\n      AddCommentMutation,\n      variables,\n    );\n  }\n\n  addLabels(input: AddLabelsToLabelableInput): Promise<AddLabelsToLabelableMutationData> {\n    return this.query<AddLabelsToLabelableMutationData, AddLabelsToLabelableMutationVariables>(\n      AddLabelsToLabelableMutation,\n      {input},\n    );\n  }\n\n  addPullRequestReview(\n    input: AddPullRequestReviewInput,\n  ): Promise<AddPullRequestReviewMutationData> {\n    return this.query<AddPullRequestReviewMutationData, AddPullRequestReviewMutationVariables>(\n      AddPullRequestReviewMutation,\n      {input},\n    );\n  }\n\n  addPullRequestReviewComment(\n    input: AddPullRequestReviewCommentInput,\n  ): Promise<AddPullRequestReviewCommentMutationData> {\n    return this.query<\n      AddPullRequestReviewCommentMutationData,\n      AddPullRequestReviewCommentMutationVariables\n    >(AddPullRequestReviewCommentMutation, {input});\n  }\n\n  removeLabels(\n    input: RemoveLabelsFromLabelableInput,\n  ): Promise<RemoveLabelsFromLabelableMutationData> {\n    return this.query<\n      RemoveLabelsFromLabelableMutationData,\n      RemoveLabelsFromLabelableMutationVariables\n    >(RemoveLabelsFromLabelableMutation, {input});\n  }\n\n  requestReviews(input: RequestReviewsInput): Promise<RequestReviewsMutationData> {\n    return this.query<RequestReviewsMutationData, RequestReviewsMutationVariables>(\n      RequestReviewsMutation,\n      {input},\n    );\n  }\n\n  submitPullRequestReview(\n    input: SubmitPullRequestReviewInput,\n  ): Promise<SubmitPullRequestReviewMutationData> {\n    return this.query<\n      SubmitPullRequestReviewMutationData,\n      SubmitPullRequestReviewMutationVariables\n    >(SubmitPullRequestReviewMutation, {input});\n  }\n\n  private query<TData, TVariables>(query: string, variables: TVariables): Promise<TData> {\n    return queryGraphQL(query, variables, this.requestHeaders, this.graphQLEndpoint);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction objectToTree(object: any): Tree {\n  const {id, oid, entries} = object;\n  return {\n    id,\n    oid,\n    entries,\n  };\n}\n\n/**\n * https://stackoverflow.com/a/6134127/396304 identifies the logic in Git\n * itself for determining whether a file is binary. It appears the heuristic\n * is \"if there is a NUL in the first 8000 bytes, assume binary,\" so that's\n * what we implement here.\n */\nfunction isBinaryContent(blob: string): boolean {\n  const maxLen = Math.min(8000, blob.length);\n  for (let i = 0; i < maxLen; ++i) {\n    if (blob.charCodeAt(i) === 0) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport default function joinPath(basePath: string, name: string): string {\n  if (basePath !== '') {\n    return `${basePath}/${name}`;\n  } else {\n    return name;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type GitHubClient from './GitHubClient';\nimport type {Diff, DiffWithCommitIDs} from './diffTypes';\nimport type {Commit, Tree, TreeEntry} from './types';\n\nimport joinPath from '../joinPath';\n\n/**\n * Returns null if commit does not have exactly one parent.\n */\nexport async function diffCommitWithParent(\n  commit: Commit,\n  client: GitHubClient,\n): Promise<DiffWithCommitIDs | null> {\n  if (commit.parents.length !== 1) {\n    return null;\n  }\n\n  const parentOid = commit.parents[0];\n  const parentCommit = await client.getCommit(parentOid);\n  if (parentCommit == null) {\n    throw new Error(`parent commit ${parentOid} could not be found`);\n  }\n\n  return diffCommits(parentCommit, commit, client);\n}\n\nexport async function diffCommits(\n  baseCommit: Commit,\n  headCommit: Commit,\n  client: GitHubClient,\n): Promise<DiffWithCommitIDs> {\n  const diff: Diff = [];\n  await diffTree(diff, '', baseCommit.tree, headCommit.tree, client);\n  return {\n    diff,\n    commitIDs: {\n      before: baseCommit.oid,\n      after: headCommit.oid,\n    },\n  };\n}\n\nexport async function diffTree(\n  diff: Diff,\n  basePath: string,\n  baseTree: Tree,\n  headTree: Tree,\n  client: GitHubClient,\n): Promise<void> {\n  const {entries: baseEntries} = baseTree;\n  const {entries: headEntries} = headTree;\n  let baseIndex = 0;\n  let headIndex = 0;\n  const maxBaseIndex = baseEntries.length;\n  const maxHeadIndex = headEntries.length;\n\n  /* eslint-disable no-await-in-loop */\n  while (true) {\n    // We define things as follows so that TypeScript thinks that baseEntry and\n    // headEntry are always non-null, though that is not the case once one of\n    // the lists has been exhausted.\n    const hasBaseEntry = baseIndex < maxBaseIndex;\n    const hasHeadEntry = headIndex < maxHeadIndex;\n    const baseEntry = baseEntries[baseIndex];\n    const headEntry = headEntries[headIndex];\n\n    let compare;\n    if (hasBaseEntry) {\n      if (hasHeadEntry) {\n        compare = compareTreeEntry(baseEntry, headEntry);\n      } else {\n        compare = 'less';\n      }\n    } else if (hasHeadEntry) {\n      compare = 'greater';\n    } else {\n      // We have exhausted both lists.\n      break;\n    }\n\n    switch (compare) {\n      case 'less': {\n        // baseEntry was removed in headTree\n        if (baseEntry.type === 'blob') {\n          diff.push({type: 'remove', basePath, entry: baseEntry});\n        } else {\n          const pathToSubtree = joinPath(basePath, baseEntry.name);\n          await recordChangesInTree(baseEntry, pathToSubtree, 'remove', diff, client);\n        }\n        ++baseIndex;\n        break;\n      }\n      case 'greater': {\n        // headEntry was introduced in headTree\n        if (headEntry.type === 'blob') {\n          diff.push({type: 'add', basePath, entry: headEntry});\n        } else {\n          const pathToSubtree = joinPath(basePath, headEntry.name);\n          await recordChangesInTree(headEntry, pathToSubtree, 'add', diff, client);\n        }\n        ++headIndex;\n        break;\n      }\n      case 'equal': {\n        ++baseIndex;\n        ++headIndex;\n        break;\n      }\n      case 'changed': {\n        const isBaseBlob = baseEntry.type === 'blob';\n        const isHeadBlob = headEntry.type === 'blob';\n        const pathToEntry = joinPath(basePath, baseEntry.name);\n        if (isBaseBlob && isHeadBlob) {\n          diff.push({type: 'modify', basePath, before: baseEntry, after: headEntry});\n        } else if (!isBaseBlob && !isHeadBlob) {\n          const [subdirBaseTree, subdirHeadTree] = await Promise.all([\n            client.getTree(baseEntry.oid),\n            client.getTree(headEntry.oid),\n          ]);\n          if (subdirBaseTree == null) {\n            throw new Error(`could not find Tree ${baseEntry.oid} for ${pathToEntry}`);\n          }\n          if (subdirHeadTree == null) {\n            throw new Error(`could not find Tree ${headEntry.oid} for ${pathToEntry}`);\n          }\n          await diffTree(diff, pathToEntry, subdirBaseTree, subdirHeadTree, client);\n        } else if (isBaseBlob) {\n          // A blob was replaced with a tree.\n          diff.push({type: 'remove', basePath, entry: baseEntry});\n          await recordChangesInTree(headEntry, pathToEntry, 'add', diff, client);\n        } else {\n          // A tree was replaced with a blob.\n          diff.push({type: 'add', basePath, entry: headEntry});\n          await recordChangesInTree(baseEntry, pathToEntry, 'remove', diff, client);\n        }\n        ++baseIndex;\n        ++headIndex;\n        break;\n      }\n    }\n  }\n  /* eslint-enable no-await-in-loop */\n}\n\nasync function recordChangesInTree(\n  treeEntry: TreeEntry,\n  pathToTreeEntry: string,\n  type: 'add' | 'remove',\n  diff: Diff,\n  client: GitHubClient,\n): Promise<void> {\n  const tree = await client.getTree(treeEntry.oid);\n  if (tree == null) {\n    return;\n  }\n\n  for (const entry of tree.entries) {\n    if (entry.type === 'blob') {\n      diff.push({\n        type,\n        basePath: pathToTreeEntry,\n        entry,\n      });\n    } else {\n      const pathToSubtree = joinPath(pathToTreeEntry, entry.name);\n      // Although we may want to consider using Promise.all() to do more\n      // fetching in parallel, for now, we implement things this way to ensure\n      // changes are recorded in depth-first pre-order.\n      // eslint-disable-next-line no-await-in-loop\n      await recordChangesInTree(entry, pathToSubtree, type, diff, client);\n    }\n  }\n}\n\ntype TreeEntryCompare = 'less' | 'greater' | 'equal' | 'changed';\n\nexport function compareTreeEntry(first: TreeEntry, second: TreeEntry): TreeEntryCompare {\n  const {name: name1} = first;\n  const {name: name2} = second;\n  if (name1 < name2) {\n    return 'less';\n  } else if (name1 > name2) {\n    return 'greater';\n  }\n\n  const {oid: oid1, mode: mode1, type: type1} = first;\n  const {oid: oid2, mode: mode2, type: type2} = second;\n  return oid1 === oid2 && mode1 === mode2 && type1 === type2 ? 'equal' : 'changed';\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {CommitChange} from './github/diffTypes';\nimport type {GitHubPullRequestReviewThread} from './github/pullRequestTimelineTypes';\nimport type {TreeEntry} from './github/types';\nimport type {LabelColorOptions} from '@primer/react/lib/Label';\n\nimport {DiffSide, PullRequestReviewDecision} from './generated/graphql';\nimport joinPath from './joinPath';\n\nexport function formatISODate(iso: string, withTime = true): string {\n  const date = new Date(iso);\n  const options: Intl.DateTimeFormatOptions = {\n    weekday: 'short',\n    month: 'short',\n    day: 'numeric',\n  };\n\n  if (withTime) {\n    Object.assign(options, {\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n  }\n\n  return date.toLocaleString(undefined, options);\n}\n\nexport function shortOid(oid: string): string {\n  return oid.slice(0, 8);\n}\n\nexport function versionLabel(index: number): string {\n  return `Version ${index + 1}`;\n}\n\nexport function groupBy<TKey, TValue>(\n  values: TValue[],\n  getKey: (value: TValue) => TKey | null,\n): Map<TKey, TValue[]> {\n  return values.reduce((acc, value) => {\n    const key = getKey(value);\n    if (key != null) {\n      let valuesForKey = acc.get(key);\n      if (valuesForKey == null) {\n        valuesForKey = [];\n        acc.set(key, valuesForKey);\n      }\n      valuesForKey.push(value);\n    }\n    return acc;\n  }, new Map());\n}\n\nexport function groupByDiffSide<TValue>(\n  values: TValue[],\n  getKey: (value: TValue) => DiffSide | null,\n): {[key in DiffSide]: TValue[]} {\n  return values.reduce(\n    (acc, value) => {\n      const key = getKey(value);\n      if (key != null) {\n        const list: TValue[] = acc[key];\n        list.push(value);\n      }\n      return acc;\n    },\n    {\n      [DiffSide.Left]: [],\n      [DiffSide.Right]: [],\n    },\n  );\n}\n\nexport function countCommentsForThreads(threads: GitHubPullRequestReviewThread[]): number {\n  return threads.reduce((acc, thread) => acc + (thread.comments.length ?? 0), 0);\n}\n\nexport function getPathForChange(change: CommitChange): string {\n  switch (change.type) {\n    case 'add':\n      return joinPath(change.basePath, change.entry.name);\n    case 'remove':\n      return joinPath(change.basePath, change.entry.name);\n    case 'modify':\n      return joinPath(change.basePath, change.before.name);\n  }\n}\n\nexport function getTreeEntriesForChange(change: CommitChange): {\n  before: TreeEntry | null;\n  after: TreeEntry | null;\n} {\n  switch (change.type) {\n    case 'add': {\n      return {\n        before: null,\n        after: change.entry,\n      };\n    }\n    case 'remove': {\n      return {\n        before: change.entry,\n        after: null,\n      };\n    }\n    case 'modify': {\n      return {\n        before: change.before,\n        after: change.after,\n      };\n    }\n  }\n}\n\nexport function pullRequestReviewDecisionLabel(reviewDecision: PullRequestReviewDecision): {\n  label: string;\n  variant: LabelColorOptions;\n} {\n  switch (reviewDecision) {\n    case PullRequestReviewDecision.Approved:\n      return {label: 'Approved', variant: 'success'};\n    case PullRequestReviewDecision.ChangesRequested:\n      return {label: 'Changes Requested', variant: 'danger'};\n    case PullRequestReviewDecision.ReviewRequired:\n      return {label: 'Review Required', variant: 'attention'};\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {AddChange, CommitChange, Diff, ModifyChange, RemoveChange} from './diffTypes';\n\nimport {getPathForChange} from '../utils';\nimport {compareTreeEntry} from './diff';\n\n/**\n * The expectation is that each `Diff` is the result of diffing the commit\n * with its base parent.\n */\nexport function diffVersions(beforeDiff: Diff, afterDiff: Diff): Diff {\n  if (!isStrictlyIncreasing(beforeDiff) || !isStrictlyIncreasing(afterDiff)) {\n    throw new Error('diffs are not sorted');\n  }\n\n  const diff: Diff = [];\n  let beforeIndex = 0;\n  let afterIndex = 0;\n  const maxBeforeIndex = beforeDiff.length;\n  const maxAfterIndex = afterDiff.length;\n\n  while (true) {\n    const hasBeforeEntry = beforeIndex < maxBeforeIndex;\n    const hasAfterEntry = afterIndex < maxAfterIndex;\n    const beforeChange = beforeDiff[beforeIndex];\n    const afterChange = afterDiff[afterIndex];\n\n    let pathCompare;\n    if (hasBeforeEntry) {\n      if (hasAfterEntry) {\n        pathCompare = depthFirstPathCompare(\n          getPathForChange(beforeChange),\n          getPathForChange(afterChange),\n        );\n      } else {\n        pathCompare = 'less';\n      }\n    } else if (hasAfterEntry) {\n      pathCompare = 'greater';\n    } else {\n      // We have exhausted both lists.\n      break;\n    }\n\n    switch (pathCompare) {\n      case 'less': {\n        // If change exists only in \"before\", then it was reversed in \"after\"\n        diff.push(createInverse(beforeChange));\n        ++beforeIndex;\n        break;\n      }\n      case 'greater': {\n        // TODO: More accurately handle all cases where change exists only in\n        // \"after\". Returning the change as is may work only when the file\n        // exists in \"before\" and was not modified through a rebase.\n        diff.push(afterChange);\n        ++afterIndex;\n        break;\n      }\n      case 'equal': {\n        // Both changes touched the same file.\n        // If \"before\" is 'add', then \"after\" can only be 'add'.\n        // If \"before\" is 'remove', then \"after\" can only be 'remove' or 'modify'.\n        // If \"before\" is 'modify', then \"after\" can only be 'remove' or 'modify'.\n        switch (beforeChange.type) {\n          case 'add': {\n            const change = computeChangeFromAdd(beforeChange, afterChange);\n            if (change != null) {\n              diff.push(change);\n            }\n            break;\n          }\n          case 'remove': {\n            const change = computeChangeFromRemove(beforeChange, afterChange);\n            if (change != null) {\n              diff.push(change);\n            }\n            break;\n          }\n          case 'modify': {\n            const change = computeChangeFromModify(beforeChange, afterChange);\n            if (change != null) {\n              diff.push(change);\n            }\n            break;\n          }\n        }\n        ++beforeIndex;\n        ++afterIndex;\n        break;\n      }\n    }\n  }\n\n  return diff;\n}\n\n/**\n * Compute the CommitChange for a file between two versions of a commit where\n * the file was marked as an 'add' in the earlier version.\n */\nfunction computeChangeFromAdd(v1: AddChange, v2: CommitChange): CommitChange | null {\n  switch (v2.type) {\n    case 'add': {\n      // If the file was marked as 'add' in both V1 and V2, then the change\n      // between the two, if one exists, should appear as a modification.\n      if (compareTreeEntry(v1.entry, v2.entry) !== 'equal') {\n        return {\n          type: 'modify',\n          basePath: v1.basePath,\n          before: v1.entry,\n          after: v2.entry,\n        };\n      } else {\n        return null;\n      }\n    }\n    case 'modify':\n      // If the change was marked as an 'add' in V1, but now appears as a\n      // 'modify' in V2, then V2 must have been rebased on a new commit where\n      // the file already exists.\n      return {\n        type: 'modify',\n        basePath: v1.basePath,\n        before: v1.entry,\n        after: v2.after,\n      };\n    case 'remove':\n      // If the change was marked as an 'add' in V1, but now appears as a\n      // 'remove' in V2, then V2 must have been rebased on a new commit where\n      // the file already exists.\n      return v2;\n  }\n}\n\n/**\n * Compute the CommitChange for a file between two versions of a commit where\n * the file was marked as a 'remove' in the earlier version.\n */\nfunction computeChangeFromRemove(v1: RemoveChange, v2: CommitChange): CommitChange | null {\n  switch (v2.type) {\n    case 'add':\n      // If the change was marked as a 'remove' in V1, but now appears as an\n      // 'add' in V2, then V2 must have been rebased on a new commit where\n      // the file did not exist.\n      return v2;\n    case 'modify':\n      // If the change was marked as a 'remove' in V1, but now appears as a\n      // 'modify' in V2, then we communicate this as a modification.\n      return {\n        type: 'modify',\n        basePath: v1.basePath,\n        // Using v1.entry does not accurately describe the \"before\" state in\n        // that it did not exist at all in v1. We need to expand the return\n        // type to communicate this edge case.\n        before: v1.entry,\n        after: v2.after,\n      };\n    case 'remove': {\n      if (compareTreeEntry(v1.entry, v2.entry) !== 'equal') {\n        // This is an interesting case where the file was removed in both\n        // versions, but the *version* of the file that was removed changed\n        // between versions (V2 was likely rebased on a change to the file).\n        // We return `null` because the net result is the same, though it might\n        // be worth including some metadata to communicate this edge case.\n        return null;\n      } else {\n        return null;\n      }\n    }\n  }\n}\n\nfunction computeChangeFromModify(v1: ModifyChange, v2: CommitChange): CommitChange | null {\n  switch (v2.type) {\n    case 'add':\n      // If the change was marked as a 'modify' in V1, but now appears as an\n      // 'add' in V2, then V2 must have been rebased on a new commit where\n      // the file did not exist.\n      return v2;\n    case 'modify': {\n      const before = v1.after;\n      const after = v2.after;\n      if (compareTreeEntry(before, after) !== 'equal') {\n        return {\n          type: 'modify',\n          basePath: v1.basePath,\n          before,\n          after,\n        };\n      } else {\n        return null;\n      }\n    }\n    case 'remove':\n      // If the change was marked as a 'modify' in V1, but now appears as a\n      // 'remove' in V2, then we communicate this as a removal.\n      return v2;\n  }\n}\n\nfunction createInverse(change: CommitChange): CommitChange {\n  switch (change.type) {\n    case 'add': {\n      const {basePath, entry} = change;\n      return {type: 'remove', basePath, entry};\n    }\n    case 'remove': {\n      const {basePath, entry} = change;\n      return {type: 'add', basePath, entry};\n    }\n    case 'modify': {\n      const {basePath, before, after} = change;\n      return {type: 'modify', basePath, before: after, after: before};\n    }\n  }\n}\n\ntype Ordering = 'less' | 'equal' | 'greater';\n\nexport function depthFirstPathCompare(a: string, b: string): Ordering {\n  const [aFirst, aRest] = splitOffFirstPathComponent(a);\n  const [bFirst, bRest] = splitOffFirstPathComponent(b);\n  if (aFirst === bFirst) {\n    if (aFirst !== '') {\n      return depthFirstPathCompare(aRest, bRest);\n    } else {\n      return stringCompare(aRest, bRest);\n    }\n  } else {\n    return stringCompare(aFirst, bFirst);\n  }\n}\n\nfunction stringCompare(a: string, b: string): Ordering {\n  if (a < b) {\n    return 'less';\n  } else if (a === b) {\n    return 'equal';\n  } else {\n    return 'greater';\n  }\n}\n\n/**\n * In order to facilitate a depth-first ordering, always consider the\n * lexicographical value of the current path component instead of giving\n * priority to leaves.\n */\nexport function splitOffFirstPathComponent(path: string): [string, string] {\n  const index = path.indexOf('/');\n  if (index === -1) {\n    return [path, ''];\n  } else {\n    return [path.slice(0, index), path.slice(index + 1)];\n  }\n}\n\nexport function isStrictlyIncreasing(diff: Diff): boolean {\n  return diff.every((commit, index) => {\n    if (index === 0) {\n      return true;\n    }\n    const prev = diff[index - 1];\n    const ordering = depthFirstPathCompare(getPathForChange(prev), getPathForChange(commit));\n    return ordering === 'less';\n  });\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst _STACK_SECTION_START = '[//]: # (BEGIN SAPLING FOOTER)';\n\n/**\n * `prefix`: body starts with _STACK_SECTION_START, followed by stack info\n * `hr-suffix`: body ends with horizontal rule, followed by _STACK_SECTION_START\n *   and then stack info\n */\ntype SaplingPullRequestBodyFormat = 'prefix' | 'hr-suffix';\n\nexport function stripStackInfoFromSaplingBodyHTML(\n  bodyHTML: string,\n  format: SaplingPullRequestBodyFormat,\n): string {\n  // This uses the same heuristic as ghstack, though note that it will NOT\n  // work in the presence of sub-bullets.\n  switch (format) {\n    case 'prefix': {\n      const delimiter = '</li>\\n</ul>\\n';\n      const index = bodyHTML.indexOf(delimiter);\n      // Retain any other lists that may be present as part of the commit message\n      return index !== -1 ? bodyHTML.slice(index + delimiter.length) : bodyHTML;\n    }\n    case 'hr-suffix': {\n      const delimiter = '<hr>';\n      const index = bodyHTML.lastIndexOf(delimiter);\n      return index !== -1 ? bodyHTML.slice(0, index) : bodyHTML;\n    }\n  }\n}\n\n/**\n * Sapling's built-in GitHub extension produces pull request bodies that\n * conform to the following rules:\n *\n * - The first line starts with \"Stack created with [Sapling]\". The intention\n *   is that the URL that follows \"[Sapling]\" can change over time\n *   (particularly if someone wants to run their own fork of ReviewStack),\n *   so we only match up to the square brackets.\n * - This is followed by zero or more lines that *do not* start with an\n *   asterisk. This likely contains instructional prose.\n * - There must be a block containing the list of pull requests in the stack.\n *   Each entry is line that starts with an asterisk, though leading\n *   whitespace is allowed so that individual commits for a pull request may\n *   be displayed as sub-bullets in the future.\n *   - For entries other than the current pull request, the asterisk must be\n *     followed by a single space, then #<PR>.\n *   - For the current pull request, there must be some other content before\n *     the #<PR> bit. The default signum is `__->__`, but we do not hardcode\n *     this so we can potentially support a \"better looking\" arrow in the\n *     future.\n *   - Content after the #<PR> is allowed, as we are considering things like\n *     (N commits) when N>1.\n * - The block defining the stack may not contain any empty lines. A sequence\n *   of two newlines (or `\\r\\n\\r\\n`) denotes the end of the stack.\n * - Everything after the two newlines is assumed to be the author's original\n *   commit message.\n */\nexport type SaplingPullRequestBody = {\n  firstLine: string;\n  introduction: string;\n  /**\n   * Each entry is the PR number and the number of commits in the PR\n   * (from Sapling's perspective).\n   */\n  stack: Array<{number: number; numCommits: number}>;\n  format: SaplingPullRequestBodyFormat;\n  currentStackEntry: number;\n  commitMessage: string;\n};\n\nexport function parseSaplingStackBody(body: string): SaplingPullRequestBody | null {\n  const lines = body.split(/\\r?\\n/);\n\n  let firstLine: string;\n  let format: SaplingPullRequestBodyFormat;\n  let index: number;\n  let commitMessage = null;\n\n  // A Sapling stack either starts with the _STACK_SECTION_START pattern, or has\n  // a line starting with _STACK_SECTION_START after a horizontal rule.\n  if (body.startsWith(_STACK_SECTION_START)) {\n    firstLine = lines[0];\n    format = 'prefix';\n    index = 1;\n  } else {\n    const lastHRIndex = lines.lastIndexOf('---');\n    if (lastHRIndex === -1 || !(lines[lastHRIndex + 1] ?? '').startsWith(_STACK_SECTION_START)) {\n      return null;\n    }\n\n    firstLine = lines[lastHRIndex + 1];\n    format = 'hr-suffix';\n    index = lastHRIndex + 2;\n    commitMessage = lines.slice(0, lastHRIndex).join('\\n');\n    if (commitMessage !== '') {\n      commitMessage += '\\n';\n    }\n  }\n\n  const introductionLines = [];\n  const stack: Array<{number: number; numCommits: number}> = [];\n  let inIntroduction = true;\n  const numLines = lines.length;\n  let currentStackEntry = null;\n  while (index < numLines) {\n    const line = lines[index++];\n\n    if (inIntroduction) {\n      if (/^\\*/.test(line)) {\n        inIntroduction = false;\n      } else {\n        introductionLines.push(line);\n        continue;\n      }\n    }\n\n    const match = line.match(/^\\* (.*)#([1-9][0-9]*)(.*)$/);\n    if (match != null) {\n      const numCommitsMatch = match[3].match(/^\\s*\\(([1-9][0-9]*) commits\\).*$/);\n      const numCommits = numCommitsMatch != null ? parseInt(numCommitsMatch[1], 10) : 1;\n      if (match[1] === '__->__ ') {\n        if (currentStackEntry != null) {\n          // Error: more than one currentStackEntry, so reject this body.\n          return null;\n        }\n        currentStackEntry = stack.length;\n      }\n      stack.push({number: parseInt(match[2], 10), numCommits});\n    } else if (/^\\s+\\*/.test(line)) {\n      // This is a sub-bullet. We ignore these for now.\n    } else if (line === '') {\n      // This is the end of the block!\n      break;\n    } else {\n      // This is suspicious: this is not a bulleted item, but there is\n      // supposed be an extra blank line to delimit the commit message.\n      // We'll break out, though.\n      --index;\n      break;\n    }\n  }\n\n  if (currentStackEntry == null) {\n    // Error: missing currentStackEntry, so reject this body.\n    return null;\n  }\n\n  if (commitMessage == null) {\n    commitMessage = lines.slice(index).join('\\n');\n  }\n\n  return {\n    firstLine,\n    introduction: introductionLines.join('\\n'),\n    stack,\n    format,\n    currentStackEntry,\n    commitMessage,\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {StackPullRequestFragment} from './generated/graphql';\nimport type {SaplingPullRequestBody} from './saplingStack';\n\nimport {pullRequestNumbersFromBody} from './ghstackUtils';\nimport {gitHubClient, gitHubPullRequest} from './recoil';\nimport {parseSaplingStackBody} from './saplingStack';\nimport {selector, waitForAll} from 'recoil';\n\ntype StackedPullRequest =\n  | {\n      type: 'sapling';\n      body: SaplingPullRequestBody;\n    }\n  | {\n      type: 'ghstack';\n      stack: number[];\n    }\n  | {\n      type: 'no-stack';\n    };\n\nexport const stackedPullRequest = selector<StackedPullRequest>({\n  key: 'stackedPullRequest',\n  get: ({get}) => {\n    const pullRequest = get(gitHubPullRequest);\n    const body = pullRequest?.body;\n    if (body != null) {\n      const saplingStack = parseSaplingStackBody(body);\n      if (saplingStack != null) {\n        return {type: 'sapling', body: saplingStack};\n      }\n\n      const ghstack = pullRequestNumbersFromBody(body);\n      if (ghstack != null) {\n        return {type: 'ghstack', stack: ghstack};\n      }\n    }\n\n    return {type: 'no-stack'};\n  },\n});\n\nconst stackedPullRequestNumbers = selector<number[]>({\n  key: 'stackedPullRequestNumbers',\n  get: ({get}) => {\n    const stacked = get(stackedPullRequest);\n    switch (stacked.type) {\n      case 'no-stack':\n        return [];\n      case 'sapling': {\n        return stacked.body.stack.map(({number}) => number);\n      }\n      case 'ghstack': {\n        return stacked.stack;\n      }\n    }\n  },\n});\n\nexport const stackedPullRequestFragments = selector<StackPullRequestFragment[]>({\n  key: 'stackedPullRequestFragments',\n  get: ({get}) => {\n    const [client, prs] = get(waitForAll([gitHubClient, stackedPullRequestNumbers]));\n    if (client == null) {\n      return [];\n    }\n    return client.getStackPullRequests(prs);\n  },\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {notEmpty} from 'shared/utils';\n\nexport function pullRequestNumbersFromBody(body: string): number[] | null {\n  if (!body.startsWith('Stack from [ghstack]')) {\n    return null;\n  }\n\n  // Info inserted by ghstack is separated from the rest of the body by a blank line\n  const stackInfo = body.split(/\\r?\\n\\r?\\n/, 1)[0];\n  // The first line is the stack header, the rest is a bulleted list of pull requests\n  const pullRequestLines = stackInfo.split(/\\r?\\n/).slice(1);\n\n  return pullRequestLines\n    .map(line => {\n      // Get the pull request number, which is prefixed by #\n      const match = line.match(/#(\\d+)$/);\n      if (match == null) {\n        return null;\n      }\n      return parseInt(match[1], 10);\n    })\n    .filter(notEmpty);\n}\n\nexport function stripStackInfoFromBodyHTML(bodyHTML: string): string {\n  // The header and list info inserted by ghstack is followed by a newline\n  const delimiter = '</li>\\n</ul>\\n';\n  const index = bodyHTML.indexOf(delimiter);\n  // Retain any other lists that may be present as part of the commit message\n  return index !== -1 ? bodyHTML.slice(index + delimiter.length) : bodyHTML;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {\n  CheckRunFragment,\n  LabelFragment,\n  UserFragment,\n  UserHomePageQueryData,\n  UserHomePageQueryVariables,\n} from './generated/graphql';\nimport type GitHubClient from './github/GitHubClient';\nimport type {CommitChange, DiffCommitIDs, DiffWithCommitIDs} from './github/diffTypes';\nimport type {\n  CommitData,\n  PullRequestCommitItem,\n  PullRequestReviewComment,\n  PullRequestReviewItem,\n  GitHubPullRequestReviewThread,\n  PullRequest,\n} from './github/pullRequestTimelineTypes';\nimport type {PullsQueryInput, PullsWithPageInfo} from './github/pullsTypes';\nimport type {CommitComparison} from './github/restApiTypes';\nimport type {\n  Blob,\n  Commit,\n  DateTime,\n  ForcePushEvent,\n  GitObjectID,\n  ID,\n  Version,\n  VersionCommit,\n} from './github/types';\nimport type {LineToPosition} from './lineToPosition';\nimport type {RecoilValueReadOnly} from 'recoil';\n\nimport {lineToPosition} from './diffServiceClient';\nimport {DiffSide, PullRequestReviewState, UserHomePageQuery} from './generated/graphql';\nimport CachingGitHubClient, {openDatabase} from './github/CachingGitHubClient';\nimport GraphQLGitHubClient from './github/GraphQLGitHubClient';\nimport {diffCommits, diffCommitWithParent} from './github/diff';\nimport {diffVersions} from './github/diffVersions';\nimport {\n  gitHubGraphQLEndpoint,\n  gitHubHostname,\n  gitHubTokenPersistence,\n  gitHubUsername,\n} from './github/gitHubCredentials';\nimport queryGraphQL from './github/queryGraphQL';\nimport {stackedPullRequest, stackedPullRequestFragments} from './stackState';\nimport {getPathForChange, getTreeEntriesForChange, groupBy, groupByDiffSide} from './utils';\nimport {atom, atomFamily, constSelector, selector, selectorFamily, waitForAll} from 'recoil';\nimport {createRequestHeaders} from 'shared/github/auth';\nimport {notEmpty} from 'shared/utils';\n\nexport type GitHubOrgAndRepo = {\n  org: string;\n  repo: string;\n};\n\nexport const gitHubOrgAndRepo = atom<GitHubOrgAndRepo | null>({\n  key: 'gitHubOrgAndRepo',\n  default: null,\n});\n\nexport const gitHubCommitID = atom<GitObjectID | null>({\n  key: 'gitHubCommitID',\n  default: null,\n});\n\nexport const gitHubPullRequestID = atom<number | null>({\n  key: 'gitHubPullRequestID',\n  default: null,\n});\n\nexport const gitHubCurrentCommit = selector<Commit | null>({\n  key: 'gitHubCurrentCommit',\n  get: ({get}) => {\n    const client = get(gitHubClient);\n    const oid = get(gitHubCommitID);\n    if (client != null && oid != null) {\n      return client.getCommit(oid);\n    } else {\n      return null;\n    }\n  },\n});\n\nexport type GitHubPullRequestParams = {\n  orgAndRepo: GitHubOrgAndRepo;\n  number: number;\n};\n\n/** Promise that never settles. */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst never: Promise<PullRequest | null> = new Promise(() => {});\n\nexport const gitHubPullRequestForParams = atomFamily<PullRequest | null, GitHubPullRequestParams>({\n  key: 'gitHubPullRequestForParams',\n  default: selectorFamily({\n    key: 'gitHubPullRequestForParams/Default',\n    get:\n      ({orgAndRepo, number}) =>\n      ({get}) => {\n        const client = get(gitHubClientForParams(orgAndRepo));\n        // If client is null, return a Promise that never settles because we\n        // use a return value of `null` to mean \"Not found.\"\n        return client != null ? client.getPullRequest(number) : never;\n      },\n  }),\n});\n\n// The GitHubClient may have mutable state for things like an open connection to\n// an IDBDatabase.\nconst ALLOW_MUTABILITY_FOR_GITHUB_CLIENT = true;\n\nconst gitHubClientForParams = selectorFamily<GitHubClient | null, GitHubOrgAndRepo>({\n  key: 'gitHubClientForParams',\n  get:\n    ({org, repo}) =>\n    ({get}) => {\n      const token = get(gitHubTokenPersistence);\n      if (token != null) {\n        const db = get(databaseConnection);\n        const hostname = get(gitHubHostname);\n        return createClient(db, token, hostname, org, repo);\n      } else {\n        return null;\n      }\n    },\n  dangerouslyAllowMutability: ALLOW_MUTABILITY_FOR_GITHUB_CLIENT,\n});\n\nexport const gitHubPullRequest = atom<PullRequest | null>({\n  key: 'gitHubPullRequest',\n  default: null,\n});\n\nexport const gitHubPullRequestViewerDidAuthor = selector<boolean>({\n  key: 'gitHubPullRequestViewerDidAuthor',\n  get: ({get}) => {\n    const pullRequest = get(gitHubPullRequest);\n    return pullRequest?.viewerDidAuthor ?? false;\n  },\n});\n\nexport const gitHubPullRequestBaseRef = selector<GitObjectID | null>({\n  key: 'gitHubPullRequestBaseRef',\n  get: ({get}) => {\n    const pullRequest = get(gitHubPullRequest);\n    return pullRequest?.baseRefOid ?? null;\n  },\n});\n\n/**\n * A PR should have at most a single pending review per user. Any inline\n * comments made will either create a new pending review or be added to the\n * existing one.\n */\nexport const gitHubPullRequestPendingReviewID = selector<ID | null>({\n  key: 'gitHubPullRequestPendingReviewID',\n  get: ({get}) => {\n    const pullRequest = get(gitHubPullRequest);\n    const pendingReview = (pullRequest?.timelineItems?.nodes ?? []).find(\n      item =>\n        item?.__typename === 'PullRequestReview' && item.state === PullRequestReviewState.Pending,\n    ) as PullRequestReviewItem;\n    return pendingReview?.id ?? null;\n  },\n});\n\nexport const gitHubPullRequestCommits = selector<CommitData[]>({\n  key: 'gitHubPullRequestCommits',\n  get: ({get}) => {\n    const pullRequest = get(gitHubPullRequest);\n    return (pullRequest?.timelineItems?.nodes ?? [])\n      .map(item => {\n        if (item?.__typename === 'PullRequestCommit') {\n          const commit = item as PullRequestCommitItem;\n          return commit.commit;\n        } else {\n          return null;\n        }\n      })\n      .filter(notEmpty);\n  },\n});\n\nexport const gitHubPullRequestForcePushes = selector<ForcePushEvent[]>({\n  key: 'gitHubPullRequestForcePushes',\n  get: ({get}) => {\n    const pullRequest = get(gitHubPullRequest);\n    return (pullRequest?.timelineItems?.nodes ?? [])\n      .map(item => {\n        if (item?.__typename === 'HeadRefForcePushedEvent') {\n          const {createdAt, beforeCommit, afterCommit} = item;\n          if (createdAt == null || beforeCommit == null || afterCommit == null) {\n            return null;\n          }\n          return {\n            createdAt,\n            beforeCommit: beforeCommit.oid,\n            beforeCommittedDate: beforeCommit.committedDate,\n            beforeTree: beforeCommit.tree.oid,\n            beforeParents: (beforeCommit.parents?.nodes ?? [])\n              .filter(notEmpty)\n              .map(node => node.oid),\n            afterCommit: afterCommit.oid,\n            afterCommittedDate: beforeCommit.committedDate,\n            afterTree: afterCommit.tree.oid,\n            afterParents: (afterCommit.parents?.nodes ?? []).filter(notEmpty).map(node => node.oid),\n          };\n        } else {\n          return null;\n        }\n      })\n      .filter(notEmpty);\n  },\n});\n\n/**\n * For a given commit in a PR, get its merge base commit with the main branch,\n * as well as all commits on the branch from the base commit to the given head.\n * Used primarily to construct a Version with all of its associated commits.\n */\nexport const gitHubPullRequestVersionBaseAndCommits = selectorFamily<\n  {\n    baseParent: {oid: GitObjectID; committedDate: DateTime} | null;\n    commits: VersionCommit[];\n  },\n  GitObjectID\n>({\n  key: 'gitHubPullRequestVersionBaseAndCommits',\n  get:\n    head =>\n    ({get}) => {\n      const base = get(gitHubPullRequestBaseRef);\n      if (base == null) {\n        return {\n          baseParent: null,\n          commits: [],\n        };\n      }\n\n      const commitComparison = get(gitHubCommitComparison({base, head}));\n      if (commitComparison == null) {\n        return {\n          baseParent: null,\n          commits: [],\n        };\n      }\n\n      const {mergeBaseCommit, commits} = commitComparison;\n      return {\n        baseParent: {\n          oid: mergeBaseCommit.sha,\n          committedDate: mergeBaseCommit.commit.committer.date,\n        },\n        commits: commits.map(({author, commit, parents, sha}) => ({\n          author: author?.login ?? commit.author.name,\n          commit: sha,\n          committedDate: commit.committer.date,\n          title: commit.message.split('\\n', 1)[0] ?? '',\n          parents: parents.map(({sha}) => sha),\n          version: null,\n        })),\n      };\n    },\n});\n\n/**\n * For a given commit in a PR, get its merge base commit with the main branch.\n * Used to identify the appropriate base for comparison when generating diffs\n * across versions.\n */\nexport const gitHubPullRequestCommitBaseParent = selectorFamily<\n  {oid: GitObjectID; committedDate: DateTime} | null,\n  GitObjectID\n>({\n  key: 'gitHubPullRequestCommitBaseParent',\n  get:\n    commitID =>\n    ({get}) => {\n      const commitComparison = get(gitHubPullRequestVersionBaseAndCommits(commitID));\n      return commitComparison?.baseParent;\n    },\n});\n\nexport const gitHubPullRequestVersions = selector<Version[]>({\n  key: 'gitHubPullRequestVersions',\n  get: ({get}) => {\n    const [forcePushes, commits] = get(\n      waitForAll([gitHubPullRequestForcePushes, gitHubPullRequestCommits]),\n    );\n\n    // The \"before\" commit should represent the head of the latest version of\n    // the PR immediately prior to the force push.\n    const versions = forcePushes.map(({beforeCommit, beforeCommittedDate}) => ({\n      oid: beforeCommit,\n      committedDate: beforeCommittedDate,\n    }));\n\n    // The latest commit is the head of the latest version. Theoretically, it\n    // should always exist.\n    const latestCommit = commits[commits.length - 1];\n    if (latestCommit != null) {\n      versions.push(latestCommit);\n    }\n\n    // For now, we special-case Sapling stacks as each version may contain more\n    // than one commit.\n    const stackedPR = get(stackedPullRequest);\n    if (stackedPR.type === 'sapling') {\n      const fragments = get(stackedPullRequestFragments);\n      if (fragments.length !== stackedPR.body.stack.length) {\n        // This is unexpected: bail out.\n        return [];\n      }\n      versions.reverse();\n\n      const index = stackedPR.body.currentStackEntry;\n      const parentFragment = fragments[index + 1];\n\n      const saplingStack = stackedPR.body;\n\n      let cumulativeCommits = 0;\n      let previous = commits.length;\n\n      const pr_versions = versions.map(version => {\n        const {numCommits} = saplingStack.stack[saplingStack.currentStackEntry];\n        cumulativeCommits += numCommits;\n\n        // We need to separate the commits that were designed to be part of this\n        // PR from the ones below in the stack.\n        const start = commits.length - cumulativeCommits;\n        const commitFragmentsForPRVersion = commits.slice(start, previous);\n        previous = start;\n\n        // Find gitHubCommit() for each.\n        const commitsForPRVersion = get(\n          waitForAll(commitFragmentsForPRVersion.map(c => gitHubCommit(c.oid))),\n        ) as Commit[];\n\n        const versionCommits = [];\n        for (let i = 0; i < forcePushes.length; i++) {\n          const f = forcePushes[i];\n          if (f.beforeCommit === version.oid) {\n            break;\n          }\n          versionCommits.push({\n            author: null,\n            commit: f.beforeCommit,\n            committedDate: f.beforeCommittedDate,\n            title: 'Version ' + (i + 1),\n            parents: f.beforeParents,\n            version: i + 1,\n          });\n        }\n\n        commitsForPRVersion.forEach(c =>\n          versionCommits.push({\n            author: null,\n            commit: c.oid,\n            committedDate: c.committedDate,\n            title: c.messageHeadline,\n            parents: c.parents,\n            version: versionCommits.length + 1,\n          }),\n        );\n\n        let headCommittedDate = null;\n        const headCommit = commitsForPRVersion[commitsForPRVersion.length - 1];\n        if (headCommit == null) {\n          headCommittedDate = latestCommit.committedDate;\n        } else {\n          headCommittedDate = headCommit.committedDate;\n        }\n\n        let baseParent = null;\n        let baseParentCommittedDate = null;\n        if (parentFragment == null) {\n          // the first PR in stack case\n          if (commitsForPRVersion.length > 0) {\n            baseParent = commitsForPRVersion[0].parents[0];\n          } else if (forcePushes.length > 0) {\n            baseParent = forcePushes[0].beforeParents[0];\n            baseParentCommittedDate = forcePushes[0].beforeCommittedDate;\n          }\n        } else {\n          // the not first PR in stack case\n          baseParent = parentFragment.headRefOid;\n        }\n\n        return {\n          headCommit: version.oid,\n          headCommittedDate,\n          baseParent,\n          baseParentCommittedDate,\n          commits: versionCommits,\n        };\n      });\n\n      pr_versions.reverse();\n      return pr_versions;\n    }\n\n    // Get the base parent and all commits for each version branch.\n    const allVersionBaseAndCommits = get(\n      waitForAll(versions.map(version => gitHubPullRequestVersionBaseAndCommits(version.oid))),\n    );\n\n    return allVersionBaseAndCommits\n      .map(({baseParent, commits}) => {\n        const versionHead = commits[commits.length - 1];\n        if (versionHead == null) {\n          return null;\n        }\n\n        return {\n          headCommit: versionHead.commit,\n          headCommittedDate: versionHead.committedDate,\n          baseParent: baseParent?.oid ?? null,\n          baseParentCommittedDate: baseParent?.committedDate ?? null,\n          commits,\n        };\n      })\n      .filter(notEmpty);\n  },\n});\n\nconst gitHubPullRequestVersionIndexesByCommit = selector<Map<GitObjectID, number>>({\n  key: 'gitHubPullRequestVersionIndexesByCommit',\n  get: ({get}) => {\n    const versions = get(gitHubPullRequestVersions);\n    const versionIndexByCommit = new Map();\n    versions.forEach(({commits}, index) => {\n      commits.forEach(commit => {\n        versionIndexByCommit.set(commit.commit, index);\n      });\n    });\n    return versionIndexByCommit;\n  },\n});\n\nexport const gitHubPullRequestVersionIndexForCommit = selectorFamily<number | null, GitObjectID>({\n  key: 'gitHubPullRequestVersionIndexForCommit',\n  get:\n    commit =>\n    ({get}) => {\n      const versionIndexesByCommit = get(gitHubPullRequestVersionIndexesByCommit);\n      return versionIndexesByCommit.get(commit) ?? null;\n    },\n});\n\nexport const gitHubPullRequestReviewThreads = selector<GitHubPullRequestReviewThread[]>({\n  key: 'gitHubPullRequestReviewThreads',\n  get: ({get}) => {\n    const pullRequest = get(gitHubPullRequest);\n    return (pullRequest?.reviewThreads.nodes ?? []).filter(notEmpty).map(reviewThread => {\n      const {originalLine, diffSide, comments} = reviewThread;\n      const normalizedComments = (comments?.nodes ?? [])\n        .map(comment => {\n          if (comment == null) {\n            return null;\n          }\n\n          const {id, author, originalCommit, path, state, bodyHTML} = comment;\n          const reviewThreadComment = {\n            id,\n            author: author ?? null,\n            originalCommit,\n            path,\n            state,\n            bodyHTML,\n          };\n          return reviewThreadComment;\n        })\n        .filter(notEmpty);\n      const firstCommentID = normalizedComments[0].id;\n      return {\n        firstCommentID,\n        originalLine,\n        diffSide,\n        comments: normalizedComments,\n      };\n    });\n  },\n});\n\nexport const gitHubPullRequestReviewThreadsByFirstCommentID = selector<{\n  [id: ID]: GitHubPullRequestReviewThread;\n}>({\n  key: 'gitHubPullRequestReviewThreadsByFirstCommentID',\n  get: ({get}) => {\n    return Object.fromEntries(\n      get(gitHubPullRequestReviewThreads).map(thread => [thread.firstCommentID, thread]),\n    );\n  },\n});\n\nconst gitHubPullRequestReviewCommentsByID = selector<Map<ID, PullRequestReviewComment>>({\n  key: 'gitHubPullRequestReviewCommentsByID',\n  get: ({get}) => {\n    const reviewThreads = get(gitHubPullRequestReviewThreads);\n    const commentsByID = new Map();\n    reviewThreads.forEach(({originalLine, comments}) => {\n      comments.forEach(comment => {\n        const {id} = comment;\n        if (id != null) {\n          commentsByID.set(id, {originalLine, comment});\n        }\n      });\n    });\n    return commentsByID;\n  },\n});\n\nexport const gitHubPullRequestCommentForID = selectorFamily<PullRequestReviewComment | null, ID>({\n  key: 'gitHubPullRequestCommentForID',\n  get:\n    id =>\n    ({get}) => {\n      const commentsByID = get(gitHubPullRequestReviewCommentsByID);\n      return commentsByID.get(id) ?? null;\n    },\n});\n\nexport const gitHubPullRequestJumpToCommentID = atomFamily<boolean, ID>({\n  key: 'gitHubPullRequestJumpToCommentID',\n  default: false,\n});\n\nexport const gitHubPullRequestNewCommentInputCell = atom<{\n  lineNumber: number;\n  path: string;\n  side: DiffSide;\n} | null>({\n  key: 'gitHubPullRequestNewCommentInputCell',\n  default: null,\n});\n\nconst gitHubPullRequestNewCommentInputShownForPath = selectorFamily<boolean, string>({\n  key: 'gitHubPullRequestNewCommentInputShownForPath',\n  get:\n    path =>\n    ({get}) => {\n      const cell = get(gitHubPullRequestNewCommentInputCell);\n      return cell?.path === path;\n    },\n  cachePolicy_UNSTABLE: {eviction: 'most-recent'},\n});\n\nexport const gitHubPullRequestNewCommentInputShown = selectorFamily<\n  boolean,\n  {\n    lineNumber: number | null;\n    path: string;\n    side: DiffSide;\n  }\n>({\n  key: 'gitHubPullRequestNewCommentInputShown',\n  get:\n    ({lineNumber, path, side}) =>\n    ({get}) => {\n      const shownForPath = get(gitHubPullRequestNewCommentInputShownForPath(path));\n      if (!shownForPath) {\n        return false;\n      }\n\n      const cell = get(gitHubPullRequestNewCommentInputCell);\n      return cell?.lineNumber === lineNumber && cell?.side === side;\n    },\n  cachePolicy_UNSTABLE: {eviction: 'most-recent'},\n});\n\nexport type NewCommentInputCallbacks = {\n  onShowNewCommentInput: (event: React.MouseEvent<HTMLTableElement>) => void;\n  onResetNewCommentInput: () => void;\n};\n\nexport const gitHubPullRequestNewCommentInputCallbacks = selector<NewCommentInputCallbacks>({\n  key: 'gitHubPullRequestNewCommentInputCallbacks',\n  get: ({getCallback}) => {\n    const onShowNewCommentInput = getCallback(\n      ({set, snapshot}) =>\n        (event: React.MouseEvent<HTMLTableElement>) => {\n          const {target} = event;\n          if (!(target instanceof HTMLTableCellElement)) {\n            return;\n          }\n\n          const {lineNumber: _lineNumber, path, side: _side} = target.dataset;\n          if (_lineNumber == null || path == null || _side == null) {\n            return;\n          }\n\n          const lineNumber = parseInt(_lineNumber, 10);\n          const side =\n            _side === DiffSide.Left\n              ? DiffSide.Left\n              : _side === DiffSide.Right\n              ? DiffSide.Right\n              : null;\n          if (isNaN(lineNumber) || side == null) {\n            return;\n          }\n\n          const canAddCommentLoadable = snapshot.getLoadable(\n            gitHubPullRequestCanAddComment({lineNumber, path, side}),\n          );\n          if (canAddCommentLoadable.state !== 'hasValue' || !canAddCommentLoadable.contents) {\n            return;\n          }\n\n          set(gitHubPullRequestNewCommentInputCell, {path, lineNumber, side});\n        },\n    );\n    const onResetNewCommentInput = getCallback(({reset}) => () => {\n      reset(gitHubPullRequestNewCommentInputCell);\n    });\n\n    return {onShowNewCommentInput, onResetNewCommentInput};\n  },\n});\n\nexport const gitHubDiffNewCommentInputCallbacks = selector<NewCommentInputCallbacks | null>({\n  key: 'gitHubDiffNewCommentInputCallbacks',\n  get: ({get}) => {\n    const pullRequest = get(gitHubPullRequest);\n    if (pullRequest != null) {\n      return get(gitHubPullRequestNewCommentInputCallbacks);\n    }\n    return null;\n  },\n});\n\n/**\n * In order to add a comment to a line of a pull request commit:\n * - The line must have a valid \"position\" value (i.e., the line must appear in\n *   the canonical diff for the commit, compared against its base parent).\n * - The commit must be part of the latest version (i.e., the commit must\n *   currently exist in the pull request).\n */\nexport const gitHubPullRequestCanAddComment = selectorFamily<\n  boolean,\n  {lineNumber: number | null; path: string; side: DiffSide}\n>({\n  key: 'gitHubPullRequestCanAddComment',\n  get:\n    ({lineNumber, path, side}) =>\n    ({get}) => {\n      const pullRequest = get(gitHubPullRequest);\n      if (pullRequest == null || lineNumber == null) {\n        return false;\n      }\n\n      const [position, versions, selectedVersionIndex] = get(\n        waitForAll([\n          gitHubPullRequestPositionForLine({line: lineNumber, path, side}),\n          gitHubPullRequestVersions,\n          gitHubPullRequestSelectedVersionIndex,\n        ]),\n      );\n      return position != null && selectedVersionIndex === versions.length - 1;\n    },\n});\n\nexport const gitHubPullRequestThreadsByCommit = selector<\n  Map<GitObjectID, GitHubPullRequestReviewThread[]>\n>({\n  key: 'gitHubPullRequestThreadsByCommit',\n  get: ({get}) => {\n    const reviewThreads = get(gitHubPullRequestReviewThreads);\n    return groupBy(reviewThreads, thread => {\n      // All comments in the thread should have the same original commit as the first\n      const firstComment = thread.comments[0];\n      return firstComment?.originalCommit?.oid ?? null;\n    });\n  },\n});\n\nexport const gitHubPullRequestThreadsForCommit = selectorFamily<\n  GitHubPullRequestReviewThread[],\n  GitObjectID\n>({\n  key: 'gitHubPullRequestThreadsForCommit',\n  get:\n    (commitID: GitObjectID) =>\n    ({get}) => {\n      const reviewThreadsByCommit = get(gitHubPullRequestThreadsByCommit);\n      return reviewThreadsByCommit.get(commitID) ?? [];\n    },\n});\n\nexport const gitHubPullRequestThreadsForCommitFile = selectorFamily<\n  GitHubPullRequestReviewThread[],\n  {commitID: GitObjectID | null; path: string}\n>({\n  key: 'gitHubPullRequestThreadsForCommitFile',\n  get:\n    ({commitID, path}) =>\n    ({get}) => {\n      if (commitID == null) {\n        return [];\n      }\n\n      const threadsForCommit = get(gitHubPullRequestThreadsForCommit(commitID));\n      return threadsForCommit.filter(thread => {\n        // All comments in the thread should have the same path as the first\n        const threadPath = thread.comments[0]?.path;\n        return threadPath === path;\n      });\n    },\n});\n\n/**\n * `DiffSide` refers to the side of the split diff view that the thread appears\n * on. For a given commit, in the context of a pull request, the `Left` side is\n * the base commit and includes threads attached to deletions that would appear\n * in red. The `Right` side is the commit itself and includes threads attached\n * to additions that appear in green or unchanged lines that appear in white.\n */\nconst gitHubPullRequestThreadsForCommitFileBySide = selectorFamily<\n  {[key in DiffSide]: GitHubPullRequestReviewThread[]} | null,\n  {commitID: GitObjectID | null; path: string}\n>({\n  key: 'gitHubPullRequestThreadsForCommitFileBySide',\n  get:\n    ({commitID, path}) =>\n    ({get}) => {\n      if (commitID == null) {\n        return null;\n      }\n      const threadsForFile = get(gitHubPullRequestThreadsForCommitFile({commitID, path}));\n      return groupByDiffSide(threadsForFile, thread => thread.diffSide);\n    },\n});\n\n/**\n * Get the appropriate threads for each side of the diff for a pull request,\n * depending on what is being compared as \"before\" and \"after\".\n */\nexport const gitHubPullRequestThreadsForDiffFile = selectorFamily<\n  {[key in DiffSide]: GitHubPullRequestReviewThread[]} | null,\n  string\n>({\n  key: 'gitHubPullRequestThreadsForDiffFile',\n  get:\n    path =>\n    ({get}) => {\n      const {beforeCommitID, afterCommitID} = get(gitHubPullRequestComparableVersions);\n      const afterThreads = get(\n        gitHubPullRequestThreadsForCommitFileBySide({commitID: afterCommitID, path}),\n      );\n\n      // If there is no explicit \"before\" (i.e., the \"after\" is being compared\n      // against its base), show the \"after\" threads as they are, according to\n      // their original diff sides.\n      if (beforeCommitID == null) {\n        return afterThreads;\n      }\n\n      const beforeThreads = get(\n        gitHubPullRequestThreadsForCommitFileBySide({commitID: beforeCommitID, path}),\n      );\n\n      // If both \"before\" and \"after\" are explicitly selected, then both commits\n      // themselves are being shown (i.e., we are comparing two `Right` sides).\n      // Therefore, we should display the threads that are attached to the\n      // `Right` sides of their respective diffs.\n      return {\n        [DiffSide.Left]: beforeThreads?.[DiffSide.Right] ?? [],\n        [DiffSide.Right]: afterThreads?.[DiffSide.Right] ?? [],\n      };\n    },\n});\n\n/**\n * Get the appropriate threads for each side of the diff for a pull request,\n * depending on what is being compared as \"before\" and \"after\".\n */\nexport const gitHubThreadsForDiffFile = selectorFamily<\n  {[key in DiffSide]: GitHubPullRequestReviewThread[]} | null,\n  string\n>({\n  key: 'gitHubThreadsForDiffFile',\n  get:\n    path =>\n    ({get}) => {\n      const pullRequest = get(gitHubPullRequest);\n      if (pullRequest != null) {\n        return get(gitHubPullRequestThreadsForDiffFile(path));\n      }\n\n      return null;\n    },\n});\n\nexport const gitHubPullRequestSelectedVersionIndex = atom<number>({\n  key: 'gitHubPullRequestSelectedVersionIndex',\n  default: selector<number>({\n    key: 'gitHubPullRequestSelectedVersionIndex/default',\n    get: ({get}) => {\n      const versions = get(gitHubPullRequestVersions);\n\n      if (versions.length === 0) {\n        throw new Error('no versions available for the pull request');\n      }\n\n      return versions.length - 1;\n    },\n  }),\n});\n\nexport const gitHubPullRequestIsViewingLatest = selector<boolean>({\n  key: 'gitHubPullRequestIsViewingLatest',\n  get: ({get}) => {\n    const [versions, selectedVersionIndex, comparableVersions] = get(\n      waitForAll([\n        gitHubPullRequestVersions,\n        gitHubPullRequestSelectedVersionIndex,\n        gitHubPullRequestComparableVersions,\n      ]),\n    );\n    const {beforeCommitID, afterCommitID} = comparableVersions;\n    const latestVersionIndex = versions.length - 1;\n    const latestVersion = versions[latestVersionIndex];\n    const isLatestVersion = selectedVersionIndex === latestVersionIndex;\n    const isLatestCommit = beforeCommitID == null && afterCommitID == latestVersion.headCommit;\n\n    return isLatestVersion && isLatestCommit;\n  },\n});\n\n/**\n * When there is no \"before\" explicitly selected, the view shows the Diff for\n * the selected \"after\" version compared to its parent.\n */\nexport type ComparableVersions = {\n  beforeCommitID: GitObjectID | null;\n  afterCommitID: GitObjectID;\n};\n\nexport const gitHubPullRequestComparableVersions = atom<ComparableVersions>({\n  key: 'gitHubPullRequestComparableVersions',\n  default: selector<ComparableVersions>({\n    key: 'gitHubPullRequestComparableVersions/default',\n    get: ({get}) => {\n      const [versions, selectedVersionIndex] = get(\n        waitForAll([gitHubPullRequestVersions, gitHubPullRequestSelectedVersionIndex]),\n      );\n      const version = versions[selectedVersionIndex];\n\n      return {\n        beforeCommitID: version.baseParent,\n        afterCommitID: version.headCommit,\n      };\n    },\n  }),\n});\n\nexport const gitHubPullRequestSelectedVersionCommits = selector<VersionCommit[]>({\n  key: 'gitHubPullRequestSelectedVersionCommits',\n  get: ({get}) => {\n    const [versions, selectedVersionIndex] = get(\n      waitForAll([gitHubPullRequestVersions, gitHubPullRequestSelectedVersionIndex]),\n    );\n    return versions[selectedVersionIndex]?.commits ?? [];\n  },\n});\n\n/**\n * Returns the appropriate Diff for the current pull request. By default, it\n * shows the Diff for the head commit of the PR compared to its parent, though\n * if the user has selected a pair of versions via the radio buttons, it returns\n * the Diff between those versions.\n */\nexport const gitHubPullRequestVersionDiff = selector<DiffWithCommitIDs | null>({\n  key: 'gitHubPullRequestVersionDiff',\n  get: ({get}) => {\n    const [client, comparableVersions] = get(\n      waitForAll([gitHubClient, gitHubPullRequestComparableVersions]),\n    );\n    if (client == null) {\n      return null;\n    }\n\n    const {beforeCommitID, afterCommitID} = comparableVersions;\n    const afterBaseCommitID = get(gitHubPullRequestCommitBaseParent(afterCommitID))?.oid;\n    if (beforeCommitID != null) {\n      const beforeBaseCommitID = get(gitHubPullRequestCommitBaseParent(beforeCommitID))?.oid;\n      if (beforeBaseCommitID != null && afterBaseCommitID != null) {\n        // If the base parents are the same, then there was no rebase and the\n        // two versions can be diffed directly\n        if (beforeBaseCommitID === afterBaseCommitID) {\n          return gitHubDiffForCommits({baseCommitID: beforeCommitID, commitID: afterCommitID});\n        }\n\n        const [beforeDiff, afterDiff] = get(\n          waitForAll([\n            gitHubDiffForCommits({baseCommitID: beforeBaseCommitID, commitID: beforeCommitID}),\n            gitHubDiffForCommits({baseCommitID: afterBaseCommitID, commitID: afterCommitID}),\n          ]),\n        );\n        if (beforeDiff != null && afterDiff != null) {\n          return {\n            diff: diffVersions(beforeDiff.diff, afterDiff.diff),\n            commitIDs: {\n              before: beforeCommitID,\n              after: afterCommitID,\n            },\n          };\n        }\n      }\n    } else if (afterBaseCommitID != null) {\n      return get(\n        gitHubDiffForCommits({\n          baseCommitID: afterBaseCommitID,\n          commitID: afterCommitID,\n        }),\n      );\n    }\n\n    return null;\n  },\n});\n\nconst gitHubPullRequestDiffCommitWithBaseByPath = selectorFamily<\n  Map<string, CommitChange> | null,\n  GitObjectID\n>({\n  key: 'gitHubPullRequestDiffCommitWithBaseByPath',\n  get:\n    commitID =>\n    ({get}) => {\n      const baseCommitID = get(gitHubPullRequestCommitBaseParent(commitID))?.oid;\n      if (baseCommitID == null) {\n        return null;\n      }\n\n      const diff = get(gitHubDiffForCommits({baseCommitID, commitID}))?.diff;\n      if (diff == null) {\n        return null;\n      }\n\n      const diffByPath = new Map();\n      diff.forEach(change => diffByPath.set(getPathForChange(change), change));\n      return diffByPath;\n    },\n});\n\nexport const gitHubCommit = selectorFamily<Commit | null, GitObjectID>({\n  key: 'gitHubCommit',\n  get:\n    (oid: GitObjectID) =>\n    ({get}) => {\n      const client = get(gitHubClient);\n      return client != null ? client.getCommit(oid) : null;\n    },\n});\n\nexport const gitHubCommitComparison = selectorFamily<\n  CommitComparison | null,\n  {base: GitObjectID; head: GitObjectID}\n>({\n  key: 'gitHubCommitComparison',\n  get:\n    ({base, head}) =>\n    ({get}) => {\n      const client = get(gitHubClient);\n      return client != null ? client.getCommitComparison(base, head) : null;\n    },\n});\n\nexport const gitHubDiffCommitIDs = selector<DiffCommitIDs | null>({\n  key: 'gitHubDiffCommitIDs',\n  get: ({get}) => {\n    const pullRequest = get(gitHubPullRequest);\n    const diffWithCommitIDs =\n      pullRequest != null ? get(gitHubPullRequestVersionDiff) : get(gitHubDiffForCurrentCommit);\n    return diffWithCommitIDs?.commitIDs ?? null;\n  },\n});\n\nexport const gitHubDiffForCommitID = selectorFamily<DiffWithCommitIDs | null, GitObjectID>({\n  key: 'gitHubDiffForCommitID',\n  get:\n    (oid: GitObjectID) =>\n    ({get}) => {\n      const [client, commit] = get(waitForAll([gitHubClient, gitHubCommit(oid)]));\n      return client != null && commit != null ? diffCommitWithParent(commit, client) : null;\n    },\n});\n\nexport const gitHubDiffForCommits = selectorFamily<\n  DiffWithCommitIDs | null,\n  {baseCommitID: GitObjectID; commitID: GitObjectID}\n>({\n  key: 'gitHubDiffForCommits',\n  get:\n    ({baseCommitID, commitID}) =>\n    ({get}) => {\n      const [client, baseCommit, commit] = get(\n        waitForAll([gitHubClient, gitHubCommit(baseCommitID), gitHubCommit(commitID)]),\n      );\n      return client != null && baseCommit != null && commit != null\n        ? diffCommits(baseCommit, commit, client)\n        : null;\n    },\n});\n\nexport const gitHubDiffForCurrentCommit = selector<DiffWithCommitIDs | null>({\n  key: 'gitHubDiffForCurrentCommit',\n  get: ({get}) => {\n    const client = get(gitHubClient);\n    const commit = get(gitHubCurrentCommit);\n    if (client != null && commit != null) {\n      return diffCommitWithParent(commit, client);\n    } else {\n      return null;\n    }\n  },\n});\n\nexport const gitHubClient = selector<GitHubClient | null>({\n  key: 'gitHubClient',\n  get: ({get}) => {\n    const [token, orgAndRepo] = get(waitForAll([gitHubTokenPersistence, gitHubOrgAndRepo]));\n    if (token != null && orgAndRepo != null) {\n      const {org, repo} = orgAndRepo;\n      const db = get(databaseConnection);\n      const hostname = get(gitHubHostname);\n      return createClient(db, token, hostname, org, repo);\n    } else {\n      return null;\n    }\n  },\n  dangerouslyAllowMutability: ALLOW_MUTABILITY_FOR_GITHUB_CLIENT,\n});\n\n/**\n * The entire window is designed to share one IDBDatabase connection.\n *\n * Will return an error if the value of this selector is read before\n * gitHubTokenPersistence is set.\n */\nconst databaseConnection = selector<IDBDatabase>({\n  key: 'databaseConnection',\n  get: ({get}) => {\n    const token = get(gitHubTokenPersistence);\n    // We should never try to create/open an IndexedDB before the token is set.\n    return token != null\n      ? openDatabase()\n      : Promise.reject('invariant violation: tried to create DB for unauthenticated user');\n  },\n  dangerouslyAllowMutability: ALLOW_MUTABILITY_FOR_GITHUB_CLIENT,\n});\n\nexport const gitHubBlob = selectorFamily<Blob | null, string>({\n  key: 'gitHubBlob',\n  get:\n    (oid: string) =>\n    ({get}) => {\n      const client = get(gitHubClient);\n      return client != null ? client.getBlob(oid) : null;\n    },\n});\n\ntype FileMod = {\n  before: GitObjectID | null;\n  after: GitObjectID | null;\n  path: string;\n};\n\nexport type FileContentsDelta = {before: Blob | null; after: Blob | null};\n\nexport const nullAtom: RecoilValueReadOnly<null> = constSelector(null);\n\nexport const fileContentsDelta = selectorFamily<FileContentsDelta, FileMod>({\n  key: 'fileContentsDelta',\n  get:\n    (mod: FileMod) =>\n    ({get}) => {\n      const [before, after] = get(\n        waitForAll([\n          mod.before != null ? gitHubBlob(mod.before) : nullAtom,\n          mod.after != null ? gitHubBlob(mod.after) : nullAtom,\n        ]),\n      );\n      return {before, after};\n    },\n});\n\nexport const gitHubPullRequests = selectorFamily<PullsWithPageInfo | null, PullsQueryInput>({\n  key: 'gitHubPullRequests',\n  get:\n    input =>\n    ({get}) => {\n      const client = get(gitHubClient);\n      if (client == null) {\n        return null;\n      }\n      return client.getPullRequests(input);\n    },\n});\n\n/**\n * GitHub comments are attached to diffs and not commits, with placement\n * described using \"position\". In the context of a pull request, a commit has a\n * canonical diff, in which it is compared against its base parent (not direct\n * parent). We use this diff to generate the line-to-position mapping for a\n * given commit.\n */\nconst gitHubPullRequestLineToPositionForCommitFile = selectorFamily<\n  LineToPosition | null,\n  {commitID: GitObjectID; path: string}\n>({\n  key: 'gitHubPullRequestLineToPositionForCommitFile',\n  get:\n    ({commitID, path}) =>\n    ({get}) => {\n      const diffsByPath = get(gitHubPullRequestDiffCommitWithBaseByPath(commitID));\n      const diffForPath = diffsByPath?.get(path);\n      if (diffForPath == null) {\n        return null;\n      }\n\n      const entries = getTreeEntriesForChange(diffForPath);\n      const params = {\n        oldOID: entries.before?.oid ?? null,\n        newOID: entries.after?.oid ?? null,\n      };\n\n      // Before calling the lineToPosition RPC, the Blob for any oid that is\n      // passed *must* be persisted to IndexedDB beforehand because our Web\n      // Workers are configured to read from IndexedDB but not write.\n      get(\n        waitForAll(\n          [\n            params.oldOID ? gitHubBlob(params.oldOID) : null,\n            params.newOID ? gitHubBlob(params.newOID) : null,\n          ].filter(notEmpty),\n        ),\n      );\n      return get(lineToPosition(params));\n    },\n});\n\nexport const gitHubPullRequestLineToPositionForFile = selectorFamily<\n  {[key in DiffSide]: {[key: number]: number} | null} | null,\n  string\n>({\n  key: 'gitHubPullRequestLineToPositionForFile',\n  get:\n    path =>\n    ({get}) => {\n      const {beforeCommitID, afterCommitID} = get(gitHubPullRequestComparableVersions);\n      const afterLineToPosition = get(\n        gitHubPullRequestLineToPositionForCommitFile({commitID: afterCommitID, path}),\n      );\n\n      // If there is no explicit \"before\" (i.e., the \"after\" is being compared\n      // against its base), directly use the \"after\" line mappings.\n      if (beforeCommitID == null) {\n        return afterLineToPosition;\n      }\n\n      const beforeLineToPosition = get(\n        gitHubPullRequestLineToPositionForCommitFile({commitID: beforeCommitID, path}),\n      );\n\n      // If both \"before\" and \"after\" are explicitly selected, then both commits\n      // themselves are being shown (i.e., we are comparing two `Right` sides).\n      // Therefore, we should use the mappings for the `Right` sides of their\n      // respective diffs.\n      return {\n        [DiffSide.Left]: beforeLineToPosition?.[DiffSide.Right] ?? null,\n        [DiffSide.Right]: afterLineToPosition?.[DiffSide.Right] ?? null,\n      };\n    },\n});\n\nexport const gitHubPullRequestPositionForLine = selectorFamily<\n  number | null,\n  {line: number; path: string; side: DiffSide}\n>({\n  key: 'gitHubPullRequestPositionForLine',\n  get:\n    ({line, path, side}) =>\n    ({get}) => {\n      const lineToPosition = get(gitHubPullRequestLineToPositionForFile(path));\n      const lineToPositionForSide = lineToPosition?.[side];\n      return lineToPositionForSide?.[line] ?? null;\n    },\n});\n\nexport const gitHubUserHomePageData = selector<UserHomePageQueryData | null>({\n  key: 'gitHubUserHomePageData',\n  get: ({get}) => {\n    const token = get(gitHubTokenPersistence);\n    if (token == null) {\n      return null;\n    }\n\n    // Based on search query for https://github.com/pulls/review-requested\n    const reviewRequestedQuery = 'is:open is:pr archived:false review-requested:@me';\n\n    const graphQLEndpoint = get(gitHubGraphQLEndpoint);\n    return queryGraphQL<UserHomePageQueryData, UserHomePageQueryVariables>(\n      UserHomePageQuery,\n      {reviewRequestedQuery},\n      createRequestHeaders(token),\n      graphQLEndpoint,\n    );\n  },\n});\n\nexport const gitHubRepoAssignableUsersQuery = atom<string>({\n  key: 'gitHubRepoAssignableUsersQuery',\n  default: '',\n});\n\nexport const gitHubRepoAssignableUsers = selector<UserFragment[]>({\n  key: 'gitHubRepoAssignableUsers',\n  get: async ({get}) => {\n    const [client, query, username] = get(\n      waitForAll([gitHubClient, gitHubRepoAssignableUsersQuery, gitHubUsername]),\n    );\n    if (client == null) {\n      return [];\n    }\n    const users = await client.getRepoAssignableUsers(query);\n    return users.filter(user => user.login !== username);\n  },\n});\n\nexport const gitHubRepoLabelsQuery = atom<string>({\n  key: 'gitHubRepoLabelsQuery',\n  default: '',\n});\n\nexport const gitHubRepoLabels = selector<LabelFragment[]>({\n  key: 'gitHubRepoLabels',\n  get: ({get}) => {\n    const [client, query] = get(waitForAll([gitHubClient, gitHubRepoLabelsQuery]));\n    if (client == null) {\n      return [];\n    }\n    return client.getRepoLabels(query);\n  },\n});\n\nexport const gitHubPullRequestLabels = atom<LabelFragment[]>({\n  key: 'gitHubPullRequestLabels',\n  default: [],\n});\n\nexport type PullRequestReviewersList = {\n  reviewers: ReadonlyArray<UserFragment>;\n  reviewerIDs: ReadonlySet<string>;\n};\n\nexport const gitHubPullRequestReviewers = atom<PullRequestReviewersList>({\n  key: 'gitHubPullRequestReviewers',\n  default: {\n    reviewers: [],\n    reviewerIDs: new Set(),\n  },\n});\n\ntype CheckRun = {\n  workflowName: string | undefined;\n} & CheckRunFragment;\n\nexport const gitHubPullRequestCheckRuns = selector<CheckRun[]>({\n  key: 'gitHubPullRequestCheckRuns',\n  get: ({get}) => {\n    const pullRequest = get(gitHubPullRequest);\n    const latestCommit = pullRequest?.commits.nodes?.[0]?.commit;\n    const checkSuites = latestCommit?.checkSuites?.nodes ?? [];\n    return checkSuites.flatMap(checkSuite => {\n      if (checkSuite != null) {\n        const {checkRuns, workflowRun} = checkSuite;\n        const workflowName = workflowRun?.workflow.name;\n        return (\n          checkRuns?.nodes\n            ?.map(fragment => (fragment != null ? {...fragment, workflowName} : null))\n            .filter(notEmpty) ?? []\n        );\n      } else {\n        return [];\n      }\n    });\n  },\n});\n\nfunction createClient(\n  db: IDBDatabase,\n  token: string,\n  hostname: string,\n  organization: string,\n  repository: string,\n): GitHubClient | null {\n  const client = new GraphQLGitHubClient(hostname, organization, repository, token);\n  return new CachingGitHubClient(db, client, organization, repository);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TrustedRenderedMarkdown from './TrustedRenderedMarkdown';\nimport {gitHubCurrentCommit} from './recoil';\nimport {Box, Link, Text} from '@primer/react';\nimport {useRecoilValue} from 'recoil';\n\nexport default function CommitHeader(): React.ReactElement | null {\n  const commit = useRecoilValue(gitHubCurrentCommit);\n\n  if (commit == null) {\n    return null;\n  }\n\n  const {messageHeadlineHTML, url} = commit;\n\n  return (\n    <Box\n      borderBottomWidth={1}\n      borderBottomStyle=\"solid\"\n      borderBottomColor=\"border.default\"\n      fontWeight=\"bold\"\n      padding={3}>\n      <TrustedRenderedMarkdown trustedHTML={messageHeadlineHTML} inline={true} />{' '}\n      <Link href={url} target=\"_blank\">\n        <Text fontWeight=\"normal\">(view on GitHub)</Text>\n      </Link>\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {GitObjectID} from './github/types';\n\nimport Link from './Link';\nimport URLFor from './URLFor';\nimport {shortOid} from './utils';\n\nexport default function CommitLink({\n  org,\n  repo,\n  oid,\n}: {\n  org: string;\n  repo: string;\n  oid: GitObjectID;\n}): React.ReactElement {\n  return <Link href={URLFor.commit({org, repo, oid})}>{shortOid(oid)}</Link>;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/octicons-react';\nimport {Box, Text, Tooltip} from '@primer/react';\n\nexport function FileHeader({\n  path,\n  open,\n  onChangeOpen,\n}: {\n  path: string;\n  open?: boolean;\n  onChangeOpen?: (open: boolean) => void;\n}) {\n  // Even though the enclosing <SplitDiffView> will have border-radius set, we\n  // have to define it again here or things don't look right.\n  const color = 'fg.muted';\n\n  const pathSeparator = '/';\n  const pathParts = path.split(pathSeparator);\n\n  const filePathParts = (\n    <Text fontFamily=\"mono\" fontSize={12} sx={{flexGrow: 1}}>\n      {pathParts.reduce((acc, part, idx) => {\n        // Nest path parts in a particular way so we can use plain CSS\n        // hover selectors to underline nested sub-paths.\n        const pathSoFar = pathParts.slice(idx).join(pathSeparator);\n        return (\n          <span className=\"file-header-copyable-path\" key={idx}>\n            {acc}\n            <Tooltip\n              aria-label={`Copy ${pathSoFar}`}\n              direction=\"se\"\n              className=\"file-header-path-element\">\n              <span\n                onClick={() => {\n                  navigator.clipboard.writeText(pathSoFar);\n                }}>\n                {part}\n                {idx < pathParts.length - 1 ? pathSeparator : ''}\n              </span>\n            </Tooltip>\n          </span>\n        );\n      }, <span />)}\n    </Text>\n  );\n\n  return (\n    <Box\n      className=\"split-diff-view-file-header\"\n      display=\"flex\"\n      alignItems=\"center\"\n      bg=\"accent.subtle\"\n      color={color}\n      paddingX={2}\n      paddingY={1}\n      lineHeight={2}\n      backgroundColor=\"canvas.subtle\"\n      borderTopRightRadius={2}\n      borderTopLeftRadius={2}\n      borderBottomColor=\"border.default\"\n      borderBottomStyle=\"solid\"\n      borderBottomWidth=\"1px\">\n      {onChangeOpen && (\n        <Box\n          paddingRight={2}\n          onClick={() => onChangeOpen(!open)}\n          sx={{\n            cursor: 'pointer',\n            display: 'flex',\n          }}>\n          {open ? <ChevronDownIcon size={16} /> : <ChevronRightIcon size={16} />}\n        </Box>\n      )}\n      <Box sx={{display: 'flex', flexGrow: 1}}>{filePathParts}</Box>\n    </Box>\n  );\n}\n","import styled from 'styled-components';\nimport { get } from './constants';\nimport sx from './sx';\n\nfunction getBorderRadius({\n  size,\n  square\n}) {\n  if (square) {\n    return size && size <= 24 ? '4px' : '6px';\n  } else {\n    return '50%';\n  }\n}\n\nconst Avatar = styled.img.attrs(props => ({\n  height: props.size,\n  width: props.size\n})).withConfig({\n  displayName: \"Avatar\",\n  componentId: \"sc-oifmh0-0\"\n})([\"display:inline-block;overflow:hidden;line-height:\", \";vertical-align:middle;border-radius:\", \";\", \"\"], get('lineHeights.condensedUltra'), props => getBorderRadius(props), sx);\nAvatar.defaultProps = {\n  size: 20,\n  alt: '',\n  square: false\n};\nexport default Avatar;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport URLFor from './URLFor';\nimport {isConsumerGitHub} from './github/gitHubCredentials';\nimport {Avatar, Tooltip} from '@primer/react';\nimport {useCallback, useState} from 'react';\nimport {useRecoilValue} from 'recoil';\n\ntype Props = {\n  login?: string;\n  size?: number;\n  url?: string | null;\n};\n\nexport default function ActorAvatar({login, size = 24, url}: Props): React.ReactElement {\n  const noFallback = useRecoilValue(isConsumerGitHub);\n  const src = url ?? URLFor.defaultAvatar();\n  // TODO: Note that on GitHub Enterprise, the `src` URL for the avatar may be\n  // something like `https://avatars.HOSTNAME/u/ID` and that the browser may\n  // reject loading the image in `<img src={src}>`, citing a Cross-Origin Read\n  // Blocking (CORB) violation. Chrome directs you to this page to learn more\n  // about this security feature:\n  //\n  // https://chromestatus.com/feature/5629709824032768\n  //\n  // Unsurprisingly, this causes issues for GHE integrators such as Reviewable,\n  // who had the most detailed GitHub issue I could find on the subject:\n  //\n  // https://github.com/Reviewable/Reviewable/issues/770\n  //\n  // More references:\n  //\n  // https://github.com/octokit/octokit.js/discussions/2061\n  // https://discourse.drone.io/t/avatars-not-loading-github-enterprise-integration/8168/12\n  //\n  // Ideally, GitHub would expose a a field to get the base64 contents of the\n  // avatar (scaled by size) so the source could be specified as a data URI.\n  //\n  // We implement the workaround suggested by others, which is to add an error\n  // fallback path that creates a \"fake avatar\" using letters from the user's\n  // name/username.\n  //\n  // We prefer <Avatar> over <AvatarWithFallback> for consumer GitHub since it\n  // is more lightweight.\n  const avatar = noFallback ? (\n    <Avatar src={src} size={size} />\n  ) : (\n    <AvatarWithFallback login={login} src={src} size={size} />\n  );\n\n  if (login == null) {\n    return avatar;\n  }\n\n  return <Tooltip aria-label={login}>{avatar}</Tooltip>;\n}\n\nfunction AvatarWithFallback({\n  login,\n  src,\n  size,\n}: {\n  login: string | undefined;\n  src: string;\n  size: number;\n}): React.ReactElement {\n  const [hasError, setError] = useState(false);\n  const onError = useCallback(() => {\n    setError(true);\n  }, [setError]);\n  if (hasError) {\n    const username = login ?? 'unknown';\n    // We use two letters from the username to create the key used to pick the\n    // color in the array to increase the chance that two users commenting on a\n    // thread whose usernames start with the same letter end up with different\n    // colors.\n    const secondCharCode = username.charCodeAt(1);\n    const key = username.charCodeAt(0) * 37 + (isNaN(secondCharCode) ? 13 : secondCharCode);\n    const color = fallbackAvatarColors[key % fallbackAvatarColors.length];\n    return (\n      <div\n        style={{\n          color: '#fff',\n          backgroundColor: color,\n          borderRadius: '50%',\n          textAlign: 'center',\n          height: `${size}px`,\n          width: `${size}px`,\n        }}>\n        {username.charAt(0).toUpperCase()}\n      </div>\n    );\n  } else {\n    return (\n      <div onError={onError}>\n        <Avatar src={src} size={size} />\n      </div>\n    );\n  }\n}\n\n// Taken from https://codepen.io/felipepucinelli/pen/QyVJbM.\nconst fallbackAvatarColors = [\n  '#1abc9c',\n  '#2ecc71',\n  '#3498db',\n  '#9b59b6',\n  '#34495e',\n  '#16a085',\n  '#27ae60',\n  '#2980b9',\n  '#8e44ad',\n  '#2c3e50',\n  '#f1c40f',\n  '#e67e22',\n  '#e74c3c',\n  '#95a5a6',\n  '#f39c12',\n  '#d35400',\n  '#c0392b',\n  '#bdc3c7',\n  '#7f8c8d',\n];\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {Actor} from './github/pullRequestTimelineTypes';\n\nimport ActorAvatar from './ActorAvatar';\nimport {Box, Text} from '@primer/react';\n\nexport default function ActorHeading({actor}: {actor?: Actor | null}): React.ReactElement {\n  const login = actor?.login ?? '[unknown]';\n  return (\n    <Box display=\"flex\" paddingBottom={1} gridGap={1}>\n      <ActorAvatar login={actor?.login} url={actor?.avatarUrl} size={24} />\n      <Text fontSize={12} fontWeight=\"bold\">\n        {login}\n      </Text>\n    </Box>\n  );\n}\n","import styled from 'styled-components';\nimport { variant } from 'styled-system';\nimport sx from './sx';\nimport { get } from './constants';\nexport const variants = {\n  default: {\n    borderColor: 'border.default'\n  },\n  primary: {\n    borderColor: 'fg.default'\n  },\n  secondary: {\n    borderColor: 'border.muted',\n    color: 'fg.muted'\n  },\n  accent: {\n    borderColor: 'accent.emphasis',\n    color: 'accent.fg'\n  },\n  success: {\n    borderColor: 'success.emphasis',\n    color: 'success.fg'\n  },\n  attention: {\n    borderColor: 'attention.emphasis',\n    color: 'attention.fg'\n  },\n  severe: {\n    borderColor: 'severe.emphasis',\n    color: 'severe.fg'\n  },\n  danger: {\n    borderColor: 'danger.emphasis',\n    color: 'danger.fg'\n  },\n  done: {\n    borderColor: 'done.fg',\n    color: 'done.emphasis'\n  },\n  sponsors: {\n    borderColor: 'sponsors.fg',\n    color: 'sponsors.emphasis'\n  }\n};\nconst sizes = {\n  small: {\n    height: '20px',\n    padding: '0 7px' // hard-coded to align with Primer ViewComponents and Primer CSS\n\n  },\n  large: {\n    height: '24px',\n    padding: '0 10px' // hard-coded to align with Primer ViewComponents and Primer CSS\n\n  }\n};\nconst Label = styled.span.withConfig({\n  displayName: \"Label\",\n  componentId: \"sc-6dyj7v-0\"\n})([\"align-items:center;background-color:transparent;border-width:1px;border-radius:999px;border-style:solid;display:inline-flex;font-weight:\", \";font-size:\", \";line-height:1;white-space:nowrap;\", \";\", \";\", \";\"], get('fontWeights.bold'), get('fontSizes.0'), variant({\n  variants\n}), variant({\n  prop: 'size',\n  variants: sizes\n}), sx);\nLabel.defaultProps = {\n  size: 'small',\n  variant: 'default'\n};\nexport default Label;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {Label} from '@primer/react';\n\nexport default function PendingLabel(): React.ReactElement {\n  return <Label variant=\"attention\">Pending</Label>;\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport styled, { css } from 'styled-components';\nimport React from 'react';\nimport { TextInputBaseWrapper } from './_TextInputWrapper';\nimport sx from './sx';\nexport const DEFAULT_TEXTAREA_ROWS = 7;\nexport const DEFAULT_TEXTAREA_COLS = 30;\nexport const DEFAULT_TEXTAREA_RESIZE = 'both';\nconst StyledTextarea = styled.textarea.withConfig({\n  displayName: \"Textarea__StyledTextarea\",\n  componentId: \"sc-wz5skc-0\"\n})([\"border:0;font-size:inherit;font-family:inherit;background-color:transparent;-webkit-appearance:none;color:inherit;width:100%;resize:both;&:focus{outline:0;}\", \" \", \" \", \";\"], props => props.resize && css([\"resize:\", \";\"], props.resize), props => props.disabled && css([\"resize:none;\"]), sx);\n/**\n * An accessible, native textarea component that supports validation states.\n * This component accepts all native HTML <textarea> attributes as props.\n */\n\nconst Textarea = /*#__PURE__*/React.forwardRef(({\n  value,\n  disabled,\n  sx: sxProp,\n  required,\n  validationStatus,\n  rows = DEFAULT_TEXTAREA_ROWS,\n  cols = DEFAULT_TEXTAREA_COLS,\n  resize = DEFAULT_TEXTAREA_RESIZE,\n  block,\n  ...rest\n}, ref) => {\n  return /*#__PURE__*/React.createElement(TextInputBaseWrapper, {\n    sx: sxProp,\n    validationStatus: validationStatus,\n    disabled: disabled,\n    block: block\n  }, /*#__PURE__*/React.createElement(StyledTextarea, _extends({\n    value: value,\n    resize: resize,\n    required: required,\n    \"aria-required\": required ? 'true' : 'false',\n    \"aria-invalid\": validationStatus === 'error' ? 'true' : 'false',\n    ref: ref,\n    disabled: disabled,\n    rows: rows,\n    cols: cols\n  }, rest)));\n});\nTextarea.displayName = 'Textarea';\nexport default Textarea;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {ChangeEvent} from 'react';\n\nimport {Box, Button, Textarea} from '@primer/react';\nimport {useCallback, useState} from 'react';\n\ntype Props = {\n  /**\n   * Returning a rejected Promise indicates the user should be allowed to try\n   * to submit the form again.\n   */\n  addComment: (comment: string) => Promise<void>;\n  /**\n   * true if the component should still be rendered after the comment is added\n   * successfully; false if the component is expected to be unmounted after the\n   * comment is added successfully.\n   */\n  resetInputAfterAddingComment: boolean;\n  autoFocus: boolean;\n  onCancel?: () => void;\n  allowEmptyMessage?: boolean;\n  label?: string;\n  actionSelector?: React.ReactNode;\n};\n\nexport default function PullRequestCommentInput({\n  addComment,\n  resetInputAfterAddingComment,\n  autoFocus,\n  onCancel,\n  allowEmptyMessage = false,\n  label = 'Add Comment',\n  actionSelector,\n}: Props): React.ReactElement {\n  const [comment, setComment] = useState<string>('');\n  const [disabled, setDisabled] = useState(false);\n\n  const onChange = useCallback(\n    (e: ChangeEvent<HTMLTextAreaElement>) => {\n      const value = e.currentTarget.value;\n      setComment(value);\n    },\n    [setComment],\n  );\n\n  const onAddComment = useCallback(async () => {\n    setDisabled(true);\n\n    try {\n      await addComment(comment);\n    } catch (e) {\n      // TODO: Show dialog box to user rather than just dump it to the console\n      // for debugging?\n      // eslint-disable-next-line no-console\n      console.error('addComment failed', e);\n      // If adding the comment fails, let the user try again.\n      setDisabled(false);\n      return;\n    }\n\n    if (resetInputAfterAddingComment) {\n      setComment('');\n      setDisabled(false);\n    }\n  }, [addComment, resetInputAfterAddingComment, comment, setDisabled, setComment]);\n\n  const cancelButton =\n    onCancel != null ? (\n      <Button variant=\"danger\" onClick={onCancel} disabled={disabled}>\n        Cancel\n      </Button>\n    ) : null;\n\n  const isAddCommentDisabled = disabled || (!allowEmptyMessage && comment.trim() === '');\n  return (\n    <Box\n      borderColor=\"border.default\"\n      borderTopWidth={1}\n      borderTopStyle=\"solid\"\n      padding={1}\n      width=\"100%\">\n      <Textarea\n        value={comment}\n        onChange={onChange}\n        placeholder=\"Write a comment...\"\n        block={true}\n        autoFocus={autoFocus}\n        resize=\"none\"\n        sx={{height: '80px', marginBottom: 1}}\n      />\n      <Box display=\"flex\" justifyContent=\"flex-end\" gridGap={1}>\n        {actionSelector}\n        {cancelButton}\n        <Button disabled={isAddCommentDisabled} onClick={onAddComment} variant=\"primary\">\n          {label}\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {gitHubPullRequestID, gitHubOrgAndRepo, gitHubPullRequestForParams} from './recoil';\nimport {useRecoilCallback} from 'recoil';\n\n/**\n * @returns function that will mark the current PullRequest data to be refreshed\n *   with the latest data from the server. Rather than refresh\n *   `gitHubPullRequest` directly, this refreshes\n *   `gitHubPullRequestForParams(params)` so that `PullRequest.tsx` will derive\n *   a new value of `gitHubPullRequest` from the old one.\n */\nexport default function useRefreshPullRequest(): () => void {\n  return useRecoilCallback(\n    ({snapshot, refresh}) =>\n      () => {\n        const number = snapshot.getLoadable(gitHubPullRequestID).valueMaybe();\n        const orgAndRepo = snapshot.getLoadable(gitHubOrgAndRepo).valueMaybe();\n        if (number == null || orgAndRepo == null) {\n          return;\n        }\n\n        const params = {number, orgAndRepo};\n        // Refreshing the selector here should trigger `PullRequest.tsx` to\n        // update the gitHubPullRequest atom.\n        refresh(gitHubPullRequestForParams(params));\n      },\n    [],\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {GitObjectID, ID} from './github/types';\n\nimport PullRequestCommentInput from './PullRequestCommentInput';\nimport {gitHubClient, gitHubPullRequest} from './recoil';\nimport useRefreshPullRequest from './useRefreshPullRequest';\nimport {useRecoilCallback} from 'recoil';\n\ntype Props = {\n  commentID: ID;\n  commitID: GitObjectID;\n  onCancel: () => void;\n};\n\nexport default function PullRequestInlineCommentInput({\n  commentID,\n  commitID,\n  onCancel,\n}: Props): React.ReactElement {\n  const refreshPullRequest = useRefreshPullRequest();\n  const addComment = useRecoilCallback<[string], Promise<void>>(\n    ({snapshot}) =>\n      async comment => {\n        const clientLoadable = snapshot.getLoadable(gitHubClient);\n        if (clientLoadable.state !== 'hasValue' || clientLoadable.contents == null) {\n          return Promise.reject('client not found');\n        }\n        const client = clientLoadable.contents;\n\n        const pullRequestId = snapshot.getLoadable(gitHubPullRequest).valueMaybe()?.id;\n        if (pullRequestId == null) {\n          return Promise.reject('pull request not found');\n        }\n\n        await client.addPullRequestReviewComment({\n          body: comment,\n          commitOID: commitID,\n          inReplyTo: commentID,\n          pullRequestId,\n        });\n\n        refreshPullRequest();\n      },\n    [commentID, commitID, refreshPullRequest],\n  );\n\n  return (\n    <PullRequestCommentInput\n      addComment={addComment}\n      onCancel={onCancel}\n      autoFocus={true}\n      resetInputAfterAddingComment={true}\n    />\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {GitHubPullRequestReviewThreadComment} from './github/pullRequestTimelineTypes';\nimport type {GitObjectID, ID} from './github/types';\n\nimport ActorHeading from './ActorHeading';\nimport PendingLabel from './PendingLabel';\nimport PullRequestInlineCommentInput from './PullRequestInlineCommentInput';\nimport TrustedRenderedMarkdown from './TrustedRenderedMarkdown';\nimport {PullRequestReviewCommentState} from './generated/graphql';\nimport {gitHubPullRequestJumpToCommentID} from './recoil';\nimport {Box, Button} from '@primer/react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useRecoilState} from 'recoil';\n\ntype Props = {\n  comments: GitHubPullRequestReviewThreadComment[];\n};\n\nexport default function InlineCommentThread({comments}: Props): React.ReactElement | null {\n  const lastComment = comments[comments.length - 1];\n  if (lastComment == null) {\n    return null;\n  }\n\n  const commentID = lastComment.id;\n  const commitID = lastComment.originalCommit?.oid;\n\n  let reply = null;\n  if (commitID != null) {\n    reply = <Reply commentID={commentID} commitID={commitID} />;\n  }\n\n  return (\n    <Box backgroundColor=\"canvas.subtle\" fontFamily=\"normal\" padding={2}>\n      <Box\n        backgroundColor=\"canvas.default\"\n        borderColor=\"border.default\"\n        borderWidth={1}\n        borderStyle=\"solid\">\n        {comments.map((comment, index) => (\n          <Comment key={index} comment={comment} />\n        ))}\n        {reply}\n      </Box>\n    </Box>\n  );\n}\n\nfunction Comment({comment}: {comment: GitHubPullRequestReviewThreadComment}): React.ReactElement {\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [jumpToCommentID, setJumpToCommentID] = useRecoilState(\n    gitHubPullRequestJumpToCommentID(comment.id),\n  );\n\n  useEffect(() => {\n    if (ref.current != null && jumpToCommentID) {\n      ref.current.scrollIntoView();\n      setJumpToCommentID(false);\n    }\n  }, [jumpToCommentID, setJumpToCommentID]);\n\n  let pendingLabel = null;\n  if (comment.state === PullRequestReviewCommentState.Pending) {\n    pendingLabel = <PendingLabel />;\n  }\n\n  return (\n    <Box ref={ref} padding={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <ActorHeading actor={comment.author} />\n        {pendingLabel}\n      </Box>\n      <Box fontSize={1} sx={{wordBreak: 'break-word'}}>\n        <TrustedRenderedMarkdown trustedHTML={comment.bodyHTML} />\n      </Box>\n    </Box>\n  );\n}\n\nfunction Reply(props: {commentID: ID; commitID: GitObjectID}): React.ReactElement {\n  const [showReply, setShowReply] = useState(false);\n\n  if (showReply) {\n    return <PullRequestInlineCommentInput {...props} onCancel={() => setShowReply(false)} />;\n  }\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"flex-end\"\n      backgroundColor=\"canvas.subtle\"\n      borderTopColor=\"border.default\"\n      borderTopWidth={1}\n      borderTopStyle=\"solid\"\n      padding={2}>\n      <Button onClick={() => setShowReply(true)}>Reply</Button>\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PullRequestCommentInput from './PullRequestCommentInput';\nimport {DiffSide} from './generated/graphql';\nimport {\n  gitHubClient,\n  gitHubPullRequest,\n  gitHubPullRequestComparableVersions,\n  gitHubPullRequestNewCommentInputCell,\n  gitHubPullRequestPositionForLine,\n} from './recoil';\nimport useRefreshPullRequest from './useRefreshPullRequest';\nimport {Box, Text} from '@primer/react';\nimport {useRecoilCallback, useResetRecoilState} from 'recoil';\n\ntype Props = {\n  line: number;\n  path: string;\n  side: DiffSide;\n};\n\nexport default function PullRequestNewCommentInput({line, path, side}: Props): React.ReactElement {\n  const onCancel = useResetRecoilState(gitHubPullRequestNewCommentInputCell);\n  const refreshPullRequest = useRefreshPullRequest();\n  const addComment = useRecoilCallback<[string], Promise<void>>(\n    ({snapshot}) =>\n      async comment => {\n        const client = snapshot.getLoadable(gitHubClient).valueMaybe();\n        if (client == null) {\n          return Promise.reject('client not found');\n        }\n\n        const pullRequestId = snapshot.getLoadable(gitHubPullRequest).valueMaybe()?.id;\n        if (pullRequestId == null) {\n          return Promise.reject('pull request id not found');\n        }\n\n        const comparableVersions = snapshot\n          .getLoadable(gitHubPullRequestComparableVersions)\n          .valueMaybe();\n        if (comparableVersions == null) {\n          return Promise.reject('comparableVersions not found');\n        }\n\n        const {beforeCommitID, afterCommitID} = comparableVersions;\n        const commitID =\n          beforeCommitID != null && side === DiffSide.Left ? beforeCommitID : afterCommitID;\n\n        const position = snapshot\n          .getLoadable(gitHubPullRequestPositionForLine({line, path, side}))\n          .valueMaybe();\n        if (position == null) {\n          return Promise.reject('positionForLine not found');\n        }\n\n        await client.addPullRequestReviewComment({\n          body: comment,\n          commitOID: commitID,\n          path,\n          position,\n          pullRequestId,\n        });\n\n        // Note that onCancel() will reset gitHubPullRequestNewCommentInputCell\n        // to null, which will result in this component being removed from the\n        // DOM.\n        onCancel();\n        refreshPullRequest();\n      },\n    [line, onCancel, path, refreshPullRequest, side],\n  );\n\n  return (\n    <Box backgroundColor=\"canvas.subtle\" fontFamily=\"normal\" padding={2}>\n      <Box borderColor=\"border.default\" borderWidth={1} borderStyle=\"solid\">\n        <Box padding={2}>\n          <Text>\n            Commenting on <Text fontWeight=\"bold\">line {line}</Text>\n          </Text>\n        </Box>\n        {/* Do not reset input after adding a comment because addComment unmounts it. */}\n        <PullRequestCommentInput\n          addComment={addComment}\n          onCancel={onCancel}\n          autoFocus={true}\n          resetInputAfterAddingComment={false}\n        />\n      </Box>\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {GitHubPullRequestReviewThreadsByLine} from './github/pullRequestTimelineTypes';\n\nimport InlineCommentThread from './InlineCommentThread';\nimport PullRequestNewCommentInput from './PullRequestNewCommentInput';\nimport {DiffSide} from './generated/graphql';\nimport {gitHubPullRequestCanAddComment, gitHubPullRequestNewCommentInputShown} from './recoil';\nimport {Box} from '@primer/react';\nimport {constSelector, useRecoilValue, waitForAll} from 'recoil';\nimport {notEmpty} from 'shared/utils';\n\ntype Props = {\n  beforeLineNumber: number | null;\n  before: React.ReactFragment | null;\n  afterLineNumber: number | null;\n  after: React.ReactFragment | null;\n  rowType: SplitDiffRowType;\n  path: string;\n  threads: {\n    before: GitHubPullRequestReviewThreadsByLine;\n    after: GitHubPullRequestReviewThreadsByLine;\n  };\n};\n\ntype SplitDiffRowType = 'add' | 'common' | 'modify' | 'remove' | 'expanded';\n\nconst LINE_NUMBER_STYLE = {\n  cursor: 'pointer',\n  color: 'fg.subtle',\n  ':hover': {color: 'fg.default'},\n};\n\nexport default function SplitDiffRow({\n  beforeLineNumber,\n  before,\n  afterLineNumber,\n  after,\n  rowType,\n  path,\n  threads,\n}: Props): React.ReactElement {\n  let beforeClass;\n  let afterClass;\n  switch (rowType) {\n    case 'remove':\n      beforeClass = 'patch-remove-line';\n      afterClass = undefined;\n      break;\n    case 'modify':\n      beforeClass = 'patch-remove-line';\n      afterClass = 'patch-add-line';\n      break;\n    case 'add':\n      beforeClass = undefined;\n      afterClass = 'patch-add-line';\n      break;\n    case 'common':\n      beforeClass = undefined;\n      afterClass = undefined;\n      break;\n    case 'expanded':\n      beforeClass = 'patch-expanded';\n      afterClass = 'patch-expanded';\n      break;\n  }\n\n  // Note that 'expanded' is a special case of 'common' where it is code that is\n  // common to both sides of the diff, but was previously displayed as\n  // collapsed. For whatever reason, GitHub does not make it possible to comment\n  // on lines outside of the patch contents in PRs:\n  //\n  // https://github.com/isaacs/github/issues/1655\n  //\n  // Even if you try to do so programmatically via the GraphQL API, it *still*\n  // doesn't work, so this seems to be some quirk in the underlying data model.\n  const canComment = rowType !== 'expanded';\n\n  return (\n    <tr>\n      <SplitDiffRowSide\n        className={beforeClass}\n        content={before}\n        lineNumber={beforeLineNumber}\n        path={path}\n        side={DiffSide.Left}\n        threads={threads.before}\n        canComment={canComment}\n      />\n      <SplitDiffRowSide\n        className={afterClass}\n        content={after}\n        lineNumber={afterLineNumber}\n        path={path}\n        side={DiffSide.Right}\n        threads={threads.after}\n        canComment={canComment}\n      />\n    </tr>\n  );\n}\n\ntype SideProps = {\n  className?: string;\n  content: React.ReactFragment | null;\n  lineNumber: number | null;\n  path: string;\n  side: DiffSide;\n  threads: GitHubPullRequestReviewThreadsByLine;\n  canComment: boolean;\n};\n\nconst nope = constSelector(false);\n\nfunction SplitDiffRowSide({\n  className,\n  content,\n  lineNumber,\n  path,\n  side,\n  threads,\n  canComment,\n}: SideProps) {\n  const param = {path, lineNumber, side};\n  // TODO(T122242329): These selectors have transitive dependencies that are\n  // async, but due to some preloading in <SplitDiffView>, we ensure that these\n  // derived values are available synchronously. This makes it possible for us\n  // to use useRecoilValue() here without a <Suspense> component as an ancestor.\n  const [canAddComment, isNewCommentInputShown] = useRecoilValue(\n    waitForAll([\n      canComment ? gitHubPullRequestCanAddComment(param) : nope,\n      canComment ? gitHubPullRequestNewCommentInputShown(param) : nope,\n    ]),\n  );\n\n  let style;\n  let commentThreads = null;\n  let input = null;\n  if (lineNumber != null) {\n    commentThreads = <SplitDiffRowCommentThreads line={lineNumber} threadsByLine={threads} />;\n\n    if (canAddComment) {\n      style = LINE_NUMBER_STYLE;\n    }\n\n    if (isNewCommentInputShown) {\n      input = <PullRequestNewCommentInput line={lineNumber} path={path} side={side} />;\n    }\n  }\n\n  const lineNumberBorderStyle = side === 'RIGHT' ? extraRightLineNumberCellProps : {};\n  const extraClassName = className != null ? ` ${className}-number` : '';\n  return (\n    <>\n      <Box\n        as=\"td\"\n        className={`lineNumber${extraClassName}`}\n        data-line-number={lineNumber}\n        data-path={path}\n        data-side={side}\n        sx={style}\n        {...lineNumberBorderStyle}>\n        {lineNumber}\n      </Box>\n      <td className={className}>\n        {content}\n        {commentThreads}\n        {input}\n      </td>\n    </>\n  );\n}\n\nfunction SplitDiffRowCommentThreads({\n  line,\n  threadsByLine,\n}: {\n  line: number;\n  threadsByLine: GitHubPullRequestReviewThreadsByLine;\n}): React.ReactElement | null {\n  const threads = threadsByLine.get(line);\n  if (threads == null) {\n    return null;\n  }\n\n  const threadsComments = threads.map(thread => thread.comments.filter(notEmpty));\n  return (\n    <>\n      {threadsComments.map((comments, index) => {\n        // Add a prefix to keys for this component to ensure they are distinct\n        // from the integer keys returned by createTokenizedIntralineDiff().\n        const key = `c-${index}`;\n        return <InlineCommentThread key={key} comments={comments} />;\n      })}\n    </>\n  );\n}\n\nconst extraRightLineNumberCellProps: {\n  borderLeftWidth?: string | undefined;\n  borderLeftStyle?: 'solid' | undefined;\n  borderLeftColor?: string | undefined;\n} = {\n  borderLeftWidth: '1px',\n  borderLeftStyle: 'solid',\n  borderLeftColor: 'border.default',\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated\n */\n\nimport type {Grammar, LanguageConfiguration} from 'shared/textmate-lib/types';\n\nconst grammars: {[scopeName: string]: Grammar} = {\n  'documentation.injection.js.jsx': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'documentation_injection_js_jsx_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'documentation.injection.ts': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'documentation_injection_ts_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'markdown.cabal.codeblock': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: {'meta.embedded.block.cabal': 'cabal'},\n    fileName: 'markdown_cabal_codeblock_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'markdown.hack.codeblock': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: {'meta.embedded.block.hack': 'hack'},\n    fileName: 'markdown_hack_codeblock_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'markdown.haskell.codeblock': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: {'meta.embedded.block.haskell': 'haskell'},\n    fileName: 'markdown_haskell_codeblock_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'markdown.kotlin.codeblock': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: {'meta.embedded.block.kotlin': 'kotlin'},\n    fileName: 'markdown_kotlin_codeblock_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'markdown.lhaskell.codeblock': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: {'meta.embedded.block.lhaskell': 'lhaskell'},\n    fileName: 'markdown_lhaskell_codeblock_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'markdown.toml.frontmatter.codeblock': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'markdown_toml_frontmatter_codeblock_TextMateGrammar',\n    fileFormat: 'plist',\n  },\n  'source.asp.vb.net': {\n    language: 'vb',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_asp_vb_net_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.batchfile': {\n    language: 'bat',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_batchfile_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.c': {\n    language: 'c',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_c_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.c.platform': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_c_platform_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.c2hs': {\n    language: 'C2Hs',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_c2hs_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.cabal': {\n    language: 'cabal',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_cabal_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.clojure': {\n    language: 'clojure',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_clojure_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.coffee': {\n    language: 'coffeescript',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_coffee_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.cpp': {\n    language: 'cpp',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_cpp_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.cpp.embedded.macro': {\n    language: 'cpp',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_cpp_embedded_macro_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.cs': {\n    language: 'csharp',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_cs_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.css': {\n    language: 'css',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_css_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.css.less': {\n    language: 'less',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_css_less_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.css.scss': {\n    language: 'scss',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_css_scss_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.cuda-cpp': {\n    language: 'cuda-cpp',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_cuda-cpp_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.dart': {\n    language: 'dart',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_dart_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.dockerfile': {\n    language: 'dockerfile',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_dockerfile_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.fsharp': {\n    language: 'fsharp',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_fsharp_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.gdscript': {\n    language: 'gdscript',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_gdscript_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.go': {\n    language: 'go',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_go_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.groovy': {\n    language: 'groovy',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_groovy_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.hack': {\n    language: 'hack',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_hack_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.haskell': {\n    language: 'haskell',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_haskell_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.hlsl': {\n    language: 'hlsl',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_hlsl_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.hsc': {\n    language: 'Hsc2Hs',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_hsc_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.ignore': {\n    language: 'ignore',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_ignore_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.ini': {\n    language: 'ini',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_ini_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.java': {\n    language: 'java',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_java_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.js': {\n    language: 'javascript',\n    injections: ['documentation.injection.js.jsx'],\n    embeddedLanguages: {\n      'meta.tag.js': 'jsx-tags',\n      'meta.tag.without-attributes.js': 'jsx-tags',\n      'meta.tag.attributes.js': 'javascript',\n      'meta.embedded.expression.js': 'javascript',\n    },\n    fileName: 'source_js_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.js.jsx': {\n    language: 'javascriptreact',\n    injections: ['documentation.injection.js.jsx'],\n    embeddedLanguages: {\n      'meta.tag.js': 'jsx-tags',\n      'meta.tag.without-attributes.js': 'jsx-tags',\n      'meta.tag.attributes.js.jsx': 'javascriptreact',\n      'meta.embedded.expression.js': 'javascriptreact',\n    },\n    fileName: 'source_js_jsx_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.js.regexp': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_js_regexp_TextMateGrammar',\n    fileFormat: 'plist',\n  },\n  'source.julia': {\n    language: 'julia',\n    injections: [],\n    embeddedLanguages: {\n      'meta.embedded.inline.cpp': 'cpp',\n      'meta.embedded.inline.javascript': 'javascript',\n      'meta.embedded.inline.python': 'python',\n      'meta.embedded.inline.r': 'r',\n      'meta.embedded.inline.sql': 'sql',\n    },\n    fileName: 'source_julia_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.kotlin': {\n    language: 'kotlin',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_kotlin_TextMateGrammar',\n    fileFormat: 'plist',\n  },\n  'source.lua': {\n    language: 'lua',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_lua_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.makefile': {\n    language: 'makefile',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_makefile_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.objc': {\n    language: 'objective-c',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_objc_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.objcpp': {\n    language: 'objective-cpp',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_objcpp_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.perl': {\n    language: 'perl',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_perl_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.perl.6': {\n    language: 'perl6',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_perl_6_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.powershell': {\n    language: 'powershell',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_powershell_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.python': {\n    language: 'python',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_python_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.r': {\n    language: 'r',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_r_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.regexp.python': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_regexp_python_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.ruby': {\n    language: 'ruby',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_ruby_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.rust': {\n    language: 'rust',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_rust_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.sassdoc': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_sassdoc_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.shell': {\n    language: 'shellscript',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_shell_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.sql': {\n    language: 'sql',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_sql_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.swift': {\n    language: 'swift',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_swift_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.thrift': {\n    language: 'thrift',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_thrift_TextMateGrammar',\n    fileFormat: 'plist',\n  },\n  'source.toml': {\n    language: 'toml',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_toml_TextMateGrammar',\n    fileFormat: 'plist',\n  },\n  'source.ts': {\n    language: 'typescript',\n    injections: ['documentation.injection.ts'],\n    embeddedLanguages: undefined,\n    fileName: 'source_ts_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.tsx': {\n    language: 'typescriptreact',\n    injections: ['documentation.injection.ts'],\n    embeddedLanguages: {\n      'meta.tag.tsx': 'jsx-tags',\n      'meta.tag.without-attributes.tsx': 'jsx-tags',\n      'meta.tag.attributes.tsx': 'typescriptreact',\n      'meta.embedded.expression.tsx': 'typescriptreact',\n    },\n    fileName: 'source_tsx_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'source.yaml': {\n    language: 'yaml',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'source_yaml_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.git-commit': {\n    language: 'git-commit',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'text_git-commit_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.git-rebase': {\n    language: 'git-rebase',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'text_git-rebase_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.html.basic': {\n    language: undefined,\n    injections: [],\n    embeddedLanguages: {\n      'text.html': 'html',\n      'source.css': 'css',\n      'source.js': 'javascript',\n      'source.python': 'python',\n      'source.smarty': 'smarty',\n    },\n    fileName: 'text_html_basic_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.html.cshtml': {\n    language: 'razor',\n    injections: [],\n    embeddedLanguages: {\n      'section.embedded.source.cshtml': 'csharp',\n      'source.css': 'css',\n      'source.js': 'javascript',\n    },\n    fileName: 'text_html_cshtml_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.html.derivative': {\n    language: 'html',\n    injections: [],\n    embeddedLanguages: {\n      'text.html': 'html',\n      'source.css': 'css',\n      'source.js': 'javascript',\n      'source.python': 'python',\n      'source.smarty': 'smarty',\n    },\n    fileName: 'text_html_derivative_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.html.handlebars': {\n    language: 'handlebars',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'text_html_handlebars_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.html.markdown': {\n    language: 'markdown',\n    injections: [\n      'markdown.cabal.codeblock',\n      'markdown.hack.codeblock',\n      'markdown.haskell.codeblock',\n      'markdown.kotlin.codeblock',\n      'markdown.lhaskell.codeblock',\n      'markdown.toml.frontmatter.codeblock',\n    ],\n    embeddedLanguages: {\n      'meta.embedded.block.html': 'html',\n      'source.js': 'javascript',\n      'source.css': 'css',\n      'meta.embedded.block.frontmatter': 'yaml',\n      'meta.embedded.block.css': 'css',\n      'meta.embedded.block.ini': 'ini',\n      'meta.embedded.block.java': 'java',\n      'meta.embedded.block.lua': 'lua',\n      'meta.embedded.block.makefile': 'makefile',\n      'meta.embedded.block.perl': 'perl',\n      'meta.embedded.block.r': 'r',\n      'meta.embedded.block.ruby': 'ruby',\n      'meta.embedded.block.php': 'php',\n      'meta.embedded.block.sql': 'sql',\n      'meta.embedded.block.vs_net': 'vs_net',\n      'meta.embedded.block.xml': 'xml',\n      'meta.embedded.block.xsl': 'xsl',\n      'meta.embedded.block.yaml': 'yaml',\n      'meta.embedded.block.dosbatch': 'dosbatch',\n      'meta.embedded.block.clojure': 'clojure',\n      'meta.embedded.block.coffee': 'coffee',\n      'meta.embedded.block.c': 'c',\n      'meta.embedded.block.cpp': 'cpp',\n      'meta.embedded.block.diff': 'diff',\n      'meta.embedded.block.dockerfile': 'dockerfile',\n      'meta.embedded.block.go': 'go',\n      'meta.embedded.block.groovy': 'groovy',\n      'meta.embedded.block.pug': 'jade',\n      'meta.embedded.block.javascript': 'javascript',\n      'meta.embedded.block.json': 'json',\n      'meta.embedded.block.jsonc': 'jsonc',\n      'meta.embedded.block.less': 'less',\n      'meta.embedded.block.objc': 'objc',\n      'meta.embedded.block.scss': 'scss',\n      'meta.embedded.block.perl6': 'perl6',\n      'meta.embedded.block.powershell': 'powershell',\n      'meta.embedded.block.python': 'python',\n      'meta.embedded.block.rust': 'rust',\n      'meta.embedded.block.scala': 'scala',\n      'meta.embedded.block.shellscript': 'shellscript',\n      'meta.embedded.block.typescript': 'typescript',\n      'meta.embedded.block.typescriptreact': 'typescriptreact',\n      'meta.embedded.block.csharp': 'csharp',\n      'meta.embedded.block.fsharp': 'fsharp',\n    },\n    fileName: 'text_html_markdown_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.log': {\n    language: 'log',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'text_log_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.pug': {\n    language: 'jade',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'text_pug_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.tex.latex.haskell': {\n    language: 'literate haskell',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'text_tex_latex_haskell_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.xml': {\n    language: 'xml',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'text_xml_TextMateGrammar',\n    fileFormat: 'json',\n  },\n  'text.xml.xsl': {\n    language: 'xsl',\n    injections: [],\n    embeddedLanguages: undefined,\n    fileName: 'text_xml_xsl_TextMateGrammar',\n    fileFormat: 'json',\n  },\n};\n\nconst languages: {[language: string]: LanguageConfiguration} = {\n  C2Hs: {\n    id: 'C2Hs',\n    aliases: ['C2Hs', 'c2hs'],\n    extensions: ['.chs'],\n  },\n  Hsc2Hs: {\n    id: 'Hsc2Hs',\n    aliases: ['Hsc2Hs', 'HsC2Hs', 'hsc2hs'],\n    extensions: ['.hsc'],\n  },\n  bat: {\n    id: 'bat',\n    extensions: ['.bat', '.cmd'],\n    aliases: ['Batch', 'bat'],\n  },\n  c: {\n    id: 'c',\n    extensions: ['.c', '.i'],\n    aliases: ['C', 'c'],\n  },\n  cabal: {\n    id: 'cabal',\n    aliases: ['Cabal', 'cabal'],\n    extensions: ['.cabal'],\n  },\n  clojure: {\n    id: 'clojure',\n    aliases: ['Clojure', 'clojure'],\n    extensions: ['.clj', '.cljs', '.cljc', '.cljx', '.clojure', '.edn'],\n  },\n  coffeescript: {\n    id: 'coffeescript',\n    extensions: ['.coffee', '.cson', '.iced'],\n    aliases: ['CoffeeScript', 'coffeescript', 'coffee'],\n  },\n  cpp: {\n    id: 'cpp',\n    extensions: [\n      '.cpp',\n      '.cc',\n      '.cxx',\n      '.c++',\n      '.hpp',\n      '.hh',\n      '.hxx',\n      '.h++',\n      '.h',\n      '.ii',\n      '.ino',\n      '.inl',\n      '.ipp',\n      '.ixx',\n      '.tpp',\n      '.txx',\n      '.hpp.in',\n      '.h.in',\n      '.cu',\n      '.cuh',\n    ],\n    aliases: ['C++', 'Cpp', 'cpp', 'c++'],\n  },\n  csharp: {\n    id: 'csharp',\n    extensions: ['.cs', '.csx', '.cake'],\n    aliases: ['C#', 'csharp'],\n  },\n  css: {\n    id: 'css',\n    aliases: ['CSS', 'css'],\n    extensions: ['.css'],\n    mimetypes: ['text/css'],\n  },\n  'cuda-cpp': {\n    id: 'cuda-cpp',\n    extensions: ['.cu', '.cuh'],\n    aliases: ['CUDA C++'],\n  },\n  dart: {\n    id: 'dart',\n    extensions: ['.dart'],\n    aliases: ['Dart'],\n  },\n  dockercompose: {\n    id: 'dockercompose',\n    aliases: ['Compose', 'compose'],\n    filenamePatterns: [\n      'compose.yml',\n      'compose.yaml',\n      'compose.*.yml',\n      'compose.*.yaml',\n      '*docker*compose*.yml',\n      '*docker*compose*.yaml',\n    ],\n  },\n  dockerfile: {\n    id: 'dockerfile',\n    extensions: ['.dockerfile', '.containerfile'],\n    filenames: ['Dockerfile', 'Containerfile'],\n    filenamePatterns: ['Dockerfile.*', 'Containerfile.*'],\n    aliases: ['Docker', 'Dockerfile', 'Containerfile'],\n  },\n  fsharp: {\n    id: 'fsharp',\n    extensions: ['.fs', '.fsi', '.fsx', '.fsscript'],\n    aliases: ['F#', 'FSharp', 'fsharp'],\n  },\n  gdscript: {\n    id: 'gdscript',\n    aliases: ['GDScript', 'gdscript'],\n    extensions: ['.gd'],\n  },\n  'git-commit': {\n    id: 'git-commit',\n    aliases: ['Git Commit Message', 'git-commit'],\n    filenames: ['COMMIT_EDITMSG', 'MERGE_MSG'],\n  },\n  'git-rebase': {\n    id: 'git-rebase',\n    aliases: ['Git Rebase Message', 'git-rebase'],\n    filenames: ['git-rebase-todo'],\n  },\n  go: {\n    id: 'go',\n    extensions: ['.go'],\n    aliases: ['Go'],\n  },\n  groovy: {\n    id: 'groovy',\n    aliases: ['Groovy', 'groovy'],\n    extensions: ['.groovy', '.gvy', '.gradle', '.jenkinsfile', '.nf'],\n    filenames: ['Jenkinsfile'],\n    filenamePatterns: ['Jenkinsfile.*'],\n    firstLine: '^#!.*\\\\bgroovy\\\\b',\n  },\n  hack: {\n    id: 'hack',\n    aliases: ['Hack', 'hacklang', 'php'],\n    extensions: ['.php', '.hh', '.hack'],\n    firstLine: '^<\\\\?hh\\\\b.*|#!.*hhvm.*$',\n  },\n  handlebars: {\n    id: 'handlebars',\n    extensions: ['.handlebars', '.hbs', '.hjs'],\n    aliases: ['Handlebars', 'handlebars'],\n    mimetypes: ['text/x-handlebars-template'],\n  },\n  haskell: {\n    id: 'haskell',\n    aliases: ['Haskell', 'haskell'],\n    extensions: ['.hsig', 'hs-boot', '.hs'],\n  },\n  hlsl: {\n    id: 'hlsl',\n    extensions: ['.hlsl', '.hlsli', '.fx', '.fxh', '.vsh', '.psh', '.cginc', '.compute'],\n    aliases: ['HLSL', 'hlsl'],\n  },\n  html: {\n    id: 'html',\n    extensions: [\n      '.html',\n      '.htm',\n      '.shtml',\n      '.xhtml',\n      '.xht',\n      '.mdoc',\n      '.jsp',\n      '.asp',\n      '.aspx',\n      '.jshtm',\n      '.volt',\n      '.ejs',\n      '.rhtml',\n    ],\n    aliases: ['HTML', 'htm', 'html', 'xhtml'],\n    mimetypes: [\n      'text/html',\n      'text/x-jshtm',\n      'text/template',\n      'text/ng-template',\n      'application/xhtml+xml',\n    ],\n  },\n  ignore: {\n    id: 'ignore',\n    aliases: ['Ignore', 'ignore'],\n    extensions: ['.gitignore_global', '.gitignore'],\n  },\n  ini: {\n    id: 'ini',\n    extensions: ['.ini', '.bcfg', '.net'],\n    aliases: ['Ini', 'ini', 'Hack Configuration', 'hack', 'hacklang'],\n    filenames: ['.hhconfig', '.buckconfig', '.flowconfig'],\n  },\n  jade: {\n    id: 'jade',\n    extensions: ['.pug', '.jade'],\n    aliases: ['Pug', 'Jade', 'jade'],\n  },\n  java: {\n    id: 'java',\n    extensions: ['.java', '.jav'],\n    aliases: ['Java', 'java'],\n  },\n  javascript: {\n    id: 'javascript',\n    aliases: ['JavaScript', 'javascript', 'js'],\n    extensions: ['.js', '.es6', '.mjs', '.cjs', '.pac'],\n    filenames: ['jakefile'],\n    firstLine: '^#!.*\\\\bnode',\n    mimetypes: ['text/javascript'],\n  },\n  javascriptreact: {\n    id: 'javascriptreact',\n    aliases: ['JavaScript React', 'jsx'],\n    extensions: ['.jsx'],\n  },\n  jsonc: {\n    id: 'jsonc',\n    filenames: ['tsconfig.json', 'jsconfig.json'],\n    filenamePatterns: ['tsconfig.*.json', 'jsconfig.*.json', 'tsconfig-*.json', 'jsconfig-*.json'],\n  },\n  'jsx-tags': {\n    id: 'jsx-tags',\n    aliases: [],\n  },\n  julia: {\n    id: 'julia',\n    aliases: ['Julia', 'julia'],\n    extensions: ['.jl'],\n    firstLine: '^#!\\\\s*/.*\\\\bjulia[0-9.-]*\\\\b',\n  },\n  juliamarkdown: {\n    id: 'juliamarkdown',\n    aliases: ['Julia Markdown', 'juliamarkdown'],\n    extensions: ['.jmd'],\n  },\n  kotlin: {\n    id: 'kotlin',\n    aliases: ['Kotlin', 'kotlin'],\n    extensions: ['.kt'],\n  },\n  kotlinscript: {\n    id: 'kotlinscript',\n    aliases: ['Kotlinscript', 'kotlinscript'],\n    extensions: ['.kts'],\n  },\n  less: {\n    id: 'less',\n    aliases: ['Less', 'less'],\n    extensions: ['.less'],\n    mimetypes: ['text/x-less', 'text/less'],\n  },\n  'literate haskell': {\n    id: 'literate haskell',\n    aliases: ['Literate Haskell', 'literate Haskell'],\n    extensions: ['.lhs'],\n  },\n  log: {\n    id: 'log',\n    extensions: ['.log', '*.log.?'],\n    aliases: ['Log'],\n  },\n  lua: {\n    id: 'lua',\n    extensions: ['.lua'],\n    aliases: ['Lua', 'lua'],\n  },\n  makefile: {\n    id: 'makefile',\n    aliases: ['Makefile', 'makefile'],\n    extensions: ['.mak', '.mk'],\n    filenames: ['Makefile', 'makefile', 'GNUmakefile', 'OCamlMakefile'],\n    firstLine: '^#!\\\\s*/usr/bin/make',\n  },\n  markdown: {\n    id: 'markdown',\n    aliases: ['Markdown', 'markdown'],\n    extensions: [\n      '.md',\n      '.mkd',\n      '.mdwn',\n      '.mdown',\n      '.markdown',\n      '.markdn',\n      '.mdtxt',\n      '.mdtext',\n      '.workbook',\n    ],\n  },\n  'objective-c': {\n    id: 'objective-c',\n    extensions: ['.m'],\n    aliases: ['Objective-C'],\n  },\n  'objective-cpp': {\n    id: 'objective-cpp',\n    extensions: ['.mm'],\n    aliases: ['Objective-C++'],\n  },\n  perl: {\n    id: 'perl',\n    aliases: ['Perl', 'perl'],\n    extensions: ['.pl', '.pm', '.pod', '.t', '.PL', '.psgi'],\n    firstLine: '^#!.*\\\\bperl\\\\b',\n  },\n  perl6: {\n    id: 'perl6',\n    aliases: ['Perl 6', 'perl6'],\n    extensions: ['.p6', '.pl6', '.pm6', '.nqp'],\n    firstLine: '(^#!.*\\\\bperl6\\\\b)|use\\\\s+v6',\n  },\n  powershell: {\n    id: 'powershell',\n    extensions: ['.ps1', '.psm1', '.psd1', '.pssc', '.psrc'],\n    aliases: ['PowerShell', 'powershell', 'ps', 'ps1'],\n    firstLine: '^#!\\\\s*/.*\\\\bpwsh\\\\b',\n  },\n  properties: {\n    id: 'properties',\n    extensions: [\n      '.properties',\n      '.cfg',\n      '.conf',\n      '.directory',\n      '.gitattributes',\n      '.gitconfig',\n      '.gitmodules',\n      '.editorconfig',\n      'cfg',\n      'tres',\n      'tscn',\n      'godot',\n      'gdns',\n      'gdnlib',\n      'import',\n    ],\n    filenames: ['gitconfig'],\n    filenamePatterns: ['**/.config/git/config', '**/.git/config'],\n    aliases: ['Properties', 'properties'],\n  },\n  python: {\n    id: 'python',\n    extensions: ['.py', '.rpy', '.pyw', '.cpy', '.gyp', '.gypi', '.pyi', '.ipy', '.pyt'],\n    aliases: ['Python', 'py'],\n    filenames: ['Snakefile', 'SConstruct', 'SConscript'],\n    firstLine: '^#!\\\\s*/?.*\\\\bpython[0-9.-]*\\\\b',\n  },\n  r: {\n    id: 'r',\n    extensions: ['.r', '.rhistory', '.rprofile', '.rt'],\n    aliases: ['R', 'r'],\n  },\n  razor: {\n    id: 'razor',\n    extensions: ['.cshtml', '.razor'],\n    aliases: ['Razor', 'razor'],\n    mimetypes: ['text/x-cshtml'],\n  },\n  ruby: {\n    id: 'ruby',\n    extensions: ['.rb', '.rbx', '.rjs', '.gemspec', '.rake', '.ru', '.erb', '.podspec', '.rbi'],\n    filenames: [\n      'rakefile',\n      'gemfile',\n      'guardfile',\n      'podfile',\n      'capfile',\n      'cheffile',\n      'hobofile',\n      'vagrantfile',\n      'appraisals',\n      'rantfile',\n      'berksfile',\n      'berksfile.lock',\n      'thorfile',\n      'puppetfile',\n      'dangerfile',\n      'brewfile',\n      'fastfile',\n      'appfile',\n      'deliverfile',\n      'matchfile',\n      'scanfile',\n      'snapfile',\n      'gymfile',\n    ],\n    aliases: ['Ruby', 'rb'],\n    firstLine: '^#!\\\\s*/.*\\\\bruby\\\\b',\n  },\n  rust: {\n    id: 'rust',\n    extensions: ['.rs'],\n    aliases: ['Rust', 'rust', 'rs'],\n  },\n  scss: {\n    id: 'scss',\n    aliases: ['SCSS', 'scss'],\n    extensions: ['.scss'],\n    mimetypes: ['text/x-scss', 'text/scss'],\n  },\n  shellscript: {\n    id: 'shellscript',\n    aliases: ['Shell Script', 'shellscript', 'bash', 'sh', 'zsh', 'ksh', 'csh'],\n    extensions: [\n      '.sh',\n      '.bash',\n      '.bashrc',\n      '.bash_aliases',\n      '.bash_profile',\n      '.bash_login',\n      '.ebuild',\n      '.profile',\n      '.bash_logout',\n      '.xprofile',\n      '.xsession',\n      '.xsessionrc',\n      '.Xsession',\n      '.zsh',\n      '.zshrc',\n      '.zprofile',\n      '.zlogin',\n      '.zlogout',\n      '.zshenv',\n      '.zsh-theme',\n      '.ksh',\n      '.csh',\n      '.cshrc',\n      '.tcshrc',\n      '.yashrc',\n      '.yash_profile',\n    ],\n    filenames: [\n      'APKBUILD',\n      'PKGBUILD',\n      '.envrc',\n      '.hushlogin',\n      'zshrc',\n      'zshenv',\n      'zlogin',\n      'zprofile',\n      'zlogout',\n      'bashrc_Apple_Terminal',\n      'zshrc_Apple_Terminal',\n    ],\n    firstLine:\n      '^#!.*\\\\b(bash|zsh|sh|ksh|dtksh|pdksh|mksh|ash|dash|yash|sh|csh|jcsh|tcsh|itcsh).*|^#\\\\s*-\\\\*-[^*]*mode:\\\\s*shell-script[^*]*-\\\\*-',\n    mimetypes: ['text/x-shellscript'],\n  },\n  sql: {\n    id: 'sql',\n    extensions: ['.sql', '.dsql'],\n    aliases: ['SQL'],\n  },\n  swift: {\n    id: 'swift',\n    aliases: ['Swift', 'swift'],\n    extensions: ['.swift'],\n  },\n  thrift: {\n    id: 'thrift',\n    extensions: ['.thrift'],\n  },\n  toml: {\n    id: 'toml',\n    aliases: ['TOML', 'toml'],\n    extensions: ['.toml', 'Pipfile'],\n    mimetypes: ['text/x-toml'],\n  },\n  typescript: {\n    id: 'typescript',\n    aliases: ['TypeScript', 'ts', 'typescript'],\n    extensions: ['.ts', '.cts', '.mts'],\n  },\n  typescriptreact: {\n    id: 'typescriptreact',\n    aliases: ['TypeScript React', 'tsx'],\n    extensions: ['.tsx'],\n  },\n  vb: {\n    id: 'vb',\n    extensions: ['.vb', '.brs', '.vbs', '.bas', '.vba'],\n    aliases: ['Visual Basic', 'vb'],\n  },\n  xml: {\n    id: 'xml',\n    extensions: [\n      '.xml',\n      '.xsd',\n      '.ascx',\n      '.atom',\n      '.axml',\n      '.axaml',\n      '.bpmn',\n      '.cpt',\n      '.csl',\n      '.csproj',\n      '.csproj.user',\n      '.dita',\n      '.ditamap',\n      '.dtd',\n      '.ent',\n      '.mod',\n      '.dtml',\n      '.fsproj',\n      '.fxml',\n      '.iml',\n      '.isml',\n      '.jmx',\n      '.launch',\n      '.menu',\n      '.mxml',\n      '.nuspec',\n      '.opml',\n      '.owl',\n      '.proj',\n      '.props',\n      '.pt',\n      '.publishsettings',\n      '.pubxml',\n      '.pubxml.user',\n      '.rbxlx',\n      '.rbxmx',\n      '.rdf',\n      '.rng',\n      '.rss',\n      '.shproj',\n      '.storyboard',\n      '.svg',\n      '.targets',\n      '.tld',\n      '.tmx',\n      '.vbproj',\n      '.vbproj.user',\n      '.vcxproj',\n      '.vcxproj.filters',\n      '.wsdl',\n      '.wxi',\n      '.wxl',\n      '.wxs',\n      '.xaml',\n      '.xbl',\n      '.xib',\n      '.xlf',\n      '.xliff',\n      '.xpdl',\n      '.xul',\n      '.xoml',\n    ],\n    firstLine: '(\\\\<\\\\?xml.*)|(\\\\<svg)|(\\\\<\\\\!doctype\\\\s+svg)',\n    aliases: ['XML', 'xml'],\n  },\n  xsl: {\n    id: 'xsl',\n    extensions: ['.xsl', '.xslt'],\n    aliases: ['XSL', 'xsl'],\n  },\n  yaml: {\n    id: 'yaml',\n    aliases: ['YAML', 'yaml', 'YAML', 'yaml'],\n    extensions: ['.yml', '.eyaml', '.eyml', '.yaml', '.cff'],\n    firstLine: '^#cloud-config',\n    filenames: ['stack.yaml.lock', '.prettierrc'],\n  },\n};\n\nexport {grammars, languages};\n","function Diff() {}\nDiff.prototype = {\n  diff: function diff(oldString, newString) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = options.callback;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.options = options;\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    } // Allow subclasses to massage the input prior to running\n\n\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n\n    if (options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return done([{\n        value: this.join(newString),\n        count: newString.length\n      }]);\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath = void 0;\n\n        var addPath = bestPath[diagonalPath - 1],\n            removePath = bestPath[diagonalPath + 1],\n            _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen,\n            canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n          return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n\n\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          if (editLength > maxEditLength) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength) {\n        var ret = execEditLength();\n\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n  pushComponent: function pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        newPos = basePath.newPos,\n        oldPos = newPos - diagonalPath,\n        commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n  removeEmpty: function removeEmpty(array) {\n    var ret = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n\n    return ret;\n  },\n  castInput: function castInput(value) {\n    return value;\n  },\n  tokenize: function tokenize(value) {\n    return value.split('');\n  },\n  join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, components, newString, oldString, useLongestToken) {\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n\n\n  var lastComponent = components[componentLen - 1];\n\n  if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar characterDiff = new Diff();\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n\n  return defaults;\n}\n\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\n\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\nvar reWhitespace = /\\S/;\nvar wordDiff = new Diff();\n\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\n\nwordDiff.tokenize = function (value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {\n    ignoreWhitespace: true\n  });\n  return wordDiff.diff(oldStr, newStr, options);\n}\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nvar lineDiff = new Diff();\n\nlineDiff.tokenize = function (value) {\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  } // Merge the content and line separators into single tokens\n\n\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options = generateOptions(callback, {\n    ignoreWhitespace: true\n  });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n\nvar sentenceDiff = new Diff();\n\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n\nvar cssDiff = new Diff();\n\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar objectPrototypeToString = Object.prototype.toString;\nvar jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\njsonDiff.useLongestToken = true;\njsonDiff.tokenize = lineDiff.tokenize;\n\njsonDiff.castInput = function (value) {\n  var _this$options = this.options,\n      undefinedReplacement = _this$options.undefinedReplacement,\n      _this$options$stringi = _this$options.stringifyReplacer,\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n    return typeof v === 'undefined' ? undefinedReplacement : v;\n  } : _this$options$stringi;\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\n\njsonDiff.equals = function (left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n} // This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (_typeof(obj) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n\n    var sortedKeys = [],\n        _key;\n\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n\n  return canonicalizedObj;\n}\n\nvar arrayDiff = new Diff();\n\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nfunction parsePatch(uniDiff) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index); // Parse diff metadata\n\n    while (i < diffstr.length) {\n      var line = diffstr[i]; // File header found, end parsing diff metadata\n\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      } // Diff index\n\n\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    } // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n\n\n    parseFileHeader(index);\n    parseFileHeader(index); // Parse hunks\n\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  } // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n\n\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n      i++;\n    }\n  } // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n\n\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    }; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    var addCount = 0,\n        removeCount = 0;\n\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    } // Handle the empty block count case\n\n\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    } // Perform optional sanity checking\n\n\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n\n// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator (start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      } // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n\n\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      } // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n\n\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    } // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n\n  };\n}\n\nfunction applyPatch(source, uniDiff) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  } // Apply the diff to the input\n\n\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n    return line === patchContent;\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL,\n      addEOFNL;\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n\n\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n\n        toPos++;\n      }\n    }\n\n    return true;\n  } // Search best fit offsets for each hunk based on the previous ones\n\n\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n    var iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    } // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n\n\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  } // Apply patch hunks\n\n\n  var diffOffset = 0;\n\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters[j];\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  } // Handle EOFNL insertion/removal\n\n\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n\n  return lines.join('');\n} // Wrapper that supports multiple file patches via callbacks.\n\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  var currentIndex = 0;\n\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n\n  processIndex();\n}\n\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff = diffLines(oldStr, newStr, options);\n\n  if (!diff) {\n    return;\n  }\n\n  diff.push({\n    value: '',\n    lines: []\n  }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  var _loop = function _loop(i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      var _curRange;\n\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      } // Output our changes\n\n\n      (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      }))); // Track the updated file position\n\n\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          var _curRange2;\n\n          // Overlapping\n          (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n        } else {\n          var _curRange3;\n\n          // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n\n          (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n\n          hunks.push(hunk);\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    _loop(i);\n  }\n\n  return {\n    oldFileName: oldFileName,\n    newFileName: newFileName,\n    oldHeader: oldHeader,\n    newHeader: newHeader,\n    hunks: hunks\n  };\n}\nfunction formatPatch(diff) {\n  var ret = [];\n\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calcLineCount(hunk) {\n  var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || {\n      oldStart: Infinity\n    },\n        theirsCurrent = theirs.hunks[theirsIndex] || {\n      oldStart: Infinity\n    };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {\n      mine: mine,\n      theirs: theirs\n    };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart,\n    oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset,\n    newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = {\n    offset: mineOffset,\n    lines: mineLines,\n    index: 0\n  },\n      their = {\n    offset: theirOffset,\n    lines: theirLines,\n    index: 0\n  }; // Handle any leading content\n\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      var _hunk$lines;\n\n      // Mine inserted\n      (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      var _hunk$lines2;\n\n      // Theirs inserted\n      (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  } // Now push anything that may be remaining\n\n\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      var _hunk$lines3;\n\n      (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      var _hunk$lines4;\n\n      (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    var _hunk$lines5;\n\n    (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n\n  if (theirChanges.merged) {\n    var _hunk$lines6;\n\n    (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\n\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\n\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n    merged.push(match);\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\n\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n  return {\n    oldLines: oldLines,\n    newLines: newLines\n  };\n}\n\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change,\n      operation;\n\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n\n  return ret;\n}\n\nfunction convertChangesToXML(changes) {\n  var ret = [];\n\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n  return n;\n}\n\nexport { Diff, applyPatch, applyPatches, canonicalize, convertChangesToDMP, convertChangesToXML, createPatch, createTwoFilesPatch, diffArrays, diffChars, diffCss, diffJson, diffLines, diffSentences, diffTrimmedLines, diffWords, diffWordsWithSpace, merge, parsePatch, structuredPatch };\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {HighlightedToken} from 'shared/textmate-lib/tokenize';\n\nimport {diffWordsWithSpace} from 'diff';\nimport {CSS_CLASS_PREFIX} from 'shared/textmate-lib/textmateStyles';\n\n/** Type of Chunk: Added, Removed, Unmodified. */\ntype ChunkType = 'A' | 'R' | 'U';\n\n/**\n * The Myers difference algorithm used by the `diff` Node module is O(ND) where\n * N is the sum of the lengths of the two inputs and D is size of the minimum\n * edit script for the two inputs. As such, large values of N can result in\n * extremely long running times while likely providing little value for the\n * user. For example, a large blob of JSON on a single line compared with the\n * first line of the pretty-printed version (containing only `{`) could be an\n * expensive diff to compute while telling the user nothing of interest.\n *\n * To defend against such pathological cases, we should not bother to compute\n * the intraline diff in certain cases. As an initial heuristic, we impose a\n * threshold for the \"maximum input\" (i.e., the sum of the lengths of the\n * strings being compared) for which an intraline diff should be computed.\n *\n * Incidentally, tokenization for syntax highlighting has similar issues. At\n * least as of Oct 2022, rather than impose a \"max line length,\" VS Code imposes\n * a \"time spent\" threshold:\n *\n * https://github.com/microsoft/vscode/blob/504c5a768a001b2099dd2b44e9dc39e10ccdfb56/src/vs/workbench/services/textMate/common/TMTokenization.ts#L39\n *\n * It might be worth considering something similar for intraline diffs.\n */\nexport const MAX_INPUT_LENGTH_FOR_INTRALINE_DIFF = 300;\n\n/**\n * Normalized version of a `diff.Change` returned by `diffWords()` that is\n * easier to work with when interleaving with syntax highlight information.\n */\ntype Chunk = {\n  type: ChunkType;\n  start: number;\n  end: number;\n};\n\n/**\n * Takes a modified line in the form of `beforeLine` and `afterLine` along with\n * syntax highlighting information that covers each respective line and\n * returns a ReactFragment to display the before/after versions of a line in a\n * side-by-side diff.\n */\nexport function createTokenizedIntralineDiff(\n  beforeLine: string,\n  beforeTokens: HighlightedToken[],\n  afterLine: string,\n  afterTokens: HighlightedToken[],\n): [React.ReactFragment | null, React.ReactFragment | null] {\n  if (beforeLine.length + afterLine.length > MAX_INPUT_LENGTH_FOR_INTRALINE_DIFF) {\n    return [\n      applyTokenizationToLine(beforeLine, beforeTokens),\n      applyTokenizationToLine(afterLine, afterTokens),\n    ];\n  }\n\n  const changes = diffWordsWithSpace(beforeLine, afterLine);\n  const beforeChunks: Chunk[] = [];\n  const afterChunks: Chunk[] = [];\n  let beforeLength = 0;\n  let afterLength = 0;\n\n  changes.forEach(change => {\n    const {added, removed, value} = change;\n    const len = value.length;\n    if (added) {\n      const end = afterLength + len;\n      addOrExtend(afterChunks, 'A', afterLength, end);\n      afterLength = end;\n    } else if (removed) {\n      const end = beforeLength + len;\n      addOrExtend(beforeChunks, 'R', beforeLength, end);\n      beforeLength = end;\n    } else {\n      const beforeEnd = beforeLength + len;\n      addOrExtend(beforeChunks, 'U', beforeLength, beforeEnd);\n      beforeLength = beforeEnd;\n\n      const afterEnd = afterLength + len;\n      addOrExtend(afterChunks, 'U', afterLength, afterEnd);\n      afterLength = afterEnd;\n    }\n  });\n\n  // Note that the logic in mergeChunksAndTokens() could be done as part of this\n  // function to avoid an additional pass over the chunks, but the bookkeeping\n  // might get messy.\n  return [\n    mergeChunksAndTokens(beforeLine, beforeChunks, beforeTokens),\n    mergeChunksAndTokens(afterLine, afterChunks, afterTokens),\n  ];\n}\n\nfunction addOrExtend(chunks: Chunk[], type: ChunkType, start: number, end: number) {\n  const lastEntry = chunks[chunks.length - 1];\n  if (lastEntry?.type === type && lastEntry?.end === start) {\n    lastEntry.end = end;\n  } else {\n    chunks.push({type, start, end});\n  }\n}\n\n/** TODO: Create proper machinery to strip assertions from production builds. */\nconst ENABLE_ASSERTIONS = false;\n\ntype ChunkSpanProps = {\n  key: number;\n  className: string;\n  content: string;\n  isChunkStart: boolean;\n  isChunkEnd: boolean;\n};\n\nfunction ChunkSpan({\n  key,\n  className,\n  content,\n  isChunkStart,\n  isChunkEnd,\n}: ChunkSpanProps): React.ReactNode {\n  let fullClassName = className;\n  if (isChunkStart) {\n    fullClassName += ' patch-word-begin';\n  }\n  if (isChunkEnd) {\n    fullClassName += ' patch-word-end';\n  }\n  return (\n    <span key={key} className={fullClassName}>\n      {content}\n    </span>\n  );\n}\n\n/**\n * Interleave chunks and tokens to produce a properly styled intraline diff.\n */\nfunction mergeChunksAndTokens(\n  line: string,\n  chunks: Chunk[],\n  tokens: HighlightedToken[],\n): React.ReactFragment | null {\n  if (tokens.length == 0) {\n    return null;\n  }\n\n  if (ENABLE_ASSERTIONS) {\n    // We expect the following invariants to hold, by construction.\n    // eslint-disable-next-line no-console\n    console.assert(\n      chunks.length !== 0,\n      'chunks is never empty, even if the line is the empty string',\n    );\n    // eslint-disable-next-line no-console\n    console.assert(\n      chunks[chunks.length - 1].end === tokens[tokens.length - 1].end,\n      'the final chunk and token must have the same end index to ensure the loop breaks properly',\n    );\n  }\n\n  const spans: ChunkSpanProps[] = [];\n  let chunkIndex = 0;\n  let tokenIndex = 0;\n  let lastEndIndex = 0;\n  let lastChunkType: ChunkType = 'U';\n  let isChunkStart = false;\n  const maxChunkIndex = chunks.length;\n  const maxTokenIndex = tokens.length;\n  while (chunkIndex < maxChunkIndex && tokenIndex < maxTokenIndex) {\n    const chunk = chunks[chunkIndex];\n    const token = tokens[tokenIndex];\n    const start = lastEndIndex;\n    if (chunk.end === token.end) {\n      lastEndIndex = chunk.end;\n      ++chunkIndex;\n      ++tokenIndex;\n    } else if (chunk.end < token.end) {\n      lastEndIndex = chunk.end;\n      ++chunkIndex;\n    } else {\n      lastEndIndex = token.end;\n      ++tokenIndex;\n    }\n\n    const chunkType = chunk.type;\n    if (lastChunkType !== 'U' && chunkType !== lastChunkType) {\n      spans[spans.length - 1].isChunkEnd = true;\n    }\n    isChunkStart = chunkType !== 'U' && (chunkType !== lastChunkType || spans.length === 0);\n    spans.push(createSpan(line, start, lastEndIndex, token.color, chunkType, isChunkStart));\n    lastChunkType = chunkType;\n  }\n\n  // Check if last span needs to have isChunkEnd set.\n  if (lastChunkType !== 'U') {\n    spans[spans.length - 1].isChunkEnd = true;\n  }\n\n  return spans.map(ChunkSpan);\n}\n\n/**\n * Creates the <span> with the appropriate CSS classes to display a portion of\n * an intraline diff with syntax highlighting.\n */\nfunction createSpan(\n  line: string,\n  start: number,\n  end: number,\n  color: number,\n  type: ChunkType,\n  isChunkStart: boolean,\n): ChunkSpanProps {\n  let patchClass;\n  switch (type) {\n    case 'U':\n      patchClass = '';\n      break;\n    case 'A':\n      patchClass = ' patch-add-word';\n      break;\n    case 'R':\n      patchClass = ' patch-remove-word';\n      break;\n  }\n\n  const className = `${CSS_CLASS_PREFIX}${color}${patchClass}`;\n  return {\n    key: start,\n    className,\n    content: line.slice(start, end),\n    isChunkStart,\n    isChunkEnd: false,\n  };\n}\n\nexport function applyTokenizationToLine(\n  line: string,\n  tokenization: readonly HighlightedToken[],\n): React.ReactFragment {\n  return tokenization.map(({start, end, color}) => {\n    return (\n      <span key={start} className={`${CSS_CLASS_PREFIX}${color}`}>\n        {line.slice(start, end)}\n      </span>\n    );\n  });\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {Grammar, LanguageConfiguration} from './types';\n\nimport splitPath from './splitPath';\n\ntype LanguageIndex = {\n  /** File name to language id. */\n  filenames: Map<string, string>;\n  /** File extension to language id. */\n  extensions: Map<string, string>;\n  /** Language alias to language id. */\n  aliases: Map<string, string>;\n  /** All supported language ids. */\n  supportedLanguages: Set<string>;\n};\n\nexport default class FilepathClassifier {\n  private index: LanguageIndex;\n\n  constructor(\n    private grammars: {[scopeName: string]: Grammar},\n    private languages: {[language: string]: LanguageConfiguration},\n  ) {\n    this.index = createIndex(languages);\n  }\n\n  findScopeNameForPath(path: string): string | null {\n    const [, filename] = splitPath(path);\n    const language = this.findTextMateLanguage(filename);\n    return language != null ? this.findScopeNameForLanguage(language) : null;\n  }\n\n  findScopeNameForLanguage(language: string): string | null {\n    for (const [scopeName, grammar] of Object.entries(this.grammars)) {\n      if (grammar.language === language) {\n        return scopeName;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * This function is useful for mapping the tag used in a fenced code block\n   * to a scope name. For example, while the language id for JavaScript is\n   * `javascript` according to the LSP spec, users frequently use the alias\n   * `js` when creating fenced code blocks, so we would like to be able to map\n   * both to the scope name `source.js`.\n   *\n   * Note that the TextMate grammar for Markdown hardcodes these aliases,\n   * which is useful when displaying Markdown source in an editor:\n   *\n   * https://github.com/microsoft/vscode/blob/ea0e3e0d1fab/extensions/markdown-basics/syntaxes/markdown.tmLanguage.json#L960\n   *\n   * But when rendering Markdown as HTML, clients often have to provide their\n   * own syntax highlighting logic, which has to do its own mapping of the tag\n   * for the fenced code block. For example, here is where highlight.js declares\n   * its aliases for Javascript [sic]:\n   *\n   * https://github.com/highlightjs/highlight.js/blob/91e1898df92a/src/languages/javascript.js#L454\n   */\n  findScopeNameForAlias(alias: string): string | null {\n    const language = this.index.aliases.get(alias) ?? alias;\n    return this.findScopeNameForLanguage(language);\n  }\n\n  /**\n   * Given a filename like `index.js` or `BUCK`, returns the language id of the\n   * TextMate grammar that should be used to highlight it. This function does\n   * *not* depend on Monaco, so it can be used in other contexts.\n   */\n  findTextMateLanguage(filename: string): string | null {\n    const language = this.index.filenames.get(filename);\n    if (language != null) {\n      return language;\n    }\n\n    for (const [extension, language] of this.index.extensions.entries()) {\n      if (filename.endsWith(extension)) {\n        return language;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Makes a best-effort to map the specified language id (like `fsharp`) to a\n   * name that is more familiar to the user (like `F#`). Also supports aliases\n   * so that both `py` and `python` are mapped to `Python`.\n   */\n  getDisplayNameForLanguageId(languageIdOrAlias: string): string {\n    const scopeName =\n      this.findScopeNameForLanguage(languageIdOrAlias) ??\n      this.findScopeNameForAlias(languageIdOrAlias);\n    if (scopeName == null) {\n      return languageIdOrAlias;\n    }\n\n    return this.findDisplayNameForScopeName(scopeName) ?? languageIdOrAlias;\n  }\n\n  /**\n   * Try to return a human-readable name for the specified scope name.\n   * Unfortunately, VS Code does not currently expose the language name\n   * directly: https://github.com/microsoft/vscode/issues/109919. As a\n   * workaround, we make our best guess from the available aliases associated\n   * with the scope name.\n   */\n  findDisplayNameForScopeName(scopeName: string): string | null {\n    const {language} = this.grammars[scopeName] ?? {};\n    if (language != null) {\n      const aliases = this.languages[language].aliases ?? [];\n      // As a braindead heuristic, we pick the first alias that starts with a\n      // capital letter.\n      for (const alias of aliases) {\n        const firstChar = alias.charAt(0);\n        if (firstChar.toUpperCase() === firstChar) {\n          return alias;\n        }\n      }\n\n      // If none of the aliases start with a capital letter, pick the first.\n      return aliases[0] ?? null;\n    }\n    return null;\n  }\n}\n\nfunction createIndex(languages: {[language: string]: LanguageConfiguration}): LanguageIndex {\n  const filenames = new Map();\n  const extensions = new Map();\n  const aliases = new Map();\n  const supportedLanguages = new Set<string>();\n\n  for (const [language, configuration] of Object.entries(languages)) {\n    supportedLanguages.add(language);\n    configuration.aliases?.forEach((alias: string) => {\n      if (alias.toLowerCase() !== language) {\n        supportedLanguages.add(alias);\n        aliases.set(alias, language);\n      }\n    });\n    const languageFilenames = configuration.filenames ?? [];\n    languageFilenames.forEach((filename: string) => filenames.set(filename, language));\n\n    const languageExtensions = configuration.extensions ?? [];\n    languageExtensions.forEach((extension: string) => extensions.set(extension, language));\n  }\n\n  return {filenames, extensions, supportedLanguages, aliases};\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Split a path into [dirname, basename].\n */\nexport default function splitPath(path: string): [string, string] {\n  const index = path.lastIndexOf('/');\n  if (index !== -1) {\n    return [path.slice(0, index), path.slice(index + 1)];\n  } else {\n    return ['', path];\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport './SplitDiffView.css';\n\nimport type {LineRangeParams, TokenizedSplitDiff} from './diffServiceWorker';\nimport type {DiffCommitIDs} from './github/diffTypes';\nimport type {\n  GitHubPullRequestReviewThread,\n  GitHubPullRequestReviewThreadsByLine,\n} from './github/pullRequestTimelineTypes';\nimport type {GitObjectID} from './github/types';\nimport type {NewCommentInputCallbacks} from './recoil';\nimport type {Hunk, ParsedDiff} from 'diff';\nimport type {HighlightedToken} from 'shared/textmate-lib/tokenize';\n\nimport {FileHeader} from './SplitDiffFileHeader';\nimport SplitDiffRow from './SplitDiffRow';\nimport {diffAndTokenize, lineRange} from './diffServiceClient';\nimport {DiffSide} from './generated/graphql';\nimport {grammars, languages} from './generated/textmate/TextMateGrammarManifest';\nimport {\n  gitHubPullRequestLineToPositionForFile,\n  gitHubPullRequestSelectedVersionIndex,\n  gitHubPullRequestVersions,\n  gitHubDiffCommitIDs,\n  gitHubDiffNewCommentInputCallbacks,\n  gitHubThreadsForDiffFile,\n  nullAtom,\n} from './recoil';\nimport {primerColorMode} from './themeState';\nimport {groupBy} from './utils';\nimport {UnfoldIcon} from '@primer/octicons-react';\nimport {Box, Spinner, Text} from '@primer/react';\nimport {diffChars} from 'diff';\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useRecoilValue, useRecoilValueLoadable, waitForAll} from 'recoil';\nimport organizeLinesIntoGroups from 'shared/SplitDiffView/organizeLinesIntoGroups';\nimport {\n  applyTokenizationToLine,\n  createTokenizedIntralineDiff,\n  MAX_INPUT_LENGTH_FOR_INTRALINE_DIFF,\n} from 'shared/createTokenizedIntralineDiff';\nimport FilepathClassifier from 'shared/textmate-lib/FilepathClassifier';\nimport {unwrap} from 'shared/utils';\n\n/**\n * It is paramount that the blob for each non-null GitObjectID is written to\n * indexedDB so it can be read by a Web Worker.\n */\nexport type Props = {\n  path: string;\n  before: GitObjectID | null;\n  after: GitObjectID | null;\n  isPullRequest: boolean;\n};\n\nlet _classifier: FilepathClassifier | null = null;\n\nfunction getFilepathClassifier(): FilepathClassifier {\n  if (_classifier == null) {\n    _classifier = new FilepathClassifier(grammars, languages);\n  }\n  return _classifier;\n}\n\n/*\n * The Recoil values that are monitored by <SplitDiffView> are unlikely to\n * change over the lifetime of the component whereas `gitHubThreadsForDiffFile`\n * in <SplitDiffViewTable> *is* likely to change as the user adds comments,\n * which is why <SplitDiffViewTable> is its own component.\n */\n\nexport default function SplitDiffView({\n  path,\n  before,\n  after,\n  isPullRequest,\n}: Props): React.ReactElement {\n  const [open, setOpen] = useState(true);\n  const scopeName = getFilepathClassifier().findScopeNameForPath(path);\n  const colorMode = useRecoilValue(primerColorMode);\n  const loadable = useRecoilValueLoadable(\n    waitForAll([\n      diffAndTokenize({path, before, after, scopeName, colorMode}),\n      gitHubThreadsForDiffFile(path),\n      gitHubDiffNewCommentInputCallbacks,\n      // Reset the newCommentInput state when switching views (i.e., with\n      // different commit IDs being compared). Although `commitIDs` is not used\n      // directly in the effect, we do want to run it when `commitIDs` changes.\n      gitHubDiffCommitIDs,\n\n      // TODO(T122242329): This is a bit of a hack where we preload these values\n      // to ensure the derived state used by <SplitDiffRowSide> is guaranteed\n      // to be available synchronously, avoiding a potentially explosive amount\n      // of re-rendering due to notifications from useRecoilValue() about\n      // updates to async selectors. The contract between the fetching here and\n      // the loading in <SplitDiffRowSide> is very brittle, so ideally this\n      // would be redesigned to be more robust.\n      isPullRequest ? gitHubPullRequestVersions : nullAtom,\n      isPullRequest ? gitHubPullRequestSelectedVersionIndex : nullAtom,\n      isPullRequest ? gitHubPullRequestLineToPositionForFile(path) : nullAtom,\n    ]),\n  );\n\n  const [{patch, tokenization}, allThreads, newCommentInputCallbacks, commitIDs] =\n    loadable.getValue();\n  return (\n    <Box borderWidth=\"1px\" borderStyle=\"solid\" borderColor=\"border.default\" borderRadius={2}>\n      <FileHeader path={path} open={open} onChangeOpen={open => setOpen(open)} />\n      {open && (\n        <SplitDiffViewTable\n          path={path}\n          beforeOID={before}\n          tokenization={tokenization}\n          patch={patch}\n          allThreads={allThreads}\n          newCommentInputCallbacks={newCommentInputCallbacks}\n          commitIDs={commitIDs}\n        />\n      )}\n    </Box>\n  );\n}\n\nconst SplitDiffViewTable = React.memo(\n  ({\n    path,\n    beforeOID,\n    tokenization,\n    patch,\n    allThreads,\n    newCommentInputCallbacks,\n    commitIDs,\n  }: {\n    path: string;\n    beforeOID: GitObjectID | null;\n    tokenization: TokenizedSplitDiff;\n    patch: ParsedDiff;\n    allThreads: {[key in DiffSide]: GitHubPullRequestReviewThread[]} | null;\n    newCommentInputCallbacks: NewCommentInputCallbacks | null;\n    commitIDs: DiffCommitIDs | null;\n  }): React.ReactElement => {\n    const {onShowNewCommentInput, onResetNewCommentInput} = newCommentInputCallbacks ?? {};\n\n    useEffect(() => onResetNewCommentInput?.(), [commitIDs, onResetNewCommentInput]);\n    const [expandedSeparators, setExpandedSeparators] = useState<Readonly<Set<string>>>(\n      () => new Set(),\n    );\n    const onExpand = useCallback(\n      (key: string) => {\n        const amendedSet = new Set(expandedSeparators);\n        amendedSet.add(key);\n        setExpandedSeparators(amendedSet);\n      },\n      [expandedSeparators, setExpandedSeparators],\n    );\n\n    const threads =\n      allThreads == null\n        ? {\n            before: new Map() as GitHubPullRequestReviewThreadsByLine,\n            after: new Map() as GitHubPullRequestReviewThreadsByLine,\n          }\n        : {\n            before: threadsByLine(allThreads[DiffSide.Left]),\n            after: threadsByLine(allThreads[DiffSide.Right]),\n          };\n    const {hunks} = patch;\n    const lastHunkIndex = hunks.length - 1;\n    const rows: React.ReactElement[] = [];\n    hunks.forEach((hunk, index) => {\n      // Show a separator before the first hunk if the file starts with a\n      // section of unmodified lines that is hidden by default.\n      if (index === 0 && (hunk.oldStart !== 1 || hunk.newStart !== 1)) {\n        // TODO: test empty file that went from 644 to 755?\n        const key = 's0';\n        if (expandedSeparators.has(key)) {\n          const range = {\n            oid: unwrap(beforeOID),\n            start: 1,\n            numLines: hunk.oldStart - 1,\n          };\n          rows.push(\n            <ExpandingSeparator\n              key={key}\n              range={range}\n              path={path}\n              beforeLineStart={1}\n              afterLineStart={1}\n              threads={threads}\n              tokenization={tokenization}\n            />,\n          );\n        } else {\n          const numLines = Math.max(hunk.oldStart, hunk.newStart) - 1;\n          rows.push(<HunkSeparator key={key} numLines={numLines} onExpand={() => onExpand(key)} />);\n        }\n      }\n\n      addRowsForHunk(hunk, path, threads, tokenization, rows);\n\n      if (index !== lastHunkIndex) {\n        const nextHunk = hunks[index + 1];\n        const key = `s${hunk.oldStart}`;\n        if (expandedSeparators.has(key)) {\n          const start = hunk.oldStart + hunk.oldLines;\n          const numLines = nextHunk.oldStart - start;\n          const range = {\n            oid: unwrap(beforeOID),\n            start,\n            numLines,\n          };\n          rows.push(\n            <ExpandingSeparator\n              key={key}\n              range={range}\n              path={path}\n              beforeLineStart={hunk.oldStart + hunk.oldLines}\n              afterLineStart={hunk.newStart + hunk.newLines}\n              threads={threads}\n              tokenization={tokenization}\n            />,\n          );\n        } else {\n          const numLines = nextHunk.oldStart - hunk.oldLines - hunk.oldStart;\n          rows.push(<HunkSeparator key={key} numLines={numLines} onExpand={() => onExpand(key)} />);\n        }\n      }\n    });\n\n    // Include a final separator if the last hunk does not reach the end of the\n    // file. The way things currently work, we do not know the number of lines\n    // in the file unless tokenization is non-null. Because we support so many\n    // TextMate grammars, this should not be a major issue, in practice, though\n    // it should be addressed.\n    if (tokenization.before != null) {\n      const key = 's-last';\n      const lastHunk = hunks[lastHunkIndex];\n      if (expandedSeparators.has(key)) {\n        const start = lastHunk.oldStart + lastHunk.oldLines;\n        const numLines = tokenization.before.length - start;\n        const range = {\n          oid: unwrap(beforeOID),\n          start,\n          numLines,\n        };\n        rows.push(\n          <ExpandingSeparator\n            key={key}\n            range={range}\n            path={path}\n            beforeLineStart={lastHunk.oldStart + lastHunk.oldLines}\n            afterLineStart={lastHunk.newStart + lastHunk.newLines}\n            threads={threads}\n            tokenization={tokenization}\n          />,\n        );\n      } else {\n        const numLines = tokenization.before.length - lastHunk.oldStart - lastHunk.oldLines;\n        rows.push(<HunkSeparator key={key} numLines={numLines} onExpand={() => onExpand(key)} />);\n      }\n    }\n\n    return (\n      <table className=\"SplitDiffView-hunk-table\" onClick={onShowNewCommentInput}>\n        <colgroup>\n          <col width={50} />\n          <col width={'50%'} />\n          <col width={50} />\n          <col width={'50%'} />\n        </colgroup>\n        <tbody>{rows}</tbody>\n      </table>\n    );\n  },\n);\n\n/**\n * Adds new rows to the supplied `rows` array.\n */\nfunction addRowsForHunk(\n  hunk: Hunk,\n  path: string,\n  threads: {\n    before: GitHubPullRequestReviewThreadsByLine;\n    after: GitHubPullRequestReviewThreadsByLine;\n  },\n  tokenization: TokenizedSplitDiff,\n  rows: React.ReactElement[],\n): void {\n  const {oldStart, newStart, lines} = hunk;\n  const groups = organizeLinesIntoGroups(lines);\n  let beforeLineNumber = oldStart;\n  let afterLineNumber = newStart;\n\n  const {before: tokenizationBefore, after: tokenizationAfter} = tokenization;\n  groups.forEach(group => {\n    const {common, removed, added} = group;\n    addUnmodifiedRows(\n      common,\n      path,\n      'common',\n      beforeLineNumber,\n      afterLineNumber,\n      threads,\n      tokenization,\n      rows,\n    );\n    beforeLineNumber += common.length;\n    afterLineNumber += common.length;\n\n    const maxIndex = Math.max(removed.length, added.length);\n    for (let index = 0; index < maxIndex; ++index) {\n      const removedLine = removed[index];\n      const addedLine = added[index];\n      if (removedLine != null && addedLine != null) {\n        let beforeAndAfter;\n        if (tokenizationBefore != null && tokenizationAfter != null) {\n          beforeAndAfter = createTokenizedIntralineDiff(\n            removedLine,\n            tokenizationBefore[beforeLineNumber - 1],\n            addedLine,\n            tokenizationAfter[afterLineNumber - 1],\n          );\n        } else {\n          beforeAndAfter = createIntralineDiff(removedLine, addedLine);\n        }\n        const [before, after] = beforeAndAfter;\n        rows.push(\n          <SplitDiffRow\n            key={`${beforeLineNumber}/${afterLineNumber}`}\n            beforeLineNumber={beforeLineNumber}\n            before={before}\n            afterLineNumber={afterLineNumber}\n            after={after}\n            rowType=\"modify\"\n            path={path}\n            threads={threads}\n          />,\n        );\n        ++beforeLineNumber;\n        ++afterLineNumber;\n      } else if (removedLine != null) {\n        rows.push(\n          <SplitDiffRow\n            key={`${beforeLineNumber}/`}\n            beforeLineNumber={beforeLineNumber}\n            before={\n              tokenizationBefore != null\n                ? applyTokenization(removedLine, beforeLineNumber, tokenizationBefore)\n                : removedLine\n            }\n            afterLineNumber={null}\n            after={null}\n            rowType=\"remove\"\n            path={path}\n            threads={threads}\n          />,\n        );\n        ++beforeLineNumber;\n      } else {\n        rows.push(\n          <SplitDiffRow\n            key={`/${afterLineNumber}`}\n            beforeLineNumber={null}\n            before={null}\n            afterLineNumber={afterLineNumber}\n            after={\n              tokenizationAfter != null\n                ? applyTokenization(addedLine, afterLineNumber, tokenizationAfter)\n                : addedLine\n            }\n            rowType=\"add\"\n            path={path}\n            threads={threads}\n          />,\n        );\n        ++afterLineNumber;\n      }\n    }\n  });\n}\n\n/**\n * Adds new rows to the supplied `rows` array.\n */\nfunction addUnmodifiedRows(\n  lines: string[],\n  path: string,\n  rowType: 'common' | 'expanded',\n  initialBeforeLineNumber: number,\n  initialAfterLineNumber: number,\n  threads: {\n    before: GitHubPullRequestReviewThreadsByLine;\n    after: GitHubPullRequestReviewThreadsByLine;\n  },\n  tokenization: TokenizedSplitDiff,\n  rows: React.ReactElement[],\n): void {\n  let beforeLineNumber = initialBeforeLineNumber;\n  let afterLineNumber = initialAfterLineNumber;\n  const {before: tokenizationBefore, after: tokenizationAfter} = tokenization;\n  lines.forEach(lineContent => {\n    rows.push(\n      <SplitDiffRow\n        key={`${beforeLineNumber}/${afterLineNumber}`}\n        beforeLineNumber={beforeLineNumber}\n        before={\n          tokenizationBefore != null\n            ? applyTokenization(lineContent, beforeLineNumber, tokenizationBefore)\n            : lineContent\n        }\n        afterLineNumber={afterLineNumber}\n        after={\n          tokenizationAfter != null\n            ? applyTokenization(lineContent, afterLineNumber, tokenizationAfter)\n            : lineContent\n        }\n        rowType={rowType}\n        path={path}\n        threads={threads}\n      />,\n    );\n    ++beforeLineNumber;\n    ++afterLineNumber;\n  });\n}\n\nfunction createIntralineDiff(\n  before: string,\n  after: string,\n): [React.ReactFragment, React.ReactFragment] {\n  // For lines longer than this, diffChars() can get very expensive to compute\n  // and is likely of little value to the user.\n  if (before.length + after.length > MAX_INPUT_LENGTH_FOR_INTRALINE_DIFF) {\n    return [before, after];\n  }\n\n  const changes = diffChars(before, after);\n  const beforeElements: React.ReactNode[] = [];\n  const afterElements: React.ReactNode[] = [];\n  changes.forEach((change, index) => {\n    const {added, removed, value} = change;\n    if (added) {\n      afterElements.push(\n        <span key={index} className=\"patch-add-word\">\n          {value}\n        </span>,\n      );\n    } else if (removed) {\n      beforeElements.push(\n        <span key={index} className=\"patch-remove-word\">\n          {value}\n        </span>,\n      );\n    } else {\n      beforeElements.push(value);\n      afterElements.push(value);\n    }\n  });\n\n  return [beforeElements, afterElements];\n}\n\nfunction threadsByLine(\n  threads: GitHubPullRequestReviewThread[],\n): GitHubPullRequestReviewThreadsByLine {\n  return groupBy(threads, thread => thread.originalLine ?? null);\n}\n\n/**\n * Visual element to delimit the discontinuity in a SplitDiffView.\n */\nfunction HunkSeparator({\n  numLines,\n  onExpand,\n}: {\n  numLines: number;\n  onExpand: () => unknown;\n}): React.ReactElement {\n  // TODO: Ensure numLines is never below a certain threshold: it takes up more\n  // space to display the separator than it does to display the text (though\n  // admittedly fetching the collapsed text is an async operation).\n  const label = numLines === 1 ? 'Expand 1 line' : `Expand ${numLines} lines`;\n  return (\n    <SeparatorRow>\n      <Box\n        display=\"inline-block\"\n        onClick={onExpand}\n        padding={1}\n        sx={{cursor: 'pointer', ':hover': {bg: 'accent.emphasis', color: 'fg.onEmphasis'}}}>\n        <UnfoldIcon size={16} />\n        <Text paddingX={4}>{label}</Text>\n        <UnfoldIcon size={16} />\n      </Box>\n    </SeparatorRow>\n  );\n}\n\ntype ExpandingSeparatorProps = {\n  path: string;\n  range: LineRangeParams;\n  beforeLineStart: number;\n  afterLineStart: number;\n  threads: {\n    before: GitHubPullRequestReviewThreadsByLine;\n    after: GitHubPullRequestReviewThreadsByLine;\n  };\n  tokenization: TokenizedSplitDiff;\n};\n\n/**\n * This replaces a <HunkSeparator> when the user clicks on it to expand the\n * hidden file contents.\n */\nfunction ExpandingSeparator({\n  path,\n  range,\n  beforeLineStart,\n  afterLineStart,\n  threads,\n  tokenization,\n}: ExpandingSeparatorProps): React.ReactElement {\n  const loadable = useRecoilValueLoadable(lineRange(range));\n  switch (loadable.state) {\n    case 'hasValue': {\n      const rows: React.ReactElement[] = [];\n      const lines = loadable.contents;\n      addUnmodifiedRows(\n        lines,\n        path,\n        'expanded',\n        beforeLineStart,\n        afterLineStart,\n        threads,\n        tokenization,\n        rows,\n      );\n      return <>{rows}</>;\n    }\n    case 'loading': {\n      return (\n        <SeparatorRow>\n          <Box\n            padding={1}\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\">\n            <Box display=\"flex\" alignItems=\"center\">\n              <Spinner size=\"small\" />\n              <Text marginLeft={2}>Loading...</Text>\n            </Box>\n          </Box>\n        </SeparatorRow>\n      );\n    }\n    case 'hasError': {\n      return (\n        <SeparatorRow>\n          <Box\n            padding={1}\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\">\n            <Box display=\"flex\" alignItems=\"center\">\n              <Text>Error: {loadable.contents.message}</Text>\n            </Box>\n          </Box>\n        </SeparatorRow>\n      );\n    }\n  }\n}\n\nfunction SeparatorRow({children}: {children: React.ReactNode}): React.ReactElement {\n  return (\n    <Box as=\"tr\" bg=\"accent.subtle\" color=\"fg.muted\" height={12}>\n      <Box as=\"td\" colSpan={4} className=\"separator\">\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\n/**\n * Simple tokenization case when there is no styling due to an intraline diff.\n */\nfunction applyTokenization(\n  line: string,\n  lineNumber: number,\n  tokenization: readonly HighlightedToken[][],\n): React.ReactFragment {\n  const info = tokenization[lineNumber - 1];\n  if (info != null && info.length !== 0) {\n    return applyTokenizationToLine(line, info);\n  } else {\n    return line;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\ntype HunkGroup = {\n  common: string[];\n  removed: string[];\n  added: string[];\n};\n\n/**\n * We must find the groups within `lines` so that multiline sequences of\n * modified lines are displayed correctly. A group is defined by:\n *\n * - a sequence of 0 or more \"common lines\" that start with ' '\n * - a sequence of 0 or more \"removed lines\" that start with '-'\n * - a sequence of 0 or more \"added lines\" that start with '+'\n *\n * Therefore, the end of a group is determined by either:\n *\n * - reaching the end of a list of lines\n * - encountering a \"common line\" after an \"added\" or \"removed\" line.\n */\nexport default function organizeLinesIntoGroups(lines: string[]): HunkGroup[] {\n  const groups = [];\n  let group = newGroup();\n  lines.forEach(fullLine => {\n    const firstChar = fullLine.charAt(0);\n    const line = fullLine.slice(1);\n    if (firstChar === ' ') {\n      if (hasDeltas(group)) {\n        // This must be the start of a new group!\n        groups.push(group);\n        group = newGroup();\n      }\n      group.common.push(line);\n    } else if (firstChar === '-') {\n      group.removed.push(line);\n    } else if (firstChar === '+') {\n      group.added.push(line);\n    }\n  });\n\n  groups.push(group);\n\n  return groups;\n}\n\nfunction hasDeltas(group: HunkGroup): boolean {\n  return group.removed.length !== 0 || group.added.length !== 0;\n}\n\nfunction newGroup(): HunkGroup {\n  return {\n    common: [],\n    removed: [],\n    added: [],\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {CommitChange, Diff, ModifyChange} from './github/diffTypes';\nimport type {GitObjectID} from './github/types';\n\nimport {FileHeader} from './SplitDiffFileHeader';\nimport SplitDiffView from './SplitDiffView';\nimport joinPath from './joinPath';\nimport {fileContentsDelta, gitHubBlob} from './recoil';\nimport {Box, Text} from '@primer/react';\nimport {useRecoilValueLoadable} from 'recoil';\n\nexport default function DiffView({diff, isPullRequest}: {diff: Diff; isPullRequest: boolean}) {\n  if (diff != null) {\n    const children = diff.map(change => {\n      const name = change.type === 'modify' ? change.before.name : change.entry.name;\n      const key = `${change.basePath}/${name}`;\n      return (\n        <Box key={key} paddingY={1}>\n          <ChangeDisplay change={change} isPullRequest={isPullRequest} />\n        </Box>\n      );\n    });\n    // TODO: Add SuspenseList here so files can load in individually\n    return <div>{children}</div>;\n  } else {\n    return <div>commit not found or fetched from GitHub URL above</div>;\n  }\n}\n\nfunction ChangeDisplay({change, isPullRequest}: {change: CommitChange; isPullRequest: boolean}) {\n  switch (change.type) {\n    case 'add': {\n      const {basePath, entry} = change;\n      const {name, oid} = entry;\n      return <AddedFile basePath={basePath} name={name} oid={oid} isPullRequest={isPullRequest} />;\n    }\n    case 'remove': {\n      const {basePath, entry} = change;\n      const {name, oid} = entry;\n      return <RemovedFile basePath={basePath} name={name} oid={oid} />;\n    }\n    case 'modify': {\n      return <ModifiedFile modify={change} isPullRequest={isPullRequest} />;\n    }\n  }\n}\n\nfunction AddedFile({\n  basePath,\n  name,\n  oid,\n  isPullRequest,\n}: {\n  basePath: string;\n  name: string;\n  oid: GitObjectID;\n  isPullRequest: boolean;\n}) {\n  const path = joinPath(basePath, name);\n  const blobLoadable = useRecoilValueLoadable(gitHubBlob(oid));\n  switch (blobLoadable.state) {\n    case 'hasValue': {\n      const {contents: blob} = blobLoadable;\n      const {isBinary, text} = blob ?? {};\n      if (text != null && !isBinary) {\n        return (\n          <SplitDiffView path={path} before={null} after={oid} isPullRequest={isPullRequest} />\n        );\n      } else {\n        return <BinaryFile path={path} />;\n      }\n    }\n    case 'loading': {\n      // Trigger suspense while loading\n      blobLoadable.getValue();\n      return <div>{`loading patch for ${path}`}</div>;\n    }\n    case 'hasError': {\n      return <div>{`error loading ${path}`}</div>;\n    }\n  }\n}\n\nfunction RemovedFile({basePath, name, oid}: {basePath: string; name: string; oid: GitObjectID}) {\n  const path = joinPath(basePath, name);\n  const blobLoadable = useRecoilValueLoadable(gitHubBlob(oid));\n  switch (blobLoadable.state) {\n    case 'hasValue': {\n      return (\n        <div>\n          <FileHeader path={path} />\n          <div className=\"patch-remove-line\">File removed.</div>\n        </div>\n      );\n    }\n    case 'loading': {\n      // Trigger suspense while loading\n      blobLoadable.getValue();\n      return <div>{`loading patch for ${path}`}</div>;\n    }\n    case 'hasError': {\n      return <div>{`error loading ${path}`}</div>;\n    }\n  }\n}\n\nfunction ModifiedFile({modify, isPullRequest}: {modify: ModifyChange; isPullRequest: boolean}) {\n  const {basePath, before, after} = modify;\n  const path = joinPath(basePath, before.name);\n  const fileMod = {\n    before: before.oid,\n    after: after.oid,\n    path,\n  };\n  const fileModLoadable = useRecoilValueLoadable(fileContentsDelta(fileMod));\n  switch (fileModLoadable.state) {\n    case 'hasValue': {\n      const {contents: delta} = fileModLoadable;\n      const {before, after} = delta;\n      if (before == null || after == null) {\n        // Something went wrong?\n        return null;\n      }\n\n      if (before.isBinary || after.isBinary) {\n        // We could handle this more gracefully, particularly if only one of the\n        // two files is binary, but this is good enough, for now.\n        return <BinaryFile path={path} />;\n      } else if (before.text == null || after.text == null) {\n        // Something went wrong?\n        return null;\n      } else {\n        return (\n          <SplitDiffView\n            path={path}\n            before={before.oid}\n            after={after.oid}\n            isPullRequest={isPullRequest}\n          />\n        );\n      }\n    }\n    case 'loading': {\n      // Trigger suspense while loading\n      fileModLoadable.getValue();\n      return <div>{`loading patch for ${path}`}</div>;\n    }\n    case 'hasError': {\n      return <div>{`error loading ${path}`}</div>;\n    }\n  }\n}\n\nfunction BinaryFile({path}: {path: string}) {\n  // TODO(mbolin): Check for special binary headers, such as PNG.\n  return (\n    <Box>\n      <FileHeader path={path} />\n      <Text>Binary file not shown.</Text>\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {Commit} from './github/types';\n\nimport CenteredSpinner from './CenteredSpinner';\nimport CommitHeader from './CommitHeader';\nimport CommitLink from './CommitLink';\nimport DiffView from './DiffView';\nimport TrustedRenderedMarkdown from './TrustedRenderedMarkdown';\nimport {\n  gitHubCommitID,\n  gitHubCurrentCommit,\n  gitHubDiffForCurrentCommit,\n  gitHubOrgAndRepo,\n} from './recoil';\nimport {Box, Text} from '@primer/react';\nimport {Suspense, useEffect} from 'react';\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\n\nexport default function CommitView({org, repo, oid}: {org: string; repo: string; oid: string}) {\n  const setOrgAndRepo = useSetRecoilState(gitHubOrgAndRepo);\n  const setCommitID = useSetRecoilState(gitHubCommitID);\n\n  useEffect(() => {\n    setOrgAndRepo({org, repo});\n  }, [org, repo, setOrgAndRepo]);\n\n  useEffect(() => {\n    setCommitID(oid);\n  }, [oid, setCommitID]);\n\n  return (\n    <Box>\n      <Suspense fallback={<CenteredSpinner message=\"Loading commit...\" />}>\n        <CommitHeader />\n        <CommitDisplay />\n      </Suspense>\n    </Box>\n  );\n}\n\nfunction CommitDisplay() {\n  const diff = useRecoilValue(gitHubDiffForCurrentCommit);\n  const commit = useRecoilValue(gitHubCurrentCommit);\n\n  if (diff != null) {\n    return (\n      <Box>\n        <Box marginX=\"6px\" overflowX=\"auto\">\n          {commit && <CommitMessage commit={commit} />}\n          <DiffView diff={diff.diff} isPullRequest={false} />\n        </Box>\n      </Box>\n    );\n  } else {\n    return (\n      <Box>\n        <Text>commit not found or fetched from GitHub URL above</Text>\n      </Box>\n    );\n  }\n}\n\nfunction CommitMessage({commit}: {commit: Commit}) {\n  return (\n    <Box mb={1}>\n      <TrustedRenderedMarkdown trustedHTML={commit.messageBodyHTML} />\n      <CommitParents commit={commit} />\n    </Box>\n  );\n}\n\nfunction CommitParents({commit}: {commit: Commit}) {\n  const {org, repo} = useRecoilValue(gitHubOrgAndRepo) ?? {};\n  const {parents} = commit;\n  if (parents.length === 0 || org == null || repo == null) {\n    return null;\n  }\n\n  const children = parents.map(parent => (\n    <Box key={parent} fontSize={12}>\n      Parent: <CommitLink org={org} repo={repo} oid={parent} />\n    </Box>\n  ));\n  return <Box>{children}</Box>;\n}\n","import styled from 'styled-components';\nimport { variant } from 'styled-system';\nimport { get } from './constants';\nimport sx from './sx';\nconst variants = variant({\n  variants: {\n    default: {\n      color: 'fg.default',\n      backgroundColor: 'accent.subtle',\n      borderColor: 'accent.muted',\n      svg: {\n        color: 'accent.fg'\n      }\n    },\n    success: {\n      color: 'fg.default',\n      backgroundColor: 'success.subtle',\n      borderColor: 'success.muted',\n      svg: {\n        color: 'success.fg'\n      }\n    },\n    danger: {\n      color: 'fg.default',\n      backgroundColor: 'danger.subtle',\n      borderColor: 'danger.muted',\n      svg: {\n        color: 'danger.fg'\n      }\n    },\n    warning: {\n      color: 'fg.default',\n      backgroundColor: 'attention.subtle',\n      borderColor: 'attention.muted',\n      svg: {\n        color: 'attention.fg'\n      }\n    }\n  }\n});\nconst Flash = styled.div.withConfig({\n  displayName: \"Flash\",\n  componentId: \"sc-1jd8n2z-0\"\n})([\"position:relative;color:\", \";padding:\", \";border-style:solid;border-width:\", \";border-radius:\", \";margin-top:\", \";p:last-child{margin-bottom:0;}svg{margin-right:\", \";}\", \";\", \";\"], get('colors.fg.default'), get('space.3'), props => props.full ? '1px 0px' : '1px', props => props.full ? '0' : get('radii.2'), props => props.full ? '-1px' : '0', get('space.2'), variants, sx);\nFlash.defaultProps = {\n  variant: 'default'\n};\nexport default Flash;","import React from 'react';\nimport styled from 'styled-components';\nimport sx from './sx';\n\nfunction Octicon({\n  icon: IconComponent,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(IconComponent, rest);\n}\n\nOcticon.displayName = \"Octicon\";\nconst StyledOcticon = styled(Octicon).withConfig({\n  displayName: \"StyledOcticon\",\n  componentId: \"sc-1lhyyr-0\"\n})([\"\", \"\"], ({\n  color,\n  sx: sxProp\n}) => sx({\n  sx: {\n    color,\n    ...sxProp\n  }\n}));\nStyledOcticon.defaultProps = {\n  size: 16\n};\nexport default StyledOcticon;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {AlertIcon} from '@primer/octicons-react';\nimport {Text, Flash, StyledOcticon, Box} from '@primer/react';\nimport {Component} from 'react';\n\nfunction ErrorNotice({title, error}: {title: React.ReactNode; error: Error}) {\n  return (\n    <Flash variant=\"warning\" sx={{margin: 20}}>\n      <StyledOcticon icon={AlertIcon} />\n      <Text fontWeight=\"bold\">{title}</Text>\n      <Box as=\"p\">\n        <Text fontFamily={'mono'}>{error.stack ?? error.toString()}</Text>\n      </Box>\n    </Flash>\n  );\n}\n\ntype Props = {\n  children: React.ReactNode;\n};\ntype State = {error: Error | null};\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {error: null};\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return {error};\n  }\n\n  render() {\n    if (this.state.error != null) {\n      return <ErrorNotice title=\"Something went wrong\" error={this.state.error} />;\n    }\n\n    return this.props.children;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport Link from './Link';\nimport URLFor from './URLFor';\nimport {gitHubHostname} from './github/gitHubCredentials';\nimport {MarkGithubIcon} from '@primer/octicons-react';\nimport {Box, Text} from '@primer/react';\nimport {useRecoilValue} from 'recoil';\n\nexport default function GitHubProjectPage(props: {org: string; repo: string}): React.ReactElement {\n  const orgRepo = `${props.org}/${props.repo}`;\n  const hostname = useRecoilValue(gitHubHostname);\n  return (\n    <Box padding={2}>\n      <Box pb={2}>\n        <Link href={`https://${hostname}${URLFor.project(props)}`}>\n          <Text>\n            View {orgRepo} on GitHub <MarkGithubIcon />\n          </Text>\n        </Link>\n      </Box>\n      <Box>\n        <Link href={URLFor.pulls(props)}>\n          <Text>View pull requests for {orgRepo}</Text>\n        </Link>\n      </Box>\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {FunctionComponent, PropsWithChildren} from 'react';\n\nimport {createContext, useContext, useEffect} from 'react';\n\n/* eslint-disable no-bitwise */\n\ntype Modifiers = Modifier | Array<Modifier>;\n/**\n * Modifiers for keyboard shortcuts, intended to be bitwise-OR'd together.\n * e.g. `Modifier.CMD | Modifier.CTRL`.\n */\nexport enum Modifier {\n  NONE = 0,\n  SHIFT = 1 << 0,\n  CTRL = 1 << 1,\n  ALT = 1 << 2,\n  CMD = 1 << 3,\n}\n\nexport enum KeyCode {\n  Escape = 27,\n  One = 49,\n  Two = 50,\n  Three = 51,\n  Four = 52,\n  Five = 53,\n  A = 65,\n  B = 66,\n  C = 67,\n  D = 68,\n  N = 78,\n  P = 80,\n  R = 82,\n  S = 83,\n  T = 84,\n  Period = 190,\n  QuestionMark = 191,\n  SingleQuote = 222,\n  LeftArrow = 37,\n  UpArrow = 38,\n  RightArrow = 39,\n  DownArrow = 40,\n  Backspace = 8,\n  Plus = 187,\n  Minus = 189,\n}\n\ntype CommandDefinition = [Modifiers, KeyCode];\n\ntype CommandMap<CommandName extends string> = Record<CommandName, CommandDefinition>;\n\nfunction isTargetTextInputElement(event: KeyboardEvent): boolean {\n  return (\n    event.target != null &&\n    /(vscode-text-area|vscode-text-field|textarea|input)/i.test(\n      (event.target as HTMLElement).tagName,\n    )\n  );\n}\n\nclass CommandDispatcher<CommandName extends string> extends (\n  window as {\n    EventTarget: {\n      new (): EventTarget;\n      prototype: EventTarget;\n    };\n  }\n).EventTarget {\n  private keydownListener: (event: KeyboardEvent) => void;\n  constructor(commands: CommandMap<CommandName>) {\n    super();\n    const knownKeysWithCommands = new Set<KeyCode>();\n    for (const cmdDef of Object.values(commands) as Array<CommandDefinition>) {\n      const [, key] = cmdDef;\n      knownKeysWithCommands.add(key);\n    }\n    this.keydownListener = (event: KeyboardEvent) => {\n      if (!knownKeysWithCommands.has(event.keyCode)) {\n        return;\n      }\n      if (isTargetTextInputElement(event)) {\n        // we don't want shortcuts to interfere with text entry\n        return;\n      }\n      const modValue =\n        (event.shiftKey ? Modifier.SHIFT : 0) |\n        (event.ctrlKey ? Modifier.CTRL : 0) |\n        (event.altKey ? Modifier.ALT : 0) |\n        (event.metaKey ? Modifier.CMD : 0);\n\n      for (const [command, cmdAttrs] of Object.entries(commands) as Array<\n        [CommandName, CommandDefinition]\n      >) {\n        const [mods, key] = cmdAttrs;\n        if (key === event.keyCode && collapseModifiersToNumber(mods) === modValue) {\n          this.dispatchEvent(new Event(command));\n          break;\n        }\n      }\n    };\n    document.body.addEventListener('keydown', this.keydownListener);\n  }\n}\n\nfunction collapseModifiersToNumber(mods: Modifiers): number {\n  return Array.isArray(mods) ? mods.reduce((acc, mod) => acc | mod, Modifier.NONE) : mods;\n}\n\n/**\n * Add support for commands which are triggered by keyboard shortcuts.\n * return a top-level context provider which listens for global keyboard input,\n * plus a `useCommand` hook that lets you handle commands as they are dispatched,\n * plus a callback to dispatch events at any point in code (to simulate keyboard shortcuts).\n *\n * Commands are defined by mapping string command names to a key plus a set of modifiers.\n * CommandNames are statically known so that `useCommand` is type-safe.\n * Modifiers are a bitwise-OR union of {@link Modifier}, like `Modifier.CTRL | Modifier.CMD`\n *\n * Commands are not dispatched when the target is an input element, to ensure we don't affect typing.\n */\nexport function makeCommandDispatcher<CommandName extends string>(\n  commands: CommandMap<CommandName>,\n): [\n  FunctionComponent<PropsWithChildren>,\n  (command: CommandName, handler: () => void) => void,\n  (command: CommandName) => void,\n  CommandMap<CommandName>,\n] {\n  const commandDispatcher = new CommandDispatcher(commands);\n  const Context = createContext(commandDispatcher);\n\n  function useCommand(command: CommandName, handler: () => void) {\n    const dispatcher = useContext(Context);\n\n    // register & unregister the event listener while the component is mounted\n    useEffect(() => {\n      dispatcher.addEventListener(command, handler);\n      return () => dispatcher.removeEventListener(command, handler);\n    }, [command, handler, dispatcher]);\n  }\n\n  return [\n    ({children}) => <Context.Provider value={commandDispatcher}>{children}</Context.Provider>,\n    useCommand,\n    (command: CommandName) => commandDispatcher.dispatchEvent(new Event(command)),\n    commands,\n  ];\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {makeCommandDispatcher, KeyCode, Modifier} from 'shared/KeyboardShortcuts';\n\nexport const [ShortcutCommandContext, useCommand] = makeCommandDispatcher({\n  ToggleSidebar: [Modifier.CMD, KeyCode.Period],\n  NextInStack: [Modifier.SHIFT, KeyCode.N],\n  PreviousInStack: [Modifier.SHIFT, KeyCode.P],\n  Approve: [Modifier.ALT, KeyCode.A],\n  Comment: [Modifier.ALT, KeyCode.C],\n  RequestChanges: [Modifier.ALT, KeyCode.R],\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {Theme} from '@primer/react/lib/ThemeProvider';\n\nimport {useTheme} from '@primer/react';\nimport React from 'react';\n\n/**\n * React component that dynamically generates a <style> element using values\n * from the active Primer theme. Normally, we can rely on specifying the `sx`\n * prop for our React components, but for <BodyHTML>, we get the HTML as an\n * opaque string, so we cannot leverage `sx`.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function PrimerStyles(): React.ReactElement {\n  const {theme} = useTheme();\n  return (\n    <style>\n      {`\n${defineStyleOnBody(theme)}\n\n.PRT-bodyHTML p {\n  margin-top: 0;\n  margin-bottom: 16px;\n}\n\n.PRT-review-comment-text {\n  font-size: 13px;\n  line-height: 16px;\n}\n\n.PRT-bodyHTML a {\n  color: ${theme?.colors.accent.fg}\n}\n\n.PRT-bodyHTML pre, .PRT-bodyHTML code {\n  font-family: ${theme?.fonts.mono};\n}\n\n.PRT-bodyHTML pre {\n  background-color: ${theme?.colors.canvas.subtle};\n  border-radius: 6px;\n  font-size: 85%;\n  line-height: 1.45;\n  margin-bottom: 16px;\n  padding: 16px;\n}\n\n/* Intended for inline code elements. */\n.PRT-bodyHTML code {\n  background-color: ${theme?.colors.neutral.muted};\n  border-radius: 6px;\n  font-size: 85%;\n  padding: 0.2em 0.4em;\n}\n\n/**\n * Because code blocks are rendered as <pre><code /></pre>, we have to override\n * a number of styles for inline <code> elements when in a <pre> code block.\n */\n.PRT-bodyHTML pre > code {\n  background-color: transparent;\n  border: 0;\n  font-size: 100%;\n  padding: 0;\n}\n\n.PRT-bodyHTML blockquote {\n  border-left: 0.25em solid ${theme?.colors.border.default};\n  color: ${theme?.colors.fg.muted};\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n  padding: 0 1em;\n}\n\n.PRT-bodyHTML > *:last-child {\n  margin-bottom: 0 !important;\n}\n\n.reviewstack .drawer-label {\n  background-color: ${theme?.colors.neutral.muted};\n}\n\n.reviewstack {\n  --panel-view-border: ${theme?.colors.border.default};\n}\n`}\n    </style>\n  );\n});\n\n/**\n * Defining a style on <body> admittedly makes <App> \"less portable\" because it\n * imposes requirements on the look of the host page, but this is the most\n * straightforward way to ensure things look right when <App> is less than the\n * height of the full page. We can make this an option on the props for <App>\n * if it becomes an issue.\n */\nfunction defineStyleOnBody(theme: Theme | undefined) {\n  return `\\\nbody {\n  background-color: ${theme?.colors.canvas.default};\n}`;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {gitHubPullRequest} from './recoil';\nimport {CounterLabel} from '@primer/react';\nimport {useRecoilValue} from 'recoil';\n\nexport default function PullRequestChangeCount(): React.ReactElement | null {\n  const pullRequest = useRecoilValue(gitHubPullRequest);\n\n  if (pullRequest == null) {\n    return null;\n  }\n\n  const {additions, deletions} = pullRequest;\n\n  return (\n    <>\n    <CounterLabel sx={{ backgroundColor: \"success.muted\" }}>+{additions}</CounterLabel>\n    <CounterLabel scheme=\"primary\" sx={{ backgroundColor: \"danger.muted\", color: \"black\" }}>-{deletions}</CounterLabel>\n    </>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {Box, Text} from '@primer/react';\nimport React from 'react';\n\ntype Props = {\n  label: string;\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function FieldLabel({label}: Props): React.ReactElement {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" padding={1}>\n      <Text fontSize={1} fontWeight=\"bold\">\n        {label}\n      </Text>\n    </Box>\n  );\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useEffect, useMemo} from 'react';\n\nfunction debounce<T>(\n  f: (arg: T) => void,\n  wait: number,\n): {\n  debounced: (arg: T) => void;\n  reset: () => void;\n} {\n  let timeout: number | undefined;\n\n  function reset() {\n    window.clearTimeout(timeout);\n    timeout = undefined;\n  }\n\n  function debounced(arg: T): void {\n    reset();\n    timeout = window.setTimeout(() => {\n      reset();\n      f(arg);\n    }, wait);\n  }\n\n  return {\n    debounced,\n    reset,\n  };\n}\n\nexport default function useDebounced<T>(f: (arg: T) => void, wait = 500): (arg: T) => void {\n  const {debounced, reset} = useMemo(() => debounce(f, wait), [f, wait]);\n\n  useEffect(() => reset, [reset]);\n\n  return debounced;\n}\n","/** This context can be used by components that compose ActionList inside a Menu */\nimport React from 'react';\nexport const ActionListContainerContext = /*#__PURE__*/React.createContext({});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport sx, { merge } from '../sx';\nimport { ActionListContainerContext } from './ActionListContainerContext';\nexport const ListContext = /*#__PURE__*/React.createContext({});\nconst ListBox = styled.ul.withConfig({\n  displayName: \"List__ListBox\",\n  componentId: \"sc-1x7olzq-0\"\n})(sx);\nexport const List = /*#__PURE__*/React.forwardRef(({\n  variant = 'inset',\n  selectionVariant,\n  showDividers = false,\n  role,\n  sx: sxProp = {},\n  ...props\n}, forwardedRef) => {\n  const styles = {\n    margin: 0,\n    paddingInlineStart: 0,\n    // reset ul styles\n    paddingY: variant === 'inset' ? 2 : 0\n  };\n  /** if list is inside a Menu, it will get a role from the Menu */\n\n  const {\n    listRole,\n    listLabelledBy,\n    selectionVariant: containerSelectionVariant // TODO: Remove after DropdownMenu2 deprecation\n\n  } = React.useContext(ActionListContainerContext);\n  return /*#__PURE__*/React.createElement(ListBox, _extends({\n    sx: merge(styles, sxProp),\n    role: role || listRole,\n    \"aria-labelledby\": listLabelledBy\n  }, props, {\n    ref: forwardedRef\n  }), /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: {\n      variant,\n      selectionVariant: selectionVariant || containerSelectionVariant,\n      showDividers,\n      role: role || listRole\n    }\n  }, props.children));\n});\nList.displayName = 'ActionList';","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\nexport interface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n    current: 0\n  }), [cur]);\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  return useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [defaultId]);\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  let isInSSRContext = cur !== defaultContext;\n  let [isSSR, setIsSSR] = useState(isInSSRContext);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined' && isInSSRContext) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return isSSR;\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport Box from '../Box';\nimport { ListContext } from './List';\nexport const GroupContext = /*#__PURE__*/React.createContext({});\nexport const Group = ({\n  title,\n  variant = 'subtle',\n  auxiliaryText,\n  selectionVariant,\n  role,\n  sx = {},\n  ...props\n}) => {\n  const labelId = useSSRSafeId();\n  const {\n    role: listRole\n  } = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    as: \"li\",\n    role: listRole ? 'none' : undefined,\n    sx: {\n      '&:not(:first-child)': {\n        marginTop: 2\n      },\n      listStyle: 'none',\n      // hide the ::marker inserted by browser's stylesheet\n      ...sx\n    }\n  }, props), title && /*#__PURE__*/React.createElement(Header, {\n    title: title,\n    variant: variant,\n    auxiliaryText: auxiliaryText,\n    labelId: labelId\n  }), /*#__PURE__*/React.createElement(GroupContext.Provider, {\n    value: {\n      selectionVariant\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"ul\",\n    sx: {\n      paddingInlineStart: 0\n    },\n    \"aria-labelledby\": title ? labelId : undefined,\n    role: role || listRole && 'group'\n  }, props.children)));\n};\nGroup.displayName = \"Group\";\n\n/**\n * Displays the name and description of a `Group`.\n *\n * For visual presentation only. It's hidden from screen readers.\n */\nconst Header = ({\n  variant,\n  title,\n  auxiliaryText,\n  labelId,\n  ...props\n}) => {\n  const {\n    variant: listVariant\n  } = React.useContext(ListContext);\n  const styles = {\n    paddingY: '6px',\n    paddingX: listVariant === 'full' ? 2 : 3,\n    fontSize: 0,\n    fontWeight: 'bold',\n    color: 'fg.muted',\n    ...(variant === 'filled' && {\n      backgroundColor: 'canvas.subtle',\n      marginX: 0,\n      marginBottom: 2,\n      borderTop: '1px solid',\n      borderBottom: '1px solid',\n      borderColor: 'neutral.muted'\n    })\n  };\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    sx: styles,\n    role: \"presentation\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"span\", {\n    id: labelId\n  }, title), auxiliaryText && /*#__PURE__*/React.createElement(\"span\", null, auxiliaryText));\n};\n\nHeader.displayName = \"Header\";","// Inspired from reach-ui: https://github.com/reach/reach-ui/blob/develop/packages/utils/src/use-force-update.ts\nimport React from 'react';\nexport const useForceUpdate = () => {\n  const [, rerender] = React.useState({});\n  return React.useCallback(() => rerender({}), []);\n};","import { useEffect, useLayoutEffect } from 'react';\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;","import React from 'react';\nimport { useForceUpdate } from './use-force-update';\nimport useLayoutEffect from './useIsomorphicLayoutEffect';\n/** createSlots is a factory that can create a\n *  typesafe Slots + Slot pair to use in a component definition\n *  For example: ActionList.Item uses createSlots to get a Slots wrapper\n *  + Slot component that is used by LeadingVisual, Description\n */\n\nconst createSlots = slotNames => {\n  const SlotsContext = /*#__PURE__*/React.createContext({\n    registerSlot: () => null,\n    unregisterSlot: () => null,\n    context: {}\n  }); // maintain a static reference to avoid infinite render loop\n\n  const defaultContext = Object.freeze({});\n  /** Slots uses a Double render strategy inspired by [reach-ui/descendants](https://github.com/reach/reach-ui/tree/develop/packages/descendants)\n   *  Slot registers themself with the Slots parent.\n   *  When all the children have mounted = registered themselves in slot,\n   *  we re-render the parent component to render with slots\n   */\n\n  const Slots = ({\n    context = defaultContext,\n    children\n  }) => {\n    // initialise slots\n    const slotsDefinition = {};\n    slotNames.map(name => slotsDefinition[name] = null);\n    const slotsRef = React.useRef(slotsDefinition);\n    const rerenderWithSlots = useForceUpdate();\n    const [isMounted, setIsMounted] = React.useState(false); // fires after all the effects in children\n\n    useLayoutEffect(() => {\n      rerenderWithSlots();\n      setIsMounted(true);\n    }, [rerenderWithSlots]);\n    const registerSlot = React.useCallback((name, contents) => {\n      slotsRef.current[name] = contents; // don't render until the component mounts = all slots are registered\n\n      if (isMounted) rerenderWithSlots();\n    }, [isMounted, rerenderWithSlots]); // Slot can be removed from the tree as well,\n    // we need to unregister them from the slot\n\n    const unregisterSlot = React.useCallback(name => {\n      slotsRef.current[name] = null;\n      rerenderWithSlots();\n    }, [rerenderWithSlots]);\n    /**\n     * Slots uses a render prop API so abstract the\n     * implementation detail of using a context provider.\n     */\n\n    const slots = slotsRef.current;\n    return /*#__PURE__*/React.createElement(SlotsContext.Provider, {\n      value: {\n        registerSlot,\n        unregisterSlot,\n        context\n      }\n    }, children(slots));\n  };\n\n  const Slot = ({\n    name,\n    children\n  }) => {\n    const {\n      registerSlot,\n      unregisterSlot,\n      context\n    } = React.useContext(SlotsContext);\n    useLayoutEffect(() => {\n      registerSlot(name, typeof children === 'function' ? children(context) : children);\n      return () => unregisterSlot(name);\n    }, [name, children, registerSlot, unregisterSlot, context]);\n    return null;\n  };\n\n  return {\n    Slots,\n    Slot\n  };\n};\n\nexport default createSlots;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Box from '../Box';\nimport { merge } from '../sx';\nimport { get } from '../constants';\nimport { getVariantStyles, Slot, TEXT_ROW_HEIGHT } from './Item';\nexport const LeadingVisualContainer = ({\n  sx = {},\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    as: \"span\",\n    sx: merge({\n      height: TEXT_ROW_HEIGHT,\n      // match height of text row\n      minWidth: get('space.3'),\n      maxWidth: TEXT_ROW_HEIGHT,\n      // square (same as height)\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexShrink: 0,\n      marginRight: 2\n    }, sx)\n  }, props));\n};\nLeadingVisualContainer.displayName = \"LeadingVisualContainer\";\nexport const LeadingVisual = ({\n  sx = {},\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(Slot, {\n    name: \"LeadingVisual\"\n  }, ({\n    variant,\n    disabled\n  }) => /*#__PURE__*/React.createElement(LeadingVisualContainer, _extends({\n    sx: merge({\n      color: getVariantStyles(variant, disabled).iconColor,\n      svg: {\n        fontSize: 0\n      }\n    }, sx)\n  }, props), props.children));\n};\nLeadingVisual.displayName = \"LeadingVisual\";\nexport const TrailingVisual = ({\n  sx = {},\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(Slot, {\n    name: \"TrailingVisual\"\n  }, ({\n    variant,\n    disabled\n  }) => /*#__PURE__*/React.createElement(Box, _extends({\n    as: \"span\",\n    sx: merge({\n      height: '20px',\n      // match height of text row\n      flexShrink: 0,\n      color: getVariantStyles(variant, disabled).annotationColor,\n      marginLeft: 2,\n      fontWeight: 'initial'\n    }, sx)\n  }, props), props.children));\n};\nTrailingVisual.displayName = \"TrailingVisual\";","import React from 'react';\nimport { CheckIcon } from '@primer/octicons-react';\nimport { ListContext } from './List';\nimport { GroupContext } from './Group';\nimport { LeadingVisualContainer } from './Visuals';\nexport const Selection = ({\n  selected\n}) => {\n  const {\n    selectionVariant: listSelectionVariant\n  } = React.useContext(ListContext);\n  const {\n    selectionVariant: groupSelectionVariant\n  } = React.useContext(GroupContext);\n  /** selectionVariant in Group can override the selectionVariant in List root */\n\n  /** fallback to selectionVariant from container menu if any (ActionMenu, SelectPanel ) */\n\n  let selectionVariant;\n  if (typeof groupSelectionVariant !== 'undefined') selectionVariant = groupSelectionVariant;else selectionVariant = listSelectionVariant;\n\n  if (!selectionVariant) {\n    // if selectionVariant is not set on List, but Item is selected\n    // fail loudly instead of silently ignoring\n    if (selected) {\n      throw new Error('For Item to be selected, ActionList or ActionList.Group needs to have a selectionVariant defined');\n    } else {\n      return null;\n    }\n  }\n\n  if (selectionVariant === 'single') {\n    return /*#__PURE__*/React.createElement(LeadingVisualContainer, null, selected && /*#__PURE__*/React.createElement(CheckIcon, null));\n  }\n  /**\n   * selectionVariant is multiple\n   * we use a svg instead of an input because there should not\n   * be an interactive element inside an option\n   * svg copied from primer/css\n   */\n\n\n  return /*#__PURE__*/React.createElement(LeadingVisualContainer, {\n    sx: {\n      rect: {\n        fill: selected ? 'accent.fg' : 'canvas.default',\n        stroke: selected ? 'accent.fg' : 'border.default',\n        shapeRendering: 'auto' // this is a workaround to override global style in github/github, see primer/react#1666\n\n      },\n      path: {\n        fill: 'fg.onEmphasis',\n        boxShadow: 'shadow.small',\n        opacity: selected ? 1 : 0\n      }\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"2\",\n    y: \"2\",\n    width: \"12\",\n    height: \"12\",\n    rx: \"4\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    strokeWidth: \"0\",\n    d: \"M4.03231 8.69862C3.84775 8.20646 4.49385 7.77554 4.95539 7.77554C5.41693 7.77554 6.80154 9.85246 6.80154 9.85246C6.80154 9.85246 10.2631 4.314 10.4938 4.08323C10.7246 3.85246 11.8785 4.08323 11.4169 5.00631C11.0081 5.82388 7.26308 11.4678 7.26308 11.4678C7.26308 11.4678 6.80154 12.1602 6.34 11.4678C5.87846 10.7755 4.21687 9.19077 4.03231 8.69862Z\"\n  })));\n};\nSelection.displayName = \"Selection\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Box from '../Box';\nimport sx, { merge } from '../sx';\nimport { useTheme } from '../ThemeProvider';\nimport createSlots from '../utils/create-slots';\nimport { ActionListContainerContext } from './ActionListContainerContext';\nimport { GroupContext } from './Group';\nimport { ListContext } from './List';\nimport { Selection } from './Selection';\nexport const getVariantStyles = (variant, disabled) => {\n  if (disabled) {\n    return {\n      color: 'primer.fg.disabled',\n      iconColor: 'primer.fg.disabled',\n      annotationColor: 'primer.fg.disabled'\n    };\n  }\n\n  switch (variant) {\n    case 'danger':\n      return {\n        color: 'danger.fg',\n        iconColor: 'danger.fg',\n        annotationColor: 'fg.muted',\n        hoverColor: 'actionListItem.danger.hoverText'\n      };\n\n    default:\n      return {\n        color: 'fg.default',\n        iconColor: 'fg.muted',\n        annotationColor: 'fg.muted',\n        hoverColor: 'fg.default'\n      };\n  }\n};\nconst {\n  Slots,\n  Slot\n} = createSlots(['LeadingVisual', 'InlineDescription', 'BlockDescription', 'TrailingVisual']);\nexport { Slot };\nconst LiBox = styled.li.withConfig({\n  displayName: \"Item__LiBox\",\n  componentId: \"sc-yeql7o-0\"\n})(sx);\nexport const TEXT_ROW_HEIGHT = '20px'; // custom value off the scale\n\nexport const Item = /*#__PURE__*/React.forwardRef(({\n  variant = 'default',\n  disabled = false,\n  selected = undefined,\n  active = false,\n  onSelect,\n  sx: sxProp = {},\n  id,\n  role,\n  _PrivateItemWrapper,\n  ...props\n}, forwardedRef) => {\n  const {\n    variant: listVariant,\n    showDividers,\n    selectionVariant: listSelectionVariant\n  } = React.useContext(ListContext);\n  const {\n    selectionVariant: groupSelectionVariant\n  } = React.useContext(GroupContext);\n  const {\n    container,\n    afterSelect,\n    selectionAttribute\n  } = React.useContext(ActionListContainerContext);\n  let selectionVariant;\n  if (typeof groupSelectionVariant !== 'undefined') selectionVariant = groupSelectionVariant;else selectionVariant = listSelectionVariant;\n  /** Infer item role based on the container */\n\n  let itemRole;\n\n  if (container === 'ActionMenu' || container === 'DropdownMenu') {\n    if (selectionVariant === 'single') itemRole = 'menuitemradio';else if (selectionVariant === 'multiple') itemRole = 'menuitemcheckbox';else itemRole = 'menuitem';\n  }\n\n  const {\n    theme\n  } = useTheme();\n  const activeStyles = {\n    fontWeight: 'bold',\n    bg: 'actionListItem.default.selectedBg',\n    '&::after': {\n      position: 'absolute',\n      top: 'calc(50% - 12px)',\n      left: -2,\n      width: '4px',\n      height: '24px',\n      content: '\"\"',\n      bg: 'accent.fg',\n      borderRadius: 2\n    }\n  };\n  const styles = {\n    position: 'relative',\n    display: 'flex',\n    paddingX: 2,\n    fontSize: 1,\n    paddingY: '6px',\n    // custom value off the scale\n    lineHeight: TEXT_ROW_HEIGHT,\n    minHeight: 5,\n    marginX: listVariant === 'inset' ? 2 : 0,\n    borderRadius: listVariant === 'inset' ? 2 : 0,\n    transition: 'background 33.333ms linear',\n    color: getVariantStyles(variant, disabled).color,\n    cursor: 'pointer',\n    '&[aria-disabled]': {\n      cursor: 'not-allowed'\n    },\n    // Button reset styles (to support as=\"button\")\n    appearance: 'none',\n    background: 'unset',\n    border: 'unset',\n    width: 'calc(100% - 16px)',\n    fontFamily: 'unset',\n    textAlign: 'unset',\n    marginY: 'unset',\n    '@media (hover: hover) and (pointer: fine)': {\n      ':hover:not([aria-disabled])': {\n        backgroundColor: `actionListItem.${variant}.hoverBg`,\n        color: getVariantStyles(variant, disabled).hoverColor\n      },\n      ':focus:not([data-focus-visible-added])': {\n        backgroundColor: `actionListItem.${variant}.selectedBg`,\n        color: getVariantStyles(variant, disabled).hoverColor,\n        outline: 'none'\n      },\n      '&[data-focus-visible-added]': {\n        // we don't use :focus-visible because not all browsers (safari) have it yet\n        outline: 'none',\n        border: `2 solid`,\n        boxShadow: `0 0 0 2px ${theme === null || theme === void 0 ? void 0 : theme.colors.accent.emphasis}`\n      },\n      ':active:not([aria-disabled])': {\n        backgroundColor: `actionListItem.${variant}.activeBg`,\n        color: getVariantStyles(variant, disabled).hoverColor\n      }\n    },\n    '@media (forced-colors: active)': {\n      ':focus': {\n        // Support for Windows high contrast https://sarahmhigley.com/writing/whcm-quick-tips\n        outline: 'solid 1px transparent !important'\n      }\n    },\n\n    /** Divider styles */\n    '[data-component=\"ActionList.Item--DividerContainer\"]': {\n      position: 'relative'\n    },\n    '[data-component=\"ActionList.Item--DividerContainer\"]::before': {\n      content: '\" \"',\n      display: 'block',\n      position: 'absolute',\n      width: '100%',\n      top: '-7px',\n      border: '0 solid',\n      borderTopWidth: showDividers ? `1px` : '0',\n      borderColor: 'var(--divider-color, transparent)'\n    },\n    // show between 2 items\n    ':not(:first-of-type)': {\n      '--divider-color': theme === null || theme === void 0 ? void 0 : theme.colors.actionListItem.inlineDivider\n    },\n    // hide divider after dividers & group header, with higher importance!\n    '[data-component=\"ActionList.Divider\"] + &': {\n      '--divider-color': 'transparent !important'\n    },\n    // hide border on current and previous item\n    '&:hover:not([aria-disabled]), &:focus:not([aria-disabled]), &[data-focus-visible-added]:not([aria-disabled])': {\n      '--divider-color': 'transparent'\n    },\n    '&:hover:not([aria-disabled]) + &, &:focus:not([aria-disabled]) + &, &[data-focus-visible-added] + li': {\n      '--divider-color': 'transparent'\n    },\n    ...(active ? activeStyles : {})\n  };\n  const clickHandler = React.useCallback(event => {\n    if (disabled) return;\n\n    if (!event.defaultPrevented) {\n      if (typeof onSelect === 'function') onSelect(event); // if this Item is inside a Menu, close the Menu\n\n      if (typeof afterSelect === 'function') afterSelect();\n    }\n  }, [onSelect, disabled, afterSelect]);\n  const keyPressHandler = React.useCallback(event => {\n    if (disabled) return;\n\n    if (!event.defaultPrevented && [' ', 'Enter'].includes(event.key)) {\n      if (typeof onSelect === 'function') onSelect(event); // if this Item is inside a Menu, close the Menu\n\n      if (typeof afterSelect === 'function') afterSelect();\n    }\n  }, [onSelect, disabled, afterSelect]); // use props.id if provided, otherwise generate one.\n\n  const labelId = useSSRSafeId(id);\n  const inlineDescriptionId = useSSRSafeId(id && `${id}--inline-description`);\n  const blockDescriptionId = useSSRSafeId(id && `${id}--block-description`);\n  const ItemWrapper = _PrivateItemWrapper || React.Fragment;\n  return /*#__PURE__*/React.createElement(Slots, {\n    context: {\n      variant,\n      disabled,\n      inlineDescriptionId,\n      blockDescriptionId\n    }\n  }, slots => /*#__PURE__*/React.createElement(LiBox, _extends({\n    ref: forwardedRef,\n    sx: merge(styles, sxProp),\n    onClick: clickHandler,\n    onKeyPress: keyPressHandler,\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: disabled || _PrivateItemWrapper ? undefined : 0,\n    \"aria-labelledby\": `${labelId} ${slots.InlineDescription ? inlineDescriptionId : ''}`,\n    \"aria-describedby\": slots.BlockDescription ? blockDescriptionId : undefined,\n    role: role || itemRole\n  }, selectionAttribute && {\n    [selectionAttribute]: selected\n  }, props), /*#__PURE__*/React.createElement(ItemWrapper, null, /*#__PURE__*/React.createElement(Selection, {\n    selected: selected\n  }), slots.LeadingVisual, /*#__PURE__*/React.createElement(Box, {\n    \"data-component\": \"ActionList.Item--DividerContainer\",\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      minWidth: 0\n    }\n  }, /*#__PURE__*/React.createElement(ConditionalBox, {\n    if: Boolean(slots.TrailingVisual),\n    sx: {\n      display: 'flex',\n      flexGrow: 1\n    }\n  }, /*#__PURE__*/React.createElement(ConditionalBox, {\n    if: Boolean(slots.InlineDescription),\n    sx: {\n      display: 'flex',\n      flexGrow: 1,\n      alignItems: 'baseline',\n      minWidth: 0\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"span\",\n    id: labelId,\n    sx: {\n      flexGrow: slots.InlineDescription ? 0 : 1\n    }\n  }, props.children), slots.InlineDescription), slots.TrailingVisual), slots.BlockDescription))));\n});\nItem.displayName = 'ActionList.Item';\n\nconst ConditionalBox = props => {\n  const {\n    if: condition,\n    ...rest\n  } = props;\n  if (condition) return /*#__PURE__*/React.createElement(Box, rest, props.children);else return /*#__PURE__*/React.createElement(React.Fragment, null, props.children);\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Link from '../Link';\nimport { merge } from '../sx';\nimport { Item } from './Item'; // adopted from React.AnchorHTMLAttributes\n\nexport const LinkItem = /*#__PURE__*/React.forwardRef(({\n  sx = {},\n  active,\n  as: Component,\n  ...props\n}, forwardedRef) => {\n  const styles = {\n    // occupy full size of Item\n    paddingX: 2,\n    paddingY: '6px',\n    // custom value off the scale\n    display: 'flex',\n    flexGrow: 1,\n    // full width\n    borderRadius: 2,\n    // inherit Item styles\n    color: 'inherit',\n    '&:hover': {\n      color: 'inherit',\n      textDecoration: 'none'\n    }\n  };\n  return /*#__PURE__*/React.createElement(Item, {\n    active: active,\n    sx: {\n      paddingY: 0,\n      paddingX: 0\n    },\n    _PrivateItemWrapper: ({\n      children\n    }) => /*#__PURE__*/React.createElement(Link, _extends({\n      as: Component,\n      sx: merge(styles, sx)\n    }, props, {\n      ref: forwardedRef\n    }), children)\n  }, props.children);\n});","import React from 'react';\nimport Box from '../Box';\nimport { get } from '../constants';\nimport { merge } from '../sx';\n\n/**\n * Visually separates `Item`s or `Group`s in an `ActionList`.\n */\nexport const Divider = ({\n  sx = {}\n}) => {\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"li\",\n    \"aria-hidden\": \"true\",\n    sx: merge({\n      height: 1,\n      backgroundColor: 'actionListItem.inlineDivider',\n      marginTop: theme => `calc(${get('space.2')(theme)} - 1px)`,\n      marginBottom: 2,\n      listStyle: 'none' // hide the ::marker inserted by browser's stylesheet\n\n    }, sx),\n    \"data-component\": \"ActionList.Divider\"\n  });\n};\nDivider.displayName = \"Divider\";","import styled from 'styled-components';\nimport { maxWidth } from 'styled-system';\nimport sx from './sx';\nconst Truncate = styled.div.withConfig({\n  displayName: \"Truncate\",\n  componentId: \"sc-1d9305p-0\"\n})([\"display:\", \";overflow:hidden;text-overflow:ellipsis;vertical-align:\", \";white-space:nowrap;\", \" \", \" \", \";\"], props => props.inline ? 'inline-block' : 'inherit', props => props.inline ? 'top' : 'initial', maxWidth, props => props.expandable ? `&:hover { max-width: 10000px; }` : '', sx);\nTruncate.defaultProps = {\n  expandable: false,\n  inline: false,\n  maxWidth: 125\n};\nexport default Truncate;","import React from 'react';\nimport Box from '../Box';\nimport { merge } from '../sx';\nimport Truncate from '../Truncate';\nimport { Slot } from './Item';\nexport const Description = ({\n  variant = 'inline',\n  sx = {},\n  ...props\n}) => {\n  const styles = {\n    fontSize: 0,\n    lineHeight: '16px',\n    flexGrow: 1,\n    flexBasis: 0,\n    minWidth: 0,\n    marginLeft: variant === 'block' ? 0 : 2\n  };\n  return /*#__PURE__*/React.createElement(Slot, {\n    name: variant === 'block' ? 'BlockDescription' : 'InlineDescription'\n  }, ({\n    blockDescriptionId,\n    inlineDescriptionId,\n    disabled\n  }) => variant === 'block' ? /*#__PURE__*/React.createElement(Box, {\n    as: \"span\",\n    sx: merge({ ...styles,\n      color: disabled ? 'fg.disabled' : 'fg.muted'\n    }, sx),\n    id: blockDescriptionId\n  }, props.children) : /*#__PURE__*/React.createElement(Truncate, {\n    id: inlineDescriptionId,\n    sx: merge({ ...styles,\n      color: disabled ? 'fg.disabled' : 'fg.muted'\n    }, sx),\n    title: props.children,\n    inline: true,\n    maxWidth: \"100%\"\n  }, props.children));\n};\nDescription.displayName = \"Description\";","import { List } from './List';\nimport { Group } from './Group';\nimport { Item } from './Item';\nimport { LinkItem } from './LinkItem';\nimport { Divider } from './Divider';\nimport { Description } from './Description';\nimport { LeadingVisual, TrailingVisual } from './Visuals';\n\n/**\n * Collection of list-related components.\n */\nexport const ActionList = Object.assign(List, {\n  /** Collects related `Items` in an `ActionList`. */\n  Group,\n\n  /** An actionable or selectable `Item` */\n  Item,\n\n  /** A `Item` that renders a full-size anchor inside ListItem */\n  LinkItem,\n\n  /** Visually separates `Item`s or `Group`s in an `ActionList`. */\n  Divider,\n\n  /** Secondary text which provides additional information about an `Item`. */\n  Description,\n\n  /** Icon (or similar) positioned before `Item` text. */\n  LeadingVisual,\n\n  /** Icon (or similar) positioned after `Item` text. */\n  TrailingVisual\n});","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {LabelFragment} from './generated/graphql';\nimport type {ChangeEvent} from 'react';\n\nimport {gitHubRepoLabels, gitHubRepoLabelsQuery} from './recoil';\nimport useDebounced from './useDebounced';\nimport {ActionList, Box, TextInput} from '@primer/react';\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useRecoilState, useRecoilValueLoadable, useResetRecoilState} from 'recoil';\n\ntype Props = {\n  existingLabelIDs: Set<string>;\n  onSelect: (label: LabelFragment, isExisting: boolean) => void;\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function RepoLabelsInput({\n  existingLabelIDs,\n  onSelect,\n}: Props): React.ReactElement {\n  const repoLabels = useRecoilValueLoadable(gitHubRepoLabels).valueMaybe();\n  const [query, setQuery] = useRecoilState(gitHubRepoLabelsQuery);\n  const [queryInput, setQueryInput] = useState(query);\n  const setQueryAtom = useDebounced(setQuery);\n  const resetQueryAtom = useResetRecoilState(gitHubRepoLabelsQuery);\n\n  const onChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      const value = e.currentTarget.value;\n      setQueryAtom(value);\n      setQueryInput(value);\n    },\n    [setQueryAtom, setQueryInput],\n  );\n\n  useEffect(() => resetQueryAtom, [resetQueryAtom]);\n\n  return (\n    <ActionList selectionVariant=\"single\">\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"stretch\" padding={1}>\n        <TextInput\n          value={queryInput}\n          onChange={onChange}\n          loading={repoLabels == null}\n          placeholder=\"Search labels\"\n        />\n      </Box>\n      <ActionList.Divider />\n      {(repoLabels ?? []).map(({id, name, color}) => (\n        <ActionList.Item\n          key={id}\n          selected={existingLabelIDs.has(id)}\n          onSelect={() => onSelect({id, name, color}, existingLabelIDs.has(id))}>\n          <ActionList.LeadingVisual>\n            <LabelColorCircle color={color} />\n          </ActionList.LeadingVisual>\n          {name}\n        </ActionList.Item>\n      ))}\n    </ActionList>\n  );\n});\n\nfunction LabelColorCircle({color}: {color: string}): React.ReactElement {\n  return <Box bg={`#${color}`} width={12} height={12} borderRadius={10} />;\n}\n","import { useEffect, useCallback, useMemo } from 'react';\n// Because events are handled at the document level, we provide a mechanism for early return.\nconst stopPropagation = true;\n/**\n * Calls all handlers in reverse order\n * @param event The MouseEvent generated by the click event.\n */\n\nfunction handleClick(event) {\n  if (!event.defaultPrevented) {\n    for (const handler of Object.values(registry).reverse()) {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (handler(event) === stopPropagation || event.defaultPrevented) {\n        break;\n      }\n    }\n  }\n}\n\nconst registry = {};\n\nfunction register(id, handler) {\n  registry[id] = handler;\n}\n\nfunction deregister(id) {\n  delete registry[id];\n} // For auto-incrementing unique identifiers for registered handlers.\n\n\nlet handlerId = 0;\nexport const useOnOutsideClick = ({\n  containerRef,\n  ignoreClickRefs,\n  onClickOutside\n}) => {\n  const id = useMemo(() => handlerId++, []);\n  const handler = useCallback(event => {\n    var _containerRef$current;\n\n    // don't call click handler if the mouse event was triggered by an auxiliary button (right click/wheel button/etc)\n    if (event instanceof MouseEvent && event.button > 0) {\n      return stopPropagation;\n    } // don't call handler if the click happened inside of the container\n\n\n    if ((_containerRef$current = containerRef.current) !== null && _containerRef$current !== void 0 && _containerRef$current.contains(event.target)) {\n      return stopPropagation;\n    } // don't call handler if click happened on an ignored ref\n\n\n    if (ignoreClickRefs && ignoreClickRefs.some(({\n      current\n    }) => current === null || current === void 0 ? void 0 : current.contains(event.target))) {\n      return stopPropagation;\n    }\n\n    onClickOutside(event);\n  }, [containerRef, ignoreClickRefs, onClickOutside]);\n  useEffect(() => {\n    if (Object.keys(registry).length === 0) {\n      // use capture to ensure we get all events\n      document.addEventListener('mousedown', handleClick, {\n        capture: true\n      });\n    }\n\n    register(id, handler);\n    return () => {\n      deregister(id);\n\n      if (Object.keys(registry).length === 0) {\n        document.removeEventListener('mousedown', handleClick, {\n          capture: true\n        });\n      }\n    };\n  }, [id, handler]);\n};","export function* iterateFocusableElements(container, options = {}) {\n    var _a, _b;\n    const strict = (_a = options.strict) !== null && _a !== void 0 ? _a : false;\n    const acceptFn = ((_b = options.onlyTabbable) !== null && _b !== void 0 ? _b : false) ? isTabbable : isFocusable;\n    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n        acceptNode: node => node instanceof HTMLElement && acceptFn(node, strict) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP\n    });\n    let nextNode = null;\n    if (!options.reverse && acceptFn(container, strict)) {\n        yield container;\n    }\n    if (options.reverse) {\n        let lastChild = walker.lastChild();\n        while (lastChild) {\n            nextNode = lastChild;\n            lastChild = walker.lastChild();\n        }\n    }\n    else {\n        nextNode = walker.firstChild();\n    }\n    while (nextNode instanceof HTMLElement) {\n        yield nextNode;\n        nextNode = options.reverse ? walker.previousNode() : walker.nextNode();\n    }\n    if (options.reverse && acceptFn(container, strict)) {\n        yield container;\n    }\n    return undefined;\n}\nexport function getFocusableChild(container, lastChild = false) {\n    return iterateFocusableElements(container, { reverse: lastChild, strict: true, onlyTabbable: true }).next().value;\n}\nexport function isFocusable(elem, strict = false) {\n    const disabledAttrInert = ['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'OPTGROUP', 'OPTION', 'FIELDSET'].includes(elem.tagName) &&\n        elem.disabled;\n    const hiddenInert = elem.hidden;\n    const hiddenInputInert = elem instanceof HTMLInputElement && elem.type === 'hidden';\n    const sentinelInert = elem.classList.contains('sentinel');\n    if (disabledAttrInert || hiddenInert || hiddenInputInert || sentinelInert) {\n        return false;\n    }\n    if (strict) {\n        const sizeInert = elem.offsetWidth === 0 || elem.offsetHeight === 0;\n        const visibilityInert = ['hidden', 'collapse'].includes(getComputedStyle(elem).visibility);\n        const clientRectsInert = elem.getClientRects().length === 0;\n        if (sizeInert || visibilityInert || clientRectsInert) {\n            return false;\n        }\n    }\n    if (elem.getAttribute('tabindex') != null) {\n        return true;\n    }\n    if (elem instanceof HTMLAnchorElement && elem.getAttribute('href') == null) {\n        return false;\n    }\n    return elem.tabIndex !== -1;\n}\nexport function isTabbable(elem, strict = false) {\n    return isFocusable(elem, strict) && elem.getAttribute('tabindex') !== '-1';\n}\n","import { useEffect, useCallback, useMemo } from 'react';\n/**\n * Calls all handlers in reverse order\n * @param event The KeyboardEvent generated by the Escape keydown.\n */\n\nfunction handleEscape(event) {\n  if (!event.defaultPrevented) {\n    for (const handler of Object.values(registry).reverse()) {\n      handler(event); // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n      if (event.defaultPrevented) break;\n    }\n  }\n}\n\nconst registry = {};\n\nfunction register(id, handler) {\n  registry[id] = handler;\n}\n\nfunction deregister(id) {\n  delete registry[id];\n} // For auto-incrementing unique identifiers for registered handlers.\n\n\nlet handlerId = 0;\n/**\n * Sets up a `keydown` listener on `window.document`. If\n * 1) The pressed key is \"Escape\", and\n * 2) The event has not had `.preventDefault()` called\n * The given callback will be executed.\n *\n * Note: If multiple `useOnEscapePress` hooks are active simultaneously, the\n * callbacks will occur in reverse order. In other words, if a parent component\n * and a child component both call `useOnEscapePress`, when the user presses\n * Escape, the child component's callback will execute, followed by the parent's\n * callback. Each callback has the chance to call `.preventDefault()` on the\n * event to prevent further callbacks.\n *\n * @param callback {(e: KeyboardEvent) => void} The callback that gets executed\n * when the Escape key is pressed. The KeyboardEvent generated by the Escape\n * keypress is passed as the only argument.\n *\n * @param callbackDependencies {React.DependencyList} The dependencies of the given\n * `onEscape` callback for memoization. Omit this param if the callback is already\n * memoized. See `React.useCallback` for more info on memoization.\n */\n\nexport const useOnEscapePress = (onEscape, callbackDependencies = [onEscape]) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const escapeCallback = useCallback(onEscape, callbackDependencies);\n  const handler = useCallback(event => {\n    if (event.key === 'Escape') escapeCallback(event);\n  }, [escapeCallback]);\n  const id = useMemo(() => handlerId++, []);\n  useEffect(() => {\n    if (Object.keys(registry).length === 0) {\n      document.addEventListener('keydown', handleEscape);\n    }\n\n    register(id, handler);\n    return () => {\n      deregister(id);\n\n      if (Object.keys(registry).length === 0) {\n        document.removeEventListener('keydown', handleEscape);\n      }\n    };\n  }, [id, handler]);\n};","import { useOnOutsideClick } from './useOnOutsideClick';\nimport { useOpenAndCloseFocus } from './useOpenAndCloseFocus';\nimport { useOnEscapePress } from './useOnEscapePress';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate';\nexport const useOverlay = ({\n  overlayRef: _overlayRef,\n  returnFocusRef,\n  initialFocusRef,\n  onEscape,\n  ignoreClickRefs,\n  onClickOutside,\n  preventFocusOnOpen\n}) => {\n  const overlayRef = useProvidedRefOrCreate(_overlayRef);\n  useOpenAndCloseFocus({\n    containerRef: overlayRef,\n    returnFocusRef,\n    initialFocusRef,\n    preventFocusOnOpen\n  });\n  useOnOutsideClick({\n    containerRef: overlayRef,\n    ignoreClickRefs,\n    onClickOutside\n  }); // We only want one overlay to close at a time\n\n  const preventeddefaultCheckedEscape = event => {\n    onEscape(event);\n    event.preventDefault();\n  };\n\n  useOnEscapePress(preventeddefaultCheckedEscape);\n  return {\n    ref: overlayRef\n  };\n};","import { useEffect } from 'react';\nimport { iterateFocusableElements } from '@primer/behaviors/utils';\nexport function useOpenAndCloseFocus({\n  initialFocusRef,\n  returnFocusRef,\n  containerRef,\n  preventFocusOnOpen\n}) {\n  useEffect(() => {\n    if (preventFocusOnOpen) {\n      return;\n    }\n\n    const returnRef = returnFocusRef.current;\n\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (containerRef.current) {\n      const firstItem = iterateFocusableElements(containerRef.current).next().value;\n      firstItem === null || firstItem === void 0 ? void 0 : firstItem.focus();\n    }\n\n    return function () {\n      returnRef === null || returnRef === void 0 ? void 0 : returnRef.focus();\n    };\n  }, [initialFocusRef, returnFocusRef, containerRef, preventFocusOnOpen]);\n}","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport useLayoutEffect from '../utils/useIsomorphicLayoutEffect';\nconst PRIMER_PORTAL_ROOT_ID = '__primerPortalRoot__';\nconst DEFAULT_PORTAL_CONTAINER_NAME = '__default__';\nconst portalRootRegistry = {};\n/**\n * Register a container to serve as a portal root.\n * @param root The element that will be the root for portals created in this container\n * @param name The name of the container, to be used with the `containerName` prop on the Portal Component.\n * If name is not specified, registers the default portal root.\n */\n\nexport function registerPortalRoot(root, name = DEFAULT_PORTAL_CONTAINER_NAME) {\n  portalRootRegistry[name] = root;\n} // Ensures that a default portal root exists and is registered. If a DOM element exists\n// with id __primerPortalRoot__, allow that element to serve as the default portal root.\n// Otherwise, create that element and attach it to the end of document.body.\n\nfunction ensureDefaultPortal() {\n  const existingDefaultPortalContainer = portalRootRegistry[DEFAULT_PORTAL_CONTAINER_NAME];\n\n  if (!existingDefaultPortalContainer || !document.body.contains(existingDefaultPortalContainer)) {\n    let defaultPortalContainer = document.getElementById(PRIMER_PORTAL_ROOT_ID);\n\n    if (!(defaultPortalContainer instanceof Element)) {\n      defaultPortalContainer = document.createElement('div');\n      defaultPortalContainer.setAttribute('id', PRIMER_PORTAL_ROOT_ID);\n      defaultPortalContainer.style.position = 'absolute';\n      defaultPortalContainer.style.top = '0';\n      defaultPortalContainer.style.left = '0';\n      const suitablePortalRoot = document.querySelector('[data-portal-root]');\n\n      if (suitablePortalRoot) {\n        suitablePortalRoot.appendChild(defaultPortalContainer);\n      } else {\n        document.body.appendChild(defaultPortalContainer);\n      }\n    }\n\n    registerPortalRoot(defaultPortalContainer);\n  }\n}\n\n/**\n * Creates a React Portal, placing all children in a separate physical DOM root node.\n * @see https://reactjs.org/docs/portals.html\n */\nexport const Portal = ({\n  children,\n  onMount,\n  containerName: _containerName\n}) => {\n  const hostElement = document.createElement('div'); // Portaled content should get their own stacking context so they don't interfere\n  // with each other in unexpected ways. One should never find themselves tempted\n  // to change the zIndex to a value other than \"1\".\n\n  hostElement.style.position = 'relative';\n  hostElement.style.zIndex = '1';\n  const elementRef = React.useRef(hostElement);\n  useLayoutEffect(() => {\n    let containerName = _containerName;\n\n    if (containerName === undefined) {\n      containerName = DEFAULT_PORTAL_CONTAINER_NAME;\n      ensureDefaultPortal();\n    }\n\n    const parentElement = portalRootRegistry[containerName];\n\n    if (!parentElement) {\n      throw new Error(`Portal container '${_containerName}' is not yet registered. Container must be registered with registerPortal before use.`);\n    }\n\n    const element = elementRef.current;\n    parentElement.appendChild(element);\n    onMount === null || onMount === void 0 ? void 0 : onMount();\n    return () => {\n      parentElement.removeChild(element);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elementRef]);\n  return /*#__PURE__*/createPortal(children, elementRef.current);\n};","import { Portal, registerPortalRoot } from './Portal';\nexport default Portal;\nexport { registerPortalRoot };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport styled from 'styled-components';\nimport React, { useEffect, useRef } from 'react';\nimport useLayoutEffect from './utils/useIsomorphicLayoutEffect';\nimport { get } from './constants';\nimport { useOverlay } from './hooks';\nimport Portal from './Portal';\nimport sx from './sx';\nimport { useRefObjectAsForwardedRef } from './hooks/useRefObjectAsForwardedRef';\nimport { useTheme } from './ThemeProvider';\nconst heightMap = {\n  xsmall: '192px',\n  small: '256px',\n  medium: '320px',\n  large: '432px',\n  xlarge: '600px',\n  auto: 'auto',\n  initial: 'auto' // Passing 'initial' initially applies 'auto'\n\n};\nconst widthMap = {\n  small: '256px',\n  medium: '320px',\n  large: '480px',\n  xlarge: '640px',\n  xxlarge: '960px',\n  auto: 'auto'\n};\nconst animationDuration = 200;\n\nfunction getSlideAnimationStartingVector(anchorSide) {\n  if (anchorSide !== null && anchorSide !== void 0 && anchorSide.endsWith('bottom')) {\n    return {\n      x: 0,\n      y: -1\n    };\n  } else if (anchorSide !== null && anchorSide !== void 0 && anchorSide.endsWith('top')) {\n    return {\n      x: 0,\n      y: 1\n    };\n  } else if (anchorSide !== null && anchorSide !== void 0 && anchorSide.endsWith('right')) {\n    return {\n      x: -1,\n      y: 0\n    };\n  } else if (anchorSide !== null && anchorSide !== void 0 && anchorSide.endsWith('left')) {\n    return {\n      x: 1,\n      y: 0\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0\n  };\n}\n\nconst StyledOverlay = styled.div.withConfig({\n  displayName: \"Overlay__StyledOverlay\",\n  componentId: \"sc-1mkyld6-0\"\n})([\"background-color:\", \";box-shadow:\", \";position:absolute;min-width:192px;max-width:640px;height:\", \";max-height:\", \";width:\", \";border-radius:12px;overflow:hidden;animation:overlay-appear \", \"ms \", \";@keyframes overlay-appear{0%{opacity:0;}100%{opacity:1;}}visibility:var(--styled-overlay-visibility);:focus{outline:none;}@media (forced-colors:active){outline:solid 1px transparent;}\", \";\"], get('colors.canvas.overlay'), get('shadows.overlay.shadow'), props => heightMap[props.height || 'auto'], props => props.maxHeight && heightMap[props.maxHeight], props => widthMap[props.width || 'auto'], animationDuration, get('animation.easeOutCubic'), sx);\n\n/**\n * An `Overlay` is a flexible floating surface, used to display transient content such as menus,\n * selection options, dialogs, and more. Overlays use shadows to express elevation. The `Overlay`\n * component handles all behaviors needed by overlay UIs as well as the common styles that all overlays * should have.\n * @param ignoreClickRefs Optional. An array of ref objects to ignore clicks on in the `onOutsideClick` behavior. This is often used to ignore clicking on the element that toggles the open/closed state for the `Overlay` to prevent the `Overlay` from being toggled twice.\n * @param initialFocusRef Optional. Ref for the element to focus when the `Overlay` is opened. If nothing is provided, the first focusable element in the `Overlay` body is focused.\n * @param returnFocusRef Required. Ref for the element to focus when the `Overlay` is closed.\n * @param onClickOutside  Required. Function to call when clicking outside of the `Overlay`. Typically this function removes the Overlay.\n * @param onEscape Required. Function to call when user presses `Escape`. Typically this function removes the Overlay.\n * @param width Sets the width of the `Overlay`, pick from our set list of widths, or pass `auto` to automatically set the width based on the content of the `Overlay`. `small` corresponds to `256px`, `medium` corresponds to `320px`, `large` corresponds to `480px`, `xlarge` corresponds to `640px`, `xxlarge` corresponds to `960px`.\n * @param height Sets the height of the `Overlay`, pick from our set list of heights, or pass `auto` to automatically set the height based on the content of the `Overlay`, or pass `initial` to set the height based on the initial content of the `Overlay` (i.e. ignoring content changes). `xsmall` corresponds to `192px`, `small` corresponds to `256px`, `medium` corresponds to `320px`, `large` corresponds to `432px`, `xlarge` corresponds to `600px`.\n * @param maxHeight Sets the maximum height of the `Overlay`, pick from our set list of heights. `xsmall` corresponds to `192px`, `small` corresponds to `256px`, `medium` corresponds to `320px`, `large` corresponds to `432px`, `xlarge` corresponds to `600px`.\n * @param anchorSide If provided, the Overlay will slide into position from the side of the anchor with a brief animation\n * @param top Optional. Vertical position of the overlay, relative to its closest positioned ancestor (often its `Portal`).\n * @param left Optional. Horizontal position of the overlay, relative to its closest positioned ancestor (often its `Portal`).\n * @param portalContainerName Optional. The name of the portal container to render the Overlay into.\n */\nconst Overlay = /*#__PURE__*/React.forwardRef(({\n  onClickOutside,\n  role = 'none',\n  initialFocusRef,\n  returnFocusRef,\n  ignoreClickRefs,\n  onEscape,\n  visibility = 'visible',\n  height,\n  top,\n  left,\n  anchorSide,\n  portalContainerName,\n  preventFocusOnOpen,\n  ...rest\n}, forwardedRef) => {\n  const overlayRef = useRef(null);\n  useRefObjectAsForwardedRef(forwardedRef, overlayRef);\n  const {\n    theme\n  } = useTheme();\n  const slideAnimationDistance = parseInt(get('space.2')(theme).replace('px', ''));\n  const slideAnimationEasing = get('animation.easeOutCubic')(theme);\n  useOverlay({\n    overlayRef,\n    returnFocusRef,\n    onEscape,\n    ignoreClickRefs,\n    onClickOutside,\n    initialFocusRef,\n    preventFocusOnOpen\n  });\n  useEffect(() => {\n    var _overlayRef$current;\n\n    if (height === 'initial' && (_overlayRef$current = overlayRef.current) !== null && _overlayRef$current !== void 0 && _overlayRef$current.clientHeight) {\n      overlayRef.current.style.height = `${overlayRef.current.clientHeight}px`;\n    }\n  }, [height]);\n  useLayoutEffect(() => {\n    var _overlayRef$current2;\n\n    const {\n      x,\n      y\n    } = getSlideAnimationStartingVector(anchorSide);\n\n    if (!x && !y || !((_overlayRef$current2 = overlayRef.current) !== null && _overlayRef$current2 !== void 0 && _overlayRef$current2.animate) || visibility === 'hidden') {\n      return;\n    } // JS animation is required because Safari does not allow css animations to start paused and then run\n\n\n    overlayRef.current.animate({\n      transform: [`translate(${slideAnimationDistance * x}px, ${slideAnimationDistance * y}px)`, `translate(0, 0)`]\n    }, {\n      duration: animationDuration,\n      easing: slideAnimationEasing\n    });\n  }, [anchorSide, slideAnimationDistance, slideAnimationEasing, visibility]);\n  return /*#__PURE__*/React.createElement(Portal, {\n    containerName: portalContainerName\n  }, /*#__PURE__*/React.createElement(StyledOverlay, _extends({\n    height: height,\n    role: role\n  }, rest, {\n    ref: overlayRef,\n    style: {\n      top: `${top || 0}px`,\n      left: `${left || 0}px`,\n      '--styled-overlay-visibility': visibility\n    }\n  })));\n});\nOverlay.defaultProps = {\n  height: 'auto',\n  width: 'auto'\n};\nexport default Overlay;","import { useImperativeHandle } from 'react';\n/**\n * Use a ref object as the imperative handle for a forwarded ref. This can be used to\n * synchronize the ref object with the forwarded ref and allow local access the reference\n * instance with `.current`.\n *\n * **NOTE**: The `refObject` should be passed to the underlying element, NOT the `forwardedRef`.\n */\n\nexport function useRefObjectAsForwardedRef(forwardedRef, refObject) {\n  useImperativeHandle(forwardedRef, () => refObject.current);\n}","let signalSupported = false;\nfunction noop() { }\ntry {\n    const options = Object.create({}, {\n        signal: {\n            get() {\n                signalSupported = true;\n            }\n        }\n    });\n    window.addEventListener('test', noop, options);\n    window.removeEventListener('test', noop, options);\n}\ncatch (e) {\n}\nfunction featureSupported() {\n    return signalSupported;\n}\nfunction monkeyPatch() {\n    if (typeof window === 'undefined') {\n        return;\n    }\n    const originalAddEventListener = EventTarget.prototype.addEventListener;\n    EventTarget.prototype.addEventListener = function (name, originalCallback, optionsOrCapture) {\n        if (typeof optionsOrCapture === 'object' &&\n            'signal' in optionsOrCapture &&\n            optionsOrCapture.signal instanceof AbortSignal) {\n            originalAddEventListener.call(optionsOrCapture.signal, 'abort', () => {\n                this.removeEventListener(name, originalCallback, optionsOrCapture);\n            });\n        }\n        return originalAddEventListener.call(this, name, originalCallback, optionsOrCapture);\n    };\n}\nexport function polyfill() {\n    if (!featureSupported()) {\n        monkeyPatch();\n        signalSupported = true;\n    }\n}\n","import { getFocusableChild, isTabbable } from './utils/iterate-focusable-elements.js';\nimport { polyfill as eventListenerSignalPolyfill } from './polyfills/event-listener-signal.js';\neventListenerSignalPolyfill();\nconst suspendedTrapStack = [];\nlet activeTrap = undefined;\nfunction tryReactivate() {\n    const trapToReactivate = suspendedTrapStack.pop();\n    if (trapToReactivate) {\n        focusTrap(trapToReactivate.container, trapToReactivate.initialFocus, trapToReactivate.originalSignal);\n    }\n}\nfunction followSignal(signal) {\n    const controller = new AbortController();\n    signal.addEventListener('abort', () => {\n        controller.abort();\n    });\n    return controller;\n}\nexport function focusTrap(container, initialFocus, abortSignal) {\n    const controller = new AbortController();\n    const signal = abortSignal !== null && abortSignal !== void 0 ? abortSignal : controller.signal;\n    container.setAttribute('data-focus-trap', 'active');\n    const sentinelStart = document.createElement('span');\n    sentinelStart.setAttribute('class', 'sentinel');\n    sentinelStart.setAttribute('tabindex', '0');\n    sentinelStart.setAttribute('aria-hidden', 'true');\n    sentinelStart.onfocus = () => {\n        const lastFocusableChild = getFocusableChild(container, true);\n        lastFocusableChild === null || lastFocusableChild === void 0 ? void 0 : lastFocusableChild.focus();\n    };\n    const sentinelEnd = document.createElement('span');\n    sentinelEnd.setAttribute('class', 'sentinel');\n    sentinelEnd.setAttribute('tabindex', '0');\n    sentinelEnd.setAttribute('aria-hidden', 'true');\n    sentinelEnd.onfocus = () => {\n        const firstFocusableChild = getFocusableChild(container);\n        firstFocusableChild === null || firstFocusableChild === void 0 ? void 0 : firstFocusableChild.focus();\n    };\n    container.prepend(sentinelStart);\n    container.append(sentinelEnd);\n    let lastFocusedChild = undefined;\n    function ensureTrapZoneHasFocus(focusedElement) {\n        if (focusedElement instanceof HTMLElement && document.contains(container)) {\n            if (container.contains(focusedElement)) {\n                lastFocusedChild = focusedElement;\n                return;\n            }\n            else {\n                if (lastFocusedChild && isTabbable(lastFocusedChild) && container.contains(lastFocusedChild)) {\n                    lastFocusedChild.focus();\n                    return;\n                }\n                else if (initialFocus && container.contains(initialFocus)) {\n                    initialFocus.focus();\n                    return;\n                }\n                else {\n                    const firstFocusableChild = getFocusableChild(container);\n                    firstFocusableChild === null || firstFocusableChild === void 0 ? void 0 : firstFocusableChild.focus();\n                    return;\n                }\n            }\n        }\n    }\n    const wrappingController = followSignal(signal);\n    if (activeTrap) {\n        const suspendedTrap = activeTrap;\n        activeTrap.container.setAttribute('data-focus-trap', 'suspended');\n        activeTrap.controller.abort();\n        suspendedTrapStack.push(suspendedTrap);\n    }\n    wrappingController.signal.addEventListener('abort', () => {\n        activeTrap = undefined;\n    });\n    signal.addEventListener('abort', () => {\n        container.removeAttribute('data-focus-trap');\n        const sentinels = container.getElementsByClassName('sentinel');\n        while (sentinels.length > 0)\n            sentinels[0].remove();\n        const suspendedTrapIndex = suspendedTrapStack.findIndex(t => t.container === container);\n        if (suspendedTrapIndex >= 0) {\n            suspendedTrapStack.splice(suspendedTrapIndex, 1);\n        }\n        tryReactivate();\n    });\n    document.addEventListener('focus', event => {\n        ensureTrapZoneHasFocus(event.target);\n    }, { signal: wrappingController.signal, capture: true });\n    ensureTrapZoneHasFocus(document.activeElement);\n    activeTrap = {\n        container,\n        controller: wrappingController,\n        initialFocus,\n        originalSignal: signal\n    };\n    const suspendedTrapIndex = suspendedTrapStack.findIndex(t => t.container === container);\n    if (suspendedTrapIndex >= 0) {\n        suspendedTrapStack.splice(suspendedTrapIndex, 1);\n    }\n    if (!abortSignal) {\n        return controller;\n    }\n}\n","let isMac = undefined;\nexport function isMacOS() {\n    if (isMac === undefined) {\n        isMac = /^mac/i.test(window.navigator.platform);\n    }\n    return isMac;\n}\n","let idSeed = 10000;\nexport function uniqueId() {\n    return `__primer_id_${idSeed++}`;\n}\n","import { polyfill as eventListenerSignalPolyfill } from './polyfills/event-listener-signal.js';\nimport { isMacOS } from './utils/user-agent.js';\nimport { iterateFocusableElements } from './utils/iterate-focusable-elements.js';\nimport { uniqueId } from './utils/unique-id.js';\neventListenerSignalPolyfill();\nexport var FocusKeys;\n(function (FocusKeys) {\n    FocusKeys[FocusKeys[\"ArrowHorizontal\"] = 1] = \"ArrowHorizontal\";\n    FocusKeys[FocusKeys[\"ArrowVertical\"] = 2] = \"ArrowVertical\";\n    FocusKeys[FocusKeys[\"JK\"] = 4] = \"JK\";\n    FocusKeys[FocusKeys[\"HL\"] = 8] = \"HL\";\n    FocusKeys[FocusKeys[\"HomeAndEnd\"] = 16] = \"HomeAndEnd\";\n    FocusKeys[FocusKeys[\"PageUpDown\"] = 256] = \"PageUpDown\";\n    FocusKeys[FocusKeys[\"WS\"] = 32] = \"WS\";\n    FocusKeys[FocusKeys[\"AD\"] = 64] = \"AD\";\n    FocusKeys[FocusKeys[\"Tab\"] = 128] = \"Tab\";\n    FocusKeys[FocusKeys[\"ArrowAll\"] = 3] = \"ArrowAll\";\n    FocusKeys[FocusKeys[\"HJKL\"] = 12] = \"HJKL\";\n    FocusKeys[FocusKeys[\"WASD\"] = 96] = \"WASD\";\n    FocusKeys[FocusKeys[\"All\"] = 511] = \"All\";\n})(FocusKeys || (FocusKeys = {}));\nconst KEY_TO_BIT = {\n    ArrowLeft: FocusKeys.ArrowHorizontal,\n    ArrowDown: FocusKeys.ArrowVertical,\n    ArrowUp: FocusKeys.ArrowVertical,\n    ArrowRight: FocusKeys.ArrowHorizontal,\n    h: FocusKeys.HL,\n    j: FocusKeys.JK,\n    k: FocusKeys.JK,\n    l: FocusKeys.HL,\n    a: FocusKeys.AD,\n    s: FocusKeys.WS,\n    w: FocusKeys.WS,\n    d: FocusKeys.AD,\n    Tab: FocusKeys.Tab,\n    Home: FocusKeys.HomeAndEnd,\n    End: FocusKeys.HomeAndEnd,\n    PageUp: FocusKeys.PageUpDown,\n    PageDown: FocusKeys.PageUpDown\n};\nconst KEY_TO_DIRECTION = {\n    ArrowLeft: 'previous',\n    ArrowDown: 'next',\n    ArrowUp: 'previous',\n    ArrowRight: 'next',\n    h: 'previous',\n    j: 'next',\n    k: 'previous',\n    l: 'next',\n    a: 'previous',\n    s: 'next',\n    w: 'previous',\n    d: 'next',\n    Tab: 'next',\n    Home: 'start',\n    End: 'end',\n    PageUp: 'start',\n    PageDown: 'end'\n};\nfunction getDirection(keyboardEvent) {\n    const direction = KEY_TO_DIRECTION[keyboardEvent.key];\n    if (keyboardEvent.key === 'Tab' && keyboardEvent.shiftKey) {\n        return 'previous';\n    }\n    const isMac = isMacOS();\n    if ((isMac && keyboardEvent.metaKey) || (!isMac && keyboardEvent.ctrlKey)) {\n        if (keyboardEvent.key === 'ArrowLeft' || keyboardEvent.key === 'ArrowUp') {\n            return 'start';\n        }\n        else if (keyboardEvent.key === 'ArrowRight' || keyboardEvent.key === 'ArrowDown') {\n            return 'end';\n        }\n    }\n    return direction;\n}\nfunction shouldIgnoreFocusHandling(keyboardEvent, activeElement) {\n    const key = keyboardEvent.key;\n    const keyLength = [...key].length;\n    const isTextInput = (activeElement instanceof HTMLInputElement && activeElement.type === 'text') ||\n        activeElement instanceof HTMLTextAreaElement;\n    if (isTextInput && (keyLength === 1 || key === 'Home' || key === 'End')) {\n        return true;\n    }\n    if (activeElement instanceof HTMLSelectElement) {\n        if (keyLength === 1) {\n            return true;\n        }\n        if (key === 'ArrowDown' && isMacOS() && !keyboardEvent.metaKey) {\n            return true;\n        }\n        if (key === 'ArrowDown' && !isMacOS() && keyboardEvent.altKey) {\n            return true;\n        }\n    }\n    if (activeElement instanceof HTMLTextAreaElement && (key === 'PageUp' || key === 'PageDown')) {\n        return true;\n    }\n    if (isTextInput) {\n        const textInput = activeElement;\n        const cursorAtStart = textInput.selectionStart === 0 && textInput.selectionEnd === 0;\n        const cursorAtEnd = textInput.selectionStart === textInput.value.length && textInput.selectionEnd === textInput.value.length;\n        if (key === 'ArrowLeft' && !cursorAtStart) {\n            return true;\n        }\n        if (key === 'ArrowRight' && !cursorAtEnd) {\n            return true;\n        }\n        if (textInput instanceof HTMLTextAreaElement) {\n            if (key === 'ArrowUp' && !cursorAtStart) {\n                return true;\n            }\n            if (key === 'ArrowDown' && !cursorAtEnd) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexport const isActiveDescendantAttribute = 'data-is-active-descendant';\nexport const activeDescendantActivatedDirectly = 'activated-directly';\nexport const activeDescendantActivatedIndirectly = 'activated-indirectly';\nexport const hasActiveDescendantAttribute = 'data-has-active-descendant';\nexport function focusZone(container, settings) {\n    var _a, _b, _c, _d;\n    const focusableElements = [];\n    const savedTabIndex = new WeakMap();\n    const bindKeys = (_a = settings === null || settings === void 0 ? void 0 : settings.bindKeys) !== null && _a !== void 0 ? _a : ((settings === null || settings === void 0 ? void 0 : settings.getNextFocusable) ? FocusKeys.ArrowAll : FocusKeys.ArrowVertical) | FocusKeys.HomeAndEnd;\n    const focusOutBehavior = (_b = settings === null || settings === void 0 ? void 0 : settings.focusOutBehavior) !== null && _b !== void 0 ? _b : 'stop';\n    const focusInStrategy = (_c = settings === null || settings === void 0 ? void 0 : settings.focusInStrategy) !== null && _c !== void 0 ? _c : 'previous';\n    const activeDescendantControl = settings === null || settings === void 0 ? void 0 : settings.activeDescendantControl;\n    const activeDescendantCallback = settings === null || settings === void 0 ? void 0 : settings.onActiveDescendantChanged;\n    let currentFocusedElement;\n    function getFirstFocusableElement() {\n        return focusableElements[0];\n    }\n    function isActiveDescendantInputFocused() {\n        return document.activeElement === activeDescendantControl;\n    }\n    function updateFocusedElement(to, directlyActivated = false) {\n        const from = currentFocusedElement;\n        currentFocusedElement = to;\n        if (activeDescendantControl) {\n            if (to && isActiveDescendantInputFocused()) {\n                setActiveDescendant(from, to, directlyActivated);\n            }\n            else {\n                clearActiveDescendant();\n            }\n            return;\n        }\n        if (from && from !== to && savedTabIndex.has(from)) {\n            from.setAttribute('tabindex', '-1');\n        }\n        to === null || to === void 0 ? void 0 : to.setAttribute('tabindex', '0');\n    }\n    function setActiveDescendant(from, to, directlyActivated = false) {\n        if (!to.id) {\n            to.setAttribute('id', uniqueId());\n        }\n        if (from && from !== to) {\n            from.removeAttribute(isActiveDescendantAttribute);\n        }\n        if (!activeDescendantControl ||\n            (!directlyActivated && activeDescendantControl.getAttribute('aria-activedescendant') === to.id)) {\n            return;\n        }\n        activeDescendantControl.setAttribute('aria-activedescendant', to.id);\n        container.setAttribute(hasActiveDescendantAttribute, to.id);\n        to.setAttribute(isActiveDescendantAttribute, directlyActivated ? activeDescendantActivatedDirectly : activeDescendantActivatedIndirectly);\n        activeDescendantCallback === null || activeDescendantCallback === void 0 ? void 0 : activeDescendantCallback(to, from, directlyActivated);\n    }\n    function clearActiveDescendant(previouslyActiveElement = currentFocusedElement) {\n        if (focusInStrategy === 'first') {\n            currentFocusedElement = undefined;\n        }\n        activeDescendantControl === null || activeDescendantControl === void 0 ? void 0 : activeDescendantControl.removeAttribute('aria-activedescendant');\n        container.removeAttribute(hasActiveDescendantAttribute);\n        previouslyActiveElement === null || previouslyActiveElement === void 0 ? void 0 : previouslyActiveElement.removeAttribute(isActiveDescendantAttribute);\n        activeDescendantCallback === null || activeDescendantCallback === void 0 ? void 0 : activeDescendantCallback(undefined, previouslyActiveElement, false);\n    }\n    function beginFocusManagement(...elements) {\n        const filteredElements = elements.filter(e => { var _a, _b; return (_b = (_a = settings === null || settings === void 0 ? void 0 : settings.focusableElementFilter) === null || _a === void 0 ? void 0 : _a.call(settings, e)) !== null && _b !== void 0 ? _b : true; });\n        if (filteredElements.length === 0) {\n            return;\n        }\n        const insertIndex = focusableElements.findIndex(e => (e.compareDocumentPosition(filteredElements[0]) & Node.DOCUMENT_POSITION_PRECEDING) > 0);\n        focusableElements.splice(insertIndex === -1 ? focusableElements.length : insertIndex, 0, ...filteredElements);\n        for (const element of filteredElements) {\n            if (!savedTabIndex.has(element)) {\n                savedTabIndex.set(element, element.getAttribute('tabindex'));\n            }\n            element.setAttribute('tabindex', '-1');\n        }\n        if (!currentFocusedElement) {\n            updateFocusedElement(getFirstFocusableElement());\n        }\n    }\n    function endFocusManagement(...elements) {\n        for (const element of elements) {\n            const focusableElementIndex = focusableElements.indexOf(element);\n            if (focusableElementIndex >= 0) {\n                focusableElements.splice(focusableElementIndex, 1);\n            }\n            const savedIndex = savedTabIndex.get(element);\n            if (savedIndex !== undefined) {\n                if (savedIndex === null) {\n                    element.removeAttribute('tabindex');\n                }\n                else {\n                    element.setAttribute('tabindex', savedIndex);\n                }\n                savedTabIndex.delete(element);\n            }\n            if (element === currentFocusedElement) {\n                const nextElementToFocus = getFirstFocusableElement();\n                updateFocusedElement(nextElementToFocus);\n            }\n        }\n    }\n    beginFocusManagement(...iterateFocusableElements(container));\n    updateFocusedElement(getFirstFocusableElement());\n    const observer = new MutationObserver(mutations => {\n        for (const mutation of mutations) {\n            for (const removedNode of mutation.removedNodes) {\n                if (removedNode instanceof HTMLElement) {\n                    endFocusManagement(...iterateFocusableElements(removedNode));\n                }\n            }\n        }\n        for (const mutation of mutations) {\n            for (const addedNode of mutation.addedNodes) {\n                if (addedNode instanceof HTMLElement) {\n                    beginFocusManagement(...iterateFocusableElements(addedNode));\n                }\n            }\n        }\n    });\n    observer.observe(container, {\n        subtree: true,\n        childList: true\n    });\n    const controller = new AbortController();\n    const signal = (_d = settings === null || settings === void 0 ? void 0 : settings.abortSignal) !== null && _d !== void 0 ? _d : controller.signal;\n    signal.addEventListener('abort', () => {\n        endFocusManagement(...focusableElements);\n    });\n    let elementIndexFocusedByClick = undefined;\n    container.addEventListener('mousedown', event => {\n        if (event.target instanceof HTMLElement && event.target !== document.activeElement) {\n            elementIndexFocusedByClick = focusableElements.indexOf(event.target);\n        }\n    }, { signal });\n    if (activeDescendantControl) {\n        container.addEventListener('focusin', event => {\n            if (event.target instanceof HTMLElement && focusableElements.includes(event.target)) {\n                activeDescendantControl.focus();\n                updateFocusedElement(event.target);\n            }\n        });\n        container.addEventListener('mousemove', ({ target }) => {\n            if (!(target instanceof Node)) {\n                return;\n            }\n            const focusableElement = focusableElements.find(element => element.contains(target));\n            if (focusableElement) {\n                updateFocusedElement(focusableElement);\n            }\n        }, { signal, capture: true });\n        activeDescendantControl.addEventListener('focusin', () => {\n            if (!currentFocusedElement) {\n                updateFocusedElement(getFirstFocusableElement());\n            }\n            else {\n                setActiveDescendant(undefined, currentFocusedElement);\n            }\n        });\n        activeDescendantControl.addEventListener('focusout', () => {\n            clearActiveDescendant();\n        });\n    }\n    else {\n        container.addEventListener('focusin', event => {\n            if (event.target instanceof HTMLElement) {\n                if (elementIndexFocusedByClick !== undefined) {\n                    if (elementIndexFocusedByClick >= 0) {\n                        if (focusableElements[elementIndexFocusedByClick] !== currentFocusedElement) {\n                            updateFocusedElement(focusableElements[elementIndexFocusedByClick]);\n                        }\n                    }\n                    elementIndexFocusedByClick = undefined;\n                }\n                else {\n                    if (focusInStrategy === 'previous') {\n                        updateFocusedElement(event.target);\n                    }\n                    else if (focusInStrategy === 'closest' || focusInStrategy === 'first') {\n                        if (event.relatedTarget instanceof Element && !container.contains(event.relatedTarget)) {\n                            const targetElementIndex = lastKeyboardFocusDirection === 'previous' ? focusableElements.length - 1 : 0;\n                            const targetElement = focusableElements[targetElementIndex];\n                            targetElement === null || targetElement === void 0 ? void 0 : targetElement.focus();\n                            return;\n                        }\n                        else {\n                            updateFocusedElement(event.target);\n                        }\n                    }\n                    else if (typeof focusInStrategy === 'function') {\n                        if (event.relatedTarget instanceof Element && !container.contains(event.relatedTarget)) {\n                            const elementToFocus = focusInStrategy(event.relatedTarget);\n                            const requestedFocusElementIndex = elementToFocus ? focusableElements.indexOf(elementToFocus) : -1;\n                            if (requestedFocusElementIndex >= 0 && elementToFocus instanceof HTMLElement) {\n                                elementToFocus.focus();\n                                return;\n                            }\n                            else {\n                                console.warn('Element requested is not a known focusable element.');\n                            }\n                        }\n                        else {\n                            updateFocusedElement(event.target);\n                        }\n                    }\n                }\n            }\n            lastKeyboardFocusDirection = undefined;\n        }, { signal });\n    }\n    const keyboardEventRecipient = activeDescendantControl !== null && activeDescendantControl !== void 0 ? activeDescendantControl : container;\n    let lastKeyboardFocusDirection = undefined;\n    if (focusInStrategy === 'closest') {\n        document.addEventListener('keydown', event => {\n            if (event.key === 'Tab') {\n                lastKeyboardFocusDirection = getDirection(event);\n            }\n        }, { signal, capture: true });\n    }\n    function getCurrentFocusedIndex() {\n        if (!currentFocusedElement) {\n            return 0;\n        }\n        const focusedIndex = focusableElements.indexOf(currentFocusedElement);\n        const fallbackIndex = currentFocusedElement === container ? -1 : 0;\n        return focusedIndex !== -1 ? focusedIndex : fallbackIndex;\n    }\n    keyboardEventRecipient.addEventListener('keydown', event => {\n        var _a;\n        if (event.key in KEY_TO_DIRECTION) {\n            const keyBit = KEY_TO_BIT[event.key];\n            if (!event.defaultPrevented &&\n                (keyBit & bindKeys) > 0 &&\n                !shouldIgnoreFocusHandling(event, document.activeElement)) {\n                const direction = getDirection(event);\n                let nextElementToFocus = undefined;\n                if (settings === null || settings === void 0 ? void 0 : settings.getNextFocusable) {\n                    nextElementToFocus = settings.getNextFocusable(direction, (_a = document.activeElement) !== null && _a !== void 0 ? _a : undefined, event);\n                }\n                if (!nextElementToFocus) {\n                    const lastFocusedIndex = getCurrentFocusedIndex();\n                    let nextFocusedIndex = lastFocusedIndex;\n                    if (direction === 'previous') {\n                        nextFocusedIndex -= 1;\n                    }\n                    else if (direction === 'start') {\n                        nextFocusedIndex = 0;\n                    }\n                    else if (direction === 'next') {\n                        nextFocusedIndex += 1;\n                    }\n                    else {\n                        nextFocusedIndex = focusableElements.length - 1;\n                    }\n                    if (nextFocusedIndex < 0) {\n                        if (focusOutBehavior === 'wrap' && event.key !== 'Tab') {\n                            nextFocusedIndex = focusableElements.length - 1;\n                        }\n                        else {\n                            nextFocusedIndex = 0;\n                        }\n                    }\n                    if (nextFocusedIndex >= focusableElements.length) {\n                        if (focusOutBehavior === 'wrap' && event.key !== 'Tab') {\n                            nextFocusedIndex = 0;\n                        }\n                        else {\n                            nextFocusedIndex = focusableElements.length - 1;\n                        }\n                    }\n                    if (lastFocusedIndex !== nextFocusedIndex) {\n                        nextElementToFocus = focusableElements[nextFocusedIndex];\n                    }\n                }\n                if (activeDescendantControl) {\n                    updateFocusedElement(nextElementToFocus || currentFocusedElement, true);\n                }\n                else if (nextElementToFocus) {\n                    lastKeyboardFocusDirection = direction;\n                    nextElementToFocus.focus();\n                }\n                if (event.key !== 'Tab' || nextElementToFocus) {\n                    event.preventDefault();\n                }\n            }\n        }\n    }, { signal });\n    return controller;\n}\n","const alternateOrders = {\n    'outside-top': ['outside-bottom', 'outside-right', 'outside-left', 'outside-bottom'],\n    'outside-bottom': ['outside-top', 'outside-right', 'outside-left', 'outside-bottom'],\n    'outside-left': ['outside-right', 'outside-bottom', 'outside-top', 'outside-bottom'],\n    'outside-right': ['outside-left', 'outside-bottom', 'outside-top', 'outside-bottom']\n};\nconst alternateAlignments = {\n    start: ['end', 'center'],\n    end: ['start', 'center'],\n    center: ['end', 'start']\n};\nexport function getAnchoredPosition(floatingElement, anchorElement, settings = {}) {\n    const parentElement = getPositionedParent(floatingElement);\n    const clippingRect = getClippingRect(parentElement);\n    const parentElementStyle = getComputedStyle(parentElement);\n    const parentElementRect = parentElement.getBoundingClientRect();\n    const [borderTop, borderLeft] = [parentElementStyle.borderTopWidth, parentElementStyle.borderLeftWidth].map(v => parseInt(v, 10) || 0);\n    const relativeRect = {\n        top: parentElementRect.top + borderTop,\n        left: parentElementRect.left + borderLeft\n    };\n    return pureCalculateAnchoredPosition(clippingRect, relativeRect, floatingElement.getBoundingClientRect(), anchorElement instanceof Element ? anchorElement.getBoundingClientRect() : anchorElement, getDefaultSettings(settings));\n}\nfunction getPositionedParent(element) {\n    let parentNode = element.parentNode;\n    while (parentNode !== null) {\n        if (parentNode instanceof HTMLElement && getComputedStyle(parentNode).position !== 'static') {\n            return parentNode;\n        }\n        parentNode = parentNode.parentNode;\n    }\n    return document.body;\n}\nfunction getClippingRect(element) {\n    let parentNode = element;\n    while (parentNode !== null) {\n        if (parentNode === document.body) {\n            break;\n        }\n        const parentNodeStyle = getComputedStyle(parentNode);\n        if (parentNodeStyle.overflow !== 'visible') {\n            break;\n        }\n        parentNode = parentNode.parentNode;\n    }\n    const clippingNode = parentNode === document.body || !(parentNode instanceof HTMLElement) ? document.body : parentNode;\n    const elemRect = clippingNode.getBoundingClientRect();\n    const elemStyle = getComputedStyle(clippingNode);\n    const [borderTop, borderLeft, borderRight, borderBottom] = [\n        elemStyle.borderTopWidth,\n        elemStyle.borderLeftWidth,\n        elemStyle.borderRightWidth,\n        elemStyle.borderBottomWidth\n    ].map(v => parseInt(v, 10) || 0);\n    return {\n        top: elemRect.top + borderTop,\n        left: elemRect.left + borderLeft,\n        width: elemRect.width - borderRight - borderLeft,\n        height: Math.max(elemRect.height - borderTop - borderBottom, clippingNode === document.body ? window.innerHeight : -Infinity)\n    };\n}\nconst positionDefaults = {\n    side: 'outside-bottom',\n    align: 'start',\n    anchorOffset: 4,\n    alignmentOffset: 4,\n    allowOutOfBounds: false\n};\nfunction getDefaultSettings(settings = {}) {\n    var _a, _b, _c, _d, _e;\n    const side = (_a = settings.side) !== null && _a !== void 0 ? _a : positionDefaults.side;\n    const align = (_b = settings.align) !== null && _b !== void 0 ? _b : positionDefaults.align;\n    return {\n        side,\n        align,\n        anchorOffset: (_c = settings.anchorOffset) !== null && _c !== void 0 ? _c : (side === 'inside-center' ? 0 : positionDefaults.anchorOffset),\n        alignmentOffset: (_d = settings.alignmentOffset) !== null && _d !== void 0 ? _d : (align !== 'center' && side.startsWith('inside') ? positionDefaults.alignmentOffset : 0),\n        allowOutOfBounds: (_e = settings.allowOutOfBounds) !== null && _e !== void 0 ? _e : positionDefaults.allowOutOfBounds\n    };\n}\nfunction pureCalculateAnchoredPosition(viewportRect, relativePosition, floatingRect, anchorRect, { side, align, allowOutOfBounds, anchorOffset, alignmentOffset }) {\n    const relativeViewportRect = {\n        top: viewportRect.top - relativePosition.top,\n        left: viewportRect.left - relativePosition.left,\n        width: viewportRect.width,\n        height: viewportRect.height\n    };\n    let pos = calculatePosition(floatingRect, anchorRect, side, align, anchorOffset, alignmentOffset);\n    let anchorSide = side;\n    let anchorAlign = align;\n    pos.top -= relativePosition.top;\n    pos.left -= relativePosition.left;\n    if (!allowOutOfBounds) {\n        const alternateOrder = alternateOrders[side];\n        let positionAttempt = 0;\n        if (alternateOrder) {\n            let prevSide = side;\n            while (positionAttempt < alternateOrder.length &&\n                shouldRecalculatePosition(prevSide, pos, relativeViewportRect, floatingRect)) {\n                const nextSide = alternateOrder[positionAttempt++];\n                prevSide = nextSide;\n                pos = calculatePosition(floatingRect, anchorRect, nextSide, align, anchorOffset, alignmentOffset);\n                pos.top -= relativePosition.top;\n                pos.left -= relativePosition.left;\n                anchorSide = nextSide;\n            }\n        }\n        const alternateAlignment = alternateAlignments[align];\n        let alignmentAttempt = 0;\n        if (alternateAlignment) {\n            let prevAlign = align;\n            while (alignmentAttempt < alternateAlignment.length &&\n                shouldRecalculateAlignment(prevAlign, pos, relativeViewportRect, floatingRect)) {\n                const nextAlign = alternateAlignment[alignmentAttempt++];\n                prevAlign = nextAlign;\n                pos = calculatePosition(floatingRect, anchorRect, anchorSide, nextAlign, anchorOffset, alignmentOffset);\n                pos.top -= relativePosition.top;\n                pos.left -= relativePosition.left;\n                anchorAlign = nextAlign;\n            }\n        }\n        if (pos.top < relativeViewportRect.top) {\n            pos.top = relativeViewportRect.top;\n        }\n        if (pos.left < relativeViewportRect.left) {\n            pos.left = relativeViewportRect.left;\n        }\n        if (pos.left + floatingRect.width > viewportRect.width + relativeViewportRect.left) {\n            pos.left = viewportRect.width + relativeViewportRect.left - floatingRect.width;\n        }\n        if (alternateOrder && positionAttempt < alternateOrder.length) {\n            if (pos.top + floatingRect.height > viewportRect.height + relativeViewportRect.top) {\n                pos.top = viewportRect.height + relativeViewportRect.top - floatingRect.height;\n            }\n        }\n    }\n    return Object.assign(Object.assign({}, pos), { anchorSide, anchorAlign });\n}\nfunction calculatePosition(elementDimensions, anchorPosition, side, align, anchorOffset, alignmentOffset) {\n    const anchorRight = anchorPosition.left + anchorPosition.width;\n    const anchorBottom = anchorPosition.top + anchorPosition.height;\n    let top = -1;\n    let left = -1;\n    if (side === 'outside-top') {\n        top = anchorPosition.top - anchorOffset - elementDimensions.height;\n    }\n    else if (side === 'outside-bottom') {\n        top = anchorBottom + anchorOffset;\n    }\n    else if (side === 'outside-left') {\n        left = anchorPosition.left - anchorOffset - elementDimensions.width;\n    }\n    else if (side === 'outside-right') {\n        left = anchorRight + anchorOffset;\n    }\n    if (side === 'outside-top' || side === 'outside-bottom') {\n        if (align === 'start') {\n            left = anchorPosition.left + alignmentOffset;\n        }\n        else if (align === 'center') {\n            left = anchorPosition.left - (elementDimensions.width - anchorPosition.width) / 2 + alignmentOffset;\n        }\n        else {\n            left = anchorRight - elementDimensions.width - alignmentOffset;\n        }\n    }\n    if (side === 'outside-left' || side === 'outside-right') {\n        if (align === 'start') {\n            top = anchorPosition.top + alignmentOffset;\n        }\n        else if (align === 'center') {\n            top = anchorPosition.top - (elementDimensions.height - anchorPosition.height) / 2 + alignmentOffset;\n        }\n        else {\n            top = anchorBottom - elementDimensions.height - alignmentOffset;\n        }\n    }\n    if (side === 'inside-top') {\n        top = anchorPosition.top + anchorOffset;\n    }\n    else if (side === 'inside-bottom') {\n        top = anchorBottom - anchorOffset - elementDimensions.height;\n    }\n    else if (side === 'inside-left') {\n        left = anchorPosition.left + anchorOffset;\n    }\n    else if (side === 'inside-right') {\n        left = anchorRight - anchorOffset - elementDimensions.width;\n    }\n    else if (side === 'inside-center') {\n        left = (anchorRight + anchorPosition.left) / 2 - elementDimensions.width / 2 + anchorOffset;\n    }\n    if (side === 'inside-top' || side === 'inside-bottom') {\n        if (align === 'start') {\n            left = anchorPosition.left + alignmentOffset;\n        }\n        else if (align === 'center') {\n            left = anchorPosition.left - (elementDimensions.width - anchorPosition.width) / 2 + alignmentOffset;\n        }\n        else {\n            left = anchorRight - elementDimensions.width - alignmentOffset;\n        }\n    }\n    else if (side === 'inside-left' || side === 'inside-right' || side === 'inside-center') {\n        if (align === 'start') {\n            top = anchorPosition.top + alignmentOffset;\n        }\n        else if (align === 'center') {\n            top = anchorPosition.top - (elementDimensions.height - anchorPosition.height) / 2 + alignmentOffset;\n        }\n        else {\n            top = anchorBottom - elementDimensions.height - alignmentOffset;\n        }\n    }\n    return { top, left };\n}\nfunction shouldRecalculatePosition(side, currentPos, containerDimensions, elementDimensions) {\n    if (side === 'outside-top' || side === 'outside-bottom') {\n        return (currentPos.top < containerDimensions.top ||\n            currentPos.top + elementDimensions.height > containerDimensions.height + containerDimensions.top);\n    }\n    else {\n        return (currentPos.left < containerDimensions.left ||\n            currentPos.left + elementDimensions.width > containerDimensions.width + containerDimensions.left);\n    }\n}\nfunction shouldRecalculateAlignment(align, currentPos, containerDimensions, elementDimensions) {\n    if (align === 'end') {\n        return currentPos.left < containerDimensions.left;\n    }\n    else if (align === 'start' || align === 'center') {\n        return (currentPos.left + elementDimensions.width > containerDimensions.left + containerDimensions.width ||\n            currentPos.left < containerDimensions.left);\n    }\n}\n","import useLayoutEffect from '../utils/useIsomorphicLayoutEffect'; // https://gist.github.com/strothj/708afcf4f01dd04de8f49c92e88093c3\n\nexport function useResizeObserver(callback, target) {\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : document.documentElement; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    if (!targetEl) return () => {};\n    const observer = new window.ResizeObserver(entries => callback(entries));\n    observer.observe(targetEl);\n    return () => {\n      observer.disconnect();\n    };\n  }, [callback, target]);\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useEffect } from 'react';\nimport Overlay from '../Overlay';\nimport { useFocusTrap } from '../hooks/useFocusTrap';\nimport { useFocusZone } from '../hooks/useFocusZone';\nimport { useAnchoredPosition, useProvidedRefOrCreate, useRenderForcingRef } from '../hooks';\nimport { useSSRSafeId } from '@react-aria/ssr';\n\n/**\n * An `AnchoredOverlay` provides an anchor that will open a floating overlay positioned relative to the anchor.\n * The overlay can be opened and navigated using keyboard or mouse.\n */\nexport const AnchoredOverlay = ({\n  renderAnchor,\n  anchorRef: externalAnchorRef,\n  anchorId: externalAnchorId,\n  children,\n  open,\n  onOpen,\n  onClose,\n  height,\n  width,\n  overlayProps,\n  focusTrapSettings,\n  focusZoneSettings,\n  side,\n  align\n}) => {\n  const anchorRef = useProvidedRefOrCreate(externalAnchorRef);\n  const [overlayRef, updateOverlayRef] = useRenderForcingRef();\n  const anchorId = useSSRSafeId(externalAnchorId);\n  const onClickOutside = useCallback(() => onClose === null || onClose === void 0 ? void 0 : onClose('click-outside'), [onClose]);\n  const onEscape = useCallback(() => onClose === null || onClose === void 0 ? void 0 : onClose('escape'), [onClose]);\n  const onAnchorKeyDown = useCallback(event => {\n    if (!event.defaultPrevented) {\n      if (!open && ['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(event.key)) {\n        onOpen === null || onOpen === void 0 ? void 0 : onOpen('anchor-key-press', event);\n        event.preventDefault();\n      }\n    }\n  }, [open, onOpen]);\n  const onAnchorClick = useCallback(event => {\n    if (event.defaultPrevented || event.button !== 0) {\n      return;\n    }\n\n    if (!open) {\n      onOpen === null || onOpen === void 0 ? void 0 : onOpen('anchor-click');\n    } else {\n      onClose === null || onClose === void 0 ? void 0 : onClose('anchor-click');\n    }\n  }, [open, onOpen, onClose]);\n  const {\n    position\n  } = useAnchoredPosition({\n    anchorElementRef: anchorRef,\n    floatingElementRef: overlayRef,\n    side,\n    align\n  }, [overlayRef.current]);\n  useEffect(() => {\n    // ensure overlay ref gets cleared when closed, so position can reset between closing/re-opening\n    if (!open && overlayRef.current) {\n      updateOverlayRef(null);\n    }\n  }, [open, overlayRef, updateOverlayRef]);\n  useFocusZone({\n    containerRef: overlayRef,\n    disabled: !open || !position,\n    ...focusZoneSettings\n  });\n  useFocusTrap({\n    containerRef: overlayRef,\n    disabled: !open || !position,\n    ...focusTrapSettings\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderAnchor && renderAnchor({\n    ref: anchorRef,\n    id: anchorId,\n    'aria-haspopup': 'true',\n    'aria-expanded': open ? 'true' : undefined,\n    tabIndex: 0,\n    onClick: onAnchorClick,\n    onKeyDown: onAnchorKeyDown\n  }), open ? /*#__PURE__*/React.createElement(Overlay, _extends({\n    returnFocusRef: anchorRef,\n    onClickOutside: onClickOutside,\n    ignoreClickRefs: [anchorRef],\n    onEscape: onEscape,\n    ref: updateOverlayRef,\n    role: \"none\",\n    visibility: position ? 'visible' : 'hidden',\n    height: height,\n    width: width,\n    top: (position === null || position === void 0 ? void 0 : position.top) || 0,\n    left: (position === null || position === void 0 ? void 0 : position.left) || 0,\n    anchorSide: position === null || position === void 0 ? void 0 : position.anchorSide\n  }, overlayProps), children) : null);\n};\nAnchoredOverlay.displayName = 'AnchoredOverlay';\nAnchoredOverlay.defaultProps = {\n  side: 'outside-bottom',\n  align: 'start'\n};","import { useCallback, useRef, useState } from 'react';\n/**\n * There are certain situations where a ref might be set after the current render cycle for a\n * component has finished.  e.g. a forward ref from a conditionally rendered child component.\n * In these situations, we need to force a re-render, which is done here by the useState hook.\n * @type TRef The type of the RefObject which should be created.\n */\n\nexport function useRenderForcingRef(value) {\n  const [refCurrent, setRefCurrent] = useState(value || null);\n  const ref = useRef(null);\n  ref.current = refCurrent;\n  const setRef = useCallback(newRef => {\n    ref.current = newRef;\n    setRefCurrent(newRef);\n  }, [ref]);\n  return [ref, setRef];\n}","import React from 'react';\nimport { getAnchoredPosition } from '@primer/behaviors';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate';\nimport { useResizeObserver } from './useResizeObserver';\nimport useLayoutEffect from '../utils/useIsomorphicLayoutEffect';\n\n/**\n * Calculates the top and left values for an absolutely-positioned floating element\n * to be anchored to some anchor element. Returns refs for the floating element\n * and the anchor element, along with the position.\n * @param settings Settings for calculating the anchored position.\n * @param dependencies Dependencies to determine when to re-calculate the position.\n * @returns An object of {top: number, left: number} to absolutely-position the\n * floating element.\n */\nexport function useAnchoredPosition(settings, dependencies = []) {\n  const floatingElementRef = useProvidedRefOrCreate(settings === null || settings === void 0 ? void 0 : settings.floatingElementRef);\n  const anchorElementRef = useProvidedRefOrCreate(settings === null || settings === void 0 ? void 0 : settings.anchorElementRef);\n  const [position, setPosition] = React.useState(undefined);\n  const updatePosition = React.useCallback(() => {\n    if (floatingElementRef.current instanceof Element && anchorElementRef.current instanceof Element) {\n      setPosition(getAnchoredPosition(floatingElementRef.current, anchorElementRef.current, settings));\n    } else {\n      setPosition(undefined);\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [floatingElementRef, anchorElementRef, ...dependencies]);\n  useLayoutEffect(updatePosition, [updatePosition]);\n  useResizeObserver(updatePosition);\n  return {\n    floatingElementRef,\n    anchorElementRef,\n    position\n  };\n}","import React, { useEffect } from 'react';\nimport { focusZone } from '@primer/behaviors';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate';\nexport { FocusKeys } from '@primer/behaviors';\nexport function useFocusZone(settings = {}, dependencies = []) {\n  const containerRef = useProvidedRefOrCreate(settings.containerRef);\n  const useActiveDescendant = !!settings.activeDescendantFocus;\n  const passedActiveDescendantRef = typeof settings.activeDescendantFocus === 'boolean' || !settings.activeDescendantFocus ? undefined : settings.activeDescendantFocus;\n  const activeDescendantControlRef = useProvidedRefOrCreate(passedActiveDescendantRef);\n  const disabled = settings.disabled;\n  const abortController = React.useRef();\n  useEffect(() => {\n    if (containerRef.current instanceof HTMLElement && (!useActiveDescendant || activeDescendantControlRef.current instanceof HTMLElement)) {\n      if (!disabled) {\n        var _activeDescendantCont;\n\n        const vanillaSettings = { ...settings,\n          activeDescendantControl: (_activeDescendantCont = activeDescendantControlRef.current) !== null && _activeDescendantCont !== void 0 ? _activeDescendantCont : undefined\n        };\n        abortController.current = focusZone(containerRef.current, vanillaSettings);\n        return () => {\n          var _abortController$curr;\n\n          (_abortController$curr = abortController.current) === null || _abortController$curr === void 0 ? void 0 : _abortController$curr.abort();\n        };\n      } else {\n        var _abortController$curr2;\n\n        (_abortController$curr2 = abortController.current) === null || _abortController$curr2 === void 0 ? void 0 : _abortController$curr2.abort();\n      }\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [disabled, ...dependencies]);\n  return {\n    containerRef,\n    activeDescendantControlRef\n  };\n}","import React from 'react';\nimport { focusTrap } from '@primer/behaviors';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate';\n\n/**\n * Hook used to trap focus inside a container. Returns a ref that can be added to the container\n * that should trap focus.\n * @param settings {FocusTrapHookSettings}\n */\nexport function useFocusTrap(settings, dependencies = []) {\n  const containerRef = useProvidedRefOrCreate(settings === null || settings === void 0 ? void 0 : settings.containerRef);\n  const initialFocusRef = useProvidedRefOrCreate(settings === null || settings === void 0 ? void 0 : settings.initialFocusRef);\n  const disabled = settings === null || settings === void 0 ? void 0 : settings.disabled;\n  const abortController = React.useRef();\n  const previousFocusedElement = React.useRef(null); // If we are enabling a focus trap and haven't already stored the previously focused element\n  // go ahead an do that so we can restore later when the trap is disabled.\n\n  if (!previousFocusedElement.current && !(settings !== null && settings !== void 0 && settings.disabled)) {\n    previousFocusedElement.current = document.activeElement;\n  } // This function removes the event listeners that enable the focus trap and restores focus\n  // to the previously-focused element (if necessary).\n\n\n  function disableTrap() {\n    var _abortController$curr;\n\n    (_abortController$curr = abortController.current) === null || _abortController$curr === void 0 ? void 0 : _abortController$curr.abort();\n\n    if (settings !== null && settings !== void 0 && settings.restoreFocusOnCleanUp && previousFocusedElement.current instanceof HTMLElement) {\n      previousFocusedElement.current.focus();\n      previousFocusedElement.current = null;\n    }\n  }\n\n  React.useEffect(() => {\n    if (containerRef.current instanceof HTMLElement) {\n      if (!disabled) {\n        var _initialFocusRef$curr;\n\n        abortController.current = focusTrap(containerRef.current, (_initialFocusRef$curr = initialFocusRef.current) !== null && _initialFocusRef$curr !== void 0 ? _initialFocusRef$curr : undefined);\n        return () => {\n          disableTrap();\n        };\n      } else {\n        disableTrap();\n      }\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [containerRef, initialFocusRef, disabled, ...dependencies]);\n  return {\n    containerRef,\n    initialFocusRef\n  };\n}","import React from 'react';\nimport { iterateFocusableElements } from '@primer/behaviors/utils';\nexport const useMenuInitialFocus = (open, containerRef, anchorRef) => {\n  /**\n   * We need to pick the first element to focus based on how the menu was opened,\n   * however, we need to wait for the menu to be open to set focus.\n   * This is why we use set openingKey in state and have 2 effects\n   */\n  const [openingGesture, setOpeningGesture] = React.useState(undefined);\n  React.useEffect(function inferOpeningKey() {\n    const anchorElement = anchorRef.current;\n\n    const clickHandler = event => {\n      // event.detail === 0 means onClick was fired by Enter/Space key\n      // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n      if (event.detail !== 0) setOpeningGesture('mouse-click');\n    };\n\n    const keydownHandler = event => {\n      if (['Space', 'Enter', 'ArrowDown', 'ArrowUp'].includes(event.code)) {\n        setOpeningGesture(event.code);\n      }\n    };\n\n    anchorElement === null || anchorElement === void 0 ? void 0 : anchorElement.addEventListener('click', clickHandler);\n    anchorElement === null || anchorElement === void 0 ? void 0 : anchorElement.addEventListener('keydown', keydownHandler);\n    return () => {\n      anchorElement === null || anchorElement === void 0 ? void 0 : anchorElement.removeEventListener('click', clickHandler);\n      anchorElement === null || anchorElement === void 0 ? void 0 : anchorElement.removeEventListener('keydown', keydownHandler);\n    };\n  }, [anchorRef]);\n  /**\n   * Pick the first element to focus based on the key used to open the Menu\n   * Click: anchor\n   * ArrowDown | Space | Enter: first element\n   * ArrowUp: last element\n   */\n\n  React.useEffect(function moveFocusOnOpen() {\n    if (!open || !containerRef.current) return; // wait till the menu is open\n\n    const iterable = iterateFocusableElements(containerRef.current);\n\n    if (openingGesture === 'mouse-click') {\n      if (anchorRef.current) anchorRef.current.focus();else throw new Error('For focus management, please attach anchorRef');\n    } else if (openingGesture && ['ArrowDown', 'Space', 'Enter'].includes(openingGesture)) {\n      const firstElement = iterable.next().value;\n      /** We push imperative focus to the next tick to prevent React's batching */\n\n      setTimeout(() => firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus());\n    } else if ('ArrowUp' === openingGesture) {\n      const elements = [...iterable];\n      const lastElement = elements[elements.length - 1];\n      setTimeout(() => lastElement.focus());\n    } else {\n      /** if the menu was not opened with the anchor, we default to the first element\n       *  for example: with keyboard shortcut (see stories/fixtures)\n       */\n      const firstElement = iterable.next().value;\n      setTimeout(() => firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus());\n    }\n  }, // we don't want containerRef in dependencies\n  // because re-renders to containerRef while it's open should not fire initialMenuFocus\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [open, openingGesture, anchorRef]);\n};","import React from 'react';\nimport { iterateFocusableElements } from '@primer/behaviors/utils';\nimport { useMenuInitialFocus } from './useMenuInitialFocus';\nimport { useMnemonics } from './useMnemonics';\n\n/**\n * Keyboard navigation is a mix of 4 hooks\n * 1. useMenuInitialFocus\n * 2. useTypeaheadFocus\n * 3. useCloseMenuOnTab\n * 4. useMoveFocusToMenuItem\n */\nexport const useMenuKeyboardNavigation = (open, onClose, containerRef, anchorRef) => {\n  useMenuInitialFocus(open, containerRef, anchorRef);\n  useMnemonics(open, containerRef);\n  useCloseMenuOnTab(open, onClose, containerRef, anchorRef);\n  useMoveFocusToMenuItem(open, containerRef, anchorRef);\n};\n/**\n * When Tab or Shift+Tab is pressed, the menu should close\n * and the focus should naturally move to the next item\n */\n\nconst useCloseMenuOnTab = (open, onClose, containerRef, anchorRef) => {\n  React.useEffect(() => {\n    const container = containerRef.current;\n    const anchor = anchorRef.current;\n\n    const handler = event => {\n      if (open && event.key === 'Tab') onClose === null || onClose === void 0 ? void 0 : onClose('tab');\n    };\n\n    container === null || container === void 0 ? void 0 : container.addEventListener('keydown', handler);\n    anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n    return () => {\n      container === null || container === void 0 ? void 0 : container.removeEventListener('keydown', handler);\n      anchor === null || anchor === void 0 ? void 0 : anchor.removeEventListener('keydown', handler);\n    };\n  }, [open, onClose, containerRef, anchorRef]);\n};\n/**\n * When Arrow Keys are pressed and the focus is on the anchor,\n * focus should move to a menu item\n */\n\n\nconst useMoveFocusToMenuItem = (open, containerRef, anchorRef) => {\n  React.useEffect(() => {\n    const container = containerRef.current;\n    const anchor = anchorRef.current;\n\n    const handler = event => {\n      if (!open || !container) return;\n      const iterable = iterateFocusableElements(container);\n\n      if (event.key === 'ArrowDown') {\n        // TODO: does commenting this out break anything?\n        // event.preventDefault() // prevent scroll event\n        const firstElement = iterable.next().value;\n        /** We push imperative focus to the next tick to prevent React's batching */\n\n        setTimeout(() => firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus());\n      } else if (event.key === 'ArrowUp') {\n        // TODO: does commenting this out break anything?\n        // event.preventDefault() // prevent scroll event\n        const elements = [...iterable];\n        const lastElement = elements[elements.length - 1];\n        setTimeout(() => lastElement.focus());\n      }\n    };\n\n    anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n    return () => anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n  }, [open, containerRef, anchorRef]);\n};","import React from 'react';\nimport { iterateFocusableElements } from '@primer/behaviors/utils';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate';\n/*\n * A mnemonic indicates to the user which key to press (single)\n * to activate a command or navigate to a component\n * typically appearing in a menu title, menu item, or the text of a button.\n */\n\nexport const useMnemonics = (open, providedRef) => {\n  const containerRef = useProvidedRefOrCreate(providedRef);\n  React.useEffect(function addAriaKeyshortcuts() {\n    if (!open || !containerRef.current) return;\n    const container = containerRef.current;\n    const focusableItems = [...iterateFocusableElements(container)];\n    focusableItems.map(item => {\n      var _item$textContent;\n\n      // if item already has aria-keyshortcuts defined by user, skip\n      if (item.getAttribute('aria-keyshortcuts')) return;\n      const firstLetter = (_item$textContent = item.textContent) === null || _item$textContent === void 0 ? void 0 : _item$textContent.toLowerCase()[0];\n      if (firstLetter) item.setAttribute('aria-keyshortcuts', firstLetter);\n    });\n  }, [open, containerRef]);\n  React.useEffect(function handleKeyDown() {\n    if (!open || !containerRef.current) return;\n    const container = containerRef.current;\n\n    const handler = event => {\n      var _elementToFocus;\n\n      // skip if a TextInput has focus\n      const activeElement = document.activeElement;\n      if (activeElement.tagName === 'INPUT') return; // skip if used with modifier to preserve shortcuts like ⌘ + F\n\n      const hasModifier = event.ctrlKey || event.altKey || event.metaKey;\n      if (hasModifier) return; // skip if it's not a alphabet key\n\n      if (!isAlphabetKey(event)) return; // if this is a typeahead event, don't propagate outside of menu\n\n      event.stopPropagation();\n      const query = event.key.toLowerCase();\n      let elementToFocus;\n      const focusableItems = [...iterateFocusableElements(container)];\n      const itemsMatchingKey = focusableItems.filter(item => {\n        var _item$getAttribute;\n\n        const keyshortcuts = (_item$getAttribute = item.getAttribute('aria-keyshortcuts')) === null || _item$getAttribute === void 0 ? void 0 : _item$getAttribute.split(' ').map(shortcut => shortcut.toLowerCase());\n        return keyshortcuts && keyshortcuts.includes(query);\n      });\n      const currentActiveIndex = itemsMatchingKey.indexOf(activeElement); // If the last element is already selected, cycle through the list\n\n      if (currentActiveIndex === itemsMatchingKey.length - 1) {\n        elementToFocus = itemsMatchingKey[0];\n      } else {\n        elementToFocus = itemsMatchingKey.find((item, index) => {\n          return index > currentActiveIndex;\n        });\n      }\n\n      (_elementToFocus = elementToFocus) === null || _elementToFocus === void 0 ? void 0 : _elementToFocus.focus();\n    };\n\n    container.addEventListener('keydown', handler);\n    return () => container.removeEventListener('keydown', handler);\n  }, [open, containerRef]);\n\n  const isAlphabetKey = event => {\n    return event.key.length === 1 && /[a-z\\d]/i.test(event.key);\n  };\n\n  return {\n    containerRef\n  };\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport { TriangleDownIcon } from '@primer/octicons-react';\nimport { AnchoredOverlay } from './AnchoredOverlay';\nimport { useProvidedRefOrCreate, useProvidedStateOrCreate, useMenuKeyboardNavigation } from './hooks';\nimport { Divider } from './ActionList/Divider';\nimport { ActionListContainerContext } from './ActionList/ActionListContainerContext';\nimport { Button } from './Button';\nimport { merge } from './sx';\nconst MenuContext = /*#__PURE__*/React.createContext({\n  renderAnchor: null,\n  open: false\n});\n\nconst Menu = ({\n  anchorRef: externalAnchorRef,\n  open,\n  onOpenChange,\n  children\n}) => {\n  const [combinedOpenState, setCombinedOpenState] = useProvidedStateOrCreate(open, onOpenChange, false);\n  const onOpen = React.useCallback(() => setCombinedOpenState(true), [setCombinedOpenState]);\n  const onClose = React.useCallback(() => setCombinedOpenState(false), [setCombinedOpenState]);\n  const anchorRef = useProvidedRefOrCreate(externalAnchorRef);\n  const anchorId = useSSRSafeId();\n  let renderAnchor = null; // 🚨 Hack for good API!\n  // we strip out Anchor from children and pass it to AnchoredOverlay to render\n  // with additional props for accessibility\n\n  const contents = React.Children.map(children, child => {\n    if (child.type === MenuButton || child.type === Anchor) {\n      renderAnchor = anchorProps => /*#__PURE__*/React.cloneElement(child, anchorProps);\n\n      return null;\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: {\n      anchorRef,\n      renderAnchor,\n      anchorId,\n      open: combinedOpenState,\n      onOpen,\n      onClose\n    }\n  }, contents);\n};\n\nMenu.displayName = \"Menu\";\nconst Anchor = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...anchorProps\n}, anchorRef) => {\n  return /*#__PURE__*/React.cloneElement(children, { ...anchorProps,\n    ref: anchorRef\n  });\n});\n/** this component is syntactical sugar 🍭 */\n\nconst MenuButton = /*#__PURE__*/React.forwardRef(({\n  sx: sxProp = {},\n  ...props\n}, anchorRef) => {\n  return /*#__PURE__*/React.createElement(Anchor, {\n    ref: anchorRef\n  }, /*#__PURE__*/React.createElement(Button, _extends({\n    type: \"button\",\n    trailingIcon: TriangleDownIcon,\n    sx: merge({\n      // override the margin on caret for optical alignment\n      '[data-component=trailingIcon]': {\n        marginX: -1\n      }\n    }, sxProp)\n  }, props)));\n});\n\nconst Overlay = ({\n  children,\n  align = 'start',\n  ...overlayProps\n}) => {\n  // we typecast anchorRef as required instead of optional\n  // because we know that we're setting it in context in Menu\n  const {\n    anchorRef,\n    renderAnchor,\n    anchorId,\n    open,\n    onOpen,\n    onClose\n  } = React.useContext(MenuContext);\n  const containerRef = /*#__PURE__*/React.createRef();\n  useMenuKeyboardNavigation(open, onClose, containerRef, anchorRef);\n  return /*#__PURE__*/React.createElement(AnchoredOverlay, {\n    anchorRef: anchorRef,\n    renderAnchor: renderAnchor,\n    anchorId: anchorId,\n    open: open,\n    onOpen: onOpen,\n    onClose: onClose,\n    align: align,\n    overlayProps: overlayProps,\n    focusZoneSettings: {\n      focusOutBehavior: 'wrap'\n    },\n    focusTrapSettings: {\n      disabled: true\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef\n  }, /*#__PURE__*/React.createElement(ActionListContainerContext.Provider, {\n    value: {\n      container: 'ActionMenu',\n      listRole: 'menu',\n      listLabelledBy: anchorId,\n      selectionAttribute: 'aria-checked',\n      // Should this be here?\n      afterSelect: onClose\n    }\n  }, children)));\n};\n\nOverlay.displayName = \"Overlay\";\nMenu.displayName = 'ActionMenu';\nexport const ActionMenu = Object.assign(Menu, {\n  Button: MenuButton,\n  Anchor,\n  Overlay,\n  Divider\n});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { variant } from 'styled-system';\nimport { get } from '../constants';\nimport sx from '../sx'; // TODO: remove invalid \"extralarge\" size name in next breaking change\n\n/** @deprecated 'extralarge' to be removed to align with size naming ADR https://github.com/github/primer/blob/main/adrs/2022-02-09-size-naming-guidelines.md **/\n\nconst xlargeSize = '32px';\nexport const tokenSizes = {\n  small: '16px',\n  medium: '20px',\n  large: '24px',\n  extralarge: xlargeSize,\n  xlarge: xlargeSize\n};\nexport const defaultTokenSize = 'medium';\nexport const isTokenInteractive = ({\n  as = 'span',\n  onClick,\n  onFocus,\n  tabIndex = -1\n}) => Boolean(onFocus || onClick || tabIndex > -1 || ['a', 'button'].includes(as));\nconst xlargeVariantStyles = {\n  fontSize: 1,\n  height: tokenSizes.xlarge,\n  lineHeight: tokenSizes.xlarge,\n  paddingLeft: 3,\n  paddingRight: 3,\n  paddingTop: 0,\n  paddingBottom: 0\n};\nconst variants = variant({\n  prop: 'size',\n  variants: {\n    small: {\n      fontSize: 0,\n      height: tokenSizes.small,\n      // without setting lineHeight to match height, the \"x\" appears vertically mis-aligned\n      lineHeight: tokenSizes.small,\n      paddingLeft: 1,\n      paddingRight: 1,\n      // need to explicitly set padding top and bottom to \"0\" to override default `<button>` element styles\n      // without setting these, the \"x\" appears vertically mis-aligned\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    medium: {\n      fontSize: 0,\n      height: tokenSizes.medium,\n      lineHeight: tokenSizes.medium,\n      paddingLeft: 2,\n      paddingRight: 2,\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    large: {\n      fontSize: 0,\n      height: tokenSizes.large,\n      lineHeight: tokenSizes.large,\n      paddingLeft: 2,\n      paddingRight: 2,\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    extralarge: xlargeVariantStyles,\n    xlarge: xlargeVariantStyles\n  }\n});\nconst StyledTokenBase = styled.span.withConfig({\n  displayName: \"TokenBase__StyledTokenBase\",\n  componentId: \"sc-1ju9l7y-0\"\n})([\"align-items:center;border-radius:999px;cursor:\", \";display:inline-flex;font-weight:\", \";font-family:inherit;text-decoration:none;position:relative;white-space:nowrap;\", \" \", \"\"], props => isTokenInteractive(props) ? 'pointer' : 'auto', get('fontWeights.bold'), variants, sx);\nconst TokenBase = /*#__PURE__*/React.forwardRef(({\n  text,\n  onRemove,\n  onKeyDown,\n  id,\n  ...rest\n}, forwardedRef) => {\n  return /*#__PURE__*/React.createElement(StyledTokenBase, _extends({\n    onKeyDown: event => {\n      onKeyDown && onKeyDown(event);\n\n      if ((event.key === 'Backspace' || event.key === 'Delete') && onRemove) {\n        onRemove();\n      }\n    },\n    \"aria-label\": onRemove ? `${text}, press backspace or delete to remove` : undefined,\n    id: id === null || id === void 0 ? void 0 : id.toString()\n  }, rest, {\n    ref: forwardedRef\n  }));\n});\nTokenBase.defaultProps = {\n  as: 'span',\n  size: defaultTokenSize\n};\nexport default TokenBase;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { XIcon } from '@primer/octicons-react';\nimport styled, { css } from 'styled-components';\nimport { variant } from 'styled-system';\nimport { get } from '../constants';\nimport sx from '../sx';\nimport { tokenSizes, defaultTokenSize } from './TokenBase';\nconst variants = variant({\n  prop: 'size',\n  variants: {\n    small: {\n      height: tokenSizes.small,\n      width: tokenSizes.small\n    },\n    medium: {\n      height: tokenSizes.medium,\n      width: tokenSizes.medium\n    },\n    large: {\n      height: tokenSizes.large,\n      width: tokenSizes.large\n    },\n    extralarge: {\n      height: tokenSizes.extralarge,\n      width: tokenSizes.extralarge\n    },\n    // xlarge will eventually replace \"extralarge\" per this ADR: https://github.com/github/primer/blob/main/adrs/2022-02-09-size-naming-guidelines.md\n    xlarge: {\n      height: tokenSizes.xlarge,\n      width: tokenSizes.xlarge\n    }\n  }\n});\n\nconst getTokenButtonIconSize = size => parseInt(tokenSizes[size || defaultTokenSize], 10) * 0.75;\n\nconst StyledTokenButton = styled.span.withConfig({\n  displayName: \"_RemoveTokenButton__StyledTokenButton\",\n  componentId: \"sc-urhpr1-0\"\n})([\"background-color:transparent;font-family:inherit;color:currentColor;cursor:pointer;display:inline-flex;justify-content:center;align-items:center;user-select:none;appearance:none;text-decoration:none;padding:0;transform:\", \";align-self:baseline;border:0;border-radius:999px;\", \" &:hover,&:focus{background-color:\", \";}&:active{background-color:\", \";}\", \" \", \"\"], props => `translate(${props.borderOffset}px, -${props.borderOffset}px)`, props => {\n  switch (props.size) {\n    case 'large':\n    case 'extralarge':\n    case 'xlarge':\n      return css([\"margin-left:\", \";\"], get('space.2'));\n\n    default:\n      return css([\"margin-left:\", \";\"], get('space.1'));\n  }\n}, get('colors.neutral.muted'), get('colors.neutral.subtle'), variants, sx);\n\nconst RemoveTokenButton = ({\n  'aria-label': ariaLabel,\n  isParentInteractive,\n  size,\n  ...rest\n}) => {\n  delete rest.children;\n  return /*#__PURE__*/React.createElement(StyledTokenButton, _extends({\n    as: isParentInteractive ? 'span' : 'button',\n    tabIndex: isParentInteractive ? -1 : undefined,\n    \"aria-label\": !isParentInteractive ? 'Remove token' : ariaLabel,\n    size: size\n  }, rest), /*#__PURE__*/React.createElement(XIcon, {\n    size: getTokenButtonIconSize(size)\n  }));\n};\n\nRemoveTokenButton.displayName = \"RemoveTokenButton\";\nRemoveTokenButton.defaultProps = {\n  size: defaultTokenSize\n};\nexport default RemoveTokenButton;","/**\n * A simple guard function:\n *\n * ```js\n * Math.min(Math.max(low, value), high)\n * ```\n */\nfunction guard(low: number, high: number, value: number): number {\n  return Math.min(Math.max(low, value), high);\n}\n\nexport default guard;\n","class ColorError extends Error {\n  constructor(color: string) {\n    super(`Failed to parse color: \"${color}\"`);\n  }\n}\n\nexport default ColorError;\n","import guard from './guard';\nimport ColorError from './ColorError';\n\n/**\n * Parses a color into red, gree, blue, alpha parts\n *\n * @param color the input color. Can be a RGB, RBGA, HSL, HSLA, or named color\n */\nfunction parseToRgba(color: string): [number, number, number, number] {\n  if (typeof color !== 'string') throw new ColorError(color);\n  if (color.trim().toLowerCase() === 'transparent') return [0, 0, 0, 0];\n\n  let normalizedColor = color.trim();\n  normalizedColor = namedColorRegex.test(color) ? nameToHex(color) : color;\n\n  const reducedHexMatch = reducedHexRegex.exec(normalizedColor);\n  if (reducedHexMatch) {\n    const arr = Array.from(reducedHexMatch).slice(1);\n    return [\n      ...arr.slice(0, 3).map((x) => parseInt(r(x, 2), 16)),\n      parseInt(r(arr[3] || 'f', 2), 16) / 255,\n    ] as [number, number, number, number];\n  }\n\n  const hexMatch = hexRegex.exec(normalizedColor);\n  if (hexMatch) {\n    const arr = Array.from(hexMatch).slice(1);\n    return [\n      ...arr.slice(0, 3).map((x) => parseInt(x, 16)),\n      parseInt(arr[3] || 'ff', 16) / 255,\n    ] as [number, number, number, number];\n  }\n\n  const rgbaMatch = rgbaRegex.exec(normalizedColor);\n  if (rgbaMatch) {\n    const arr = Array.from(rgbaMatch).slice(1);\n    return [\n      ...arr.slice(0, 3).map((x) => parseInt(x, 10)),\n      parseFloat(arr[3] || '1'),\n    ] as [number, number, number, number];\n  }\n\n  const hslaMatch = hslaRegex.exec(normalizedColor);\n  if (hslaMatch) {\n    const [h, s, l, a] = Array.from(hslaMatch).slice(1).map(parseFloat);\n    if (guard(0, 100, s) !== s) throw new ColorError(color);\n    if (guard(0, 100, l) !== l) throw new ColorError(color);\n    return [...hslToRgb(h, s, l), a || 1] as [number, number, number, number];\n  }\n\n  throw new ColorError(color);\n}\n\nfunction hash(str: string) {\n  let hash = 5381;\n  let i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return (hash >>> 0) % 2341;\n}\n\nconst colorToInt = (x: string) => parseInt(x.replace(/_/g, ''), 36);\n\nconst compressedColorMap = '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'\n  .split(' ')\n  .reduce((acc, next) => {\n    const key = colorToInt(next.substring(0, 3));\n    const hex = colorToInt(next.substring(3)).toString(16);\n\n    // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n    let prefix = '';\n    for (let i = 0; i < 6 - hex.length; i++) {\n      prefix += '0';\n    }\n\n    acc[key] = `${prefix}${hex}`;\n    return acc;\n  }, {} as { [key: string]: string });\n\n/**\n * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n */\nfunction nameToHex(color: string): string {\n  const normalizedColorName = color.toLowerCase().trim();\n  const result = compressedColorMap[hash(normalizedColorName)];\n  if (!result) throw new ColorError(color);\n  return `#${result}`;\n}\n\nconst r = (str: string, amount: number) =>\n  Array.from(Array(amount))\n    .map(() => str)\n    .join('');\n\nconst reducedHexRegex = new RegExp(`^#${r('([a-f0-9])', 3)}([a-f0-9])?$`, 'i');\nconst hexRegex = new RegExp(`^#${r('([a-f0-9]{2})', 3)}([a-f0-9]{2})?$`, 'i');\nconst rgbaRegex = new RegExp(\n  `^rgba?\\\\(\\\\s*(\\\\d+)\\\\s*${r(\n    ',\\\\s*(\\\\d+)\\\\s*',\n    2\n  )}(?:,\\\\s*([\\\\d.]+))?\\\\s*\\\\)$`,\n  'i'\n);\nconst hslaRegex = /^hsla?\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%(?:\\s*,\\s*([\\d.]+))?\\s*\\)$/i;\nconst namedColorRegex = /^[a-z]+$/i;\n\nconst roundColor = (color: number): number => {\n  return Math.round(color * 255);\n};\n\nconst hslToRgb = (\n  hue: number,\n  saturation: number,\n  lightness: number\n): [number, number, number] => {\n  let l = lightness / 100;\n  if (saturation === 0) {\n    // achromatic\n    return [l, l, l].map(roundColor) as [number, number, number];\n  }\n\n  // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV\n  const huePrime = (((hue % 360) + 360) % 360) / 60;\n  const chroma = (1 - Math.abs(2 * l - 1)) * (saturation / 100);\n  const secondComponent = chroma * (1 - Math.abs((huePrime % 2) - 1));\n\n  let red = 0;\n  let green = 0;\n  let blue = 0;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n\n  const lightnessModification = l - chroma / 2;\n  const finalRed = red + lightnessModification;\n  const finalGreen = green + lightnessModification;\n  const finalBlue = blue + lightnessModification;\n\n  return [finalRed, finalGreen, finalBlue].map(roundColor) as [\n    number,\n    number,\n    number\n  ];\n};\n\nexport default parseToRgba;\n","// taken from:\n// https://github.com/styled-components/polished/blob/a23a6a2bb26802b3d922d9c3b67bac3f3a54a310/src/internalHelpers/_rgbToHsl.js\nimport parseToRgba from './parseToRgba';\n\n/**\n * Parses a color in hue, saturation, lightness, and the alpha channel.\n *\n * Hue is a number between 0 and 360, saturation, lightness, and alpha are\n * decimal percentages between 0 and 1\n */\nfunction parseToHsla(color: string): [number, number, number, number] {\n  const [red, green, blue, alpha] = parseToRgba(color).map((value, index) =>\n    // 3rd index is alpha channel which is already normalized\n    index === 3 ? value : value / 255\n  );\n\n  const max = Math.max(red, green, blue);\n  const min = Math.min(red, green, blue);\n  const lightness = (max + min) / 2;\n\n  // achromatic\n  if (max === min) return [0, 0, lightness, alpha];\n\n  const delta = max - min;\n  const saturation =\n    lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n\n  const hue =\n    60 *\n    (red === max\n      ? (green - blue) / delta + (green < blue ? 6 : 0)\n      : green === max\n      ? (blue - red) / delta + 2\n      : (red - green) / delta + 4);\n\n  return [hue, saturation, lightness, alpha];\n}\n\nexport default parseToHsla;\n","import guard from './guard';\n\n/**\n * Takes in hsla parts and constructs an hsla string\n *\n * @param hue The color circle (from 0 to 360) - 0 (or 360) is red, 120 is green, 240 is blue\n * @param saturation Percentage of saturation, given as a decimal between 0 and 1\n * @param lightness Percentage of lightness, given as a decimal between 0 and 1\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction hsla(\n  hue: number,\n  saturation: number,\n  lightness: number,\n  alpha: number\n): string {\n  return `hsla(${(hue % 360).toFixed()}, ${guard(\n    0,\n    100,\n    saturation * 100\n  ).toFixed()}%, ${guard(0, 100, lightness * 100).toFixed()}%, ${parseFloat(\n    guard(0, 1, alpha).toFixed(3)\n  )})`;\n}\n\nexport default hsla;\n","import styled from 'styled-components';\nconst TokenTextContainer = styled('span').withConfig({\n  displayName: \"_TokenTextContainer__TokenTextContainer\",\n  componentId: \"sc-6l9eri-0\"\n})([\"flex-grow:1;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;background:transparent;border:none;color:inherit;font:inherit;margin:0;overflow:visible;padding:0;width:auto;-webkit-font-smoothing:inherit;-moz-osx-font-smoothing:inherit;-webkit-appearance:none;line-height:1;color:currentColor;text-decoration:none;&:is(a,button,[tabIndex='0']){cursor:pointer;&:after{content:'';position:absolute;left:0;top:0;right:0;bottom:0;}}\"]);\nexport default TokenTextContainer;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, useMemo } from 'react';\nimport TokenBase, { defaultTokenSize, isTokenInteractive } from './TokenBase';\nimport RemoveTokenButton from './_RemoveTokenButton';\nimport { parseToHsla, parseToRgba } from 'color2k';\nimport { useTheme } from '../ThemeProvider';\nimport TokenTextContainer from './_TokenTextContainer';\nconst tokenBorderWidthPx = 1;\nconst lightModeStyles = {\n  '--lightness-threshold': '0.453',\n  '--border-threshold': '0.96',\n  '--border-alpha': 'max(0, min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100), 1))',\n  background: 'rgb(var(--label-r), var(--label-g), var(--label-b))',\n  color: 'hsl(0, 0%, calc(var(--lightness-switch) * 100%))',\n  borderWidth: tokenBorderWidthPx,\n  borderStyle: 'solid',\n  borderColor: 'hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha))'\n};\nconst darkModeStyles = {\n  '--lightness-threshold': '0.6',\n  '--background-alpha': '0.18',\n  '--border-alpha': '0.3',\n  '--lighten-by': 'calc(((var(--lightness-threshold) - var(--perceived-lightness)) * 100) * var(--lightness-switch))',\n  borderWidth: tokenBorderWidthPx,\n  borderStyle: 'solid',\n  background: 'rgba(var(--label-r), var(--label-g), var(--label-b), var(--background-alpha))',\n  color: 'hsl(var(--label-h), calc(var(--label-s) * 1%), calc((var(--label-l) + var(--lighten-by)) * 1%))',\n  borderColor: 'hsla(var(--label-h), calc(var(--label-s) * 1%),calc((var(--label-l) + var(--lighten-by)) * 1%),var(--border-alpha))'\n};\nconst IssueLabelToken = /*#__PURE__*/forwardRef((props, forwardedRef) => {\n  const {\n    as,\n    fillColor = '#999',\n    onRemove,\n    id,\n    isSelected,\n    text,\n    size,\n    hideRemoveButton,\n    href,\n    onClick,\n    ...rest\n  } = props;\n  const interactiveTokenProps = {\n    as,\n    href,\n    onClick\n  };\n  const {\n    colorScheme\n  } = useTheme();\n  const hasMultipleActionTargets = isTokenInteractive(props) && Boolean(onRemove) && !hideRemoveButton;\n\n  const onRemoveClick = e => {\n    e.stopPropagation();\n    onRemove && onRemove();\n  };\n\n  const labelStyles = useMemo(() => {\n    const [r, g, b] = parseToRgba(fillColor);\n    const [h, s, l] = parseToHsla(fillColor); // label hack taken from https://github.com/github/github/blob/master/app/assets/stylesheets/hacks/hx_primer-labels.scss#L43-L108\n    // this logic should eventually live in primer/components. Also worthy of note is that the dotcom hack code will be moving to primer/css soon.\n\n    return {\n      '--label-r': String(r),\n      '--label-g': String(g),\n      '--label-b': String(b),\n      '--label-h': String(Math.round(h)),\n      '--label-s': String(Math.round(s * 100)),\n      '--label-l': String(Math.round(l * 100)),\n      '--perceived-lightness': 'calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255)',\n      '--lightness-switch': 'max(0, min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000), 1))',\n      paddingRight: hideRemoveButton || !onRemove ? undefined : 0,\n      position: 'relative',\n      ...(colorScheme === 'light' ? lightModeStyles : darkModeStyles),\n      ...(isSelected ? {\n        background: colorScheme === 'light' ? 'hsl(var(--label-h), calc(var(--label-s) * 1%), calc((var(--label-l) - 5) * 1%))' : darkModeStyles.background,\n        ':focus': {\n          outline: 'none'\n        },\n        ':after': {\n          content: '\"\"',\n          position: 'absolute',\n          zIndex: 1,\n          top: `-${tokenBorderWidthPx * 2}px`,\n          right: `-${tokenBorderWidthPx * 2}px`,\n          bottom: `-${tokenBorderWidthPx * 2}px`,\n          left: `-${tokenBorderWidthPx * 2}px`,\n          display: 'block',\n          pointerEvents: 'none',\n          boxShadow: `0 0 0 ${tokenBorderWidthPx * 2}px ${colorScheme === 'light' ? 'rgb(var(--label-r), var(--label-g), var(--label-b))' : 'hsl(var(--label-h), calc(var(--label-s) * 1%), calc((var(--label-l) + var(--lighten-by)) * 1%))'}`,\n          borderRadius: '999px'\n        }\n      } : {})\n    };\n  }, [colorScheme, fillColor, isSelected, hideRemoveButton, onRemove]);\n  return /*#__PURE__*/React.createElement(TokenBase, _extends({\n    onRemove: onRemove,\n    id: id === null || id === void 0 ? void 0 : id.toString(),\n    isSelected: isSelected,\n    text: text,\n    size: size,\n    sx: labelStyles\n  }, !hasMultipleActionTargets ? interactiveTokenProps : {}, rest, {\n    ref: forwardedRef\n  }), /*#__PURE__*/React.createElement(TokenTextContainer, hasMultipleActionTargets ? interactiveTokenProps : {}, text), !hideRemoveButton && onRemove ? /*#__PURE__*/React.createElement(RemoveTokenButton, {\n    borderOffset: tokenBorderWidthPx,\n    onClick: onRemoveClick,\n    size: size,\n    \"aria-hidden\": hasMultipleActionTargets ? 'true' : 'false',\n    isParentInteractive: isTokenInteractive(props),\n    sx: hasMultipleActionTargets ? {\n      position: 'relative',\n      zIndex: '1'\n    } : {}\n  }) : null);\n});\nIssueLabelToken.defaultProps = {\n  fillColor: '#999',\n  size: defaultTokenSize\n};\nIssueLabelToken.displayName = 'IssueLabelToken';\nexport default IssueLabelToken;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {LabelFragment} from './generated/graphql';\n\nimport FieldLabel from './FieldLabel';\nimport RepoLabelsInput from './RepoLabelsInput';\nimport {\n  gitHubClient,\n  gitHubPullRequest,\n  gitHubPullRequestLabels,\n  gitHubPullRequestViewerDidAuthor,\n} from './recoil';\nimport {GearIcon} from '@primer/octicons-react';\nimport {ActionMenu, Box, Button, IssueLabelToken} from '@primer/react';\nimport {useEffect, useMemo} from 'react';\nimport {useRecoilCallback, useRecoilState, useRecoilValue} from 'recoil';\nimport {notEmpty} from 'shared/utils';\n\nexport default function PullRequestLabels(): React.ReactElement {\n  const pullRequest = useRecoilValue(gitHubPullRequest);\n  const [pullRequestLabels, setPullRequestLabels] = useRecoilState(gitHubPullRequestLabels);\n  const viewerDidAuthor = useRecoilValue(gitHubPullRequestViewerDidAuthor);\n  const existingLabelIDs = useMemo(\n    () => new Set(pullRequestLabels.map(({id}) => id)),\n    [pullRequestLabels],\n  );\n\n  // Initialize pullRequestLabels state using pullRequest once it is available.\n  useEffect(() => {\n    if (pullRequest != null) {\n      const labels = (pullRequest.labels?.nodes ?? []).filter(notEmpty);\n      setPullRequestLabels(labels);\n    }\n  }, [pullRequest, setPullRequestLabels]);\n\n  const updateLabels = useRecoilCallback<[LabelFragment, boolean], Promise<void>>(\n    ({snapshot}) =>\n      async ({id, name, color}: LabelFragment, isExisting: boolean) => {\n        const client = snapshot.getLoadable(gitHubClient).valueMaybe();\n        if (client == null) {\n          return Promise.reject('client not found');\n        }\n\n        const pullRequestId = snapshot.getLoadable(gitHubPullRequest).valueMaybe()?.id;\n        if (pullRequestId == null) {\n          return Promise.reject('pull request not found');\n        }\n\n        try {\n          // When adding or removing a label, optimistically update\n          // pullRequestLabels and the UI instead of waiting for the respective\n          // API call to return.\n          if (!isExisting) {\n            const labels = [...pullRequestLabels, {id, name, color}].sort((a, b) =>\n              a.name.localeCompare(b.name),\n            );\n            setPullRequestLabels(labels);\n            await client.addLabels({\n              labelableId: pullRequestId,\n              labelIds: [id],\n            });\n          } else {\n            const labels = pullRequestLabels.filter(label => label.id !== id);\n            setPullRequestLabels(labels);\n            await client.removeLabels({\n              labelableId: pullRequestId,\n              labelIds: [id],\n            });\n          }\n        } catch {\n          // If there is an error, roll back the update by resetting\n          // pullRequestLabels to its previous value.\n          setPullRequestLabels(pullRequestLabels);\n        }\n      },\n    [pullRequestLabels, setPullRequestLabels],\n  );\n\n  const label = !viewerDidAuthor ? (\n    <FieldLabel label=\"Labels\" />\n  ) : (\n    <ActionMenu>\n      <ActionMenu.Anchor>\n        <Button trailingIcon={GearIcon}>Labels</Button>\n      </ActionMenu.Anchor>\n      <ActionMenu.Overlay width=\"medium\">\n        <RepoLabelsInput existingLabelIDs={existingLabelIDs} onSelect={updateLabels} />\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  );\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gridGap={2}>\n      {label}\n      <Box display=\"flex\" flexWrap=\"wrap\" gridGap={1}>\n        {pullRequestLabels.map(({id, name, color}) => (\n          <IssueLabelToken\n            key={id}\n            text={name}\n            fillColor={`#${color}`}\n            onRemove={!viewerDidAuthor ? undefined : () => updateLabels({id, name, color}, true)}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {UserFragment} from './generated/graphql';\nimport type {ChangeEvent} from 'react';\n\nimport {gitHubRepoAssignableUsers, gitHubRepoAssignableUsersQuery} from './recoil';\nimport useDebounced from './useDebounced';\nimport {ActionList, Avatar, Box, TextInput} from '@primer/react';\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useRecoilState, useRecoilValueLoadable, useResetRecoilState} from 'recoil';\n\ntype Props = {\n  existingUserIDs: ReadonlySet<string>;\n  onSelect: (user: UserFragment, isExisting: boolean) => void;\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function RepoAssignableUsersInput({\n  existingUserIDs,\n  onSelect,\n}: Props): React.ReactElement {\n  const users = useRecoilValueLoadable(gitHubRepoAssignableUsers).valueMaybe();\n  const [query, setQuery] = useRecoilState(gitHubRepoAssignableUsersQuery);\n  const [queryInput, setQueryInput] = useState(query);\n  const setQueryAtom = useDebounced(setQuery);\n  const resetQueryAtom = useResetRecoilState(gitHubRepoAssignableUsersQuery);\n\n  const onChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.currentTarget;\n      setQueryAtom(value);\n      setQueryInput(value);\n    },\n    [setQueryAtom, setQueryInput],\n  );\n\n  useEffect(() => resetQueryAtom, [resetQueryAtom]);\n\n  return (\n    <ActionList selectionVariant=\"single\">\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"stretch\" padding={1}>\n        <TextInput\n          value={queryInput}\n          onChange={onChange}\n          loading={users == null}\n          placeholder=\"Search users\"\n        />\n      </Box>\n      <ActionList.Divider />\n      {(users ?? []).map(user => (\n        <ActionList.Item\n          key={user.id}\n          selected={existingUserIDs.has(user.id)}\n          onSelect={() => onSelect(user, existingUserIDs.has(user.id))}>\n          <ActionList.LeadingVisual>\n            <Avatar src={user.avatarUrl} />\n          </ActionList.LeadingVisual>\n          {user.login}\n        </ActionList.Item>\n      ))}\n    </ActionList>\n  );\n});\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef } from 'react';\nimport { Box } from '..';\nimport { merge } from '../sx';\nimport TokenBase, { defaultTokenSize, isTokenInteractive } from './TokenBase';\nimport RemoveTokenButton from './_RemoveTokenButton';\nimport TokenTextContainer from './_TokenTextContainer';\nconst tokenBorderWidthPx = 1;\n\nconst LeadingVisualContainer = ({\n  children,\n  size\n}) => /*#__PURE__*/React.createElement(Box, {\n  sx: {\n    flexShrink: 0,\n    lineHeight: 0,\n    marginRight: size && ['large', 'extralarge', 'xlarge'].includes(size) ? 2 : 1\n  }\n}, children);\n\nLeadingVisualContainer.displayName = \"LeadingVisualContainer\";\nconst Token = /*#__PURE__*/forwardRef((props, forwardedRef) => {\n  const {\n    as,\n    onRemove,\n    id,\n    leadingVisual: LeadingVisual,\n    text,\n    size,\n    hideRemoveButton,\n    href,\n    onClick,\n    sx: sxProp = {},\n    ...rest\n  } = props;\n  const hasMultipleActionTargets = isTokenInteractive(props) && Boolean(onRemove) && !hideRemoveButton;\n\n  const onRemoveClick = e => {\n    e.stopPropagation();\n    onRemove && onRemove();\n  };\n\n  const interactiveTokenProps = {\n    as,\n    href,\n    onClick\n  };\n  const sx = merge({\n    backgroundColor: 'neutral.subtle',\n    borderColor: props.isSelected ? 'fg.default' : 'border.subtle',\n    borderStyle: 'solid',\n    borderWidth: `${tokenBorderWidthPx}px`,\n    color: props.isSelected ? 'fg.default' : 'fg.muted',\n    maxWidth: '100%',\n    paddingRight: !(hideRemoveButton || !onRemove) ? 0 : undefined,\n    ...(isTokenInteractive(props) ? {\n      '&:hover': {\n        backgroundColor: 'neutral.muted',\n        boxShadow: 'shadow.medium',\n        color: 'fg.default'\n      }\n    } : {})\n  }, sxProp);\n  return /*#__PURE__*/React.createElement(TokenBase, _extends({\n    onRemove: onRemove,\n    id: id === null || id === void 0 ? void 0 : id.toString(),\n    text: text,\n    size: size,\n    sx: sx\n  }, !hasMultipleActionTargets ? interactiveTokenProps : {}, rest, {\n    ref: forwardedRef\n  }), LeadingVisual ? /*#__PURE__*/React.createElement(LeadingVisualContainer, {\n    size: size\n  }, /*#__PURE__*/React.createElement(LeadingVisual, null)) : null, /*#__PURE__*/React.createElement(TokenTextContainer, hasMultipleActionTargets ? interactiveTokenProps : {}, text), !hideRemoveButton && onRemove ? /*#__PURE__*/React.createElement(RemoveTokenButton, {\n    borderOffset: tokenBorderWidthPx,\n    onClick: onRemoveClick,\n    size: size,\n    isParentInteractive: isTokenInteractive(props),\n    \"aria-hidden\": hasMultipleActionTargets ? 'true' : 'false',\n    sx: hasMultipleActionTargets ? {\n      position: 'relative',\n      zIndex: '1'\n    } : {}\n  }) : null);\n});\nToken.displayName = 'Token';\nToken.defaultProps = {\n  size: defaultTokenSize\n};\nexport default Token;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { get } from '../constants';\nimport { defaultTokenSize, tokenSizes } from './TokenBase';\nimport Token from './Token';\nimport { Avatar } from '..'; // TODO: update props to only accept 'large' and 'xlarge' on the next breaking change\n\nconst AvatarContainer = styled.span.withConfig({\n  displayName: \"AvatarToken__AvatarContainer\",\n  componentId: \"sc-62sih1-0\"\n})([\"--spacing:calc(\", \" * 2);display:block;height:\", \";width:\", \";\"], get('space.1'), props => `calc(${tokenSizes[props.avatarSize]} - var(--spacing))`, props => `calc(${tokenSizes[props.avatarSize]} - var(--spacing))`);\nconst AvatarToken = /*#__PURE__*/forwardRef(({\n  avatarSrc,\n  id,\n  size,\n  ...rest\n}, forwardedRef) => {\n  return /*#__PURE__*/React.createElement(Token, _extends({\n    leadingVisual: () => /*#__PURE__*/React.createElement(AvatarContainer, {\n      avatarSize: size || defaultTokenSize\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: avatarSrc,\n      size: parseInt(tokenSizes[size || defaultTokenSize], 10),\n      sx: {\n        width: '100%',\n        height: '100%'\n      }\n    })),\n    size: size,\n    id: id === null || id === void 0 ? void 0 : id.toString(),\n    sx: {\n      paddingLeft: get('space.1')\n    }\n  }, rest, {\n    ref: forwardedRef\n  }));\n});\nAvatarToken.defaultProps = {\n  size: defaultTokenSize\n};\nAvatarToken.displayName = 'AvatarToken';\nexport default AvatarToken;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {UserFragment} from './generated/graphql';\n\nimport FieldLabel from './FieldLabel';\nimport RepoAssignableUsersInput from './RepoAssignableUsersInput';\nimport {gitHubUsername} from './github/gitHubCredentials';\nimport {\n  gitHubClient,\n  gitHubPullRequest,\n  gitHubPullRequestReviewers,\n  gitHubPullRequestViewerDidAuthor,\n} from './recoil';\nimport useRefreshPullRequest from './useRefreshPullRequest';\nimport {GearIcon} from '@primer/octicons-react';\nimport {ActionMenu, AvatarToken, Box, Button} from '@primer/react';\nimport {useEffect} from 'react';\nimport {useRecoilCallback, useRecoilState, useRecoilValue} from 'recoil';\n\nexport default function PullRequestReviewers(): React.ReactElement {\n  const refreshPullRequest = useRefreshPullRequest();\n  const pullRequest = useRecoilValue(gitHubPullRequest);\n  const [pullRequestReviewers, setPullRequestReviewers] = useRecoilState(\n    gitHubPullRequestReviewers,\n  );\n  const viewerDidAuthor = useRecoilValue(gitHubPullRequestViewerDidAuthor);\n  const username = useRecoilValue(gitHubUsername);\n\n  // Initialize pullRequestReviewers state using pullRequest once it is available.\n  useEffect(() => {\n    if (pullRequest != null) {\n      // From https://docs.github.com/en/rest/pulls/review-requests:\n      //\n      // > Gets the users or teams whose review is requested for a pull request.\n      // > Once a requested reviewer submits a review, they are no longer\n      // > considered a requested reviewer.\n      //\n      // As such, both the `reviews` and `reviewRequests` fields must be\n      // consulted to get the full list of reviewers.\n      const reviewers: Array<UserFragment> = [];\n      const reviewerIDs: Set<string> = new Set();\n      for (const user of pullRequest.reviews?.nodes ?? []) {\n        const author = user?.author;\n        if (author?.__typename === 'User' && author.login !== username) {\n          if (!reviewerIDs.has(author.id)) {\n            reviewerIDs.add(author.id);\n            reviewers.push(author);\n          }\n        }\n      }\n      for (const node of pullRequest.reviewRequests?.nodes ?? []) {\n        const reviewer = node?.requestedReviewer;\n        if (reviewer?.__typename === 'User') {\n          if (!reviewerIDs.has(reviewer.id)) {\n            reviewerIDs.add(reviewer.id);\n            reviewers.push(reviewer);\n          }\n        }\n      }\n\n      setPullRequestReviewers({reviewers, reviewerIDs});\n    }\n  }, [pullRequest, setPullRequestReviewers, username]);\n\n  const updateReviewers = useRecoilCallback<[UserFragment, boolean], Promise<void>>(\n    ({snapshot}) =>\n      async (user: UserFragment, isExisting: boolean) => {\n        const client = snapshot.getLoadable(gitHubClient).valueMaybe();\n        if (client == null) {\n          return Promise.reject('client not found');\n        }\n\n        const pullRequestId = snapshot.getLoadable(gitHubPullRequest).valueMaybe()?.id;\n        if (pullRequestId == null) {\n          return Promise.reject('pull request not found');\n        }\n\n        try {\n          // When adding or removing a reviewer, optimistically update\n          // pullRequestReviewers and the UI instead of waiting for the respective\n          // API call to return.\n          const reviewerIDs = new Set(pullRequestReviewers.reviewerIDs);\n          let reviewers: UserFragment[];\n          if (!isExisting) {\n            reviewers = pullRequestReviewers.reviewers.concat(user);\n            reviewers.sort((a, b) => a.login.localeCompare(b.login));\n            reviewerIDs.add(user.id);\n          } else {\n            reviewers = pullRequestReviewers.reviewers.filter(({id}) => user.id !== id);\n            reviewerIDs.delete(user.id);\n          }\n          setPullRequestReviewers({reviewers, reviewerIDs});\n          await client.requestReviews({\n            pullRequestId,\n            userIds: [...reviewerIDs],\n          });\n          refreshPullRequest();\n        } catch {\n          // If there is an error, roll back the update by resetting\n          // pullRequestReviewers to its previous value.\n          setPullRequestReviewers(pullRequestReviewers);\n        }\n      },\n    [pullRequestReviewers, refreshPullRequest, setPullRequestReviewers],\n  );\n\n  const label = !viewerDidAuthor ? (\n    <FieldLabel label=\"Reviewers\" />\n  ) : (\n    <ActionMenu>\n      <ActionMenu.Anchor>\n        <Button trailingIcon={GearIcon}>Reviewers</Button>\n      </ActionMenu.Anchor>\n      <ActionMenu.Overlay width=\"medium\">\n        <RepoAssignableUsersInput\n          existingUserIDs={pullRequestReviewers.reviewerIDs}\n          onSelect={updateReviewers}\n        />\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  );\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gridGap={2}>\n      {label}\n      <Box display=\"flex\" flexWrap=\"wrap\" gridGap={1}>\n        {pullRequestReviewers.reviewers.map(user => (\n          <AvatarToken\n            key={user.id}\n            avatarSrc={user.avatarUrl}\n            text={user.login}\n            size=\"large\"\n            onRemove={!viewerDidAuthor ? undefined : () => updateReviewers(user, true)}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n}\n","import { useCallback, useEffect, useState, useRef } from 'react';\n\nfunction useDetails({\n  ref,\n  closeOnOutsideClick,\n  defaultOpen,\n  onClickOutside\n}) {\n  const [open, setOpen] = useState(defaultOpen);\n  const backupRef = useRef(null);\n  const customRef = ref !== null && ref !== void 0 ? ref : backupRef;\n  const onClickOutsideInternal = useCallback(event => {\n    const {\n      current\n    } = customRef;\n    const eventTarget = event.target;\n    const closest = eventTarget.closest('details');\n\n    if (closest !== current) {\n      onClickOutside && onClickOutside(event);\n\n      if (!event.defaultPrevented) {\n        setOpen(false);\n      }\n    }\n  }, [customRef, setOpen, onClickOutside]); // handles the overlay behavior - closing the menu when clicking outside of it\n\n  useEffect(() => {\n    if (open && closeOnOutsideClick) {\n      document.addEventListener('click', onClickOutsideInternal);\n      return () => {\n        document.removeEventListener('click', onClickOutsideInternal);\n      };\n    }\n  }, [open, closeOnOutsideClick, onClickOutsideInternal]);\n\n  const handleToggle = e => {\n    if (!e.defaultPrevented) {\n      const eventTarget = e.target;\n      setOpen(eventTarget.open);\n    }\n  };\n\n  const getDetailsProps = () => {\n    return {\n      onToggle: handleToggle,\n      open,\n      ref: customRef\n    };\n  };\n\n  return {\n    open,\n    setOpen,\n    getDetailsProps\n  };\n}\n\nexport default useDetails;","import styled from 'styled-components';\nimport sx from './sx';\nconst Details = styled.details.withConfig({\n  displayName: \"Details\",\n  componentId: \"sc-1qhvasm-0\"\n})([\"& > summary{list-style:none;}& > summary::-webkit-details-marker{display:none;}\", \";\"], sx);\nDetails.displayName = 'Details';\nexport default Details;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {CheckStatusState} from './generated/graphql';\n\nimport {CheckConclusionState} from './generated/graphql';\nimport {gitHubPullRequestCheckRuns} from './recoil';\nimport {\n  AlertIcon,\n  BlockedIcon,\n  CheckCircleIcon,\n  ChevronDownIcon,\n  ChevronUpIcon,\n  QuestionIcon,\n  SkipIcon,\n  StopIcon,\n  XCircleIcon,\n} from '@primer/octicons-react';\nimport {Box, Details, Link, StyledOcticon, Text, useDetails} from '@primer/react';\nimport {useMemo} from 'react';\nimport {useRecoilValue} from 'recoil';\n\nexport default function PullRequestSignals(): React.ReactElement {\n  const checkRuns = useRecoilValue(gitHubPullRequestCheckRuns);\n  const successful = useMemo(\n    () => checkRuns.filter(({conclusion}) => conclusion === CheckConclusionState.Success).length,\n    [checkRuns],\n  );\n  const sorted = useMemo(\n    () =>\n      [...checkRuns].sort(\n        (a, b) =>\n          conclusionRelativeOrder(a.conclusion ?? null) -\n          conclusionRelativeOrder(b.conclusion ?? null),\n      ),\n    [checkRuns],\n  );\n  const {getDetailsProps, open} = useDetails({defaultOpen: true});\n\n  return (\n    <Box borderWidth={1} borderStyle=\"solid\" borderColor=\"border.muted\" borderRadius={4}>\n      {/* https://github.com/primer/react/issues/2146 */}\n      {/* eslint-disable-next-line @typescript-eslint/no-explicit-any */}\n      <Details {...(getDetailsProps() as any)}>\n        <Box\n          as=\"summary\"\n          borderBottomWidth={open ? 1 : 0}\n          borderBottomStyle=\"solid\"\n          borderBottomColor=\"border.muted\"\n          padding={2}\n          sx={{cursor: 'pointer'}}>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Box>\n              <Text display=\"block\" fontWeight=\"bold\">\n                Checks\n              </Text>\n              <Text display=\"block\" fontSize={1}>\n                {successful} out of {checks(checkRuns.length)} successful\n              </Text>\n            </Box>\n            {open ? <ChevronUpIcon size={24} /> : <ChevronDownIcon size={24} />}\n          </Box>\n        </Box>\n        <Box maxHeight={300} overflowY=\"auto\">\n          {sorted.map(({conclusion, name, workflowName, status, url}, index) => (\n            <Box\n              key={index}\n              display=\"grid\"\n              gridTemplateColumns=\"20px 1fr 80px 150px\"\n              gridGap={1}\n              alignItems=\"center\"\n              fontSize={1}\n              paddingX={2}\n              paddingY={1}\n              borderTopWidth={index === 0 ? 0 : 1}\n              borderTopStyle=\"solid\"\n              borderTopColor=\"border.muted\"\n              sx={{borderCollapse: 'collapse'}}>\n              <ConclusionIcon conclusion={conclusion ?? null} />\n              <Text fontWeight=\"bold\">{workflowName ? `${workflowName} / ${name}` : name}</Text>\n              <Text>{statusDisplay(status)}</Text>\n              <Link href={url} target=\"_blank\">\n                <Text>View Details on GitHub</Text>\n              </Link>\n            </Box>\n          ))}\n        </Box>\n      </Details>\n    </Box>\n  );\n}\n\nfunction ConclusionIcon({\n  conclusion,\n}: {\n  conclusion: CheckConclusionState | null;\n}): React.ReactElement {\n  if (conclusion == null) {\n    return <QuestionIcon />;\n  }\n\n  switch (conclusion) {\n    case CheckConclusionState.Failure:\n      return <StyledOcticon icon={XCircleIcon} color=\"danger.fg\" />;\n    case CheckConclusionState.ActionRequired:\n      return <StyledOcticon icon={AlertIcon} color=\"attention.fg\" />;\n    case CheckConclusionState.StartupFailure:\n    case CheckConclusionState.TimedOut:\n      return <StyledOcticon icon={StopIcon} color=\"attention.fg\" />;\n    case CheckConclusionState.Neutral:\n    case CheckConclusionState.Skipped:\n    case CheckConclusionState.Stale:\n      return <StyledOcticon icon={SkipIcon} color=\"fg.subtle\" />;\n    case CheckConclusionState.Cancelled:\n      return <StyledOcticon icon={BlockedIcon} color=\"fg.subtle\" />;\n    case CheckConclusionState.Success:\n      return <StyledOcticon icon={CheckCircleIcon} color=\"success.fg\" />;\n  }\n}\n\nfunction conclusionRelativeOrder(conclusion: CheckConclusionState | null): number {\n  if (conclusion == null) {\n    return Infinity;\n  }\n\n  switch (conclusion) {\n    case CheckConclusionState.Failure:\n      return 0;\n    case CheckConclusionState.ActionRequired:\n      return 1;\n    case CheckConclusionState.StartupFailure:\n    case CheckConclusionState.TimedOut:\n      return 2;\n    case CheckConclusionState.Neutral:\n    case CheckConclusionState.Skipped:\n    case CheckConclusionState.Stale:\n      return 3;\n    case CheckConclusionState.Cancelled:\n      return 4;\n    case CheckConclusionState.Success:\n      return 5;\n  }\n}\n\nfunction statusDisplay(status: CheckStatusState): string {\n  return status\n    .split('_')\n    .map(part => part[0] + part.slice(1).toLowerCase())\n    .join(' ');\n}\n\nfunction checks(num: number): string {\n  return num === 1 ? '1 check' : `${num} checks`;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport './PullRequest.css';\n\nimport type { GitHubPullRequestParams } from './recoil';\n\nimport CenteredSpinner from './CenteredSpinner';\nimport DiffView from './DiffView';\nimport PullRequestChangeCount from './PullRequestChangeCount';\nimport PullRequestLabels from './PullRequestLabels';\nimport PullRequestReviewers from './PullRequestReviewers';\nimport PullRequestSignals from './PullRequestSignals';\nimport TrustedRenderedMarkdown from './TrustedRenderedMarkdown';\nimport { stripStackInfoFromBodyHTML } from './ghstackUtils';\nimport {\n  gitHubPullRequest,\n  gitHubOrgAndRepo,\n  gitHubPullRequestForParams,\n  gitHubPullRequestID,\n  gitHubPullRequestComparableVersions,\n  gitHubPullRequestVersionDiff,\n} from './recoil';\nimport { stripStackInfoFromSaplingBodyHTML } from './saplingStack';\nimport { stackedPullRequest } from './stackState';\nimport { Box, Text } from '@primer/react';\nimport { Suspense, useEffect } from 'react';\nimport {\n  useRecoilValue,\n  useRecoilValueLoadable,\n  useResetRecoilState,\n  useSetRecoilState,\n} from 'recoil';\n\nexport default function PullRequest() {\n  const resetComparableVersions = useResetRecoilState(gitHubPullRequestComparableVersions);\n  // Reset the radio buttons as part of the initial page load.\n  useEffect(() => {\n    resetComparableVersions();\n  }, [resetComparableVersions]);\n\n  return (\n    <Suspense fallback={<CenteredSpinner />}>\n      <div className=\"PullRequest-container\">\n        <PullRequestBootstrap />\n      </div>\n    </Suspense>\n  );\n}\n\nfunction PullRequestBootstrap() {\n  const number = useRecoilValue(gitHubPullRequestID);\n  const orgAndRepo = useRecoilValue(gitHubOrgAndRepo);\n  if (number != null && orgAndRepo != null) {\n    return <PullRequestWithParams params={{ orgAndRepo, number }} />;\n  } else {\n    return <Text>This is not a URL for a pull request.</Text>;\n  }\n}\n\nfunction PullRequestWithParams({ params }: { params: GitHubPullRequestParams }) {\n  // When useRefreshPullRequest() is used to update gitHubPullRequestForParams,\n  // we expect *most* of the data that comes back to be the same as before.\n  // As such, we would prefer to avoid triggering <Suspense>, as the user would\n  // briefly see a loading indicator followed by a massive redraw to restore\n  // what they were just looking at. To avoid this, we leverage\n  // useRecoilValueLoadable() to probe for updates to gitHubPullRequestForParams\n  // while using the gitHubPullRequest for the purposes of rendering, as it is\n  // updated synchronously and therefore will not trigger <Suspense>.\n  const pullRequestLoadable = useRecoilValueLoadable(gitHubPullRequestForParams(params));\n  const setPullRequest = useSetRecoilState(gitHubPullRequest);\n  const pullRequest =\n    pullRequestLoadable.state === 'hasValue' ? pullRequestLoadable.contents : null;\n  const isPullRequestNotFound = pullRequestLoadable.state === 'hasValue' && pullRequest == null;\n\n  useEffect(() => {\n    if (pullRequest != null) {\n      // Here we should diff the new value with the existing value for the\n      // gitHubPullRequest atom, preserving as many of the original references\n      // as possible to limit the number of updates to the dataflow graph,\n      // which will short-circuit a bunch off diff'ing React will have to do.\n      setPullRequest(pullRequest);\n    }\n  }, [pullRequest, setPullRequest]);\n  if (isPullRequestNotFound) {\n    return <PullRequestNotFound />;\n  } else {\n    return <PullRequestDetails />;\n  }\n}\n\nfunction PullRequestNotFound() {\n  return <Text>The specified pull request could not be found.</Text>;\n}\n\nfunction PullRequestDetails() {\n  const pullRequest = useRecoilValue(gitHubPullRequest);\n  const pullRequestStack = useRecoilValueLoadable(stackedPullRequest);\n  if (pullRequest == null || pullRequestStack.state !== 'hasValue') {\n    return null;\n  }\n\n  const stack = pullRequestStack.contents;\n  const { bodyHTML } = pullRequest;\n  let pullRequestBodyHTML;\n  switch (stack.type) {\n    case 'no-stack':\n      pullRequestBodyHTML = bodyHTML;\n      break;\n    case 'sapling':\n      pullRequestBodyHTML = stripStackInfoFromSaplingBodyHTML(bodyHTML, stack.body.format);\n      break;\n    case 'ghstack':\n      pullRequestBodyHTML = stripStackInfoFromBodyHTML(bodyHTML);\n      break;\n  }\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" paddingTop={3} gridGap={3}>\n      <PullRequestReviewers />\n      <PullRequestLabels />\n      <Box\n        borderWidth={1}\n        borderStyle=\"solid\"\n        borderColor=\"accent.muted\"\n        borderRadius={4}\n        fontSize={14}\n        padding={3}>\n        <TrustedRenderedMarkdown trustedHTML={pullRequestBodyHTML} />\n      </Box>\n      <PullRequestSignals />\n      <Suspense fallback={<CenteredSpinner />}>\n        <div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              gap: \".5rem\",\n              paddingBottom: \".5rem\"\n            }}\n          >\n            <PullRequestChangeCount />\n          </div>\n          <PullRequestVersionDiff />\n        </div>\n      </Suspense>\n    </Box>\n\n  );\n}\n\nfunction PullRequestVersionDiff() {\n  const loadable = useRecoilValueLoadable(gitHubPullRequestVersionDiff);\n  const diff = loadable.getValue();\n\n  if (diff != null) {\n    return (\n      <Suspense\n        fallback={<CenteredSpinner message={'Loading ' + diff.diff.length + ' changes...'} />}>\n        <DiffView diff={diff.diff} isPullRequest={true} />\n      </Suspense>\n    );\n  } else {\n    return null;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {Box} from '@primer/react';\nimport * as React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\n/**\n * Renders a horizontal list of items separated by bullets.\n */\nexport default function BulletItems({children}: Props): React.ReactElement {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gridGap={1}>\n      {React.Children.toArray(children).map((child, index) => (\n        <React.Fragment key={index}>\n          {index > 0 && <Box>&bull;</Box>}\n          {child}\n        </React.Fragment>\n      ))}\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {CommentIcon} from '@primer/octicons-react';\nimport {Box} from '@primer/react';\nimport React from 'react';\n\ntype Props = {\n  count: number;\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function CommentCount({count}: Props): React.ReactElement {\n  return (\n    <Box>\n      <CommentIcon /> {count}\n    </Box>\n  );\n});\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { GitMergeIcon, GitPullRequestIcon, IssueClosedIcon, SkipIcon, IssueDraftIcon, IssueOpenedIcon, QuestionIcon } from '@primer/octicons-react';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { variant } from 'styled-system';\nimport { get } from './constants';\nimport StyledOcticon from './StyledOcticon';\nimport sx from './sx';\nconst octiconMap = {\n  issueOpened: IssueOpenedIcon,\n  pullOpened: GitPullRequestIcon,\n  issueClosed: IssueClosedIcon,\n  issueClosedNotPlanned: SkipIcon,\n  pullClosed: GitPullRequestIcon,\n  pullMerged: GitMergeIcon,\n  draft: GitPullRequestIcon,\n  issueDraft: IssueDraftIcon\n};\nconst colorVariants = variant({\n  prop: 'status',\n  variants: {\n    issueClosed: {\n      backgroundColor: 'done.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    issueClosedNotPlanned: {\n      backgroundColor: 'neutral.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    pullClosed: {\n      backgroundColor: 'danger.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    pullMerged: {\n      backgroundColor: 'done.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    issueOpened: {\n      backgroundColor: 'success.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    pullOpened: {\n      backgroundColor: 'success.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    draft: {\n      backgroundColor: 'neutral.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    issueDraft: {\n      backgroundColor: 'neutral.emphasis',\n      color: 'fg.onEmphasis'\n    }\n  }\n});\nconst sizeVariants = variant({\n  prop: 'variant',\n  variants: {\n    small: {\n      paddingX: 2,\n      paddingY: 1,\n      fontSize: 0\n    },\n    normal: {\n      paddingX: '12px',\n      paddingY: 2,\n      fontSize: 1\n    }\n  }\n});\nconst StateLabelBase = styled.span.withConfig({\n  displayName: \"StateLabel__StateLabelBase\",\n  componentId: \"sc-4oy091-0\"\n})([\"display:inline-flex;align-items:center;font-weight:\", \";line-height:16px;color:\", \";text-align:center;border-radius:\", \";\", \";\", \";\", \";\"], get('fontWeights.bold'), get('colors.canvas.default'), get('radii.3'), colorVariants, sizeVariants, sx);\n\nfunction StateLabel({\n  children,\n  status,\n  variant: variantProp,\n  ...rest\n}) {\n  const octiconProps = variantProp === 'small' ? {\n    width: '1em'\n  } : {};\n  return /*#__PURE__*/React.createElement(StateLabelBase, _extends({}, rest, {\n    variant: variantProp,\n    status: status\n  }), status && /*#__PURE__*/React.createElement(StyledOcticon, _extends({}, octiconProps, {\n    icon: octiconMap[status] || QuestionIcon,\n    sx: {\n      mr: 1\n    }\n  })), children);\n}\n\nStateLabel.displayName = \"StateLabel\";\nStateLabel.defaultProps = {\n  variant: 'normal'\n};\nexport default StateLabel;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {PullRequestReviewDecision} from './generated/graphql';\n\nimport {PullRequestState} from './generated/graphql';\nimport {pullRequestReviewDecisionLabel} from './utils';\nimport {StateLabel} from '@primer/react';\n\ntype Status = 'pullClosed' | 'pullMerged' | 'pullOpened';\n\nexport default function PullRequestStateLabel({\n  reviewDecision,\n  state,\n  variant = 'normal',\n}: {\n  reviewDecision: PullRequestReviewDecision | null;\n  state: PullRequestState;\n  variant?: 'small' | 'normal';\n}) {\n  const {status, label, color} = statusAndLabel(state, reviewDecision);\n  return (\n    <StateLabel status={status} variant={variant} sx={{backgroundColor: color}}>\n      {label}\n    </StateLabel>\n  );\n}\n\nfunction statusAndLabel(\n  state: PullRequestState,\n  reviewDecision: PullRequestReviewDecision | null,\n): {\n  status: Status;\n  label: string;\n  color?: string;\n} {\n  switch (state) {\n    case PullRequestState.Closed:\n      return {status: 'pullClosed', label: 'Closed'};\n    case PullRequestState.Merged:\n      return {status: 'pullMerged', label: 'Merged'};\n    case PullRequestState.Open: {\n      const status = 'pullOpened';\n      if (reviewDecision === null) {\n        return {status, label: 'Open', color: 'success.fg'};\n      }\n      const {label, variant} = pullRequestReviewDecisionLabel(reviewDecision);\n      return {status, label, color: `${variant}.fg`};\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\ntype Navigate = (to: string) => void;\n\ntype UseNavigate = () => Navigate;\n\nlet navigateHook: UseNavigate = () => to => {\n  window.location.href = to;\n};\n\nexport function setCustomNavigateHook(customNavigateHook: UseNavigate): void {\n  navigateHook = customNavigateHook;\n}\n\nexport default function useNavigate(): Navigate {\n  return navigateHook();\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport URLFor from './URLFor';\nimport {gitHubOrgAndRepo} from './recoil';\nimport useNavigate from './useNavigate';\nimport {useCallback} from 'react';\nimport {useRecoilValue} from 'recoil';\n\nexport default function useNavigateToPullRequest(): (number: number) => void {\n  const navigate = useNavigate();\n  const {org, repo} = useRecoilValue(gitHubOrgAndRepo) ?? {};\n\n  return useCallback(\n    (number: number) => {\n      if (org != null && repo != null) {\n        navigate(URLFor.pullRequest({org, repo, number}));\n      }\n    },\n    [navigate, org, repo],\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {StackPullRequestFragment} from './generated/graphql';\n\nimport BulletItems from './BulletItems';\nimport CommentCount from './CommentCount';\nimport PullRequestStateLabel from './PullRequestStateLabel';\nimport useNavigateToPullRequest from './useNavigateToPullRequest';\nimport {formatISODate} from './utils';\nimport {ActionList, Box, Text} from '@primer/react';\nimport React from 'react';\n\ntype Props = {\n  isSelected: boolean;\n} & StackPullRequestFragment;\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function PullRequestStackItem({\n  isSelected,\n  comments,\n  number,\n  reviewDecision,\n  state,\n  title,\n  updatedAt,\n}: Props): React.ReactElement {\n  const navigateToPullRequest = useNavigateToPullRequest();\n\n  return (\n    <ActionList.Item\n      onSelect={() => navigateToPullRequest(number)}\n      selected={isSelected}\n      sx={{display: 'flex', alignItems: 'center'}}>\n      <Box fontSize={0}>\n        <Box overflow=\"hidden\" sx={{textOverflow: 'ellipsis'}}>\n          <Text fontWeight=\"bold\" fontSize={1} whiteSpace=\"nowrap\">\n            {title}\n          </Text>\n        </Box>\n        <BulletItems>\n          <PullRequestStateLabel\n            reviewDecision={reviewDecision ?? null}\n            state={state}\n            variant=\"small\"\n          />\n          <Text>#{number}</Text>\n          {formatISODate(updatedAt, false)}\n          <CommentCount count={comments.totalCount} />\n        </BulletItems>\n      </Box>\n    </ActionList.Item>\n  );\n});\n","import styled from 'styled-components';\nimport { get } from './constants';\nimport sx from './sx';\nconst ButtonGroup = styled.div.withConfig({\n  displayName: \"ButtonGroup\",\n  componentId: \"sc-tk435v-0\"\n})([\"display:inline-flex;vertical-align:middle;&& > *{position:relative;border-right-width:0;border-radius:0;:first-child{border-top-left-radius:\", \";border-bottom-left-radius:\", \";margin-right:0;}:not(:first-child){margin-left:0;margin-right:0;}:last-child{border-right-width:1px;border-top-right-radius:\", \";border-bottom-right-radius:\", \";}:focus,:active,:hover{border-right-width:1px;+ *{border-left-width:0;}}:focus,:active{z-index:1;}}\", \";\"], get('radii.2'), get('radii.2'), get('radii.2'), get('radii.2'), sx);\nexport default ButtonGroup;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {StackPullRequestFragment} from './generated/graphql';\n\nimport {useCommand} from './KeyboardShortcuts';\nimport PullRequestStackItem from './PullRequestStackItem';\nimport {gitHubPullRequestID} from './recoil';\nimport {stackedPullRequestFragments} from './stackState';\nimport useNavigateToPullRequest from './useNavigateToPullRequest';\nimport {ArrowDownIcon, ArrowUpIcon} from '@primer/octicons-react';\nimport {ActionList, ActionMenu, ButtonGroup, IconButton} from '@primer/react';\nimport {useCallback, useEffect, useState} from 'react';\nimport {useRecoilValue, useRecoilValueLoadable} from 'recoil';\n\nexport default function PullRequestStack(): React.ReactElement | null {\n  const navigateToPullRequest = useNavigateToPullRequest();\n  const pullRequestNumber = useRecoilValue(gitHubPullRequestID);\n\n  // Our goal is to ensure this component *always* renders synchronously [and\n  // never suspends] to support the common case where the user is toggling the\n  // arrows in the stack selector, in which case we don't want it to temporarily\n  // disappear while we are loading the pull request for the newly selected\n  // item in the list. To that end, we employ the following strategy:\n  //\n  // - If `stackedPullRequestFragments` is available immediately, assume it is\n  //   the source of truth and use it.\n  // - Whenever we receive a value for `stackedPullRequestFragments`, stuff it\n  //   in the state for this component via `setLastStack()`.\n  // - If `stackedPullRequestFragments` is not available immediately, use\n  //   `lastStack` if both of the following are true:\n  //   - `lastStack` is non-null\n  //   - `pullRequestNumber` is in `lastStack`.\n  // - Otherwise, we assume that `lastStack` is stale (or the pull request is\n  //   not part of a stack), in which case we do not render anything at all.\n  const stackLoadable = useRecoilValueLoadable(stackedPullRequestFragments);\n  const [lastStack, setLastStack] = useState<StackPullRequestFragment[] | null>(null);\n  const availableStack = stackLoadable.valueMaybe();\n  useEffect(() => {\n    if (availableStack != null) {\n      setLastStack(availableStack);\n    }\n  }, [availableStack, setLastStack]);\n\n  const stack = availableStack ?? lastStack;\n  const index = stack != null ? stack.findIndex(({number}) => number === pullRequestNumber) : -1;\n\n  const onNavigate = useCallback(\n    (index: number) => {\n      if (stack == null || index === -1) {\n        // The user may have clicked a link in a comment or pull request body\n        // that took them to a pull request that is part of a separate stack,\n        // in which case availableStack may be non-null, but index is -1.\n        return;\n      }\n\n      const pullRequest = stack[index];\n      if (pullRequest != null) {\n        navigateToPullRequest(pullRequest.number);\n      }\n    },\n    [navigateToPullRequest, stack],\n  );\n\n  useCommand('NextInStack', () => {\n    if (stack == null || index === -1) {\n      return;\n    }\n    if (index > 0) {\n      onNavigate(index - 1);\n    }\n  });\n  useCommand('PreviousInStack', () => {\n    if (stack == null || index === -1) {\n      return;\n    }\n    if (index < stack.length - 1) {\n      onNavigate(index + 1);\n    }\n  });\n\n  if (\n    // In this case, we have nothing we can possibly show the user.\n    stack == null ||\n    // Note that if availableStack is non-null but index is -1, then we are in a\n    // weird state where the pull request body describes a stack that this\n    // pull request is not part of, so do not show the dropdown.\n    index === -1\n  ) {\n    return null;\n  }\n\n  // In this case, the pull request does not appear to be part of a stack.\n  const total = stack.length;\n  if (total === 0) {\n    return null;\n  }\n\n  const hasPrev = index < total - 1;\n  const hasNext = index > 0;\n\n  return (\n    <ButtonGroup>\n      <ActionMenu>\n        <ActionMenu.Button sx={{display: 'inline-block'}}>\n          Pull Request {total - index} of {total}\n        </ActionMenu.Button>\n        <ActionMenu.Overlay width=\"xxlarge\">\n          <ActionList selectionVariant=\"single\">\n            {stack.map((pullRequest, stackIndex) => (\n              <PullRequestStackItem\n                key={pullRequest.number}\n                isSelected={index === stackIndex}\n                {...pullRequest}\n              />\n            ))}\n          </ActionList>\n        </ActionMenu.Overlay>\n      </ActionMenu>\n      <IconButton disabled={!hasPrev} icon={ArrowDownIcon} onClick={() => onNavigate(index + 1)}>\n        Prev\n      </IconButton>\n      <IconButton disabled={!hasNext} icon={ArrowUpIcon} onClick={() => onNavigate(index - 1)}>\n        Next\n      </IconButton>\n    </ButtonGroup>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  gitHubPullRequestComparableVersions,\n  gitHubPullRequestIsViewingLatest,\n  gitHubPullRequestSelectedVersionIndex,\n} from './recoil';\nimport {ArrowLeftIcon} from '@primer/octicons-react';\nimport {Link, Text} from '@primer/react';\nimport {useCallback} from 'react';\nimport {useRecoilValue, useResetRecoilState} from 'recoil';\n\nexport default function PullRequestLatestVersionLink(): React.ReactElement | null {\n  const resetSelectedVersionIndex = useResetRecoilState(gitHubPullRequestSelectedVersionIndex);\n  const resetComparableVersions = useResetRecoilState(gitHubPullRequestComparableVersions);\n  const isViewingLatest = useRecoilValue(gitHubPullRequestIsViewingLatest);\n\n  const onClick = useCallback(() => {\n    resetComparableVersions();\n    resetSelectedVersionIndex();\n  }, [resetComparableVersions, resetSelectedVersionIndex]);\n\n  if (isViewingLatest) {\n    return null;\n  }\n\n  return (\n    <Link as=\"button\" onClick={onClick}>\n      <ArrowLeftIcon />\n      <Text fontSize={0} fontWeight=\"bold\" marginLeft={1}>\n        Back to Latest\n      </Text>\n    </Link>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {SystemStyleObject} from '@styled-system/css';\n\nimport {Button} from '@primer/react';\nimport React from 'react';\n\nconst DEFAULT_STYLES = {\n  backgroundColor: 'canvas.subtle',\n  color: 'fg.default',\n  fontWeight: 'normal',\n  ':hover': {\n    fontWeight: 'bold',\n  },\n  ':disabled': {\n    color: 'fg.subtle',\n    cursor: 'not-allowed',\n    fontWeight: 'normal',\n  },\n};\n\nconst SELECTED_STYLES = {\n  backgroundColor: 'accent.fg',\n  color: 'fg.onEmphasis',\n  fontWeight: 'bold',\n};\n\nfunction getStyles(isSelected: boolean): SystemStyleObject {\n  return isSelected ? SELECTED_STYLES : DEFAULT_STYLES;\n}\n\ntype Props = {\n  label: string;\n  isSelected: boolean;\n  onToggle: (isSelected: boolean) => void;\n  isDisabled?: boolean;\n  width?: number;\n};\n\nfunction ToggleButton({\n  label,\n  isSelected,\n  onToggle,\n  isDisabled = false,\n  width,\n}: Props): React.ReactElement {\n  return (\n    <Button\n      disabled={isDisabled}\n      variant=\"outline\"\n      onClick={() => onToggle(!isSelected)}\n      sx={{...getStyles(isSelected), width}}>\n      {label}\n    </Button>\n  );\n}\n\nexport default React.memo(ToggleButton);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {DateTime, GitObjectID, VersionCommit} from './github/types';\n\nimport BulletItems from './BulletItems';\nimport CommentCount from './CommentCount';\nimport CommitLink from './CommitLink';\nimport ToggleButton from './ToggleButton';\nimport {gitHubPullRequestComparableVersions, gitHubPullRequestThreadsForCommit} from './recoil';\nimport {countCommentsForThreads, formatISODate} from './utils';\nimport {ActionList, Box, Text} from '@primer/react';\nimport React, {useCallback} from 'react';\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\n\nconst TOGGLE_BUTTON_WIDTH = 70;\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function PullRequestVersionCommitSelectorItem({\n  beforeCommitID,\n  afterCommitID,\n  author,\n  commit,\n  commits,\n  committedDate,\n  index,\n  maxIndex,\n  message,\n  beforeIndex,\n  afterIndex,\n  org,\n  repo,\n}: {\n  beforeCommitID: GitObjectID | null;\n  afterCommitID: GitObjectID;\n  author: string | null;\n  commit: GitObjectID;\n  commits: VersionCommit[];\n  committedDate: DateTime;\n  index: number;\n  maxIndex: number;\n  message: string;\n  beforeIndex: number;\n  afterIndex: number;\n  org: string;\n  repo: string;\n}): React.ReactElement {\n  const setComparableVersions = useSetRecoilState(gitHubPullRequestComparableVersions);\n  const reviewThreadsForCommit = useRecoilValue(gitHubPullRequestThreadsForCommit(commit));\n  const commentCount = countCommentsForThreads(reviewThreadsForCommit);\n\n  const onClickBefore = useCallback(() => {\n    // If the currently selected \"before\" is clicked, unselect it to compare\n    // \"after\" against base.\n    const newBefore = beforeIndex === index ? null : commit;\n    // If the currently selected \"after\" is already newer, then keep it.\n    // Otherwise, update to the immediate next version.\n    const newAfter = afterIndex > index ? afterCommitID : commits[index + 1]?.commit;\n    setComparableVersions({\n      beforeCommitID: newBefore,\n      afterCommitID: newAfter,\n    });\n  }, [afterCommitID, afterIndex, beforeIndex, commit, commits, index, setComparableVersions]);\n  const onClickAfter = useCallback(() => {\n    // If the currently selected \"before\" is already older, then keep it.\n    // Otherwise, update to the immediate previous version.\n    const newBefore = beforeIndex < index ? beforeCommitID : commits[index - 1]?.commit;\n    setComparableVersions({\n      beforeCommitID: newBefore,\n      afterCommitID: commit,\n    });\n  }, [beforeCommitID, beforeIndex, commit, commits, index, setComparableVersions]);\n\n  return (\n    <ActionList.Item sx={{display: 'flex', alignItems: 'center'}}>\n      <Box display=\"flex\" alignItems=\"center\" gridGap={2}>\n        <Box display=\"flex\" padding={1} gridGap={1}>\n          <ToggleButton\n            label=\"Left\"\n            isSelected={beforeIndex === index}\n            onToggle={onClickBefore}\n            isDisabled={index === maxIndex}\n            width={TOGGLE_BUTTON_WIDTH}\n          />\n          <ToggleButton\n            label=\"Right\"\n            isSelected={afterIndex === index}\n            onToggle={onClickAfter}\n            width={TOGGLE_BUTTON_WIDTH}\n          />\n        </Box>\n        <Box fontSize={0} overflow=\"hidden\">\n          <Box lineHeight={1.5}>\n            <BulletItems>\n              {author && <Text fontWeight=\"bold\">{author}</Text>}\n              {formatISODate(committedDate)}\n              {commentCount > 0 && <CommentCount count={commentCount} />}\n            </BulletItems>\n          </Box>\n          <Box lineHeight={1.5}>\n            <BulletItems>\n              <CommitLink org={org} repo={repo} oid={commit} />\n              <Box overflow=\"hidden\" sx={{textOverflow: 'ellipsis'}}>\n                <Text whiteSpace=\"nowrap\">{message}</Text>\n              </Box>\n            </BulletItems>\n          </Box>\n        </Box>\n      </Box>\n    </ActionList.Item>\n  );\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {GitObjectID, VersionCommit} from './github/types';\n\nimport PullRequestVersionCommitSelectorItem from './PullRequestVersionCommitSelectorItem';\nimport {\n  gitHubPullRequestComparableVersions,\n  gitHubPullRequestSelectedVersionCommits,\n} from './recoil';\nimport {shortOid} from './utils';\nimport {ActionList, ActionMenu} from '@primer/react';\nimport React from 'react';\nimport {useRecoilValue} from 'recoil';\nimport {notEmpty} from 'shared/utils';\n\ntype Props = {\n  org: string;\n  repo: string;\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function PullRequestVersionCommitSelector({\n  org,\n  repo,\n}: Props): React.ReactElement {\n  const {beforeCommitID, afterCommitID} = useRecoilValue(gitHubPullRequestComparableVersions);\n  const commits = useRecoilValue(gitHubPullRequestSelectedVersionCommits);\n  const beforeIndex = getIndex(beforeCommitID, commits, -1);\n  const afterIndex = getIndex(afterCommitID, commits, commits.length - 1);\n\n  return (\n    <ActionMenu>\n      <ActionMenu.Button>{commitsLabel(commits, beforeIndex, afterIndex)}</ActionMenu.Button>\n      <ActionMenu.Overlay width=\"xxlarge\">\n        <ActionList>\n          {commits.map(({author, commit, committedDate, title}, index) => (\n            <PullRequestVersionCommitSelectorItem\n              key={index}\n              beforeCommitID={beforeCommitID}\n              afterCommitID={afterCommitID}\n              author={author}\n              commit={commit}\n              commits={commits}\n              committedDate={committedDate}\n              index={index}\n              maxIndex={commits.length - 1}\n              message={title}\n              beforeIndex={beforeIndex}\n              afterIndex={afterIndex}\n              org={org}\n              repo={repo}\n            />\n          ))}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  );\n});\n\nfunction getIndex(\n  commitID: GitObjectID | null,\n  commits: VersionCommit[],\n  defaultValue: number,\n): number {\n  const index = commitID === null ? -1 : commits.findIndex(({commit}) => commit === commitID);\n  return index === -1 ? defaultValue : index;\n}\n\nfunction commitsLabel(commits: VersionCommit[], beforeIndex: number, afterIndex: number): string {\n  return [commits[beforeIndex], commits[afterIndex]]\n    .filter(notEmpty)\n    .map(c => {\n      if (c.version == null) {\n        return shortOid(c.commit);\n      } else {\n        return 'V' + c.version + ' ' + shortOid(c.commit);\n      }\n    })\n    .join(' vs. ');\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {DateTime, GitObjectID, VersionCommit} from './github/types';\n\nimport BulletItems from './BulletItems';\nimport CommentCount from './CommentCount';\nimport CommitLink from './CommitLink';\nimport {\n  gitHubPullRequestComparableVersions,\n  gitHubPullRequestThreadsByCommit,\n  gitHubPullRequestSelectedVersionIndex,\n} from './recoil';\nimport {countCommentsForThreads, formatISODate, versionLabel} from './utils';\nimport {ActionList, Box, Text} from '@primer/react';\nimport React, {useCallback} from 'react';\nimport {useRecoilState, useRecoilValue, useSetRecoilState} from 'recoil';\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function PullRequestVersionSelectorItem({\n  baseParent = null,\n  commit,\n  commits,\n  committedDate,\n  index,\n  org,\n  repo,\n}: {\n  baseParent?: GitObjectID | null;\n  commit: GitObjectID;\n  commits: VersionCommit[];\n  committedDate: DateTime;\n  index: number;\n  org: string;\n  repo: string;\n}): React.ReactElement {\n  const [selectedVersionIndex, setSelectedVersionIndex] = useRecoilState(\n    gitHubPullRequestSelectedVersionIndex,\n  );\n  const setComparableVersions = useSetRecoilState(gitHubPullRequestComparableVersions);\n  const reviewThreadsByCommit = useRecoilValue(gitHubPullRequestThreadsByCommit);\n  const commentCount = commits.reduce((acc, commit) => {\n    const reviewThreadsForCommit = reviewThreadsByCommit.get(commit.commit);\n    if (reviewThreadsForCommit == null) {\n      return acc;\n    }\n    return acc + countCommentsForThreads(reviewThreadsForCommit);\n  }, 0);\n\n  const onClick = useCallback(() => {\n    setSelectedVersionIndex(index);\n    setComparableVersions({\n      beforeCommitID: null,\n      afterCommitID: commit,\n    });\n  }, [commit, index, setComparableVersions, setSelectedVersionIndex]);\n\n  const numCommits = commits.length;\n\n  return (\n    <ActionList.Item\n      selected={selectedVersionIndex === index}\n      onSelect={onClick}\n      sx={{display: 'flex', alignItems: 'center'}}>\n      <Box fontSize={0}>\n        <Box display=\"flex\" alignItems=\"center\" gridGap={2}>\n          <Text fontWeight=\"bold\" fontSize={1}>\n            {versionLabel(index)}\n          </Text>{' '}\n          <BulletItems>\n            {formatISODate(committedDate)}\n            <Box>\n              {numCommits} commit{numCommits === 1 ? '' : 's'}\n            </Box>\n            {commentCount > 0 && <CommentCount count={commentCount} />}\n          </BulletItems>\n        </Box>\n        <BulletItems>\n          <Box>\n            Head Commit: <CommitLink org={org} repo={repo} oid={commit} />\n          </Box>\n          <Box>\n            Base Commit:{' '}\n            {baseParent == null ? 'null' : <CommitLink org={org} repo={repo} oid={baseParent} />}\n          </Box>\n        </BulletItems>\n      </Box>\n    </ActionList.Item>\n  );\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PullRequestVersionSelectorItem from './PullRequestVersionSelectorItem';\nimport {gitHubPullRequestSelectedVersionIndex, gitHubPullRequestVersions} from './recoil';\nimport {versionLabel} from './utils';\nimport {ActionList, ActionMenu} from '@primer/react';\nimport React from 'react';\nimport {useRecoilValue} from 'recoil';\n\ntype Props = {\n  org: string;\n  repo: string;\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function PullRequestVersionSelector({\n  org,\n  repo,\n}: Props): React.ReactElement {\n  const versions = useRecoilValue(gitHubPullRequestVersions);\n  const selectedVersionIndex = useRecoilValue(gitHubPullRequestSelectedVersionIndex);\n\n  return (\n    <ActionMenu>\n      <ActionMenu.Button>{versionLabel(selectedVersionIndex)}</ActionMenu.Button>\n      <ActionMenu.Overlay width=\"large\">\n        <ActionList selectionVariant=\"single\">\n          {versions.map(({headCommit, headCommittedDate, baseParent, commits}, index) => (\n            <PullRequestVersionSelectorItem\n              key={index}\n              baseParent={baseParent}\n              commit={headCommit}\n              commits={commits}\n              committedDate={headCommittedDate}\n              index={index}\n              org={org}\n              repo={repo}\n            />\n          ))}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  );\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PullRequestLatestVersionLink from './PullRequestLatestVersionLink';\nimport PullRequestVersionCommitSelector from './PullRequestVersionCommitSelector';\nimport PullRequestVersionSelector from './PullRequestVersionSelector';\nimport {gitHubOrgAndRepo} from './recoil';\nimport {Box} from '@primer/react';\nimport {useRecoilValue} from 'recoil';\n\nexport default function PullRequestVersions(): React.ReactElement | null {\n  const {org, repo} = useRecoilValue(gitHubOrgAndRepo) ?? {};\n\n  if (org == null || repo == null) {\n    return null;\n  }\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gridGap={2}>\n      <PullRequestVersionSelector org={org} repo={repo} />\n      <PullRequestVersionCommitSelector org={org} repo={repo} />\n      <PullRequestLatestVersionLink />\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PullRequestStack from './PullRequestStack';\nimport PullRequestStateLabel from './PullRequestStateLabel';\nimport PullRequestVersions from './PullRequestVersions';\nimport TrustedRenderedMarkdown from './TrustedRenderedMarkdown';\nimport {gitHubPullRequest} from './recoil';\nimport {Box, Link, Text} from '@primer/react';\nimport {Suspense} from 'react';\nimport {useRecoilValue} from 'recoil';\n\ntype Props = {\n  height: number;\n};\n\nexport default function PullRequestHeader({height}: Props): React.ReactElement | null {\n  const pullRequest = useRecoilValue(gitHubPullRequest);\n\n  if (pullRequest == null) {\n    return null;\n  }\n\n  const {number, reviewDecision, state, titleHTML, url} = pullRequest;\n\n  return (\n    <Box\n      height={height}\n      borderBottomWidth={1}\n      borderBottomStyle=\"solid\"\n      borderBottomColor=\"border.default\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      gridGap={2}\n      padding={3}>\n      <Box fontWeight=\"bold\">\n        #{number} <TrustedRenderedMarkdown trustedHTML={titleHTML} inline={true} />{' '}\n        <Link href={url} target=\"_blank\">\n          <Text fontWeight=\"normal\">(view on GitHub)</Text>\n        </Link>\n      </Box>\n      <Box display=\"flex\" gridGap={2}>\n        <PullRequestStateLabel reviewDecision={reviewDecision ?? null} state={state} />\n        <PullRequestStack />\n        {/*\n          Our goal here is to minimize re-rendering when the user selects a\n          different value from <PullRequestStack>, so we apply <Suspense> in a\n          very narrow context.\n\n          Ideally, we would update <PullRequestVersions> so it never needs a\n          <Suspend>, leveraging useRecoilValueLoadable() as we did in\n          <PullRequestStack> because Recoil wakes all suspended components\n          whenever any async selector is resolved, so every use of <Suspense>\n          runs the risk of a hard-to-debug performance issue.\n          */}\n        <Suspense fallback={null}>\n          <PullRequestVersions />\n        </Suspense>\n      </Box>\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {GitObjectID, ID} from './github/types';\n\nimport {\n  gitHubPullRequestComparableVersions,\n  gitHubPullRequestJumpToCommentID,\n  gitHubPullRequestSelectedVersionIndex,\n  gitHubPullRequestVersionIndexForCommit,\n} from './recoil';\nimport {Box, Link, Text} from '@primer/react';\nimport React, {useCallback} from 'react';\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\n\ntype Props = {\n  commentID: ID;\n  commit: GitObjectID;\n  lineNumber: number;\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function PullRequestReviewCommentLineNumber({\n  commentID,\n  commit,\n  lineNumber,\n}: Props): React.ReactElement {\n  const versionIndex = useRecoilValue(gitHubPullRequestVersionIndexForCommit(commit));\n  const setJumpToCommentID = useSetRecoilState(gitHubPullRequestJumpToCommentID(commentID));\n  const setSelectedVersionIndex = useSetRecoilState(gitHubPullRequestSelectedVersionIndex);\n  const setComparableVersions = useSetRecoilState(gitHubPullRequestComparableVersions);\n\n  const onClick = useCallback(() => {\n    if (versionIndex != null) {\n      setJumpToCommentID(true);\n      setSelectedVersionIndex(versionIndex);\n      setComparableVersions({\n        beforeCommitID: null,\n        afterCommitID: commit,\n      });\n    }\n  }, [commit, setComparableVersions, setJumpToCommentID, setSelectedVersionIndex, versionIndex]);\n\n  return (\n    <Box lineHeight={1}>\n      <Link as=\"button\" onClick={onClick}>\n        <Text fontSize={1}>{lineNumber}</Text>\n      </Link>\n    </Box>\n  );\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {ID, GitObject} from './github/types';\n\nimport PullRequestReviewCommentLineNumber from './PullRequestReviewCommentLineNumber';\nimport TrustedRenderedMarkdown from './TrustedRenderedMarkdown';\nimport {gitHubPullRequestCommentForID} from './recoil';\nimport {Box} from '@primer/react';\nimport {useRecoilValue} from 'recoil';\n\ntype Props = {\n  comment: {\n    id: ID;\n    originalCommit?: GitObject | null;\n    path: string;\n    bodyHTML: string;\n  };\n};\n\nexport default function PullRequestReviewComment({comment}: Props): React.ReactElement {\n  const reviewComment = useRecoilValue(gitHubPullRequestCommentForID(comment.id));\n  const commentID = comment.id;\n  const commit = comment.originalCommit?.oid;\n  const lineNumber = reviewComment?.originalLine;\n\n  return (\n    <div className=\"PRT-review-comment\">\n      <Box color=\"accent.fg\">\n        <div className=\"PRT-review-comment-path-link\">{comment.path}</div>\n      </Box>\n      <Box display=\"grid\" gridTemplateColumns=\"25px 1fr\">\n        <Box textAlign=\"right\">\n          {commentID != null && commit != null && lineNumber != null && (\n            <PullRequestReviewCommentLineNumber\n              commentID={commentID}\n              commit={commit}\n              lineNumber={lineNumber}\n            />\n          )}\n        </Box>\n        <Box paddingLeft={2}>\n          <TrustedRenderedMarkdown\n            className=\"PRT-review-comment-text\"\n            trustedHTML={comment.bodyHTML}\n          />\n        </Box>\n      </Box>\n    </div>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport './PullRequestTimeline.css';\n\nimport type {\n  Actor,\n  ClosedEventItem,\n  HeadRefForcePushedEventItem,\n  IssueCommentItem,\n  MergedEventItem,\n  PullRequestReviewItem,\n  PullRequestTimelineItem,\n  RenamedTitleEventItem,\n  ReviewRequestedEventItem,\n  ReviewRequestRemovedEventItem,\n} from './github/pullRequestTimelineTypes';\n\nimport ActorHeading from './ActorHeading';\nimport CenteredSpinner from './CenteredSpinner';\nimport CommitLink from './CommitLink';\nimport PendingLabel from './PendingLabel';\nimport PullRequestReviewComment from './PullRequestReviewComment';\nimport TrustedRenderedMarkdown from './TrustedRenderedMarkdown';\nimport {\n  gitHubOrgAndRepo,\n  gitHubPullRequest,\n  gitHubPullRequestReviewThreadsByFirstCommentID,\n} from './recoil';\nimport {\n  CheckCircleFillIcon,\n  FileDiffIcon,\n  GitMergeIcon,\n  GitPullRequestClosedIcon,\n} from '@primer/octicons-react';\nimport {Box, StyledOcticon, Text} from '@primer/react';\nimport React, {Suspense} from 'react';\nimport {useRecoilValue} from 'recoil';\nimport {notEmpty} from 'shared/utils';\n\nexport default function PullRequestTimeline(): React.ReactElement {\n  return (\n    <Suspense fallback={<CenteredSpinner />}>\n      <PullRequestTimelineBootstrap />\n    </Suspense>\n  );\n}\n\nfunction PullRequestTimelineBootstrap(): React.ReactElement {\n  const pullRequest = useRecoilValue(gitHubPullRequest);\n  const items = (pullRequest?.timelineItems.nodes ?? []).filter(notEmpty);\n  let version = 1;\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gridGap={2}>\n      <VersionBreak version={1} />\n      {items.map((item, index) => {\n        if (item.__typename === 'HeadRefForcePushedEvent') {\n          ++version;\n        }\n        return <TimelineItem key={index} item={item} version={version} />;\n      })}\n\n      {/* Adds some padding after the last TimelineItem. */}\n      <TimelineBasicEvent />\n    </Box>\n  );\n}\n\nfunction TimelineItem({\n  item,\n  version,\n}: {\n  item: PullRequestTimelineItem;\n  version: number;\n}): React.ReactElement | null {\n  switch (item.__typename) {\n    case 'PullRequestCommit':\n      return null;\n    case 'PullRequestReview':\n      return <PullRequestReview item={item} />;\n    case 'IssueComment':\n      return <IssueComment item={item} />;\n    case 'HeadRefForcePushedEvent':\n      return <HeadRefForcePushedEvent item={item} version={version} />;\n    case 'RenamedTitleEvent':\n      return <RenamedTitleEvent item={item} />;\n    case 'ReviewRequestedEvent':\n      return <ReviewRequestEvent item={item} isRequested={true} />;\n    case 'ReviewRequestRemovedEvent':\n      return <ReviewRequestEvent item={item} isRequested={false} />;\n    case 'MergedEvent':\n      return <MergedEvent item={item} />;\n    case 'ClosedEvent':\n      return <ClosedEvent item={item} />;\n    default:\n      return null;\n  }\n}\n\nfunction TimelineCallout(props: {\n  actor?: Actor | null;\n  children: React.ReactNode;\n  isPending?: boolean;\n}): React.ReactElement {\n  return (\n    <Box padding=\"4px 6px 0\">\n      <Box\n        backgroundColor=\"canvas.default\"\n        color=\"fg.default\"\n        border={1}\n        borderColor=\"border.default\"\n        borderStyle=\"solid\"\n        borderRadius=\"2px\"\n        padding=\"6px 8px\">\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Box display=\"flex\" gridGap={1}>\n            <ActorHeading actor={props.actor} /> <Text fontSize={12}>commented</Text>\n          </Box>\n          {props.isPending && <PendingLabel />}\n        </Box>\n        {props.children}\n      </Box>\n    </Box>\n  );\n}\n\nfunction TimelineBasicEvent(props: {children?: React.ReactNode}): React.ReactElement {\n  return (\n    <Box color=\"neutral.emphasis\" fontSize=\"12px\" lineHeight=\"14px\" padding=\"4px 6px 0\">\n      {props.children}\n    </Box>\n  );\n}\n\nfunction PullRequestReview({item}: {item: PullRequestReviewItem}): React.ReactElement {\n  const threadMap = useRecoilValue(gitHubPullRequestReviewThreadsByFirstCommentID);\n  const comments = (item.comments.nodes ?? []).filter(notEmpty).flatMap((comment, index) => {\n    // Check and see whether the first comment in the PullRequestReview corresponds\n    // to a thread. If so, the comments in the thread are not available as\n    // timeline items, but must be pulled from the `reviewThreads` field on the\n    // PullRequest.\n    const thread = threadMap[comment.id];\n    if (thread) {\n      // TODO: Honor the replyTo field on PullRequestReviewComment to show the\n      // appropriate level of depth within the thread.\n      return thread.comments.map((comment, threadIndex) => (\n        <PullRequestReviewComment key={`${index}/${threadIndex}`} comment={comment} />\n      ));\n    } else {\n      return [<PullRequestReviewComment key={index} comment={comment} />];\n    }\n  });\n  let action = null;\n  let isPending = false;\n  switch (item.state) {\n    // TODO(mbolin): Handle other cases? Need to find examples on GitHub.\n    case 'APPROVED': {\n      action = (\n        <ReviewAction\n          actor={item.author}\n          action=\"approved these changes\"\n          color=\"success.fg\"\n          icon={CheckCircleFillIcon}\n        />\n      );\n      break;\n    }\n    case 'CHANGES_REQUESTED': {\n      action = (\n        <ReviewAction\n          actor={item.author}\n          action=\"requested changes\"\n          color=\"danger.fg\"\n          icon={FileDiffIcon}\n        />\n      );\n      break;\n    }\n    case 'PENDING': {\n      isPending = true;\n      break;\n    }\n  }\n  const hasContent = item.bodyHTML !== '' || comments.length > 0;\n\n  return (\n    <>\n      {action}\n      {hasContent && (\n        <TimelineCallout actor={item.author} isPending={isPending}>\n          {item.bodyHTML !== '' && (\n            <Box paddingY={1}>\n              <TrustedRenderedMarkdown\n                className=\"PRT-bodyHTML PRT-review-comment-text\"\n                trustedHTML={item.bodyHTML}\n              />\n            </Box>\n          )}\n          {comments.length > 0 && (\n            <>\n              <Box display=\"flex\" alignItems=\"center\" paddingY={1}>\n                <Text fontSize=\"0.5rem\" fontWeight=\"bold\">\n                  INLINE COMMENTS\n                </Text>\n                <HorizontalLine isPrefix={false} />\n              </Box>\n\n              {comments}\n            </>\n          )}\n        </TimelineCallout>\n      )}\n    </>\n  );\n}\n\nfunction ReviewAction({\n  actor,\n  action,\n  color,\n  icon,\n}: {\n  actor?: Actor | null;\n  action: string;\n  color: string;\n  icon: React.ElementType;\n}) {\n  return (\n    <TimelineBasicEvent>\n      <Box display=\"flex\" gridGap={1} alignItems=\"center\">\n        <StyledOcticon icon={icon} color={color} /> <ActorBasic actor={actor} /> {action}\n      </Box>\n    </TimelineBasicEvent>\n  );\n}\n\nfunction IssueComment({item}: {item: IssueCommentItem}): React.ReactElement {\n  return (\n    <TimelineCallout actor={item.author}>\n      <TrustedRenderedMarkdown\n        className=\"PRT-bodyHTML PRT-review-comment-text\"\n        trustedHTML={item.bodyHTML}\n      />\n    </TimelineCallout>\n  );\n}\n\nfunction HeadRefForcePushedEvent({\n  item,\n  version,\n}: {\n  item: HeadRefForcePushedEventItem;\n  version: number;\n}): React.ReactElement {\n  return (\n    <>\n      <VersionBreak version={version} />\n      <TimelineBasicEvent>\n        <ActorBasic actor={item.actor} /> updated this PR to V{version} (\n        <code>{item.afterCommit?.oid.slice(0, 8)}</code>)\n      </TimelineBasicEvent>\n    </>\n  );\n}\n\nfunction HorizontalLine({isPrefix}: {isPrefix: boolean}): React.ReactElement {\n  return (\n    <Box\n      borderBottomStyle=\"solid\"\n      borderBottomWidth={1}\n      borderColor=\"border.subtle\"\n      display=\"block\"\n      fontSize=\"0.625rem\"\n      fontWeight=\"bold\"\n      lineHeight={1.2}\n      flexBasis={isPrefix ? '24px' : 'autho'}\n      flexGrow={isPrefix ? 0 : 1}\n      flexShrink={isPrefix ? 0 : 1}\n      marginLeft={isPrefix ? 0 : '8px'}\n      marginRight={isPrefix ? '8px' : 0}>\n      {' '}\n    </Box>\n  );\n}\n\nfunction VersionBreak({version}: {version: number}): React.ReactElement {\n  return (\n    <Box paddingTop={1} paddingX=\"6px\">\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        fontSize=\"10px\"\n        fontWeight={700}\n        lineHeight=\"12px\"\n        paddingX={0}\n        paddingY={1}>\n        <HorizontalLine isPrefix={true} />\n        <Text color=\"neutral.emphasis\">V{version}</Text>\n        <HorizontalLine isPrefix={false} />\n      </Box>\n    </Box>\n  );\n}\n\nfunction ReviewRequestEvent({\n  item,\n  isRequested,\n}: {\n  item: ReviewRequestedEventItem | ReviewRequestRemovedEventItem;\n  isRequested: boolean;\n}): React.ReactElement {\n  const requestedReviewer =\n    item.requestedReviewer?.__typename === 'User' ||\n    item.requestedReviewer?.__typename === 'Mannequin'\n      ? item.requestedReviewer\n      : null;\n  const action = isRequested ? 'requested a review from' : 'removed review request for';\n\n  return (\n    <TimelineBasicEvent>\n      <ActorBasic actor={item.actor} /> {action} <ActorBasic actor={requestedReviewer} />\n    </TimelineBasicEvent>\n  );\n}\n\nfunction RenamedTitleEvent({item}: {item: RenamedTitleEventItem}): React.ReactElement {\n  return (\n    <TimelineBasicEvent>\n      <ActorBasic actor={item.actor} /> changed the title{' '}\n      <span className=\"PRT-old-title\">{item.previousTitle}</span> to{' '}\n      <span className=\"PRT-new-title\">{item.currentTitle}</span>\n    </TimelineBasicEvent>\n  );\n}\n\nfunction MergedEvent({item}: {item: MergedEventItem}) {\n  const {org, repo} = useRecoilValue(gitHubOrgAndRepo) ?? {};\n  const {actor, mergedCommit, mergeRefName} = item;\n  const commitOID = mergedCommit?.oid;\n  const commit =\n    commitOID == null ? null : org == null || repo == null ? (\n      commitOID\n    ) : (\n      <CommitLink org={org} repo={repo} oid={commitOID} />\n    );\n\n  return (\n    <TimelineBasicEvent>\n      <Box display=\"flex\" gridGap={1} alignItems=\"center\">\n        <>\n          <StyledOcticon icon={GitMergeIcon} color=\"done.fg\" /> <ActorBasic actor={actor} /> merged\n          commit {commit} into {mergeRefName}\n        </>\n      </Box>\n    </TimelineBasicEvent>\n  );\n}\n\nfunction ClosedEvent({item}: {item: ClosedEventItem}) {\n  if (item.closable.__typename === 'PullRequest' && item.closable.merged) {\n    return null;\n  }\n\n  return (\n    <TimelineBasicEvent>\n      <Box display=\"flex\" gridGap={1} alignItems=\"center\">\n        <>\n          <StyledOcticon icon={GitPullRequestClosedIcon} color=\"danger.fg\" />{' '}\n          <ActorBasic actor={item.actor} /> closed this pull request\n        </>\n      </Box>\n    </TimelineBasicEvent>\n  );\n}\n\n/**\n * Note that `ReviewRequestedEventItem.requestedReviewer` is not an `Actor`,\n * hence the duck type for the `actor` prop.\n */\nfunction ActorBasic({actor}: {actor?: {login: string} | null}): React.ReactElement {\n  const login = actor?.login ?? '[unknown]';\n  return <span className=\"PRT-actor-basic\">{login}</span>;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst userAgent = typeof navigator === 'object' ? navigator.userAgent : '';\n\nexport const isWindows = userAgent.indexOf('Windows') >= 0;\nexport const isMac = userAgent.indexOf('Macintosh') >= 0;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useCommand} from './KeyboardShortcuts';\nimport {PullRequestReviewEvent} from './generated/graphql';\nimport {gitHubPullRequestViewerDidAuthor} from './recoil';\nimport {ActionList, ActionMenu} from '@primer/react';\nimport React from 'react';\nimport {useRecoilValue} from 'recoil';\nimport {isMac} from 'shared/OperatingSystem';\n\nconst MODIFIER = isMac ? '\\u2325' : 'Alt';\n\nconst ACTION = {\n  Approve: {\n    event: PullRequestReviewEvent.Approve,\n    shortcut: `${MODIFIER} A`,\n  },\n  Comment: {\n    event: PullRequestReviewEvent.Comment,\n    shortcut: `${MODIFIER} C`,\n  },\n  RequestChanges: {\n    event: PullRequestReviewEvent.RequestChanges,\n    shortcut: `${MODIFIER} R`,\n  },\n};\n\nconst AUTHOR_ACTIONS = [ACTION.Comment];\n\nconst REVIEWER_ACTIONS = [ACTION.Comment, ACTION.Approve, ACTION.RequestChanges];\n\ntype Props = {\n  event: PullRequestReviewEvent;\n  onSelect: (event: PullRequestReviewEvent) => void;\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function PullRequestReviewSelector({\n  event,\n  onSelect,\n}: Props): React.ReactElement {\n  const viewerDidAuthor = useRecoilValue(gitHubPullRequestViewerDidAuthor);\n  const actions = viewerDidAuthor ? AUTHOR_ACTIONS : REVIEWER_ACTIONS;\n\n  useCommand('Comment', () => {\n    onSelect(PullRequestReviewEvent.Comment);\n  });\n  useCommand('Approve', () => {\n    if (!viewerDidAuthor) {\n      onSelect(PullRequestReviewEvent.Approve);\n    }\n  });\n  useCommand('RequestChanges', () => {\n    if (!viewerDidAuthor) {\n      onSelect(PullRequestReviewEvent.RequestChanges);\n    }\n  });\n\n  return (\n    <ActionMenu>\n      <ActionMenu.Button>{eventLabel(event)}</ActionMenu.Button>\n      <ActionMenu.Overlay width=\"medium\">\n        <ActionList selectionVariant=\"single\">\n          {actions.map(action => (\n            <ActionList.Item\n              key={action.event}\n              onSelect={() => onSelect(action.event)}\n              selected={event === action.event}>\n              {eventLabel(action.event)}\n              <ActionList.TrailingVisual>{action.shortcut}</ActionList.TrailingVisual>\n            </ActionList.Item>\n          ))}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  );\n});\n\nfunction eventLabel(event: PullRequestReviewEvent): string {\n  switch (event) {\n    case PullRequestReviewEvent.Approve:\n      return 'Approve';\n    case PullRequestReviewEvent.Comment:\n      return 'Comment';\n    case PullRequestReviewEvent.Dismiss:\n      return 'Dismiss';\n    case PullRequestReviewEvent.RequestChanges:\n      return 'Request Changes';\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PullRequestCommentInput from './PullRequestCommentInput';\nimport PullRequestReviewSelector from './PullRequestReviewSelector';\nimport {PullRequestReviewEvent} from './generated/graphql';\nimport {gitHubClient, gitHubPullRequest, gitHubPullRequestPendingReviewID} from './recoil';\nimport useRefreshPullRequest from './useRefreshPullRequest';\nimport {useState} from 'react';\nimport {useRecoilCallback, useRecoilValue} from 'recoil';\n\nexport default function PullRequestTimelineCommentInput(): React.ReactElement {\n  const pendingReviewID = useRecoilValue(gitHubPullRequestPendingReviewID);\n  const refreshPullRequest = useRefreshPullRequest();\n  const [event, setEvent] = useState(PullRequestReviewEvent.Comment);\n  const addComment = useRecoilCallback<[string], Promise<void>>(\n    ({snapshot}) =>\n      async comment => {\n        const clientLoadable = snapshot.getLoadable(gitHubClient);\n        if (clientLoadable.state !== 'hasValue' || clientLoadable.contents == null) {\n          return Promise.reject('client not found');\n        }\n        const client = clientLoadable.contents;\n\n        const pullRequestLoadable = snapshot.getLoadable(gitHubPullRequest);\n        if (pullRequestLoadable.state !== 'hasValue' || pullRequestLoadable.contents == null) {\n          return Promise.reject('pull request not found');\n        }\n        const pullRequest = pullRequestLoadable.contents;\n\n        if (pendingReviewID == null) {\n          if (event === PullRequestReviewEvent.Comment) {\n            await client.addComment(pullRequest.id, comment);\n          } else {\n            await client.addPullRequestReview({\n              body: comment,\n              pullRequestId: pullRequest.id,\n              event,\n            });\n          }\n        } else {\n          await client.submitPullRequestReview({\n            body: comment,\n            pullRequestId: pullRequest.id,\n            pullRequestReviewId: pendingReviewID,\n            event,\n          });\n        }\n\n        refreshPullRequest();\n        setEvent(PullRequestReviewEvent.Comment);\n      },\n    [event, pendingReviewID, refreshPullRequest],\n  );\n\n  return (\n    <PullRequestCommentInput\n      addComment={addComment}\n      autoFocus={false}\n      resetInputAfterAddingComment={true}\n      allowEmptyMessage={pendingReviewID != null || event === PullRequestReviewEvent.Approve}\n      label=\"Submit\"\n      actionSelector={<PullRequestReviewSelector event={event} onSelect={setEvent} />}\n    />\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {EnsureAssignedTogether} from './EnsureAssignedTogether';\nimport type {ComponentClass} from 'react';\nimport type {RecoilState} from 'recoil';\n\nimport {debounce} from './debounce';\nimport {createElement, useCallback, useRef} from 'react';\nimport {useRecoilState} from 'recoil';\n\nimport './Drawers.css';\n\ntype NonNullReactElement = React.ReactElement | React.ReactFragment;\n\nenum Side {\n  left = 'left',\n  right = 'right',\n  top = 'top',\n  bottom = 'bottom',\n}\n\nexport type AllDrawersState = {[s in Side]: DrawerState};\nexport type DrawerState = {size: number; collapsed: boolean};\n\nexport type ErrorBoundaryComponent = ComponentClass<\n  {children: React.ReactNode},\n  {error: Error | null}\n>;\n\nexport function Drawers({\n  drawerState,\n  right,\n  rightLabel,\n  left,\n  leftLabel,\n  top,\n  topLabel,\n  bottom,\n  bottomLabel,\n  errorBoundary,\n  children,\n}: {\n  drawerState: RecoilState<AllDrawersState>;\n  errorBoundary: ErrorBoundaryComponent;\n  children: React.ReactNode;\n} & EnsureAssignedTogether<{left: NonNullReactElement; leftLabel: NonNullReactElement}> &\n  EnsureAssignedTogether<{right: NonNullReactElement; rightLabel: NonNullReactElement}> &\n  EnsureAssignedTogether<{top: NonNullReactElement; topLabel: NonNullReactElement}> &\n  EnsureAssignedTogether<{bottom: NonNullReactElement; bottomLabel: NonNullReactElement}>) {\n  return (\n    <div className=\"drawers\">\n      {top ? (\n        <Drawer\n          stateAtom={drawerState}\n          side={Side.top}\n          label={topLabel}\n          errorBoundary={errorBoundary}>\n          {top}\n        </Drawer>\n      ) : null}\n      <div className=\"drawers-horizontal\">\n        {left ? (\n          <Drawer\n            stateAtom={drawerState}\n            side={Side.left}\n            label={leftLabel}\n            errorBoundary={errorBoundary}>\n            {left}\n          </Drawer>\n        ) : null}\n        <div className=\"drawer-main-content\">{children}</div>\n        {right ? (\n          <Drawer\n            stateAtom={drawerState}\n            side={Side.right}\n            label={rightLabel}\n            errorBoundary={errorBoundary}>\n            {right}\n          </Drawer>\n        ) : null}\n      </div>\n\n      {bottom ? (\n        <Drawer\n          stateAtom={drawerState}\n          side={Side.bottom}\n          label={bottomLabel}\n          errorBoundary={errorBoundary}>\n          {bottom}\n        </Drawer>\n      ) : null}\n    </div>\n  );\n}\n\nconst stickyCollapseSizePx = 60;\nconst minimumDrawerSizePx = 100;\n\nexport function Drawer({\n  stateAtom,\n  side,\n  label,\n  errorBoundary,\n  children,\n}: {\n  stateAtom: RecoilState<AllDrawersState>;\n  side: Side;\n  label: React.ReactNode;\n  errorBoundary: ErrorBoundaryComponent;\n  children: NonNullReactElement;\n}) {\n  const isVertical = side === 'top' || side === 'bottom';\n  const dragHandleElement = useRef<HTMLDivElement>(null);\n\n  const [drawerState, setDrawerState] = useRecoilState(stateAtom);\n  const state = drawerState[side];\n  const isExpanded = !state.collapsed;\n\n  const setInnerState = useCallback(\n    (callback: (prevState: DrawerState) => DrawerState) =>\n      setDrawerState(prev => ({...prev, [side]: callback(prev[side])})),\n    [side, setDrawerState],\n  );\n  const startResizing = useCallback(\n    (e: React.MouseEvent, initialWidth: number) => {\n      e.preventDefault();\n      const start = isVertical ? e.clientY : e.clientX;\n\n      const moveHandler = debounce(\n        (newE: MouseEvent) => {\n          const newPos = isVertical ? newE.clientY : newE.clientX;\n          const newSize =\n            side === 'right' || side === 'bottom'\n              ? initialWidth - (newPos - start)\n              : initialWidth + (newPos - start);\n          setInnerState((_prev: DrawerState) => ({\n            size: newSize,\n            // if resizing would give us a very small size, just collapse the view entirely\n            // note we don't stop the drag sequence by doing this, you can just drag back a bit to re-expand\n            collapsed: newSize > stickyCollapseSizePx ? false : true,\n          }));\n        },\n        2,\n        undefined,\n        true,\n      );\n      window.addEventListener('mousemove', moveHandler);\n\n      const onMouseUp = () => {\n        dispose?.();\n        dispose = undefined;\n      };\n\n      let dispose: (() => void) | undefined = () => {\n        window.removeEventListener('mousemove', moveHandler);\n        window.removeEventListener('mouseup', onMouseUp);\n      };\n\n      window.addEventListener('mouseup', onMouseUp);\n      return dispose;\n    },\n    [isVertical, side, setInnerState],\n  );\n\n  return (\n    <div\n      className={`drawer drawer-${side}${isExpanded ? ' drawer-expanded' : ''}`}\n      style={isExpanded ? {[isVertical ? 'height' : 'width']: `${state.size}px`} : undefined}>\n      <div\n        className=\"drawer-label\"\n        data-testid=\"drawer-label\"\n        onClick={() => {\n          setDrawerState(prev => ({\n            ...prev,\n            [side]: {\n              size:\n                // enforce a minimum size when expanding\n                prev[side].size < minimumDrawerSizePx ? minimumDrawerSizePx : prev[side].size,\n              collapsed: !prev[side].collapsed,\n            },\n          }));\n        }}>\n        {label}\n      </div>\n      {isExpanded ? (\n        <>\n          <div\n            ref={dragHandleElement}\n            className=\"resizable-drag-handle\"\n            onMouseDown={(e: React.MouseEvent) => startResizing(e, state.size)}\n          />\n          {createElement(errorBoundary, null, children)}\n        </>\n      ) : null}\n    </div>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport type DebouncedFunction<Args extends Array<unknown>> = {\n  (...args: Args): void;\n  reset: () => void;\n  isPending: () => boolean;\n  dispose: () => void;\n};\n\n/**\n * This is a rate limiting mechanism, used to invoke a function after a repeated\n * action has completed.  This creates and returns a debounced version of\n * the function passed in that will postpone its execution until after `wait`\n * milliseconds have elapsed since the last time it was invoked.\n *\n * For example, if you wanted to update a preview after the user stops typing\n * you could do the following:\n *\n *   elem.addEventListener('keyup', debounce(this.updatePreview, 250), false);\n *\n * The returned function has a reset method which can be called to cancel a\n * pending invocation.\n *\n *   var debouncedUpdatePreview = debounce(this.updatePreview, 250);\n *   elem.addEventListener('keyup', debouncedUpdatePreview, false);\n *\n *   // later, to cancel pending calls\n *   debouncedUpdatePreview.reset();\n *\n * @param func - the function to debounce\n * @param wait - how long to wait in milliseconds\n * @param context - optional context to invoke the function in\n * @param leading - cause debounce to trigger the function on\n *  the leading edge instead of the trailing edge of the wait interval\n */\nexport function debounce<Args extends Array<unknown>>(\n  func: (...args: Args) => unknown,\n  wait: number,\n  context: unknown = undefined,\n  leading = false,\n): DebouncedFunction<Args> {\n  let timeout: NodeJS.Timeout | undefined;\n  let shouldCallLeading = true;\n\n  function debouncer(...args: Args) {\n    let callback: () => void;\n\n    if (leading) {\n      callback = function () {\n        shouldCallLeading = true;\n        clearTimeout(timeout);\n        timeout = undefined;\n      };\n\n      if (!shouldCallLeading) {\n        clearTimeout(timeout);\n        timeout = setTimeout(callback, wait);\n        return;\n      }\n\n      shouldCallLeading = false;\n      func.apply(context, args);\n    } else {\n      debouncer.reset();\n      callback = function () {\n        clearTimeout(timeout);\n        timeout = undefined;\n        func.apply(context, args);\n      };\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout(callback, wait);\n  }\n\n  debouncer.reset = function () {\n    clearTimeout(timeout);\n    timeout = undefined;\n    shouldCallLeading = true;\n  };\n\n  debouncer.dispose = function () {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n\n  debouncer.isPending = function () {\n    return timeout != null;\n  };\n\n  return debouncer;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {AllDrawersState} from 'shared/Drawers';\n\nimport CenteredSpinner from './CenteredSpinner';\nimport {useCommand} from './KeyboardShortcuts';\nimport PullRequest from './PullRequest';\nimport PullRequestHeader from './PullRequestHeader';\nimport PullRequestTimeline from './PullRequestTimeline';\nimport PullRequestTimelineCommentInput from './PullRequestTimelineCommentInput';\nimport {APP_HEADER_HEIGHT} from './constants';\nimport {gitHubOrgAndRepo, gitHubPullRequestID} from './recoil';\nimport {Box, Text} from '@primer/react';\nimport React, {Component, Suspense, useEffect} from 'react';\nimport {atom, useSetRecoilState} from 'recoil';\nimport {Drawers} from 'shared/Drawers';\n\nimport './PullRequestLayout.css';\n\nconst HEADER_HEIGHT = 100;\nconst TOTAL_HEADER_HEIGHT = HEADER_HEIGHT + APP_HEADER_HEIGHT;\nconst COMMENT_INPUT_HEIGHT = 125;\n\nconst drawerState = atom<AllDrawersState>({\n  key: 'drawerState',\n  default: {\n    right: {size: 500, collapsed: false},\n    left: {size: 200, collapsed: true},\n    top: {size: 200, collapsed: true},\n    bottom: {size: 200, collapsed: true},\n  },\n});\n\nexport default function PullRequestLayout({\n  org,\n  repo,\n  number,\n}: {\n  org: string;\n  repo: string;\n  number: number;\n}): React.ReactElement {\n  const setOrgAndRepo = useSetRecoilState(gitHubOrgAndRepo);\n  const setPullRequestID = useSetRecoilState(gitHubPullRequestID);\n\n  useEffect(() => {\n    setOrgAndRepo({org, repo});\n  }, [org, repo, setOrgAndRepo]);\n\n  useEffect(() => {\n    setPullRequestID(number);\n  }, [number, setPullRequestID]);\n\n  const setDrawerState = useSetRecoilState(drawerState);\n  useCommand('ToggleSidebar', () => {\n    setDrawerState(state => ({\n      ...state,\n      right: {...state.right, collapsed: !state.right.collapsed},\n    }));\n  });\n\n  return (\n    <Box>\n      <PullRequestHeader height={HEADER_HEIGHT} />\n      <Suspense fallback={<CenteredSpinner message=\"Loading pull request...\" />}>\n        <Drawers\n          drawerState={drawerState}\n          errorBoundary={ErrorBoundary}\n          rightLabel={<Text className=\"drawer-label-text\">...</Text>}\n          right={<TimelineDrawer />}>\n          <Box display=\"flex\" flexDirection=\"row\">\n            <Box height={`calc(100vh - ${TOTAL_HEADER_HEIGHT}px)`} overflow=\"auto\">\n              <PullRequest />\n            </Box>\n          </Box>\n        </Drawers>\n      </Suspense>\n    </Box>\n  );\n}\n\nfunction TimelineDrawer() {\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" height={`calc(100vh - ${TOTAL_HEADER_HEIGHT}px)`}>\n      <Box height={`calc(100% - ${COMMENT_INPUT_HEIGHT}px)`} overflow=\"auto\">\n        <PullRequestTimeline />\n      </Box>\n      <Box display=\"flex\" height={COMMENT_INPUT_HEIGHT}>\n        <PullRequestTimelineCommentInput />\n      </Box>\n    </Box>\n  );\n}\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype State = {error: Error | null};\n\nclass ErrorBoundary extends Component<Props, State> {\n  static getDerivedStateFromError(error: Error) {\n    return {error};\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {PageInfo} from './generated/graphql';\nimport type {PaginationParams} from './github/types';\n\nimport {ArrowLeftIcon, ArrowRightIcon} from '@primer/octicons-react';\nimport {Box, IconButton, Text} from '@primer/react';\nimport {useCallback, useEffect, useState} from 'react';\n\ntype Props = {\n  id: string;\n  pageInfo: PageInfo;\n  pageSize: number;\n  setPagination: (pagination: PaginationParams) => void;\n  totalCount: number;\n};\n\nexport default function Pagination({\n  id,\n  pageInfo,\n  pageSize,\n  setPagination,\n  totalCount,\n}: Props): React.ReactElement {\n  const [page, setPage] = useState(1);\n  const totalPages = Math.ceil(totalCount / pageSize);\n\n  // Reset to the first page when there is a new search.\n  useEffect(() => {\n    setPage(1);\n  }, [id, setPage]);\n\n  const {startCursor, endCursor, hasPreviousPage, hasNextPage} = pageInfo;\n\n  const onPrev = useCallback(() => {\n    setPagination({last: pageSize, before: startCursor});\n    setPage(page => Math.max(1, page - 1));\n  }, [pageSize, startCursor, setPage, setPagination]);\n\n  const onNext = useCallback(() => {\n    setPagination({first: pageSize, after: endCursor});\n    setPage(page => Math.min(totalPages, page + 1));\n  }, [pageSize, endCursor, setPage, setPagination, totalPages]);\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gridGap={2}>\n      <Box display=\"flex\" gridGap={1}>\n        <IconButton disabled={!hasPreviousPage} icon={ArrowLeftIcon} onClick={onPrev}>\n          Prev\n        </IconButton>\n        <IconButton disabled={!hasNextPage} icon={ArrowRightIcon} onClick={onNext}>\n          Next\n        </IconButton>\n      </Box>\n      <Text fontSize={1}>\n        Page {page} of {totalPages}\n      </Text>\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport Link from './Link';\nimport URLFor from './URLFor';\nimport {gitHubOrgAndRepo} from './recoil';\nimport {useRecoilValue} from 'recoil';\n\ntype Props = {\n  children: React.ReactElement;\n  number: number;\n};\n\nexport default function PullRequestLink({children, number}: Props): React.ReactElement {\n  const {org, repo} = useRecoilValue(gitHubOrgAndRepo) ?? {};\n\n  if (org == null || repo == null) {\n    return children;\n  }\n\n  return <Link href={URLFor.pullRequest({org, repo, number})}>{children}</Link>;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {PullRequestReviewDecision} from './generated/graphql';\n\nimport {pullRequestReviewDecisionLabel} from './utils';\nimport {Label} from '@primer/react';\nimport React from 'react';\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function PullRequestReviewDecisionLabel({\n  reviewDecision,\n}: {\n  reviewDecision?: PullRequestReviewDecision | null;\n}): React.ReactElement | null {\n  if (reviewDecision == null) {\n    return null;\n  }\n  const {label, variant} = pullRequestReviewDecisionLabel(reviewDecision);\n\n  return <Label variant={variant}>{label}</Label>;\n});\n","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n\n  React.useEffect(() => {\n    if (!ref && entryTarget && !triggerOnce && !skip) {\n      // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n        entry: undefined,\n      });\n    }\n  }, [ref, entryTarget, triggerOnce, skip, initialInView]);\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import React from 'react';\nimport { useInView } from 'react-intersection-observer';\n/**\n * Calculates the height of the sticky pane such that it always\n * fits into the viewport even when the header or footer are visible.\n */\n\nexport function useStickyPaneHeight() {\n  const rootRef = React.useRef(null); // Default the height to the viewport height\n\n  const [height, setHeight] = React.useState('100vh');\n  const [stickyTop, setStickyTop] = React.useState(0); // Create intersection observers to track the top and bottom of the content region\n\n  const [contentTopRef, contentTopInView, contentTopEntry] = useInView();\n  const [contentBottomRef, contentBottomInView, contentBottomEntry] = useInView(); // Calculate the height of the sticky pane based on the position of the\n  // top and bottom of the content region\n\n  const calculateHeight = React.useCallback(() => {\n    // Uncomment to debug\n    // console.log('Recalculating pane height...')\n    let calculatedHeight = '';\n    const scrollContainer = getScrollContainer(rootRef.current);\n    const topRect = contentTopEntry === null || contentTopEntry === void 0 ? void 0 : contentTopEntry.target.getBoundingClientRect();\n    const bottomRect = contentBottomEntry === null || contentBottomEntry === void 0 ? void 0 : contentBottomEntry.target.getBoundingClientRect();\n    const stickyTopWithUnits = typeof stickyTop === 'number' ? `${stickyTop}px` : stickyTop;\n\n    if (scrollContainer) {\n      const scrollRect = scrollContainer.getBoundingClientRect();\n      const topOffset = topRect ? Math.max(topRect.top - scrollRect.top, 0) : 0;\n      const bottomOffset = bottomRect ? Math.max(scrollRect.bottom - bottomRect.bottom, 0) : 0;\n      calculatedHeight = `calc(${scrollRect.height}px - (max(${topOffset}px, ${stickyTopWithUnits}) + ${bottomOffset}px))`;\n    } else {\n      const topOffset = topRect ? Math.max(topRect.top, 0) : 0;\n      const bottomOffset = bottomRect ? Math.max(window.innerHeight - bottomRect.bottom, 0) : 0; // Safari's elastic scroll feature allows you to scroll beyond the scroll height of the page.\n      // We need to account for this when calculating the offset.\n\n      const overflowScroll = Math.max(window.scrollY + window.innerHeight - document.body.scrollHeight, 0);\n      calculatedHeight = `calc(100vh - (max(${topOffset}px, ${stickyTopWithUnits}) + ${bottomOffset}px - ${overflowScroll}px))`;\n    }\n\n    setHeight(calculatedHeight);\n  }, [contentTopEntry, contentBottomEntry, stickyTop]); // We only want to add scroll and resize listeners if the pane is sticky.\n  // Since hooks can't be called conditionally, we need to use state to track\n  // if the pane is sticky.\n\n  const [isEnabled, setIsEnabled] = React.useState(false);\n  React.useLayoutEffect(() => {\n    const scrollContainer = getScrollContainer(rootRef.current);\n\n    if (isEnabled && (contentTopInView || contentBottomInView)) {\n      calculateHeight(); // Start listeners if the top or the bottom edge of the content region is visible\n\n      if (scrollContainer) {\n        // eslint-disable-next-line github/prefer-observers\n        scrollContainer.addEventListener('scroll', calculateHeight);\n      } else {\n        // eslint-disable-next-line github/prefer-observers\n        window.addEventListener('scroll', calculateHeight);\n      } // eslint-disable-next-line github/prefer-observers\n\n\n      window.addEventListener('resize', calculateHeight);\n    }\n\n    return () => {\n      // Stop listeners if neither the top nor the bottom edge of the content region is visible\n      if (scrollContainer) {\n        scrollContainer.removeEventListener('scroll', calculateHeight);\n      } else {\n        window.removeEventListener('scroll', calculateHeight);\n      }\n\n      window.removeEventListener('resize', calculateHeight);\n    };\n  }, [isEnabled, contentTopInView, contentBottomInView, calculateHeight]);\n\n  function enableStickyPane(top) {\n    setIsEnabled(true);\n    setStickyTop(top);\n  }\n\n  function disableStickyPane() {\n    setIsEnabled(false);\n  }\n\n  return {\n    rootRef,\n    enableStickyPane,\n    disableStickyPane,\n    contentTopRef,\n    contentBottomRef,\n    stickyPaneHeight: height\n  };\n}\n/**\n * Returns the nearest scrollable parent of the element or `null` if the element\n * is not contained in a scrollable element.\n */\n\nfunction getScrollContainer(element) {\n  if (!element || element === document.body) {\n    return null;\n  }\n\n  return isScrollable(element) ? element : getScrollContainer(element.parentElement);\n}\n/** Returns `true` if the element is scrollable */\n\n\nfunction isScrollable(element) {\n  const hasScrollableContent = element.scrollHeight > element.clientHeight;\n  const overflowYStyle = window.getComputedStyle(element).overflowY;\n  const isOverflowHidden = overflowYStyle.indexOf('hidden') !== -1;\n  return hasScrollableContent && !isOverflowHidden;\n}","// Copied from https://github.com/streamich/react-use/blob/master/src/useMedia.ts\nimport React from 'react';\n\nconst getInitialState = (query, defaultState) => {\n  // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n  if (defaultState !== undefined) {\n    return defaultState;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window.matchMedia(query).matches;\n  } // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\n  }\n\n  return false;\n};\n\nexport function useMedia(query, defaultState) {\n  const [state, setState] = React.useState(getInitialState(query, defaultState));\n  React.useEffect(() => {\n    let mounted = true;\n    const mql = window.matchMedia(query);\n\n    const onChange = () => {\n      if (!mounted) {\n        return;\n      }\n\n      setState(!!mql.matches);\n    };\n\n    mql.addListener(onChange);\n    setState(mql.matches);\n    return () => {\n      mounted = false;\n      mql.removeListener(onChange);\n    };\n  }, [query]);\n  return state;\n}","import { useMedia } from './useMedia'; // This file contains utilities for working with responsive values.\n// The viewport range values from @primer/primtives don't work in Chrome\n// because they use `em` units inside `calc()` (e.g., calc(48em - 0.02px)).\n// As a temporary workaround, we're hardcoding the viewport ranges in `px` units.\n// TODO: Use viewport range tokens from @primer/primitives\n\nexport const viewportRanges = {\n  narrow: '(max-width: calc(768px - 0.02px))',\n  // < 768px\n  regular: '(min-width: 768px)',\n  // >= 768px\n  wide: '(min-width: 1400px)' // >= 1400px\n\n};\n\n/**\n * Checks if the value is a responsive value.\n * In other words, is it an object with viewport range keys?\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isResponsiveValue(value) {\n  return typeof value === 'object' && Object.keys(value).some(key => ['narrow', 'regular', 'wide'].includes(key));\n}\n/**\n * Resolves responsive values based on the current viewport width.\n * For example, if the current viewport width is narrow (less than 768px), the value of `{regular: 'foo', narrow: 'bar'}` will resolve to `'bar'`.\n *\n * @example\n * const value = useResponsiveValue({regular: 'foo', narrow: 'bar'})\n * console.log(value) // 'bar'\n */\n// TODO: Improve SRR support\n\nexport function useResponsiveValue(value, fallback) {\n  // Check viewport size\n  // TODO: What is the performance cost of creating media query listeners in this hook?\n  const isNarrowViewport = useMedia(viewportRanges.narrow);\n  const isRegularViewport = useMedia(viewportRanges.regular);\n  const isWideViewport = useMedia(viewportRanges.wide);\n\n  if (isResponsiveValue(value)) {\n    // If we've reached this line, we know that value is a responsive value\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const responsiveValue = value;\n\n    if (isNarrowViewport && 'narrow' in responsiveValue) {\n      return responsiveValue.narrow;\n    } else if (isWideViewport && 'wide' in responsiveValue) {\n      return responsiveValue.wide;\n    } else if (isRegularViewport && 'regular' in responsiveValue) {\n      return responsiveValue.regular;\n    } else {\n      return fallback;\n    }\n  } else {\n    // If we've reached this line, we know that value is not a responsive value\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return value;\n  }\n}","import React from 'react';\nimport { useStickyPaneHeight } from './useStickyPaneHeight';\nimport { Box } from '..';\nimport { isResponsiveValue, useResponsiveValue } from '../hooks/useResponsiveValue';\nimport { merge } from '../sx';\nconst REGION_ORDER = {\n  header: 0,\n  paneStart: 1,\n  content: 2,\n  paneEnd: 3,\n  footer: 4\n};\nconst SPACING_MAP = {\n  none: 0,\n  condensed: 3,\n  normal: [3, null, null, 4]\n};\nconst PageLayoutContext = /*#__PURE__*/React.createContext({\n  padding: 'normal',\n  rowGap: 'normal',\n  columnGap: 'normal'\n}); // ----------------------------------------------------------------------------\n// PageLayout\n\nconst containerWidths = {\n  full: '100%',\n  medium: '768px',\n  large: '1012px',\n  xlarge: '1280px'\n}; // TODO: refs\n\nconst Root = ({\n  containerWidth = 'xlarge',\n  padding = 'normal',\n  rowGap = 'normal',\n  columnGap = 'normal',\n  children,\n  sx = {}\n}) => {\n  const {\n    rootRef,\n    enableStickyPane,\n    disableStickyPane,\n    contentTopRef,\n    contentBottomRef,\n    stickyPaneHeight\n  } = useStickyPaneHeight();\n  return /*#__PURE__*/React.createElement(PageLayoutContext.Provider, {\n    value: {\n      padding,\n      rowGap,\n      columnGap,\n      enableStickyPane,\n      disableStickyPane,\n      contentTopRef,\n      contentBottomRef\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: rootRef,\n    style: {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore TypeScript doesn't know about CSS custom properties\n      '--sticky-pane-height': stickyPaneHeight\n    },\n    sx: merge({\n      padding: SPACING_MAP[padding]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: containerWidths[containerWidth],\n      marginX: 'auto',\n      display: 'flex',\n      flexWrap: 'wrap'\n    }\n  }, children)));\n};\n\nRoot.displayName = \"Root\";\nRoot.displayName = 'PageLayout'; // ----------------------------------------------------------------------------\n// Divider (internal)\n\nconst horizontalDividerVariants = {\n  none: {\n    display: 'none'\n  },\n  line: {\n    display: 'block',\n    height: 1,\n    backgroundColor: 'border.default'\n  },\n  filled: {\n    display: 'block',\n    height: 8,\n    backgroundColor: 'canvas.inset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    boxShadow: theme => `inset 0 -1px 0 0 ${theme.colors.border.default}, inset 0 1px 0 0 ${theme.colors.border.default}`\n  }\n};\n\nfunction negateSpacingValue(value) {\n  if (Array.isArray(value)) {\n    // Not using recursion to avoid deeply nested arrays\n    return value.map(v => v === null ? null : -v);\n  }\n\n  return value === null ? null : -value;\n}\n\nconst HorizontalDivider = ({\n  variant = 'none',\n  sx = {}\n}) => {\n  const {\n    padding\n  } = React.useContext(PageLayoutContext);\n  const responsiveVariant = useResponsiveValue(variant, 'none');\n  return /*#__PURE__*/React.createElement(Box // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  , {\n    sx: theme => merge({\n      // Stretch divider to viewport edges on narrow screens\n      marginX: negateSpacingValue(SPACING_MAP[padding]),\n      ...horizontalDividerVariants[responsiveVariant],\n      [`@media screen and (min-width: ${theme.breakpoints[1]})`]: {\n        marginX: '0 !important'\n      }\n    }, sx)\n  });\n};\n\nHorizontalDivider.displayName = \"HorizontalDivider\";\nconst verticalDividerVariants = {\n  none: {\n    display: 'none'\n  },\n  line: {\n    display: 'block',\n    width: 1,\n    backgroundColor: 'border.default'\n  },\n  filled: {\n    display: 'block',\n    width: 8,\n    backgroundColor: 'canvas.inset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    boxShadow: theme => `inset -1px 0 0 0 ${theme.colors.border.default}, inset 1px 0 0 0 ${theme.colors.border.default}`\n  }\n};\n\nconst VerticalDivider = ({\n  variant = 'none',\n  sx = {}\n}) => {\n  const responsiveVariant = useResponsiveValue(variant, 'none');\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: merge({\n      height: '100%',\n      ...verticalDividerVariants[responsiveVariant]\n    }, sx)\n  });\n};\n\nVerticalDivider.displayName = \"VerticalDivider\";\n\nconst Header = ({\n  padding = 'none',\n  divider = 'none',\n  dividerWhenNarrow = 'inherit',\n  hidden = false,\n  children,\n  sx = {}\n}) => {\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(divider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: divider,\n    narrow: dividerWhenNarrow\n  } : divider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    rowGap\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"header\",\n    hidden: isHidden,\n    sx: merge({\n      order: REGION_ORDER.header,\n      width: '100%',\n      marginBottom: SPACING_MAP[rowGap]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: SPACING_MAP[padding]\n    }\n  }, children), /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: dividerVariant,\n    sx: {\n      marginTop: SPACING_MAP[rowGap]\n    }\n  }));\n};\n\nHeader.displayName = \"Header\";\nHeader.displayName = 'PageLayout.Header'; // ----------------------------------------------------------------------------\n// PageLayout.Content\n\n// TODO: Account for pane width when centering content\nconst contentWidths = {\n  full: '100%',\n  medium: '768px',\n  large: '1012px',\n  xlarge: '1280px'\n};\n\nconst Content = ({\n  width = 'full',\n  padding = 'none',\n  hidden = false,\n  children,\n  sx = {}\n}) => {\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    contentTopRef,\n    contentBottomRef\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"main\",\n    sx: merge({\n      display: isHidden ? 'none' : 'flex',\n      flexDirection: 'column',\n      order: REGION_ORDER.content,\n      // Set flex-basis to 0% to allow flex-grow to control the width of the content region.\n      // Without this, the content region could wrap onto a different line\n      // than the pane region on wide viewports if its contents are too wide.\n      flexBasis: 0,\n      flexGrow: 1,\n      flexShrink: 1,\n      minWidth: 1 // Hack to prevent overflowing content from pushing the pane region to the next line\n\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: contentTopRef\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: contentWidths[width],\n      marginX: 'auto',\n      flexGrow: 1,\n      padding: SPACING_MAP[padding]\n    }\n  }, children), /*#__PURE__*/React.createElement(Box, {\n    ref: contentBottomRef\n  }));\n};\n\nContent.displayName = \"Content\";\nContent.displayName = 'PageLayout.Content'; // ----------------------------------------------------------------------------\n// PageLayout.Pane\n\nconst panePositions = {\n  start: REGION_ORDER.paneStart,\n  end: REGION_ORDER.paneEnd\n};\nconst paneWidths = {\n  small: ['100%', null, '240px', '256px'],\n  medium: ['100%', null, '256px', '296px'],\n  large: ['100%', null, '256px', '320px', '336px']\n};\n\nconst Pane = ({\n  position: responsivePosition = 'end',\n  positionWhenNarrow = 'inherit',\n  width = 'medium',\n  padding = 'none',\n  divider: responsiveDivider = 'none',\n  dividerWhenNarrow = 'inherit',\n  sticky = false,\n  stickyTop = 0,\n  hidden: responsiveHidden = false,\n  children,\n  sx = {}\n}) => {\n  // Combine position and positionWhenNarrow for backwards compatibility\n  const positionProp = !isResponsiveValue(responsivePosition) && positionWhenNarrow !== 'inherit' ? {\n    regular: responsivePosition,\n    narrow: positionWhenNarrow\n  } : responsivePosition;\n  const position = useResponsiveValue(positionProp, 'end'); // Combine divider and dividerWhenNarrow for backwards compatibility\n\n  const dividerProp = !isResponsiveValue(responsiveDivider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: responsiveDivider,\n    narrow: dividerWhenNarrow\n  } : responsiveDivider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(responsiveHidden, false);\n  const {\n    rowGap,\n    columnGap,\n    enableStickyPane,\n    disableStickyPane\n  } = React.useContext(PageLayoutContext);\n  React.useEffect(() => {\n    if (sticky) {\n      enableStickyPane === null || enableStickyPane === void 0 ? void 0 : enableStickyPane(stickyTop);\n    } else {\n      disableStickyPane === null || disableStickyPane === void 0 ? void 0 : disableStickyPane();\n    }\n  }, [sticky, enableStickyPane, disableStickyPane, stickyTop]);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"aside\" // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ,\n    sx: theme => merge({\n      // Narrow viewports\n      display: isHidden ? 'none' : 'flex',\n      order: panePositions[position],\n      width: '100%',\n      marginX: 0,\n      ...(position === 'end' ? {\n        flexDirection: 'column',\n        marginTop: SPACING_MAP[rowGap]\n      } : {\n        flexDirection: 'column-reverse',\n        marginBottom: SPACING_MAP[rowGap]\n      }),\n      // Regular and wide viewports\n      [`@media screen and (min-width: ${theme.breakpoints[1]})`]: {\n        width: 'auto',\n        marginY: '0 !important',\n        ...(sticky ? {\n          position: 'sticky',\n          // If stickyTop has value, it will stick the pane to the position where the sticky top ends\n          // else top will be 0 as the default value of stickyTop\n          top: typeof stickyTop === 'number' ? `${stickyTop}px` : stickyTop,\n          overflow: 'hidden',\n          maxHeight: 'var(--sticky-pane-height)'\n        } : {}),\n        ...(position === 'end' ? {\n          flexDirection: 'row',\n          marginLeft: SPACING_MAP[columnGap]\n        } : {\n          flexDirection: 'row-reverse',\n          marginRight: SPACING_MAP[columnGap]\n        })\n      }\n    }, sx)\n  }, /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: {\n      narrow: dividerVariant,\n      regular: 'none'\n    },\n    sx: {\n      [position === 'end' ? 'marginBottom' : 'marginTop']: SPACING_MAP[rowGap]\n    }\n  }), /*#__PURE__*/React.createElement(VerticalDivider, {\n    variant: {\n      narrow: 'none',\n      regular: dividerVariant\n    },\n    sx: {\n      [position === 'end' ? 'marginRight' : 'marginLeft']: SPACING_MAP[columnGap]\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: paneWidths[width],\n      padding: SPACING_MAP[padding],\n      overflow: 'auto'\n    }\n  }, children));\n};\n\nPane.displayName = \"Pane\";\nPane.displayName = 'PageLayout.Pane'; // ----------------------------------------------------------------------------\n// PageLayout.Footer\n\nconst Footer = ({\n  padding = 'none',\n  divider = 'none',\n  dividerWhenNarrow = 'inherit',\n  hidden = false,\n  children,\n  sx = {}\n}) => {\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(divider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: divider,\n    narrow: dividerWhenNarrow\n  } : divider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    rowGap\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"footer\",\n    hidden: isHidden,\n    sx: merge({\n      order: REGION_ORDER.footer,\n      width: '100%',\n      marginTop: SPACING_MAP[rowGap]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: dividerVariant,\n    sx: {\n      marginBottom: SPACING_MAP[rowGap]\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: SPACING_MAP[padding]\n    }\n  }, children));\n};\n\nFooter.displayName = \"Footer\";\nFooter.displayName = 'PageLayout.Footer'; // ----------------------------------------------------------------------------\n// Export\n\nexport const PageLayout = Object.assign(Root, {\n  Header,\n  Content,\n  Pane,\n  Footer\n});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport classnames from 'classnames';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { get } from './constants';\nimport sx from './sx';\nconst ITEM_CLASS = 'SubNav-item';\nconst SELECTED_CLASS = 'selected';\nconst SubNavBase = styled.nav.withConfig({\n  displayName: \"SubNav__SubNavBase\",\n  componentId: \"sc-1gr10ia-0\"\n})([\"display:flex;justify-content:space-between;.SubNav-body{display:flex;margin-bottom:-1px;> *{margin-left:\", \";}> *:first-child{margin-left:0;}}.SubNav-actions{align-self:center;}\", \";\"], get('space.2'), sx);\n\nfunction SubNav({\n  actions,\n  className,\n  children,\n  label,\n  ...rest\n}) {\n  const classes = classnames(className, 'SubNav');\n  return /*#__PURE__*/React.createElement(SubNavBase, _extends({\n    className: classes,\n    \"aria-label\": label\n  }, rest), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SubNav-body\"\n  }, children), actions && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SubNav-actions\"\n  }, actions));\n}\n\nSubNav.displayName = \"SubNav\";\nconst SubNavLinks = styled.div.withConfig({\n  displayName: \"SubNav__SubNavLinks\",\n  componentId: \"sc-1gr10ia-1\"\n})([\"display:flex;\", \";\"], sx);\nconst SubNavLink = styled.a.attrs(props => ({\n  activeClassName: typeof props.to === 'string' ? 'selected' : '',\n  className: classnames(ITEM_CLASS, props.selected && SELECTED_CLASS, props.className)\n})).withConfig({\n  displayName: \"SubNav__SubNavLink\",\n  componentId: \"sc-1gr10ia-2\"\n})([\"padding-left:\", \";padding-right:\", \";font-weight:\", \";font-size:\", \";line-height:20px;min-height:34px;color:\", \";text-align:center;text-decoration:none;border-top:1px solid \", \";border-bottom:1px solid \", \";border-right:1px solid \", \";display:flex;align-items:center;&:first-of-type{border-top-left-radius:\", \";border-bottom-left-radius:\", \";border-left:1px solid \", \";}&:last-of-type{border-top-right-radius:\", \";border-bottom-right-radius:\", \";}&:hover,&:focus{text-decoration:none;background-color:\", \";transition:background-color 0.2s ease;.SubNav-octicon{color:\", \";}}&.selected{color:\", \";background-color:\", \";border-color:\", \";.SubNav-octicon{color:\", \";}}\", \";\"], get('space.3'), get('space.3'), get('fontWeights.semibold'), get('fontSizes.1'), get('colors.fg.default'), get('colors.border.default'), get('colors.border.default'), get('colors.border.default'), get('radii.2'), get('radii.2'), get('colors.border.default'), get('radii.2'), get('radii.2'), get('colors.canvas.subtle'), get('colors.fg.muted'), get('colors.fg.onEmphasis'), get('colors.accent.emphasis'), get('colors.accent.emphasis'), get('colors.fg.onEmphasis'), sx);\nSubNavLink.displayName = 'SubNav.Link';\nSubNavLinks.displayName = 'SubNav.Links';\nexport default Object.assign(SubNav, {\n  Link: SubNavLink,\n  Links: SubNavLinks\n});","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {LabelFragment} from './generated/graphql';\nimport type {PullsPullRequest} from './github/pullsTypes';\nimport type {PaginationParams} from './github/types';\n\nimport ActorAvatar from './ActorAvatar';\nimport CenteredSpinner from './CenteredSpinner';\nimport CommentCount from './CommentCount';\nimport Pagination from './Pagination';\nimport PullRequestLink from './PullRequestLink';\nimport PullRequestReviewDecisionLabel from './PullRequestReviewDecisionLabel';\nimport RepoLabelsInput from './RepoLabelsInput';\nimport {CURSOR_POINTER} from './constants';\nimport {PullRequestState} from './generated/graphql';\nimport {gitHubPullRequests} from './recoil';\nimport {formatISODate} from './utils';\nimport {ActionMenu, Box, IssueLabelToken, PageLayout, SubNav, Text} from '@primer/react';\nimport {Fragment, Suspense, useCallback, useMemo, useState} from 'react';\nimport {useRecoilValue} from 'recoil';\nimport {notEmpty} from 'shared/utils';\n\nconst PAGE_SIZE = 25;\nconst DEFAULT_PAGINATION: PaginationParams = {first: PAGE_SIZE};\nconst OPEN_STATES = [PullRequestState.Open];\nconst CLOSED_STATES = [PullRequestState.Closed, PullRequestState.Merged];\n\ntype Tab = 'open' | 'closed';\n\nexport default function Pulls() {\n  const [pagination, setPagination] = useState<PaginationParams>(DEFAULT_PAGINATION);\n  const [tab, setTab] = useState<Tab>('open');\n  const [labels, setLabels] = useState<LabelFragment[]>([]);\n\n  const labelIDs = useMemo(() => new Set(labels.map(({id}) => id)), [labels]);\n\n  const onClickOpenTab = useCallback(() => {\n    setPagination(DEFAULT_PAGINATION);\n    setTab('open');\n  }, [setPagination, setTab]);\n\n  const onClickClosedTab = useCallback(() => {\n    setPagination(DEFAULT_PAGINATION);\n    setTab('closed');\n  }, [setPagination, setTab]);\n\n  const onSelectLabel = useCallback(\n    ({id, name, color}: LabelFragment, isExisting: boolean) => {\n      if (!isExisting) {\n        setLabels(labels => [...labels, {id, name, color}]);\n      } else {\n        setLabels(labels => labels.filter(label => label.id !== id));\n      }\n    },\n    [setLabels],\n  );\n\n  const onClickLabelToken = useCallback((label: LabelFragment) => setLabels([label]), [setLabels]);\n\n  return (\n    <PageLayout>\n      <PageLayout.Content>\n        <SubNav>\n          <SubNav.Links>\n            <SubNav.Link onClick={onClickOpenTab} selected={tab === 'open'} sx={CURSOR_POINTER}>\n              Open\n            </SubNav.Link>\n            <SubNav.Link onClick={onClickClosedTab} selected={tab === 'closed'} sx={CURSOR_POINTER}>\n              Closed\n            </SubNav.Link>\n          </SubNav.Links>\n          <ActionMenu>\n            <ActionMenu.Button>Labels</ActionMenu.Button>\n            <ActionMenu.Overlay width=\"medium\">\n              <RepoLabelsInput existingLabelIDs={labelIDs} onSelect={onSelectLabel} />\n            </ActionMenu.Overlay>\n          </ActionMenu>\n        </SubNav>\n        <Suspense fallback={<CenteredSpinner />}>\n          <PullsBootstrap\n            labels={labels}\n            onClickLabelToken={onClickLabelToken}\n            pagination={pagination}\n            setPagination={setPagination}\n            tab={tab}\n          />\n        </Suspense>\n      </PageLayout.Content>\n    </PageLayout>\n  );\n}\n\ntype Props = {\n  labels: LabelFragment[];\n  onClickLabelToken: (label: LabelFragment) => void;\n  pagination: PaginationParams;\n  setPagination: (pagination: PaginationParams) => void;\n  tab: Tab;\n};\n\nfunction PullsBootstrap({labels, onClickLabelToken, pagination, setPagination, tab}: Props) {\n  const states = tab === 'open' ? OPEN_STATES : CLOSED_STATES;\n  const pullsWithPageInfo = useRecoilValue(\n    gitHubPullRequests({\n      ...pagination,\n      labels: labels.map(({name}) => name),\n      states,\n    }),\n  );\n\n  const pullRequests = useMemo(() => {\n    const seen = new Set();\n    return (pullsWithPageInfo?.pullRequests ?? []).filter(({number}) => {\n      if (seen.has(number)) {\n        return false;\n      }\n      seen.add(number);\n      return true;\n    });\n  }, [pullsWithPageInfo?.pullRequests]);\n\n  if (pullsWithPageInfo == null || pullRequests.length === 0) {\n    return <div>No pull requests found.</div>;\n  }\n\n  const {pageInfo, totalCount} = pullsWithPageInfo;\n\n  let paginationEl = null;\n  if (pageInfo.hasNextPage || pageInfo.hasPreviousPage) {\n    paginationEl = (\n      <Pagination\n        id={tab}\n        pageInfo={pageInfo}\n        pageSize={PAGE_SIZE}\n        setPagination={setPagination}\n        totalCount={totalCount}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Box marginY={3}>\n        <PullsList onClickLabelToken={onClickLabelToken} pullRequests={pullRequests} />\n      </Box>\n      {paginationEl}\n    </>\n  );\n}\n\ntype PullsListProps = {\n  onClickLabelToken: (label: LabelFragment) => void;\n  pullRequests: PullsPullRequest[];\n};\n\nfunction PullsList({onClickLabelToken, pullRequests}: PullsListProps): React.ReactElement {\n  return (\n    <Box display=\"grid\" gridTemplateColumns=\"35px 60px 1fr 100px 60px 145px\" fontSize={1}>\n      {pullRequests.map(({author, comments, labels, number, reviewDecision, title, updatedAt}) => (\n        <Fragment key={number}>\n          <Cell>\n            <ActorAvatar login={author?.login} url={author?.avatarUrl} size={24} />\n          </Cell>\n          <Cell>\n            <PullRequestLink number={number}>\n              <Text>#{number}</Text>\n            </PullRequestLink>\n          </Cell>\n          <Cell>\n            <Box display=\"flex\" flexWrap=\"wrap\" alignItems=\"center\" gridGap={1}>\n              <PullRequestLink number={number}>\n                <Text>{title}</Text>\n              </PullRequestLink>\n              {(labels?.nodes ?? []).filter(notEmpty).map(({id, name, color}) => (\n                <IssueLabelToken\n                  key={id}\n                  text={name}\n                  fillColor={`#${color}`}\n                  onClick={() => onClickLabelToken({id, name, color})}\n                />\n              ))}\n            </Box>\n          </Cell>\n          <Cell>{formatISODate(updatedAt, false)}</Cell>\n          <Cell>\n            <CommentCount count={comments.totalCount} />\n          </Cell>\n          <Cell>\n            <PullRequestReviewDecisionLabel reviewDecision={reviewDecision} />\n          </Cell>\n        </Fragment>\n      ))}\n    </Box>\n  );\n}\n\nfunction Cell({children}: {children: React.ReactNode}): React.ReactElement {\n  return <Box padding={1}>{children}</Box>;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {Box} from '@primer/react';\n\ntype Props = {\n  height: number;\n};\n\nexport default function PullsHeader({height}: Props): React.ReactElement | null {\n  return (\n    <Box\n      height={height}\n      borderBottomWidth={1}\n      borderBottomStyle=\"solid\"\n      borderBottomColor=\"border.default\"\n      fontWeight=\"bold\"\n      padding={3}>\n      Pull Requests\n    </Box>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport CenteredSpinner from './CenteredSpinner';\nimport Pulls from './Pulls';\nimport PullsHeader from './PullsHeader';\nimport {APP_HEADER_HEIGHT} from './constants';\nimport {gitHubOrgAndRepo} from './recoil';\nimport {Box} from '@primer/react';\nimport {Suspense, useEffect} from 'react';\nimport {useSetRecoilState} from 'recoil';\n\nconst HEADER_HEIGHT = 60;\nconst TOTAL_HEADER_HEIGHT = HEADER_HEIGHT + APP_HEADER_HEIGHT;\n\ntype Props = {\n  org: string;\n  repo: string;\n};\n\nexport default function PullsView({org, repo}: Props): React.ReactElement {\n  const setOrgAndRepo = useSetRecoilState(gitHubOrgAndRepo);\n\n  useEffect(() => {\n    setOrgAndRepo({org, repo});\n  }, [org, repo, setOrgAndRepo]);\n\n  return (\n    <Suspense fallback={<CenteredSpinner message=\"Loading pull requests...\" />}>\n      <PullsHeader height={HEADER_HEIGHT} />\n      <Box height={`calc(100vh - ${TOTAL_HEADER_HEIGHT}px)`} overflow=\"auto\">\n        <Pulls />\n      </Box>\n    </Suspense>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useTheme} from '@primer/react';\nimport React from 'react';\n\n/**\n * React component that dynamically generates a <style> element using values\n * from the active Primer theme.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function PrimerStyles(): React.ReactElement {\n  const {theme} = useTheme();\n  return (\n    <style>\n      {`\n.patch-word-begin {\n  border-top-left-radius: .2em;\n  border-bottom-left-radius: .2em;\n}\n\n.patch-word-end {\n  border-top-right-radius: .2em;\n  border-bottom-right-radius: .2em;\n}\n\n.patch-add-line {\n  background-color: ${theme?.colors.diffBlob.addition.lineBg};\n}\n\n.patch-add-line-number {\n  color: ${theme?.colors.diffBlob.addition.numText};\n  background-color: ${theme?.colors.diffBlob.addition.numBg};\n}\n\n.patch-add-word {\n  background-color: ${theme?.colors.diffBlob.addition.wordBg};\n}\n\n.patch-remove-line {\n  background-color: ${theme?.colors.diffBlob.deletion.lineBg};\n}\n\n.patch-remove-line-number {\n  color: ${theme?.colors.diffBlob.deletion.numText};\n  background-color: ${theme?.colors.diffBlob.deletion.numBg};\n}\n\n.patch-remove-word {\n  background-color: ${theme?.colors.diffBlob.deletion.wordBg};\n}\n\n.patch-expanded, .patch-expanded-number {\n  background-color: ${theme?.colors.canvas.subtle};\n}\n\n.patch-expanded-number {\n  color: ${theme?.colors.fg.subtle};\n}\n\n.SplitDiffView-hunk-table td {\n  font-family: ${theme?.fonts.mono}\n}\n\n.lineNumber.clickable {\n  cursor: pointer;\n}\n\n.lineNumber.clickable:hover {\n  text-decoration: underline;\n}\n\n/**\n * pl = prettylights theme\n *\n * Mapping from CSS class name to Primer color deduced from a combination of:\n * https://cdn.jsdelivr.net/npm/github-syntax-theme-generator@0.5.0/build/css/github-light.css\n * https://primer.style/react/theme-reference\n *\n * Though it is a bit confusing because github-light.css defines some classes\n * multiple times, such as .pl-s.\n */\n\n.pl-ba {\n  color: ${theme?.colors.prettylights.syntax.brackethighlighterAngle};\n}\n\n.pl-bu {\n  color: ${theme?.colors.prettylights.syntax.brackethighlighterUnmatched};\n}\n\n.pl-c {\n  color: ${theme?.colors.prettylights.syntax.comment};\n}\n\n.pl-c1 {\n  color: ${theme?.colors.prettylights.syntax.constant};\n}\n\n.pl-c2 {\n  background-color: ${theme?.colors.prettylights.syntax.carriageReturnBg};\n  color: ${theme?.colors.prettylights.syntax.carriageReturnText};\n}\n\n.pl-c2::before {\n  content: \"^M\";\n}\n\n.pl-corl {\n  color: ${theme?.colors.prettylights.syntax.constantOtherReferenceLink};\n  text-decoration: underline;\n}\n\n.pl-e, .pl-en {\n  color: ${theme?.colors.prettylights.syntax.entity};\n}\n\n.pl-ent {\n  color: ${theme?.colors.prettylights.syntax.entityTag};\n}\n\n.pl-ii {\n  background-color: ${theme?.colors.prettylights.syntax.invalidIllegalBg};\n  color: ${theme?.colors.prettylights.syntax.invalidIllegalText};\n}\n\n.pl-k {\n  color: ${theme?.colors.prettylights.syntax.keyword};\n}\n\n.pl-s, .pl-pds {\n  color: ${theme?.colors.prettylights.syntax.string};\n}\n\n.pl-sg {\n  color: ${theme?.colors.prettylights.syntax.sublimelinterGutterMark};\n}\n\n.pl-smi {\n  color: ${theme?.colors.prettylights.syntax.storageModifierImport};\n}\n\n.pl-sr {\n  color: ${theme?.colors.prettylights.syntax.stringRegexp};\n  font-weight: bold;\n}\n\n.pl-v {\n  color: ${theme?.colors.prettylights.syntax.variable};\n}\n`}\n    </style>\n  );\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {HomePagePullRequestFragment, UserHomePageQueryData} from './generated/graphql';\n\nimport CenteredSpinner from './CenteredSpinner';\nimport Link from './Link';\nimport PullRequestStateLabel from './PullRequestStateLabel';\nimport TrustedRenderedMarkdown from './TrustedRenderedMarkdown';\nimport {gitHubUserHomePageData} from './recoil';\nimport {Box, Heading, Text} from '@primer/react';\nimport {Suspense} from 'react';\nimport {useRecoilValue} from 'recoil';\nimport {notEmpty} from 'shared/utils';\n\nexport default function UserHomePage(): React.ReactElement {\n  return (\n    <Suspense fallback={<CenteredSpinner />}>\n      <UserHomePageRoot />\n    </Suspense>\n  );\n}\n\nfunction UserHomePageRoot(): React.ReactElement {\n  const data = useRecoilValue(gitHubUserHomePageData);\n  return (\n    <Box>\n      <ReviewRequestsForUser reviewRequests={data?.search.nodes ?? []} />\n      <PullRequestsForUser pullRequests={data?.viewer.pullRequests.nodes ?? []} />\n      <RepositoriesForUser repos={data?.viewer.repositories.nodes ?? []} />\n    </Box>\n  );\n}\n\nfunction PullRequests({\n  pullRequests,\n}: {\n  pullRequests: Array<HomePagePullRequestFragment | null>;\n}): React.ReactElement {\n  const pullRequestList = pullRequests.map((pullRequest, index) => {\n    if (pullRequest == null) {\n      return null;\n    }\n\n    const {number, titleHTML, repository, state, reviewDecision} = pullRequest;\n    const {nameWithOwner} = repository;\n    return (\n      <Box key={index}>\n        <Box sx={{display: 'inline-block', width: 100, pb: 2}}>\n          <PullRequestStateLabel\n            reviewDecision={reviewDecision ?? null}\n            state={state}\n            variant=\"small\"\n          />\n        </Box>\n        <Box sx={{display: 'inline'}}>\n          <Link href={`/${nameWithOwner}/pull/${number}`}>\n            #{`${number}`} ({`${nameWithOwner}`}){' '}\n            <TrustedRenderedMarkdown trustedHTML={titleHTML} inline={true} />\n          </Link>\n        </Box>\n      </Box>\n    );\n  });\n  return <>{pullRequestList}</>;\n}\n\nfunction ReviewRequestsForUser({\n  reviewRequests,\n}: {\n  reviewRequests: NonNullable<UserHomePageQueryData['search']['nodes']>;\n}): React.ReactElement {\n  const pullRequests = reviewRequests\n    .map(node => (node?.__typename === 'PullRequest' ? node : null))\n    .filter(notEmpty);\n\n  return (\n    <Box sx={{margin: 20}}>\n      <Heading sx={{fontSize: 20, mb: 2}}>\n        <Text>Review Requests</Text>\n      </Heading>\n      {pullRequests.length === 0 ? (\n        <Text>No items found.</Text>\n      ) : (\n        <PullRequests pullRequests={pullRequests} />\n      )}\n    </Box>\n  );\n}\n\nfunction PullRequestsForUser({\n  pullRequests,\n}: {\n  pullRequests: Array<HomePagePullRequestFragment | null>;\n}): React.ReactElement {\n  return (\n    <Box sx={{margin: 20}}>\n      <Heading sx={{fontSize: 20, mb: 2}}>\n        <Text>Recent Pull Requests</Text>\n      </Heading>\n      <PullRequests pullRequests={pullRequests} />\n    </Box>\n  );\n}\n\nfunction RepositoriesForUser({\n  repos,\n}: {\n  repos: Array<{nameWithOwner: string} | null>;\n}): React.ReactElement {\n  const repoList = repos.map((repo, index) => {\n    if (repo != null) {\n      const path = `${repo.nameWithOwner}/pulls`;\n      return (\n        <Box key={index} sx={{pb: 2}}>\n          <Link href={`/${path}`}>\n            <Text>{path}</Text>\n          </Link>\n        </Box>\n      );\n    } else {\n      return null;\n    }\n  });\n  return (\n    <Box sx={{margin: 20}}>\n      <Heading sx={{fontSize: 20, mb: 2}}>\n        <Text>Pull Requests for Recent Repositories</Text>\n      </Heading>\n      {repoList}\n    </Box>\n  );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { COMMON, TYPOGRAPHY } from './constants';\nimport { useTheme } from './ThemeProvider';\n// load polyfill for :focus-visible\nimport 'focus-visible';\nconst GlobalStyle = createGlobalStyle([\"*{box-sizing:border-box;}body{margin:0;}table{border-collapse:collapse;}input{color-scheme:\", \";}[role=\\\"button\\\"]:focus:not(:focus-visible):not(.focus-visible),[role=\\\"tabpanel\\\"][tabindex=\\\"0\\\"]:focus:not(:focus-visible):not(.focus-visible),button:focus:not(:focus-visible):not(.focus-visible),summary:focus:not(:focus-visible):not(.focus-visible),a:focus:not(:focus-visible):not(.focus-visible){outline:none;box-shadow:none;}[tabindex=\\\"0\\\"]:focus:not(:focus-visible):not(.focus-visible),details-dialog:focus:not(:focus-visible):not(.focus-visible){outline:none;}\"], props => props.colorScheme);\nconst Base = styled.div.withConfig({\n  displayName: \"BaseStyles__Base\",\n  componentId: \"sc-nfjs56-0\"\n})([\"\", \";\", \";\"], TYPOGRAPHY, COMMON);\n\nfunction BaseStyles(props) {\n  const {\n    children,\n    ...rest\n  } = props;\n  const {\n    colorScheme\n  } = useTheme();\n  return /*#__PURE__*/React.createElement(Base, _extends({}, rest, {\n    \"data-portal-root\": true\n  }), /*#__PURE__*/React.createElement(GlobalStyle, {\n    colorScheme: colorScheme !== null && colorScheme !== void 0 && colorScheme.includes('dark') ? 'dark' : 'light'\n  }), children);\n}\n\nBaseStyles.displayName = \"BaseStyles\";\nBaseStyles.defaultProps = {\n  color: 'fg.default',\n  fontFamily: 'normal',\n  lineHeight: 'default'\n};\nexport default BaseStyles;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport AppHeader from './AppHeader';\nimport CenteredSpinner from './CenteredSpinner';\nimport CommitView from './CommitView';\nimport {ErrorBoundary} from './ErrorBoundary';\nimport GitHubProjectPage from './GitHubProjectPage';\nimport {ShortcutCommandContext} from './KeyboardShortcuts';\nimport LoginDialog from './LoginDialog';\nimport PrimerStyles from './PrimerStyles';\nimport PullRequestLayout from './PullRequestLayout';\nimport PullsView from './PullsView';\nimport SplitDiffViewPrimerStyles from './SplitDiffViewPrimerStyles';\nimport UserHomePage from './UserHomePage';\nimport {gitHubTokenPersistence} from './github/gitHubCredentials';\nimport {primerColorMode} from './themeState';\nimport {BaseStyles, Box, Text, useTheme} from '@primer/react';\nimport React, {useEffect} from 'react';\nimport {useRecoilValue, useRecoilValueLoadable} from 'recoil';\n\ntype Page =\n  | {type: 'home'}\n  | {\n      type: 'project';\n      org: string;\n      repo: string;\n    }\n  | {\n      type: 'pulls';\n      org: string;\n      repo: string;\n    }\n  | {\n      type: 'pr';\n      org: string;\n      repo: string;\n      number: number;\n    }\n  | {\n      type: 'commit';\n      org: string;\n      repo: string;\n      oid: string;\n    };\n\n/**\n * <App> assumes that <RecoilRoot> from recoil and <ThemeProvider> from\n * @primer/react are ancestor components in the hierarchy.\n */\nexport default function App({page}: {page: Page}): React.ReactElement {\n  return (\n    <div>\n      <ShortcutCommandContext>\n        <ThemeListener />\n        <BaseStyles>\n          <PrimerStyles />\n          <SplitDiffViewPrimerStyles />\n          <Box bg=\"canvas.default\" fontFamily=\"normal\" className=\"reviewstack\">\n            <ContentOrLoginDialog page={page} />\n          </Box>\n        </BaseStyles>\n      </ShortcutCommandContext>\n    </div>\n  );\n}\n\nfunction ContentOrLoginDialog({page}: {page: Page}): React.ReactElement {\n  const tokenLoadable = useRecoilValueLoadable(gitHubTokenPersistence);\n  const orgAndRepo = page.type !== 'home' ? {org: page.org, repo: page.repo} : null;\n  switch (tokenLoadable.state) {\n    case 'hasValue': {\n      const {contents: token} = tokenLoadable;\n      return token != null ? (\n        <>\n          <AppHeader orgAndRepo={orgAndRepo} />\n          <ErrorBoundary>\n            <AppContent page={page} />\n          </ErrorBoundary>\n        </>\n      ) : (\n        <LoginDialog />\n      );\n    }\n    case 'loading': {\n      return (\n        <Box>\n          <CenteredSpinner message=\"Please wait...deleting local data...\" />\n        </Box>\n      );\n    }\n    case 'hasError': {\n      return (\n        <Text>\n          Failed to delete data. Please close all other instances of ReviewStack, refresh this page,\n          and press Logout again.\n        </Text>\n      );\n    }\n  }\n}\n\n/**\n * ThemeListener is a component that exists to listen to changes to the user's\n * theme preference (which is defined as a Recoil atom) and updates\n * <ThemeProvider> accordingly, so it must be a descendant of both <RecoilRoot>\n * and <ThemeProvider>. Also, because of its use of hooks, it must be defined\n * as a functional React component.\n *\n * It is included high in the component hierarchy of <App> to reduce the\n * chance of it being considered for re-rendering (which is also why it is\n * wrapped in React.memo()).\n */\n// eslint-disable-next-line prefer-arrow-callback\nconst ThemeListener = React.memo(function ThemeListener(): React.ReactElement {\n  const colorMode = useRecoilValue(primerColorMode);\n  const {setColorMode} = useTheme();\n  useEffect(() => {\n    setColorMode(colorMode);\n  }, [colorMode, setColorMode]);\n  return <></>;\n});\n\nconst AppContent = React.memo(({page}: {page: Page}): React.ReactElement => {\n  switch (page.type) {\n    case 'home':\n      return <UserHomePage />;\n    case 'project':\n      return <GitHubProjectPage {...page} />;\n    case 'pulls':\n      return <PullsView {...page} />;\n    case 'pr':\n      return <PullRequestLayout {...page} />;\n    case 'commit':\n      return <CommitView {...page} />;\n  }\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport LazyLoginDialog from './LazyLoginDialog';\nimport {setCustomLoginDialogComponent} from 'reviewstack/src/LoginDialog';\n\nexport {\n  App,\n  getColorModeFromLocalStorage,\n  setCustomLinkElement,\n  setCustomNavigateHook,\n  ThemeProvider,\n} from 'reviewstack/src/index';\n\nexport function configureLoginDialog() {\n  setCustomLoginDialogComponent(LazyLoginDialog);\n}\n"],"names":["root","factory","exports","module","require","define","amd","globalThis","__WEBPACK_EXTERNAL_MODULE__1024__","__WEBPACK_EXTERNAL_MODULE__314__","__WEBPACK_EXTERNAL_MODULE__742__","sizeMap","small","medium","large","getSvgProps","_ref","ariaLabel","className","_ref$fill","fill","undefined","size","verticalAlign","svgDataByHeight","height","naturalHeight","naturalHeights","map","parseInt","reduce","acc","closestNaturalHeight","Object","keys","naturalWidth","width","role","viewBox","style","display","userSelect","overflow","dangerouslySetInnerHTML","__html","path","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","AlertIcon","props","React","ArrowDownIcon","ArrowLeftIcon","ArrowRightIcon","ArrowUpIcon","BlockedIcon","CheckIcon","CheckCircleIcon","CheckCircleFillIcon","ChevronDownIcon","ChevronRightIcon","ChevronUpIcon","CommentIcon","FileDiffIcon","GearIcon","GitMergeIcon","GitPullRequestIcon","GitPullRequestClosedIcon","HomeIcon","IssueClosedIcon","IssueDraftIcon","IssueOpenedIcon","MarkGithubIcon","QuestionIcon","SkipIcon","StopIcon","TriangleDownIcon","UnfoldIcon","XIcon","XCircleIcon","defaultProps","styled","displayName","componentId","space","color","typography","layout","flexbox","grid","background","border","position","shadow","sx","apply","this","IconButton","forwardRef","forwardedRef","variant","sxProp","icon","Icon","rest","theme","useTheme","sxStyles","merge","getBaseStyles","getSizeStyles","getVariantStyles","StyledButton","ref","Box","as","ButtonBase","children","Component","leadingIcon","LeadingIcon","trailingIcon","TrailingIcon","iconWrapStyles","getButtonStyles","ml","ButtonComponent","Counter","CounterLabel","Button","default","backgroundColor","boxShadow","shadows","btn","insetShadow","borderColor","primary","selectedShadow","danger","hoverShadow","invisible","outline","paddingY","paddingX","fontSize","iconOnly","borderRadius","colors","fontFamily","fontWeight","lineHeight","whiteSpace","cursor","appearance","textDecoration","textAlign","opacity","gridTemplateAreas","mr","gridArea","globalFocusStyle","css","get","outlineOffset","getGlobalFocusStyles","scheme","hoverColor","system","property","scale","muted","underline","Spinner","sizeKey","cx","cy","r","stroke","strokeOpacity","strokeWidth","vectorEffect","d","strokeLinecap","StyledSpinner","withConfig","TYPOGRAPHY","COMMON","TextInputInnerVisualSlot","hasLoadingIndicator","showLoadingIndicator","visualPosition","visibility","top","maxWidth","left","right","invisibleButtonStyleOverrides","paddingTop","paddingRight","paddingBottom","paddingLeft","content","transform","minHeight","ConditionalTooltip","Tooltip","TextInputAction","console","warn","margin","type","TextInput","IconComponent","leadingVisual","LeadingVisual","trailingVisual","TrailingVisual","trailingAction","block","contrast","disabled","loading","loaderPosition","monospace","validationStatus","sizeProp","onFocus","onBlur","widthProp","minWidth","minWidthProp","maxWidthProp","variantProp","inputProps","isInputFocused","setIsInputFocused","useState","inputRef","useProvidedRefOrCreate","wrapperClasses","classnames","showLeadingLoadingIndicator","Boolean","showTrailingLoadingIndicator","handleInputFocus","useCallback","e","handleInputBlur","TextInputWrapper","hasLeadingVisual","hasTrailingVisual","hasTrailingAction","onClick","_inputRef$current","current","focus","UnstyledTextInput","Action","defaultDayScheme","defaultNightScheme","ThemeContext","setColorMode","setDayScheme","setNightScheme","ThemeProvider","_props$theme","_ref2","_props$colorMode","_ref3","_props$dayScheme","_ref4","_props$nightScheme","fallbackTheme","colorMode","fallbackColorMode","dayScheme","fallbackDayScheme","nightScheme","fallbackNightScheme","defaultTheme","resolvedServerColorMode","_document$getElementB","serverData","document","getElementById","textContent","JSON","parse","error","getServerHandoff","resolvedColorModePassthrough","systemColorMode","setSystemColorMode","getSystemColorMode","_window","_window$matchMedia","media","window","matchMedia","handleChange","event","isNight","matches","addEventListener","removeEventListener","addListener","removeListener","useSystemColorMode","resolvedColorMode","resolveColorMode","colorScheme","chooseColorScheme","resolvedTheme","resolvedColorScheme","colorSchemes","defaultColorScheme","deepmerge","applyColorScheme","resolvedColorModeOnClient","setTimeout","_ref5","_props$colorMode2","_ref6","_props$dayScheme2","_ref7","_props$nightScheme2","Provider","value","SCThemeProvider","preventSSRMismatch","id","stringify","_window$matchMedia2","_window2","_window$matchMedia2$c","TooltipBase","direction","text","noDelay","align","wrap","classes","alignments","directions","sizeDeprecatedVariants","variants","px","py","sizeVariants","prop","textInputBasePadding","textInputHorizPadding","renderFocusStyles","TextInputBaseWrapper","themeGet","fallback","getKey","compose","styledSystem","providedRef","createdRef","useProvidedStateOrCreate","externalState","setExternalState","defaultState","internalState","setInternalState","s","a","b","result","_assign","defaults","breakpoints","n","createMediaQuery","getValue","obj","def","p","undef","split","createParser","config","cache","styles","shouldSort","isCacheDisabled","disableStyledSystemCache","raw","Array","isArray","concat","parseResponsiveStyle","parseResponsiveObject","next","sort","localeCompare","numeric","sensitivity","forEach","propNames","filter","k","_createParser","mediaQueries","_props","slice","_assign2","breakpoint","_assign3","createStyleFunction","properties","_ref$transform","defaultScale","args","conf","_len","parsers","_key","parser","defaultBreakpoints","fontSizes","aliases","bg","m","mt","mb","mx","my","pt","pr","pb","pl","multiples","marginX","marginY","scales","marginTop","marginRight","marginBottom","marginLeft","padding","bottom","gridGap","gridColumnGap","gridRowGap","gap","columnGap","rowGap","letterSpacing","borderTop","borderRight","borderBottom","borderLeft","borderWidth","borderStyle","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopWidth","borderTopColor","borderTopStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","borderRightWidth","borderRightColor","borderRightStyle","outlineColor","textShadow","zIndex","maxHeight","flexBasis","positiveOrNegative","absolute","Math","abs","transforms","curr","_extends2","responsive","x","val","scaleName","dirs","hasOwn","classNames","arg","argType","push","inner","toString","join","isMergeableObject","isNonNullObject","stringValue","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","defaultArrayMerge","element","getKeys","getOwnPropertySymbols","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","_","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","arrayMerge","sourceIsArray","all","array","Error","prev","deepmerge_1","applyFocusVisiblePolyfill","scope","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesAllowlist","search","url","tel","email","password","number","date","month","week","time","datetime","isValidFocusTarget","el","nodeName","classList","focusTriggersKeyboardModality","tagName","readOnly","isContentEditable","addFocusVisibleClass","contains","add","setAttribute","removeFocusVisibleClass","hasAttribute","remove","removeAttribute","onKeyDown","metaKey","altKey","ctrlKey","activeElement","onPointerDown","clearTimeout","onVisibilityChange","visibilityState","addInitialPointerMoveListeners","onInitialPointerMove","removeInitialPointerMoveListeners","toLowerCase","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","DOCUMENT_NODE","documentElement","CustomEvent","createEvent","initCustomEvent","dispatchEvent","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","name","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","getOwnPropertyNames","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","propIsEnumerable","toObject","TypeError","test1","String","test2","fromCharCode","test3","letter","err","shouldUseNative","from","symbols","to","c","f","g","h","l","q","t","v","w","y","z","u","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","__self","__source","_owner","jsx","jsxs","objA","objB","compareContext","ret","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","W","M","C","K","I","B","J","F","G","charCodeAt","replace","N","trim","charAt","substring","ca","O","H","X","D","da","ea","fa","L","P","Y","E","ha","Q","ia","Z","indexOf","ja","ka","test","aa","ba","la","ma","R","na","oa","S","U","prefix","use","T","set","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","order","orphans","tabSize","widows","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","reactPropsRegex","fn","create","memoize","strings","interpolations","len","EMPTY_ARRAY","freeze","EMPTY_OBJECT","isFunction","getComponentName","isStyledComponent","styledComponentId","SC_ATTR","process","REACT_APP_SC_ATTR","IS_BROWSER","DISABLE_SPEEDY","SC_DISABLE_SPEEDY","REACT_APP_SC_DISABLE_SPEEDY","STATIC_EXECUTION_CONTEXT","throwStyledComponentsError","code","DefaultGroupedTag","tag","groupSizes","Uint32Array","indexOfGroup","group","index","insertRules","rules","oldBuffer","oldSize","newSize","throwStyledError","ruleIndex","insertRule","clearGroup","startIndex","endIndex","deleteRule","getGroup","getRule","groupIDRegister","Map","reverseRegister","nextFreeGroup","getGroupForId","has","getIdForGroup","setGroupForId","SELECTOR","MARKER_RE","RegExp","rehydrateNamesFromContent","sheet","names","registerName","rehydrateSheetFromTag","parts","part","marker","match","getTag","getNonce","__webpack_nonce__","makeStyleTag","head","parent","createElement","prevStyle","childNodes","child","findLastStyleTag","nextSibling","__VERSION__","nonce","insertBefore","CSSOMTag","appendChild","createTextNode","styleSheets","ownerNode","getSheet","rule","_error","cssRules","cssText","TextTag","nodes","node","refNode","removeChild","VirtualTag","_target","splice","SHOULD_REHYDRATE","defaultOptions","isServer","useCSSOMInjection","StyleSheet","globalStyles","gs","server","querySelectorAll","getAttribute","parentNode","rehydrateSheet","registerId","reconstructWithOptions","withNames","allocateGSInstance","hasNameForId","groupNames","Set","clearNames","clear","clearRules","clearTag","selector","outputSheet","AD_REPLACER_R","getAlphabeticChar","generateAlphabeticName","phash","hash","isStaticRules","SEED","ComponentStyle","baseStyle","staticRulesId","isStatic","NODE_ENV","baseHash","generateAndInjectStyles","executionContext","styleSheet","stylis","cssStatic","flatten","generateName","cssStaticFormatted","dynamicHash","partRule","partChunk","partString","cssFormatted","COMMENT_REGEX","COMPLEX_SELECTOR_PREFIX","createStylisInstance","_componentId","_selector","_selectorRegexp","_consecutiveSelfRefRegExp","plugins","Stylis","parsingRules","parseRulesPlugin","toSheet","context","selectors","parents","line","column","ns","depth","at","delimiter","insertRulePlugin","selfReferenceReplacer","offset","string","stringifyRules","flatCSS","cssStr","lastIndexOf","parsedRules","plugin","StyleSheetContext","StylisContext","Consumer","masterSheet","masterStylis","useStyleSheet","useContext","useStylis","StyleSheetManager","stylisPlugins","setPlugins","contextStyleSheet","useMemo","disableCSSOMInjection","disableVendorPrefixes","useEffect","shallowequal","Keyframes","inject","stylisInstance","resolvedName","_this","getName","uppercaseCheck","uppercasePattern","msPattern","prefixAndLowerCase","char","hyphenateStyleName","isFalsish","chunk","ruleSet","isReactComponent","isPlainObject","objToCssArray","prevKey","isCss","hyphenate","unitless","addTag","interleave","originalConsoleError","providedTheme","escapeRegex","dashesAtEnds","escape","str","isTag","isObject","isValidKey","mixin","mixinDeep","outerTheme","themeContext","mergeTheme","identifiers","createStyledComponent","isTargetStyledComp","isCompositeComponent","attrs","parentComponentId","generateComponentId","generateId","generateDisplayName","finalAttrs","shouldForwardProp","filterFn","elementToBeCreated","WrappedStyledComponent","componentStyle","forwardedComponent","componentAttrs","foldedComponentIds","resolvedAttrs","attrDef","resolvedAttrDef","useResolvedAttrs","determineTheme","generatedClassName","warnTooManyClasses","useInjectedStyle","refToForward","$as","isTargetTag","computedProps","propsForElement","validAttr","withComponent","previousComponentId","optionsToCopy","newComponentId","_foldedDefaultProps","hoist","constructWithOptions","componentConstructor","templateFunction","StyledComponent","domElement","GlobalStyle","createStyles","instance","removeStyles","renderStyles","createGlobalStyle","globalStyle","GlobalStyleComponent","useRef","useLayoutEffect","ServerStyleSheet","_emitSheetCSS","SC_ATTR_VERSION","getStyleTags","sealed","getStyleElement","seal","collectStyles","interleaveWithNodeStream","input","isNaN","isNumber","overflowX","overflowY","fontStyle","alignItems","alignContent","justifyItems","justifyContent","flexWrap","flexDirection","justifySelf","alignSelf","gridAutoFlow","gridAutoColumns","gridAutoRows","gridTemplateColumns","gridTemplateRows","borderX","borderY","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","bgImage","bgSize","bgPosition","bgRepeat","getMargin","isNegative","configs","_config","_ref$prop","_ref$variants","buttonStyle","textStyle","colorStyle","cssProperty","alias","transformValue","Username","username","useRecoilValueLoadable","valueMaybe","tokenPersistenceLoadable","setToken","useRecoilStateLoadable","onLogout","state","contents","token","Text","Header","HeaderItem","full","HeaderLink","Link","Item","VisuallyHidden","isVisible","TRANSITION_DURATION","EASE_OUT_QUAD_CURVE","CircleIcon","xmlns","fillRule","LineIcon","SwitchButton","checked","ToggleKnob","_props$theme$shadows","_props$theme2","_props$theme2$shadows","hiddenTextStyles","Switch","ariaLabelledby","ariaDescribedby","defaultChecked","onChange","statusLabelPosition","isControlled","isOn","setIsOn","acceptsInteraction","handleToggleClick","transitionProperty","transitionDuration","AppHeader","orgAndRepo","href","PullsLink","ThemeSelector","org","repo","URLFor","useRecoilState","ToggleSwitch","CustomLinkElement","setCustomLinkElement","isExternalLink","startsWith","commit","oid","project","pullRequest","pulls","defaultAvatar","APP_HEADER_HEIGHT","CURSOR_POINTER","lineToPosition","selectorFamily","params","worker","diffServiceClient","message","nextID","method","sendMessage","colorMap","diffAndTokenize","lineRange","then","unsplitLines","notFound","isBinary","DiffServiceClient","constructor","workerName","pendingRequests","SharedWorker","URL","port","onmessage","onmessageerror","data","ok","handler","delete","once","onresponse","promise","Promise","resolve","reject","postMessage","WorkerPool","workers","pendingMessages","requestID","broadcast","BroadcastChannel","onBroadcastMessageReceived","available","parseWorkerIndex","client","trySendingPendingMessage","findAvailableClient","_resolve","_reject","workerIndex","findIndex","numWorkers","pendingMessage","shift","atom","dangerouslyAllowMutability","ActorType","AuditLogOrderField","CheckAnnotationLevel","CheckConclusionState","CheckRunState","CheckRunType","CheckStatusState","CollaboratorAffiliation","CommentAuthorAssociation","CommentCannotUpdateReason","CommitContributionOrderField","ComparisonStatus","ContributionLevel","DefaultRepositoryPermissionField","DependencyGraphEcosystem","DeploymentOrderField","DeploymentProtectionRuleType","DeploymentReviewState","DeploymentState","DeploymentStatusState","DiffSide","DiscussionCloseReason","DiscussionOrderField","DiscussionPollOptionOrderField","DiscussionState","DiscussionStateReason","DismissReason","EnterpriseAdministratorInvitationOrderField","EnterpriseAdministratorRole","EnterpriseAllowPrivateRepositoryForkingPolicyValue","EnterpriseDefaultRepositoryPermissionSettingValue","EnterpriseEnabledDisabledSettingValue","EnterpriseEnabledSettingValue","EnterpriseMemberOrderField","EnterpriseMembersCanCreateRepositoriesSettingValue","EnterpriseMembersCanMakePurchasesSettingValue","EnterpriseServerInstallationOrderField","EnterpriseServerUserAccountEmailOrderField","EnterpriseServerUserAccountOrderField","EnterpriseServerUserAccountsUploadOrderField","EnterpriseServerUserAccountsUploadSyncState","EnterpriseUserAccountMembershipRole","EnterpriseUserDeployment","FileViewedState","FundingPlatform","GistOrderField","GistPrivacy","GitSignatureState","IdentityProviderConfigurationState","IpAllowListEnabledSettingValue","IpAllowListEntryOrderField","IpAllowListForInstalledAppsEnabledSettingValue","IssueClosedStateReason","IssueCommentOrderField","IssueOrderField","IssueState","IssueStateReason","IssueTimelineItemsItemType","LabelOrderField","LanguageOrderField","LockReason","MannequinOrderField","MergeCommitMessage","MergeCommitTitle","MergeQueueEntryState","MergeQueueMergingStrategy","MergeStateStatus","MergeableState","MigrationSourceType","MigrationState","MilestoneOrderField","MilestoneState","NotificationRestrictionSettingValue","OidcProviderType","OauthApplicationCreateAuditEntryState","OperationType","OrderDirection","OrgAddMemberAuditEntryPermission","OrgCreateAuditEntryBillingPlan","OrgEnterpriseOwnerOrderField","OrgRemoveBillingManagerAuditEntryReason","OrgRemoveMemberAuditEntryMembershipType","OrgRemoveMemberAuditEntryReason","OrgRemoveOutsideCollaboratorAuditEntryMembershipType","OrgRemoveOutsideCollaboratorAuditEntryReason","OrgUpdateDefaultRepositoryPermissionAuditEntryPermission","OrgUpdateMemberAuditEntryPermission","OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility","OrganizationInvitationRole","OrganizationInvitationSource","OrganizationInvitationType","OrganizationMemberRole","OrganizationMembersCanCreateRepositoriesSettingValue","OrganizationMigrationState","OrganizationOrderField","PackageFileOrderField","PackageOrderField","PackageType","PackageVersionOrderField","PatchStatus","PinnableItemType","PinnedDiscussionGradient","PinnedDiscussionPattern","ProjectCardArchivedState","ProjectCardState","ProjectColumnPurpose","ProjectOrderField","ProjectState","ProjectTemplate","ProjectV2CustomFieldType","ProjectV2FieldOrderField","ProjectV2FieldType","ProjectV2ItemFieldValueOrderField","ProjectV2ItemOrderField","ProjectV2ItemType","ProjectV2OrderField","ProjectV2Roles","ProjectV2SingleSelectFieldOptionColor","ProjectV2State","ProjectV2ViewLayout","ProjectV2ViewOrderField","ProjectV2WorkflowsOrderField","PullRequestMergeMethod","PullRequestOrderField","PullRequestReviewCommentState","PullRequestReviewDecision","PullRequestReviewEvent","PullRequestReviewState","PullRequestReviewThreadSubjectType","PullRequestState","PullRequestTimelineItemsItemType","PullRequestUpdateState","ReactionContent","ReactionOrderField","RefOrderField","ReleaseOrderField","RepoAccessAuditEntryVisibility","RepoAddMemberAuditEntryVisibility","RepoArchivedAuditEntryVisibility","RepoChangeMergeSettingAuditEntryMergeType","RepoCreateAuditEntryVisibility","RepoDestroyAuditEntryVisibility","RepoRemoveMemberAuditEntryVisibility","ReportedContentClassifiers","RepositoryAffiliation","RepositoryContributionType","RepositoryInteractionLimit","RepositoryInteractionLimitExpiry","RepositoryInteractionLimitOrigin","RepositoryInvitationOrderField","RepositoryLockReason","RepositoryMigrationOrderDirection","RepositoryMigrationOrderField","RepositoryOrderField","RepositoryPermission","RepositoryPrivacy","RepositoryRuleType","RepositoryRulesetTarget","RepositoryVisibility","RepositoryVulnerabilityAlertDependencyScope","RepositoryVulnerabilityAlertState","RequestableCheckStatusState","RoleInOrganization","RuleBypassMode","RuleEnforcement","SamlDigestAlgorithm","SamlSignatureAlgorithm","SavedReplyOrderField","SearchType","SecurityAdvisoryClassification","SecurityAdvisoryEcosystem","SecurityAdvisoryIdentifierType","SecurityAdvisoryOrderField","SecurityAdvisorySeverity","SecurityVulnerabilityOrderField","SocialAccountProvider","SponsorOrderField","SponsorableOrderField","SponsorsActivityAction","SponsorsActivityOrderField","SponsorsActivityPeriod","SponsorsCountryOrRegionCode","SponsorsGoalKind","SponsorsListingFeaturedItemFeatureableType","SponsorsTierOrderField","SponsorshipNewsletterOrderField","SponsorshipOrderField","SponsorshipPrivacy","SquashMergeCommitMessage","SquashMergeCommitTitle","StarOrderField","StatusState","SubscriptionState","TeamDiscussionCommentOrderField","TeamDiscussionOrderField","TeamMemberOrderField","TeamMemberRole","TeamMembershipType","TeamNotificationSetting","TeamOrderField","TeamPrivacy","TeamRepositoryOrderField","TeamReviewAssignmentAlgorithm","TeamRole","TopicSuggestionDeclineReason","TrackedIssueStates","UserBlockDuration","UserStatusOrderField","VerifiableDomainOrderField","WorkflowRunOrderField","WorkflowState","ActorFragment","PullRequestReviewCommentFragment","LabelFragment","TreeFragment","UserFragment","AddCommentMutation","AddLabelsToLabelableMutation","AddPullRequestReviewCommentMutation","AddPullRequestReviewMutation","RemoveLabelsFromLabelableMutation","RequestReviewsMutation","SubmitPullRequestReviewMutation","CommitQuery","PullRequestQuery","PullsQuery","RepoAssignableUsersQuery","RepoLabelsQuery","StackPullRequestQuery","TreeQuery","UserHomePageQuery","UsernameQuery","ALL_DB_NAMES_EVER","DB_VERSION","DB_NAME","GITHUB_TOKEN_PROPERTY","GITHUB_HOSTNAME_PROPERTY","gitHubPersonalAccessToken","RecoilLoadable","localStorage","getItem","effects","setSelf","storageArea","newValue","onSet","loadable","toPromise","setItem","gitHubTokenPersistence","tokenArg","DefaultValue","hostname","gitHubHostname","async","indexedDB","databaseNames","databases","db","request","deleteDatabase","onerror","onsuccess","dropAllDatabases","DELETE_ALL_DATABASES_TIMEOUT_MS","clearAllLocalData","gitHubUsername","deriveLocalStoragePropForUsername","graphQLEndpoint","gitHubGraphQLEndpoint","viewer","login","isConsumerGitHub","createGraphQLEndpointForHostname","INTERNAL_LOGOUT_EVENT_NAME","logoutBroadcastChannel","localSubscribers","EventTarget","subscribeToLogout","callback","includeLogoutEventsFromThisWindow","unsubscribeCalls","channelListener","logout","localSubscribersListener","_event","broadcastLogoutMessage","Event","queryGraphQL","query","variables","requestHeaders","response","fetch","headers","body","status","statusText","json","errors","LOCAL_STORAGE_KEY","getColorModeFromLocalStorage","primerColorMode","scheduleCSSUpdate","noWait","getLoadable","createRequestHeaders","Authorization","Accept","rejectAfterTimeout","timeoutInMillis","race","CSS_CLASS_PREFIX","updateTextMateGrammarCSS","cssColors","generateTokensCSSForColorMap","styleElementForTextMateCSS","getOrCreateStyleElementForColorsCSS","innerHTML","notEmpty","unwrap","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","o","enumerable","chunkId","promises","miniCssF","inProgress","dataWebpackPrefix","done","script","needAttach","scripts","getElementsByTagName","charset","timeout","nc","src","onScriptComplete","onload","doneFns","toStringTag","loadStylesheet","fullhref","existingLinkTags","dataHref","rel","existingStyleTags","findStylesheet","linkTag","errorType","realHref","createStylesheet","installedCssChunks","miniCss","baseURI","self","location","installedChunks","j","installedChunkData","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","DefaultLoginDialog","NetlifyLoginDialog","LazyLoginDialog","setTokenAndHostname","LoginComponent","_jsx","CustomLoginDialogComponent","LoginDialog","useSetRecoilState","setHostname","messageEl","bodyHTMLClassName","TrustedRenderedMarkdown","trustedHTML","inline","clazz","globalCacheStats","cacheBlobReads","cacheTreeReads","cacheCommitReads","duplicateKeyBlob","duplicateKeyTree","duplicateKeyCommit","gitHubGetBlob","gitHubGetTree","gitHubGetCommit","gitHubGetCommitComparison","gitHubGetPullRequest","gitHubGetPullRequests","getReviewStackCacheStats","printReviewStackCacheStats","log","DB_COMMIT_STORE_NAME","DB_TREE_STORE_NAME","DB_BLOB_STORE_NAME","PR_FRAGMENT_STORE_NAME","OpenTransaction","storeName","tx","transaction","store","objectStore","txResult","oncomplete","identifier","implementsGitObject","owner","info","CachingGitHubClient","cachedCommit","getCachedCommit","getCommit","tree","normalizedCommit","messageHeadline","messageHeadlineHTML","messageBody","messageBodyHTML","committedDate","tree_oid","normalizeCommit","getCommitComparison","base","cachedTree","getCachedTree","getTree","cachedBlob","getCachedBlob","blob","getBlob","getPullRequest","getPullRequests","getRepoAssignableUsers","getRepoLabels","prs","cachedFragments","getCachedPRFragments","prsToFetch","prsToFetchIndex","fragment","fetchedFragments","getStackPullRequests","getOwnerAndName","originalIndex","normalizedFragment","title","updatedAt","reviewDecision","headRefOid","comments","numComments","totalCount","normalizePullRequestFragment","addComment","addLabels","addPullRequestReview","addPullRequestReviewComment","removeLabels","requestReviews","submitPullRequestReview","__typename","OPEN_DATABASE_TIMEOUT_MS","openDatabase","openDatabaseRequest","open","onblocked","onupgradeneeded","commitStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","treeStore","blobStore","pullRequestFragmentStore","database","IDBDatabase","_openDatabase","close","GraphQLGitHubClient","organization","repositoryName","numParents","repositoryOwner","repository","resolvedOid","rawParents","objectToTree","encodeURIComponent","encoding","sha","node_id","decodedContent","atob","maxLen","min","isBinaryContent","byteSize","isTruncated","decodeURIComponent","mergeBaseCommit","merge_base_commit","commits","numTimelineItems","labels","pageInfo","pullRequests","assignableUsers","entries","joinPath","basePath","diffCommitWithParent","parentOid","parentCommit","diffCommits","baseCommit","headCommit","diff","diffTree","commitIDs","before","after","baseTree","headTree","baseEntries","headEntries","baseIndex","headIndex","maxBaseIndex","maxHeadIndex","hasBaseEntry","hasHeadEntry","baseEntry","headEntry","compareTreeEntry","entry","pathToSubtree","recordChangesInTree","isBaseBlob","isHeadBlob","pathToEntry","subdirBaseTree","subdirHeadTree","treeEntry","pathToTreeEntry","first","second","name1","name2","oid1","mode","mode1","type1","oid2","mode2","type2","formatISODate","iso","withTime","Date","weekday","day","hour","minute","toLocaleString","shortOid","versionLabel","groupBy","values","valuesForKey","countCommentsForThreads","threads","thread","getPathForChange","change","pullRequestReviewDecisionLabel","label","diffVersions","beforeDiff","afterDiff","isStrictlyIncreasing","beforeIndex","afterIndex","maxBeforeIndex","maxAfterIndex","hasBeforeEntry","hasAfterEntry","beforeChange","afterChange","pathCompare","depthFirstPathCompare","createInverse","computeChangeFromAdd","computeChangeFromRemove","computeChangeFromModify","v1","v2","aFirst","aRest","splitOffFirstPathComponent","bFirst","bRest","stringCompare","every","_STACK_SECTION_START","stackedPullRequest","gitHubPullRequest","saplingStack","lines","firstLine","format","commitMessage","lastHRIndex","introductionLines","stack","inIntroduction","numLines","currentStackEntry","numCommitsMatch","numCommits","introduction","parseSaplingStackBody","ghstack","pullRequestNumbersFromBody","stackedPullRequestNumbers","stacked","stackedPullRequestFragments","waitForAll","gitHubClient","gitHubOrgAndRepo","gitHubCommitID","gitHubPullRequestID","gitHubCurrentCommit","never","gitHubPullRequestForParams","atomFamily","gitHubClientForParams","ALLOW_MUTABILITY_FOR_GITHUB_CLIENT","createClient","databaseConnection","gitHubPullRequestViewerDidAuthor","viewerDidAuthor","gitHubPullRequestBaseRef","baseRefOid","gitHubPullRequestPendingReviewID","timelineItems","find","item","gitHubPullRequestCommits","gitHubPullRequestForcePushes","createdAt","beforeCommit","afterCommit","beforeCommittedDate","beforeTree","beforeParents","afterCommittedDate","afterTree","afterParents","gitHubPullRequestVersionBaseAndCommits","baseParent","commitComparison","gitHubCommitComparison","committer","author","version","gitHubPullRequestCommitBaseParent","commitID","gitHubPullRequestVersions","forcePushes","versions","latestCommit","stackedPR","fragments","reverse","parentFragment","cumulativeCommits","previous","pr_versions","start","commitFragmentsForPRVersion","commitsForPRVersion","gitHubCommit","versionCommits","headCommittedDate","baseParentCommittedDate","versionHead","gitHubPullRequestVersionIndexesByCommit","versionIndexByCommit","gitHubPullRequestVersionIndexForCommit","gitHubPullRequestReviewThreads","reviewThreads","reviewThread","originalLine","diffSide","normalizedComments","comment","originalCommit","bodyHTML","firstCommentID","gitHubPullRequestReviewThreadsByFirstCommentID","fromEntries","gitHubPullRequestReviewCommentsByID","commentsByID","gitHubPullRequestCommentForID","gitHubPullRequestJumpToCommentID","gitHubPullRequestNewCommentInputCell","gitHubPullRequestNewCommentInputShownForPath","cachePolicy_UNSTABLE","eviction","gitHubPullRequestNewCommentInputShown","lineNumber","side","cell","gitHubPullRequestNewCommentInputCallbacks","getCallback","onShowNewCommentInput","snapshot","HTMLTableCellElement","_lineNumber","_side","dataset","canAddCommentLoadable","gitHubPullRequestCanAddComment","onResetNewCommentInput","reset","gitHubDiffNewCommentInputCallbacks","selectedVersionIndex","gitHubPullRequestPositionForLine","gitHubPullRequestSelectedVersionIndex","gitHubPullRequestThreadsByCommit","gitHubPullRequestThreadsForCommit","gitHubPullRequestThreadsForCommitFile","threadPath","gitHubPullRequestThreadsForCommitFileBySide","threadsForFile","gitHubPullRequestThreadsForDiffFile","beforeCommitID","afterCommitID","gitHubPullRequestComparableVersions","afterThreads","beforeThreads","gitHubThreadsForDiffFile","gitHubPullRequestIsViewingLatest","comparableVersions","latestVersionIndex","latestVersion","isLatestVersion","isLatestCommit","gitHubPullRequestSelectedVersionCommits","gitHubPullRequestVersionDiff","afterBaseCommitID","beforeBaseCommitID","gitHubDiffForCommits","baseCommitID","gitHubPullRequestDiffCommitWithBaseByPath","diffByPath","gitHubDiffCommitIDs","gitHubDiffForCurrentCommit","gitHubBlob","nullAtom","constSelector","fileContentsDelta","mod","gitHubPullRequests","gitHubPullRequestLineToPositionForCommitFile","diffForPath","getTreeEntriesForChange","oldOID","newOID","gitHubPullRequestLineToPositionForFile","afterLineToPosition","beforeLineToPosition","lineToPositionForSide","gitHubUserHomePageData","reviewRequestedQuery","gitHubRepoAssignableUsersQuery","gitHubRepoAssignableUsers","user","gitHubRepoLabelsQuery","gitHubRepoLabels","gitHubPullRequestLabels","gitHubPullRequestReviewers","reviewers","reviewerIDs","gitHubPullRequestCheckRuns","checkSuites","flatMap","checkSuite","checkRuns","workflowRun","workflowName","workflow","CommitHeader","useRecoilValue","CommitLink","FileHeader","onChangeOpen","pathParts","filePathParts","pathSoFar","navigator","clipboard","writeText","Avatar","square","getBorderRadius","alt","ActorAvatar","noFallback","avatar","AvatarWithFallback","hasError","setError","onError","secondCharCode","fallbackAvatarColors","toUpperCase","ActorHeading","actor","avatarUrl","Label","secondary","accent","success","attention","severe","sponsors","PendingLabel","DEFAULT_TEXTAREA_ROWS","DEFAULT_TEXTAREA_COLS","DEFAULT_TEXTAREA_RESIZE","StyledTextarea","resize","Textarea","required","rows","cols","PullRequestCommentInput","resetInputAfterAddingComment","autoFocus","onCancel","allowEmptyMessage","actionSelector","setComment","setDisabled","currentTarget","onAddComment","cancelButton","isAddCommentDisabled","placeholder","useRefreshPullRequest","useRecoilCallback","refresh","PullRequestInlineCommentInput","commentID","refreshPullRequest","clientLoadable","pullRequestId","commitOID","inReplyTo","InlineCommentThread","lastComment","reply","Reply","Comment","jumpToCommentID","setJumpToCommentID","scrollIntoView","pendingLabel","wordBreak","showReply","setShowReply","PullRequestNewCommentInput","useResetRecoilState","LINE_NUMBER_STYLE","SplitDiffRow","beforeLineNumber","afterLineNumber","rowType","beforeClass","afterClass","canComment","SplitDiffRowSide","nope","param","canAddComment","isNewCommentInputShown","commentThreads","SplitDiffRowCommentThreads","threadsByLine","lineNumberBorderStyle","extraRightLineNumberCellProps","extraClassName","threadsComments","grammars","language","injections","embeddedLanguages","fileName","fileFormat","languages","C2Hs","extensions","Hsc2Hs","bat","cabal","clojure","coffeescript","cpp","csharp","mimetypes","dart","dockercompose","filenamePatterns","dockerfile","filenames","fsharp","gdscript","go","groovy","hack","handlebars","haskell","hlsl","html","ignore","ini","jade","java","javascript","javascriptreact","jsonc","julia","juliamarkdown","kotlin","kotlinscript","less","lua","makefile","markdown","perl","perl6","powershell","python","razor","ruby","rust","scss","shellscript","sql","swift","thrift","toml","typescript","typescriptreact","vb","xml","xsl","yaml","Diff","buildValues","components","newString","oldString","useLongestToken","componentPos","componentLen","newPos","oldPos","removed","count","added","tmp","oldValue","lastComponent","equals","pop","clonePath","castInput","removeEmpty","tokenize","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","addPath","removePath","_oldPos","canAdd","canRemove","pushComponent","exec","last","commonCount","comparator","ignoreCase","chars","characterDiff","extendedWordChars","reWhitespace","wordDiff","ignoreWhitespace","tokens","lineDiff","retLines","linesAndNewlines","newlineIsToken","sentenceDiff","cssDiff","_typeof","iterator","objectPrototypeToString","jsonDiff","canonicalize","replacementStack","replacer","canonicalizedObj","toJSON","sortedKeys","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","arrayDiff","createTokenizedIntralineDiff","beforeLine","beforeTokens","afterLine","afterTokens","applyTokenizationToLine","changes","oldStr","newStr","beforeChunks","afterChunks","beforeLength","afterLength","end","addOrExtend","beforeEnd","afterEnd","mergeChunksAndTokens","chunks","lastEntry","ChunkSpan","isChunkStart","isChunkEnd","fullClassName","spans","chunkIndex","tokenIndex","lastEndIndex","lastChunkType","maxChunkIndex","maxTokenIndex","chunkType","createSpan","patchClass","tokenization","FilepathClassifier","supportedLanguages","configuration","filename","extension","findScopeNameForPath","splitPath","findTextMateLanguage","findScopeNameForLanguage","scopeName","grammar","findScopeNameForAlias","endsWith","getDisplayNameForLanguageId","languageIdOrAlias","findDisplayNameForScopeName","firstChar","_classifier","isPullRequest","setOpen","patch","allThreads","newCommentInputCallbacks","SplitDiffViewTable","beforeOID","expandedSeparators","setExpandedSeparators","onExpand","amendedSet","hunks","lastHunkIndex","hunk","oldStart","newStart","range","ExpandingSeparator","beforeLineStart","afterLineStart","max","HunkSeparator","groups","common","fullLine","hasDeltas","organizeLinesIntoGroups","tokenizationBefore","tokenizationAfter","addUnmodifiedRows","maxIndex","removedLine","addedLine","beforeAndAfter","createIntralineDiff","applyTokenization","addRowsForHunk","nextHunk","oldLines","newLines","lastHunk","initialBeforeLineNumber","initialAfterLineNumber","lineContent","beforeElements","afterElements","SeparatorRow","colSpan","DiffView","ChangeDisplay","AddedFile","RemovedFile","ModifiedFile","modify","blobLoadable","BinaryFile","fileMod","fileModLoadable","delta","CommitView","setOrgAndRepo","setCommitID","CenteredSpinner","CommitDisplay","CommitMessage","CommitParents","svg","warning","Flash","Octicon","StyledOcticon","ErrorNotice","ErrorBoundary","super","static","GitHubProjectPage","orgRepo","Modifier","KeyCode","CommandDispatcher","commands","knownKeysWithCommands","cmdDef","keydownListener","keyCode","isTargetTextInputElement","modValue","shiftKey","SHIFT","CTRL","ALT","CMD","command","cmdAttrs","mods","collapseModifiersToNumber","NONE","ShortcutCommandContext","useCommand","commandDispatcher","Context","createContext","dispatcher","makeCommandDispatcher","ToggleSidebar","Period","NextInStack","PreviousInStack","Approve","RequestChanges","defineStyleOnBody","fg","fonts","mono","canvas","subtle","neutral","PullRequestChangeCount","additions","deletions","useDebounced","wait","debounced","debounce","ActionListContainerContext","ListContext","ListBox","List","selectionVariant","showDividers","paddingInlineStart","listRole","listLabelledBy","containerSelectionVariant","$704cf1d3b684cc5c$var$defaultContext","round","random","$704cf1d3b684cc5c$var$SSRContext","$89yE2$react","$704cf1d3b684cc5c$var$canUseDOM","$704cf1d3b684cc5c$export$619500959fc48b26","defaultId","ctx","$89yE2$useContext","$89yE2$useMemo","GroupContext","Group","auxiliaryText","labelId","useSSRSafeId","listStyle","listVariant","slotNames","SlotsContext","registerSlot","unregisterSlot","defaultContext","Slots","slotsDefinition","slotsRef","rerenderWithSlots","rerender","useForceUpdate","isMounted","setIsMounted","slots","Slot","LeadingVisualContainer","TEXT_ROW_HEIGHT","iconColor","annotationColor","Selection","selected","listSelectionVariant","groupSelectionVariant","rect","shapeRendering","rx","createSlots","LiBox","active","onSelect","_PrivateItemWrapper","container","afterSelect","selectionAttribute","itemRole","transition","emphasis","actionListItem","inlineDivider","clickHandler","defaultPrevented","keyPressHandler","includes","inlineDescriptionId","blockDescriptionId","ItemWrapper","onKeyPress","tabIndex","InlineDescription","BlockDescription","ConditionalBox","if","condition","LinkItem","Divider","Truncate","expandable","Description","ActionList","existingLabelIDs","repoLabels","setQuery","queryInput","setQueryInput","setQueryAtom","resetQueryAtom","LabelColorCircle","stopPropagation","handleClick","registry","handlerId","useOnOutsideClick","containerRef","ignoreClickRefs","onClickOutside","_containerRef$current","MouseEvent","button","capture","register","deregister","iterateFocusableElements","_a","_b","strict","acceptFn","onlyTabbable","isTabbable","isFocusable","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","HTMLElement","FILTER_ACCEPT","FILTER_SKIP","nextNode","lastChild","firstChild","previousNode","getFocusableChild","elem","disabledAttrInert","hiddenInert","hidden","hiddenInputInert","HTMLInputElement","sentinelInert","sizeInert","offsetWidth","offsetHeight","visibilityInert","getComputedStyle","clientRectsInert","getClientRects","HTMLAnchorElement","handleEscape","useOverlay","overlayRef","_overlayRef","returnFocusRef","initialFocusRef","onEscape","preventFocusOnOpen","returnRef","firstItem","useOpenAndCloseFocus","callbackDependencies","escapeCallback","useOnEscapePress","preventDefault","PRIMER_PORTAL_ROOT_ID","DEFAULT_PORTAL_CONTAINER_NAME","portalRootRegistry","ensureDefaultPortal","existingDefaultPortalContainer","defaultPortalContainer","suitablePortalRoot","querySelector","registerPortalRoot","onMount","containerName","_containerName","hostElement","elementRef","parentElement","createPortal","heightMap","xsmall","xlarge","auto","initial","widthMap","xxlarge","StyledOverlay","Overlay","anchorSide","portalContainerName","refObject","useImperativeHandle","useRefObjectAsForwardedRef","slideAnimationDistance","slideAnimationEasing","_overlayRef$current","clientHeight","_overlayRef$current2","getSlideAnimationStartingVector","animate","duration","easing","signalSupported","noop","signal","polyfill","originalAddEventListener","originalCallback","optionsOrCapture","AbortSignal","monkeyPatch","eventListenerSignalPolyfill","suspendedTrapStack","activeTrap","isMac","focusTrap","initialFocus","abortSignal","controller","AbortController","sentinelStart","onfocus","lastFocusableChild","sentinelEnd","lastFocusedChild","ensureTrapZoneHasFocus","focusedElement","firstFocusableChild","prepend","append","wrappingController","abort","followSignal","suspendedTrap","sentinels","getElementsByClassName","suspendedTrapIndex","trapToReactivate","originalSignal","tryReactivate","isMacOS","platform","idSeed","uniqueId","FocusKeys","KEY_TO_BIT","ArrowLeft","ArrowHorizontal","ArrowDown","ArrowVertical","ArrowUp","ArrowRight","HL","JK","AD","WS","Tab","Home","HomeAndEnd","End","PageUp","PageUpDown","PageDown","KEY_TO_DIRECTION","getDirection","keyboardEvent","isActiveDescendantAttribute","activeDescendantActivatedDirectly","activeDescendantActivatedIndirectly","hasActiveDescendantAttribute","focusZone","settings","_c","_d","focusableElements","savedTabIndex","WeakMap","bindKeys","getNextFocusable","ArrowAll","focusOutBehavior","focusInStrategy","activeDescendantControl","activeDescendantCallback","onActiveDescendantChanged","currentFocusedElement","getFirstFocusableElement","isActiveDescendantInputFocused","updateFocusedElement","directlyActivated","setActiveDescendant","clearActiveDescendant","previouslyActiveElement","beginFocusManagement","elements","filteredElements","focusableElementFilter","insertIndex","compareDocumentPosition","DOCUMENT_POSITION_PRECEDING","endFocusManagement","focusableElementIndex","savedIndex","MutationObserver","mutations","mutation","removedNode","removedNodes","addedNode","addedNodes","observe","subtree","childList","elementIndexFocusedByClick","focusableElement","relatedTarget","targetElementIndex","lastKeyboardFocusDirection","targetElement","elementToFocus","keyboardEventRecipient","keyBit","keyLength","isTextInput","HTMLTextAreaElement","HTMLSelectElement","textInput","cursorAtStart","selectionStart","selectionEnd","cursorAtEnd","shouldIgnoreFocusHandling","nextElementToFocus","lastFocusedIndex","focusedIndex","getCurrentFocusedIndex","nextFocusedIndex","alternateOrders","alternateAlignments","center","getAnchoredPosition","floatingElement","anchorElement","getPositionedParent","clippingRect","getClippingRect","parentElementStyle","parentElementRect","getBoundingClientRect","relativeRect","pureCalculateAnchoredPosition","getDefaultSettings","clippingNode","elemRect","elemStyle","innerHeight","Infinity","positionDefaults","_e","anchorOffset","alignmentOffset","allowOutOfBounds","viewportRect","relativePosition","floatingRect","anchorRect","relativeViewportRect","pos","calculatePosition","anchorAlign","alternateOrder","positionAttempt","prevSide","shouldRecalculatePosition","nextSide","alternateAlignment","alignmentAttempt","prevAlign","shouldRecalculateAlignment","nextAlign","elementDimensions","anchorPosition","anchorRight","anchorBottom","currentPos","containerDimensions","useResizeObserver","targetEl","observer","ResizeObserver","disconnect","AnchoredOverlay","renderAnchor","anchorRef","externalAnchorRef","anchorId","externalAnchorId","onOpen","onClose","overlayProps","focusTrapSettings","focusZoneSettings","updateOverlayRef","refCurrent","setRefCurrent","setRef","newRef","useRenderForcingRef","onAnchorKeyDown","onAnchorClick","dependencies","floatingElementRef","anchorElementRef","setPosition","updatePosition","useAnchoredPosition","useActiveDescendant","activeDescendantFocus","passedActiveDescendantRef","activeDescendantControlRef","abortController","_activeDescendantCont","vanillaSettings","_abortController$curr","_abortController$curr2","useFocusZone","previousFocusedElement","disableTrap","restoreFocusOnCleanUp","_initialFocusRef$curr","useFocusTrap","useMenuKeyboardNavigation","openingGesture","setOpeningGesture","detail","keydownHandler","iterable","firstElement","lastElement","useMenuInitialFocus","_item$textContent","firstLetter","_elementToFocus","isAlphabetKey","itemsMatchingKey","_item$getAttribute","keyshortcuts","shortcut","currentActiveIndex","useMnemonics","useCloseMenuOnTab","useMoveFocusToMenuItem","anchor","MenuContext","Menu","onOpenChange","combinedOpenState","setCombinedOpenState","MenuButton","Anchor","anchorProps","ActionMenu","xlargeSize","tokenSizes","extralarge","defaultTokenSize","isTokenInteractive","xlargeVariantStyles","StyledTokenBase","TokenBase","onRemove","getTokenButtonIconSize","StyledTokenButton","borderOffset","RemoveTokenButton","isParentInteractive","guard","low","high","ColorError","parseToRgba","normalizedColor","namedColorRegex","normalizedColorName","compressedColorMap","nameToHex","reducedHexMatch","reducedHexRegex","arr","hexMatch","hexRegex","rgbaMatch","rgbaRegex","parseFloat","hslaMatch","hslaRegex","hslToRgb","colorToInt","hex","amount","roundColor","hue","saturation","lightness","huePrime","chroma","secondComponent","red","green","blue","lightnessModification","parseToHsla","alpha","lightModeStyles","darkModeStyles","IssueLabelToken","fillColor","isSelected","hideRemoveButton","interactiveTokenProps","hasMultipleActionTargets","labelStyles","pointerEvents","TokenTextContainer","PullRequestLabels","pullRequestLabels","setPullRequestLabels","updateLabels","isExisting","labelableId","labelIds","RepoLabelsInput","FieldLabel","existingUserIDs","users","Token","AvatarContainer","avatarSize","AvatarToken","avatarSrc","PullRequestReviewers","pullRequestReviewers","setPullRequestReviewers","reviews","reviewRequests","reviewer","requestedReviewer","updateReviewers","userIds","RepoAssignableUsersInput","closeOnOutsideClick","defaultOpen","backupRef","customRef","onClickOutsideInternal","closest","handleToggle","eventTarget","getDetailsProps","onToggle","Details","PullRequestSignals","successful","conclusion","sorted","conclusionRelativeOrder","num","borderCollapse","ConclusionIcon","statusDisplay","resetComparableVersions","PullRequestBootstrap","PullRequestWithParams","pullRequestLoadable","setPullRequest","isPullRequestNotFound","PullRequestNotFound","PullRequestDetails","pullRequestStack","pullRequestBodyHTML","stripStackInfoFromSaplingBodyHTML","stripStackInfoFromBodyHTML","PullRequestVersionDiff","BulletItems","octiconMap","issueOpened","pullOpened","issueClosed","issueClosedNotPlanned","pullClosed","pullMerged","draft","issueDraft","colorVariants","normal","StateLabelBase","StateLabel","octiconProps","PullRequestStateLabel","statusAndLabel","navigateHook","setCustomNavigateHook","customNavigateHook","useNavigateToPullRequest","navigate","navigateToPullRequest","textOverflow","CommentCount","PullRequestStack","pullRequestNumber","stackLoadable","lastStack","setLastStack","availableStack","onNavigate","total","hasPrev","hasNext","stackIndex","PullRequestStackItem","PullRequestLatestVersionLink","resetSelectedVersionIndex","isViewingLatest","DEFAULT_STYLES","SELECTED_STYLES","getStyles","isDisabled","setComparableVersions","commentCount","onClickBefore","newBefore","newAfter","onClickAfter","getIndex","commitsLabel","PullRequestVersionCommitSelectorItem","defaultValue","setSelectedVersionIndex","reviewThreadsByCommit","reviewThreadsForCommit","PullRequestVersionSelectorItem","PullRequestVersions","PullRequestVersionSelector","PullRequestVersionCommitSelector","PullRequestHeader","titleHTML","versionIndex","PullRequestReviewComment","reviewComment","PullRequestReviewCommentLineNumber","PullRequestTimelineBootstrap","items","VersionBreak","TimelineItem","TimelineBasicEvent","PullRequestReview","IssueComment","HeadRefForcePushedEvent","RenamedTitleEvent","ReviewRequestEvent","isRequested","MergedEvent","ClosedEvent","TimelineCallout","isPending","threadMap","threadIndex","action","ReviewAction","hasContent","HorizontalLine","isPrefix","ActorBasic","previousTitle","currentTitle","mergedCommit","mergeRefName","closable","merged","userAgent","MODIFIER","ACTION","AUTHOR_ACTIONS","REVIEWER_ACTIONS","actions","eventLabel","PullRequestTimelineCommentInput","pendingReviewID","setEvent","pullRequestReviewId","PullRequestReviewSelector","Side","drawerState","rightLabel","leftLabel","topLabel","bottomLabel","errorBoundary","Drawer","stateAtom","isVertical","dragHandleElement","setDrawerState","isExpanded","collapsed","setInnerState","startResizing","initialWidth","clientY","clientX","moveHandler","func","leading","shouldCallLeading","debouncer","dispose","newE","_prev","onMouseUp","onMouseDown","TOTAL_HEADER_HEIGHT","setPullRequestID","TimelineDrawer","Pagination","pageSize","setPagination","page","setPage","totalPages","ceil","startCursor","endCursor","hasPreviousPage","hasNextPage","onPrev","onNext","PullRequestLink","observerMap","RootIds","unsupportedValue","rootId","optionsToId","createObserver","thresholds","IntersectionObserver","inView","isIntersecting","threshold","intersectionRatio","trackVisibility","fallbackInView","bounds","boundingClientRect","intersectionRect","rootBounds","callbacks","unobserve","useInView","delay","rootMargin","triggerOnce","skip","initialInView","setState","entryTarget","getScrollContainer","hasScrollableContent","scrollHeight","isOverflowHidden","isScrollable","useMedia","getInitialState","mounted","mql","viewportRanges","isResponsiveValue","useResponsiveValue","isNarrowViewport","isRegularViewport","isWideViewport","responsiveValue","narrow","wide","regular","REGION_ORDER","SPACING_MAP","none","condensed","PageLayoutContext","containerWidths","Root","containerWidth","rootRef","enableStickyPane","disableStickyPane","contentTopRef","contentBottomRef","stickyPaneHeight","setHeight","stickyTop","setStickyTop","contentTopInView","contentTopEntry","contentBottomInView","contentBottomEntry","calculateHeight","calculatedHeight","scrollContainer","topRect","bottomRect","stickyTopWithUnits","scrollRect","topOffset","bottomOffset","scrollY","isEnabled","setIsEnabled","useStickyPaneHeight","horizontalDividerVariants","filled","HorizontalDivider","responsiveVariant","verticalDividerVariants","VerticalDivider","divider","dividerWhenNarrow","dividerVariant","isHidden","contentWidths","Content","panePositions","paneWidths","Pane","responsivePosition","positionWhenNarrow","responsiveDivider","sticky","responsiveHidden","Footer","PageLayout","SubNavBase","SubNav","SubNavLinks","SubNavLink","activeClassName","Links","DEFAULT_PAGINATION","OPEN_STATES","CLOSED_STATES","Pulls","pagination","tab","setTab","setLabels","labelIDs","onClickOpenTab","onClickClosedTab","onSelectLabel","onClickLabelToken","PullsBootstrap","states","pullsWithPageInfo","seen","paginationEl","PullsList","Cell","PullRequestReviewDecisionLabel","PullsHeader","PullsView","diffBlob","addition","lineBg","numText","numBg","wordBg","deletion","prettylights","syntax","brackethighlighterAngle","brackethighlighterUnmatched","constant","carriageReturnBg","carriageReturnText","constantOtherReferenceLink","entity","entityTag","invalidIllegalBg","invalidIllegalText","keyword","sublimelinterGutterMark","storageModifierImport","stringRegexp","variable","UserHomePage","UserHomePageRoot","ReviewRequestsForUser","PullRequestsForUser","RepositoriesForUser","repos","repositories","PullRequests","pullRequestList","nameWithOwner","Heading","repoList","Base","BaseStyles","App","ThemeListener","PrimerStyles","SplitDiffViewPrimerStyles","ContentOrLoginDialog","tokenLoadable","AppContent","configureLoginDialog"],"sourceRoot":""}