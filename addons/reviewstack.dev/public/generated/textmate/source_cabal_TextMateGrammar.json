{"generated":"@generated","fileTypes":["cabal"],"name":"Cabal","patterns":[{"name":"keyword.other.cabal","match":"(?ix)(\\n|^)\n  ( name\n  | version\n  | cabal-version\n  | build-type\n  | license(-file)?\n  | copyright\n  | author\n  | maintainer\n  | stability\n  | homepage\n  | bug-reports\n  | package-url\n  | synopsis\n  | data-(files|dir)\n  | description\n  | category\n  | extra-(source|doc|tmp)-files\n  | tested-with\n  ):\n"},{"name":"keyword.other.cabal","match":"(?ix)^[ \\t]+\n  ( (build(-tool)?|pkgconfig|setup)-depends\n  | (hs-source|include|extra-(lib|frameworks))-dirs\n  | ((other|default)-)?extensions\n  | build-tools\n  | buildable\n  | ((install|autogen)-)?includes\n  | (c(xx)?|js)-sources\n  | extra-\n    ( ((ghci|bundled)-)?libraries\n    | (dynamic-)?library-flavours\n    )\n  | (cmm|cxx|cc|cpp|ld|ghc(-(prof|shared))?)-options\n  | (asm|cmm)-(sources|options)\n  | other-languages\n  | default-language\n  | frameworks\n  | default\n  | manual\n  | location\n  | branch\n  | tag\n  | subdir\n  | exposed(-modules)?\n  | (other|virtual|autogen|reexported)-modules\n  | visibility\n  | main-is\n  | type\n  | test-module\n  | description\n  | mixins\n  | import\n  | signatures\n  | scope\n  | lib-version-(version|linux)\n  | mod-def-file\n  | options\n  | x-\\w[1-9\\w_-]*\n  ):\n"},{"name":"keyword.operator.cabal","match":"(==|>=|<=|<|>|^>=|\\|\\||&&|!)"},{"name":"constant.numeric.cabal","match":"(?<=[^\\w])\\d+(\\.\\d+)*(\\.\\*)?"},{"name":"markup.underline.link.cabal","match":"\\w+:/(/[\\w._\\-\\d%])+(\\?[\\w.+_\\-\\d%]+)(&[\\w._+\\-\\d%]+)*"},{"name":"entity.name.section.cabal","match":"^(?ix:\n  ( library\n  | custom-setup\n  )\n)$\n"},{"match":"^(?ix:\n  ( executable\n  | flag\n  | test-suite\n  | benchmark\n  | common\n  | source-repository\n  | library\n  | foreign-library\n  )\n)( |\\t)+([\\w\\-_]+)$\n","captures":{"1":{"name":"entity.name.section.cabal"},"3":{"name":"entity.name.function.cabal"}}},{"name":"keyword.control.cabal","match":"^[ \\t]*(if|else)"},{"name":"comment.line.double-dash","match":"^\\s*--.*$"}],"scopeName":"source.cabal","uuid":"5eb56f02-df11-40b2-b6d5-fa444522416c"}
