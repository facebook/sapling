name: Release - Ubuntu 22.04
'on':
  workflow_dispatch: null
  push:
    tags:
    - v*
    - test-release-*
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ${{ format('ghcr.io/{0}/build_ubuntu_22_04:latest', github.repository) }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Grant Access
      run: git config --global --add safe.directory "$PWD"
    - name: rustup
      run: rustup default stable
    - name: set-env DEB_UPSTREAM_VERSION
      shell: bash
      run: echo "DEB_UPSTREAM_VERSION=$(ci/tag-name.sh)" >> $GITHUB_ENV
    - name: set-env SAPLING_VERSION
      shell: bash
      run: echo "SAPLING_VERSION=$(ci/tag-name.sh)" >> $GITHUB_ENV
    - name: Create .deb
      working-directory: ./eden/scm
      run: ${{ format('VERSION={0} make deb', env.DEB_UPSTREAM_VERSION) }}
    - name: Rename .deb
      working-directory: ./eden/scm
      run: ${{ format('mv sapling_{0}_amd64.deb sapling_{0}_amd64.Ubuntu22.04.deb', env.DEB_UPSTREAM_VERSION, env.DEB_UPSTREAM_VERSION) }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ubuntu-22.04
        path: ./eden/scm/sapling_*.deb
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Grant Access
      run: git config --global --add safe.directory "$PWD"
    - name: Download Artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: ubuntu-22.04
    - name: Create pre-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: bash ci/retry.sh bash ci/create-release.sh $(ci/tag-name.sh)
    - name: Upload Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: bash ci/retry.sh gh release upload --clobber $(ci/tag-name.sh) sapling_*.deb
