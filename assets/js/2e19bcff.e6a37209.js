"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["6738"],{39347:function(e,n,s){s.r(n),s.d(n,{metadata:()=>i,contentTitle:()=>r,default:()=>a,assets:()=>l,toc:()=>o,frontMatter:()=>t});var i=JSON.parse('{"id":"commands/commit","title":"commit","description":"commit | ci","source":"@site/docs/commands/commit.md","sourceDirName":"commands","slug":"/commands/commit","permalink":"/docs/commands/commit","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/sapling/tree/main/website/docs/commands/commit.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"clone","permalink":"/docs/commands/clone"},"next":{"title":"config","permalink":"/docs/commands/config"}}'),d=s("85893"),c=s("50065");let t={sidebar_position:10},r=void 0,l={},o=[{value:"commit | ci",id:"commit--ci",level:2},{value:"arguments",id:"arguments",level:2}];function h(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"commit--ci",children:"commit | ci"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"save all pending changes or specified files in a new commit"})}),"\n",(0,d.jsx)(n.p,{children:"Commit changes to the given files to your local repository."}),"\n",(0,d.jsxs)(n.p,{children:["By default, all pending changes (in other words, those reported by\n",(0,d.jsx)(n.code,{children:"sl status"}),") are committed. If you want to commit only some of your\nchanges, choose one of the following options:"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"Specify an exact list of files for which you want changes committed."}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["Use the ",(0,d.jsx)(n.code,{children:"-I"})," or ",(0,d.jsx)(n.code,{children:"-X"})," flags to match or exclude file names  using a pattern or fileset. See ",(0,d.jsx)(n.code,{children:"sl help patterns"})," and  ",(0,d.jsx)(n.code,{children:"sl help filesets"})," for details."]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["Specify the ",(0,d.jsx)(n.code,{children:"--interactive"})," flag to open a UI to select  individual files, hunks, or lines."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["To meld pending changes into the current commit instead of creating\na new commit, see ",(0,d.jsx)(n.code,{children:"sl amend"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:["If you are committing the result of a merge, such as when merge\nconflicts occur during ",(0,d.jsx)(n.code,{children:"sl goto"}),", commit all pending changes.\nDo not specify files or use ",(0,d.jsx)(n.code,{children:"-I"}),", ",(0,d.jsx)(n.code,{children:"-X"}),", or ",(0,d.jsx)(n.code,{children:"-i"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:["Specify the ",(0,d.jsx)(n.code,{children:"-m"})," flag to include a free-form commit message. If you do\nnot specify ",(0,d.jsx)(n.code,{children:"-m"}),", Sapling opens your configured editor where you can\nenter a message based on a pre-loaded commit template."]}),"\n",(0,d.jsx)(n.p,{children:"Returns 0 on success, 1 if nothing changed."}),"\n",(0,d.jsxs)(n.p,{children:["If your commit fails, you can find a backup of your commit message in\n",(0,d.jsx)(n.code,{children:".sl/last-message.txt"}),"."]}),"\n",(0,d.jsx)(n.p,{children:"Examples:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"commit all files ending in .py:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:'sl commit --include "glob:**.py"\n'})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"commit all non-binary files:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:'sl commit --exclude "set:binary()"\n'})}),"\n",(0,d.jsx)(n.h2,{id:"arguments",children:"arguments"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"shortname"}),(0,d.jsx)(n.th,{children:"fullname"}),(0,d.jsx)(n.th,{children:"default"}),(0,d.jsx)(n.th,{children:"description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-A"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--addremove"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"mark new/missing files as added/removed before committing"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-e"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--edit"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"invoke editor on commit messages"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-i"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--interactive"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"use interactive mode"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-M"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--reuse-message"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"reuse commit message from REV"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--no-move-detection"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"disable automatic file move detection"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-I"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--include"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"include files matching the given patterns"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-X"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--exclude"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"exclude files matching the given patterns"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-m"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--message"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"use text as commit message"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-l"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--logfile"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"read commit message from file"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-d"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--date"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"record the specified date as commit date"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"-u"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"--user"})}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{children:"record the specified user as committer"})]})]})]})]})}function a(e={}){let{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},50065:function(e,n,s){s.d(n,{Z:function(){return r},a:function(){return t}});var i=s(67294);let d={},c=i.createContext(d);function t(e){let n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);