# @generated by autocargo

[package]
name = "commitcloudsubscriber"
version = "0.1.0"
edition = "2021"
description = '''
    Cross platform client for subscribing to Commit Cloud eventsource (http server-sent events)
    The workflow is the following:
    * define 'subscription' as a unique [repo_name, workspace] pair
    * read set of 'subscribers', defined as [repo_name, workspace, repo_root]
    * runs a Commit Cloud eventsource listener in a separate thread for every 'subscription'
        (and a set of 'subscribers' (repo_roots))
    * triggers `hg cloud sync` command on notifications in all 'subscribers' (repo_roots)
        for a given 'subscription'
    * the library also contains a module to find OAuth token,
        this logic should be in sync with `hg cloud auth` command.
'''

[dependencies]
anyhow = "1.0.65"
filetime = "0.2.9"
futures = { version = "0.3.22", features = ["async-await", "compat"] }
hostcaps = { version = "0.1.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
identity = { version = "0.1.0", path = "../identity" }
lazy_static = "1.4"
log = { version = "0.4.17", features = ["kv_unstable", "kv_unstable_std"] }
mime = "0.3.14"
parking_lot = { version = "0.11.2", features = ["send_guard"] }
regex = "1.6.0"
reqwest = { version = "0.11.11", features = ["blocking", "json", "multipart", "rustls-tls", "rustls-tls-native-roots", "stream", "trust-dns-optional"] }
reqwest-eventsource = "0.4.0"
rust-ini = { version = "0.17", features = ["inline-comment"] }
serde = { version = "1.0.136", features = ["derive", "rc"] }
serde_json = { version = "1.0.79", features = ["float_roundtrip", "unbounded_depth"] }
thiserror = "1.0.36"
tokio = { version = "1.25.0", features = ["full", "test-util", "tracing"] }

[dev-dependencies]
tempfile = "3.4"

[features]
default = []
