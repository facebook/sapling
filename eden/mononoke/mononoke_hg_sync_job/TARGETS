load("@fbcode_macros//build_defs:rust_binary.bzl", "rust_binary")
load("@fbcode_macros//build_defs:rust_library.bzl", "rust_library")
load("@fbsource//tools/build_defs:glob_defs.bzl", "glob")
load("//eden/mononoke/facebook:lib.bzl", "tokio_dependency_test")

oncall("mononoke")

rust_binary(
    name = "mononoke_hg_sync_job",
    srcs = glob([
        "src/**/*.rs",
        "src/**/*.py",
        "schemas/**/*.sql",
    ]),
    named_deps = {
        "bytes-old": "fbsource//third-party/rust:bytes-old",
        "clap-old": "fbsource//third-party/rust:clap-2",
    },
    test_deps = [
        "fbsource//third-party/rust:assert_matches",
        "fbsource//third-party/rust:tokio",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//eden/mononoke/blobstore:memblob",
        "//eden/mononoke/bonsai_globalrev_mapping:bonsai_globalrev_mapping",
        "//eden/mononoke/mercurial:mercurial_types-mocks",
        "//eden/mononoke/mononoke_types:mononoke_types-mocks",
        "//eden/mononoke/repo_factory:test_repo_factory",
        "//eden/mononoke/tests/utils:tests_utils",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-stream",
        "fbsource//third-party/rust:async-trait",
        "fbsource//third-party/rust:base64",
        "fbsource//third-party/rust:bytes",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:http",
        "fbsource//third-party/rust:hyper",
        "fbsource//third-party/rust:hyper-openssl",
        "fbsource//third-party/rust:itertools",
        "fbsource//third-party/rust:maplit",
        "fbsource//third-party/rust:regex",
        "fbsource//third-party/rust:serde_json",
        "fbsource//third-party/rust:slog",
        "fbsource//third-party/rust:tempfile",
        "fbsource//third-party/rust:thiserror",
        "fbsource//third-party/rust:tokio",
        ":mononoke_hg_sync_job_helper_lib",
        "//common/rust/shed/borrowed:borrowed",
        "//common/rust/shed/cloned:cloned",
        "//common/rust/shed/facet:facet",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/futures_01_ext:futures_01_ext",
        "//common/rust/shed/futures_ext:futures_ext",
        "//common/rust/shed/futures_stats:futures_stats",
        "//common/rust/shed/sql:sql",
        "//eden/mononoke/blobrepo:changeset_fetcher",
        "//eden/mononoke/blobrepo:repo_blobstore",
        "//eden/mononoke/blobstore:blobstore",
        "//eden/mononoke/bonsai_globalrev_mapping:bonsai_globalrev_mapping",
        "//eden/mononoke/bonsai_hg_mapping:bonsai_hg_mapping",
        "//eden/mononoke/bookmarks:bookmarks",
        "//eden/mononoke/bookmarks:dbbookmarks",
        "//eden/mononoke/changesets:changesets",
        "//eden/mononoke/cmdlib:cmdlib",
        "//eden/mononoke/cmdlib/sharding:executor_lib",
        "//eden/mononoke/cmdlib/sharding_ext:sharding_ext",
        "//eden/mononoke/common/assembly_line:assembly_line",
        "//eden/mononoke/common/futures_watchdog:futures_watchdog",
        "//eden/mononoke/common/retry:retry",
        "//eden/mononoke/common/rust/sql_ext:sql_ext",
        "//eden/mononoke/common/scuba_ext:scuba_ext",
        "//eden/mononoke/common/sql_construct:sql_construct",
        "//eden/mononoke/derived_data/mercurial_derivation:mercurial_derivation",
        "//eden/mononoke/filestore:filestore",
        "//eden/mononoke/gotham_ext:gotham_ext",
        "//eden/mononoke/lfs_protocol:lfs_protocol",
        "//eden/mononoke/mercurial:mercurial_bundles",
        "//eden/mononoke/mercurial:mercurial_revlog",
        "//eden/mononoke/mercurial:mercurial_types",
        "//eden/mononoke/metaconfig:metaconfig_types",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/mutable_counters:mutable_counters",
        "//eden/mononoke/repo_attributes/commit_graph/commit_graph:commit_graph",
        "//eden/mononoke/repo_attributes/repo_derived_data:repo_derived_data",
        "//eden/mononoke/repo_attributes/repo_identity:repo_identity",
        "//eden/mononoke/repo_attributes/repo_lock:repo_lock",
        "//eden/mononoke/repo_client:getbundle_response",
        "//eden/mononoke/server/context:context",
    ],
)

rust_library(
    name = "mononoke_hg_sync_job_helper_lib",
    srcs = glob(["helper_lib/**/*.rs"]),
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:slog",
        "fbsource//third-party/rust:tempfile",
        "fbsource//third-party/rust:tokio",
        "fbsource//third-party/rust:tokio-stream",
        "//eden/mononoke/blobstore:blobstore",
        "//eden/mononoke/bookmarks:bookmarks",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/mutable_counters:mutable_counters",
        "//eden/mononoke/repo_attributes/repo_identity:repo_identity",
        "//eden/mononoke/server/context:context",
    ],
)

tokio_dependency_test(
    name = "tokio_check",
    rule = ":mononoke_hg_sync_job",
)
