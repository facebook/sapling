# @generated by autocargo from //eden/mononoke/derived_data/mercurial_derivation:[mercurial_derivation,mercurial_derivation_test]

[package]
name = "mercurial_derivation"
version = "0.1.0"
authors = ["Facebook"]
edition = "2021"
license = "GPLv2+"

[[test]]
name = "mercurial_derivation_test"
path = "test/main.rs"

[dependencies]
anyhow = "1.0.95"
async-trait = "0.1.86"
blobrepo_common = { version = "0.1.0", path = "../../blobrepo/common" }
blobrepo_errors = { version = "0.1.0", path = "../../blobrepo/errors" }
blobstore = { version = "0.1.0", path = "../../blobstore" }
bonsai_hg_mapping = { version = "0.1.0", path = "../../bonsai_hg_mapping" }
borrowed = { version = "0.1.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
bounded_traversal = { version = "0.1.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
bytes = { version = "1.9.0", features = ["serde"] }
cloned = { version = "0.1.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
context = { version = "0.1.0", path = "../../server/context" }
derived_data = { version = "0.1.0", path = ".." }
derived_data_manager = { version = "0.1.0", path = "../manager" }
derived_data_service_if = { version = "0.1.0", path = "../remote/if" }
either = "1.5"
filestore = { version = "0.1.0", path = "../../filestore" }
futures = { version = "0.3.30", features = ["async-await", "compat"] }
manifest = { version = "0.1.0", path = "../../manifest" }
mercurial_types = { version = "0.1.0", path = "../../mercurial/types" }
mononoke_macros = { version = "0.1.0", path = "../../mononoke_macros" }
mononoke_types = { version = "0.1.0", path = "../../mononoke_types" }
repo_derived_data = { version = "0.1.0", path = "../../repo_attributes/repo_derived_data" }
slog = { package = "tracing_slog_compat", version = "0.1.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
sorted_vector_map = { version = "0.2.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
stats = { version = "0.1.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }

[dev-dependencies]
ascii = "1.0"
blobrepo_hg = { version = "0.1.0", path = "../../blobrepo/blobrepo_hg" }
bookmarks = { version = "0.1.0", path = "../../bookmarks" }
cacheblob = { version = "0.1.0", path = "../../blobstore/cacheblob" }
changesets_creation = { version = "0.1.0", path = "../../changesets/changesets_creation" }
cmdlib_caching = { version = "0.1.0", path = "../../cmdlib/caching" }
commit_graph = { version = "0.1.0", path = "../../repo_attributes/commit_graph/commit_graph" }
delayblob = { version = "0.1.0", path = "../../blobstore/delayblob" }
facet = { version = "0.1.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
fbinit = { version = "0.2.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
fbinit-tokio = { version = "0.1.2", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
filenodes = { version = "0.1.0", path = "../../filenodes" }
filenodes_derivation = { version = "0.1.0", path = "../filenodes_derivation" }
fixtures = { version = "0.1.0", path = "../../tests/fixtures" }
memblob = { version = "0.1.0", path = "../../blobstore/memblob" }
mercurial_types-mocks = { version = "0.1.0", path = "../../mercurial/types/mocks" }
rand = { version = "0.8", features = ["small_rng"] }
rand_distr = "0.4"
rand_xorshift = "0.3"
repo_blobstore = { version = "0.1.0", path = "../../blobrepo/repo_blobstore" }
repo_identity = { version = "0.1.0", path = "../../repo_attributes/repo_identity" }
scuba_ext = { version = "0.1.0", path = "../../common/scuba_ext" }
sql = { version = "0.1.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
test_repo_factory = { version = "0.1.0", path = "../../repo_factory/test_repo_factory" }
tests_utils = { version = "0.1.0", path = "../../tests/utils" }
tokio = { version = "1.45.0", features = ["full", "test-util", "tracing"] }
