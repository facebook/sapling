load("@fbcode_macros//build_defs:rust_library.bzl", "rust_library")
load("@fbcode_macros//build_defs/lib:rust_oss.bzl", "rust_oss")

oncall("mononoke")

rust_library(
    name = "scs_methods",
    srcs = glob(["src/**/*.rs"]),
    crate_root = "src/lib.rs",
    named_deps = {
        "slog": "//common/rust/shed/tracing_slog_compat:tracing_slog_compat",
    } | ({} if rust_oss.is_oss_build() else {
        "MononokeScsRequest_ods3_types": "//eden/mononoke/facebook/ods3_schemas:MononokeScsRequest_ods3-rust",
    }),
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-stream",
        "fbsource//third-party/rust:async-trait",
        "fbsource//third-party/rust:bytes",
        "fbsource//third-party/rust:chrono",
        "fbsource//third-party/rust:faster-hex",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:futures-util",
        "fbsource//third-party/rust:gix-hash",
        "fbsource//third-party/rust:itertools",
        "fbsource//third-party/rust:maplit",
        "fbsource//third-party/rust:serde_json",
        "fbsource//third-party/rust:tokio",
        "//common/rust/base_controller:factory_group",
        "//common/rust/everstore:everstore_client",
        "//common/rust/identity:identity",
        "//common/rust/shed/borrowed:borrowed",
        "//common/rust/shed/cloned:cloned",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/futures_ext:futures_ext",
        "//common/rust/shed/futures_stats:futures_stats",
        "//common/rust/shed/justknobs_stub:justknobs",
        "//common/rust/shed/sorted_vector_map:sorted_vector_map",
        "//common/rust/shed/stats:stats",
        "//common/rust/shed/time_ext:time_ext",
        "//common/rust/srserver:srserver",
        "//configerator/structs/common/fbtype:fbtypes-rust",
        "//eden/mononoke/async_requests:async_requests",
        "//eden/mononoke/blobstore:ephemeral_blobstore",
        "//eden/mononoke/bookmarks:bookmarks",
        "//eden/mononoke/bookmarks:bookmarks_movement",
        "//eden/mononoke/cmdlib/mononoke_app:mononoke_app",
        "//eden/mononoke/commit_cloud/helpers:commit_cloud_helpers",
        "//eden/mononoke/commit_cloud/types:commit_cloud_types",
        "//eden/mononoke/commit_rewriting/synced_commit_mapping:synced_commit_mapping",
        "//eden/mononoke/common/connection_security_checker:connection_security_checker",
        "//eden/mononoke/common/dedupmap:dedupmap",
        "//eden/mononoke/common/futures_watchdog:futures_watchdog",
        "//eden/mononoke/common/memory:memory",
        "//eden/mononoke/common/scribe_ext:scribe_ext",
        "//eden/mononoke/common/scuba_ext:scuba_ext",
        "//eden/mononoke/derived_data:derived_data_manager",
        "//eden/mononoke/git/git_types:git_types",
        "//eden/mononoke/hooks:hooks",
        "//eden/mononoke/megarepo_api:megarepo_api",
        "//eden/mononoke/megarepo_api:megarepo_config",
        "//eden/mononoke/metaconfig:metaconfig_types",
        "//eden/mononoke/mononoke_api:mononoke_api",
        "//eden/mononoke/mononoke_configs:mononoke_configs",
        "//eden/mononoke/mononoke_macros:mononoke_macros",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/permission_checker:permission_checker",
        "//eden/mononoke/phases:phases",
        "//eden/mononoke/pushrebase:pushrebase",
        "//eden/mononoke/pushrebase_mutation_mapping:pushrebase_mutation_mapping",
        "//eden/mononoke/repo_attributes/repo_identity:repo_identity",
        "//eden/mononoke/repo_authorization:repo_authorization",
        "//eden/mononoke/scs/if:source_control-rust",
        "//eden/mononoke/scs/if:source_control-rust-services",
        "//eden/mononoke/scs/scs_errors:scs_errors",
        "//eden/mononoke/server/context:context",
        "//eden/mononoke/server/metadata:metadata",
        "//eden/scm/lib/clientinfo:clientinfo",
        "//login/if:login_objects_thrift-rust",
    ] + ([] if rust_oss.is_oss_build() else [
        "fbsource//third-party/rust:lazy_static",
        "//eden/mononoke/facebook/ods3_schemas:MononokeScsRequest_ods3-rs_bindings",
    ]),
)
