# @generated by autocargo from //eden/mononoke/megarepo_api:async_requests_worker

[package]
name = "async_requests_worker"
version = "0.1.0"
authors = ["Facebook"]
edition = "2021"
license = "GPLv2+"

[dependencies]
anyhow = "1.0.75"
async-stream = "0.3"
async_requests = { version = "0.1.0", path = "../async_requests" }
clap = { version = "4.5.2", features = ["derive", "env", "string", "unicode", "wrap_help"] }
cloned = { version = "0.1.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
cmdlib_logging = { version = "0.1.0", path = "../../cmdlib/log" }
context = { version = "0.1.0", path = "../../server/context" }
environment = { version = "0.1.0", path = "../../cmdlib/environment" }
fbinit = { version = "0.1.2", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
futures = { version = "0.3.30", features = ["async-await", "compat"] }
hostname = { version = "0.1.0", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
megarepo_api = { version = "0.1.0", path = ".." }
megarepo_config = { version = "0.1.0", path = "../megarepo_config" }
megarepo_error = { version = "0.1.0", path = "../megarepo_error" }
megarepo_types_thrift = { version = "0.1.0", path = "../if" }
metaconfig_types = { version = "0.1.0", path = "../../metaconfig/types" }
mononoke_app = { version = "0.1.0", path = "../../cmdlib/mononoke_app" }
mononoke_types = { version = "0.1.0", path = "../../mononoke_types" }
slog = { version = "2.7", features = ["max_level_trace", "nested-values"] }
source_control = { version = "0.1.0", path = "../../scs/if" }
tokio = { version = "1.37.0", features = ["full", "test-util", "tracing"] }

[dev-dependencies]
fbinit-tokio = { version = "0.1.2", git = "https://github.com/facebookexperimental/rust-shed.git", branch = "main" }
mononoke_api = { version = "0.1.0", path = "../../mononoke_api" }
requests_table = { version = "0.1.0", path = "../requests_table" }
test_repo_factory = { version = "0.1.0", path = "../../repo_factory/test_repo_factory" }
