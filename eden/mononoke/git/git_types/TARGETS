load("@fbcode_macros//build_defs:rust_library.bzl", "rust_library")

oncall("mononoke")

rust_library(
    name = "git_types",
    srcs = glob(["src/**/*.rs"]),
    test_deps = [
        "fbsource//third-party/rust:async-compression",
        "fbsource//third-party/rust:futures-util",
        "fbsource//third-party/rust:git2",
        "fbsource//third-party/rust:rand",
        "fbsource//third-party/rust:serde_json",
        "fbsource//third-party/rust:tempdir",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//eden/mononoke/blobrepo:repo_blobstore",
        "//eden/mononoke/blobstore:memblob",
        "//eden/mononoke/bonsai_hg_mapping:bonsai_hg_mapping",
        "//eden/mononoke/bookmarks:bookmarks",
        "//eden/mononoke/changesets:changesets",
        "//eden/mononoke/mercurial:mercurial_types",
        "//eden/mononoke/mononoke_types:mononoke_types-mocks",
        "//eden/mononoke/repo_attributes/repo_derived_data:repo_derived_data",
        "//eden/mononoke/repo_attributes/repo_identity:repo_identity",
        "//eden/mononoke/tests/fixtures:fixtures",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-trait",
        "fbsource//third-party/rust:bytes",
        "fbsource//third-party/rust:digest",
        "fbsource//third-party/rust:flate2",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:futures-util",
        "fbsource//third-party/rust:gix-actor",
        "fbsource//third-party/rust:gix-date",
        "fbsource//third-party/rust:gix-diff",
        "fbsource//third-party/rust:gix-hash",
        "fbsource//third-party/rust:gix-object",
        "fbsource//third-party/rust:multimap",
        "fbsource//third-party/rust:quickcheck",
        "fbsource//third-party/rust:regex",
        "fbsource//third-party/rust:sha1",
        "fbsource//third-party/rust:thiserror",
        "fbsource//third-party/rust:tokio",
        "//common/rust/shed/cloned:cloned",
        "//eden/mononoke/blobstore:blobstore",
        "//eden/mononoke/bonsai_git_mapping:bonsai_git_mapping",
        "//eden/mononoke/derived_data:derived_data",
        "//eden/mononoke/derived_data:derived_data_manager",
        "//eden/mononoke/derived_data:unodes",
        "//eden/mononoke/derived_data/remote/if:derived_data_service_if-rust",
        "//eden/mononoke/filestore:filestore",
        "//eden/mononoke/git/git_types/if:git-types-thrift-rust",
        "//eden/mononoke/manifest:manifest",
        "//eden/mononoke/megarepo_api:megarepo_error",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/server/context:context",
        "//thrift/lib/rust:fbthrift",
    ],
)
