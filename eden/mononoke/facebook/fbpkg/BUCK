load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//eden/mononoke/facebook/fbpkg:lib.bzl", "mononoke_fbpkg")
load("//fbpkg:fbpkg.bzl", "fbpkg")
load("//tupperware/cm/antlir2/bzl:buck2_container.bzl", "tw")
load("//tupperware/config/common:tw.mixin.zkdaemon.bzl", zkdaemon_mixin = "mixin")

oncall("scm_server_infra")

mononoke_fbpkg(
    name = "mononoke.server",
    path_actions = {
        "mononoke": "fbcode//eden/mononoke:mononoke",
    },
)

mononoke_fbpkg(
    name = "mononoke.scs_server",
    path_actions = {
        # deps temporarily needed to satisfy metagit repo creation reqs
        "hipstercli": "fbcode//infrasec/authorization/tools/py/hipstercli:hipstercli",
        "oncalls": "fbcode//oncall/py:oncalls",
        "scmadmin": "fbcode//scm/scmadmin:client",
        # actual scs server binary
        "scs_server": "fbcode//eden/mononoke/scs/scs_server:scs_server",
    },
)

mononoke_fbpkg(
    name = "mononoke.admin",
    compress_type = None,
    path_actions = {
        "admin": "//eden/mononoke/tools/admin:admin",
        "newadmin": fbpkg.symlink("admin"),
    },
    with_debug_symbols = False,
)

mononoke_fbpkg(
    name = "mononoke.blobpacker",
    compress_type = None,
    path_actions = {
        "mononoke_pack_similar_blobs_download.par": "//eden/mononoke/facebook/mononoke_pack_similar_blobs_download:hive_similar_blobs_downloader",
        "packer": "//eden/mononoke:packer",
    },
)

mononoke_fbpkg(
    name = "mononoke.blobstore_healer",
    path_actions = {
        "blobstore_healer": "//eden/mononoke:blobstore_healer",
    },
)

mononoke_fbpkg(
    name = "mononoke.lfs_server",
    path_actions = {
        "lfs_server": "//eden/mononoke/lfs_server:lfs_server",
    },
)

mononoke_fbpkg(
    name = "mononoke.async_requests_worker",
    path_actions = {
        "async_requests_worker": "//eden/mononoke/async_requests/worker:worker",
    },
)

mononoke_fbpkg(
    name = "mononoke.microwave",
    compress_type = None,
    path_actions = {
        "builder": "//eden/mononoke/microwave:builder",
    },
)

mononoke_fbpkg(
    name = "mononoke.new_streaming_clone",
    path_actions = {
        "new_streaming_clone": "//eden/mononoke/streaming_clone:new_streaming_clone",
    },
)

mononoke_fbpkg(
    name = "mononoke.sqlblob_gc",
    compress_type = None,
    path_actions = {
        "sqlblob_gc": "//eden/mononoke:sqlblob_gc",
        "sqlblob_gc_py.par": "//eden/mononoke/facebook/sqlblob_gc_py:sqlblob_gc_py",
    },
)

mononoke_fbpkg(
    name = "mononoke.blob_cleanup",
    compress_type = None,
    path_actions = {
        "blob_deletion": "//eden/mononoke/tools/admin:admin",
        "blobkey_copy.par": "//eden/mononoke/facebook/blobstore_deletion:manifold_copy",
        "blobkey_download.par": "//eden/mononoke/facebook/blobstore_deletion:manifold_key_download",
    },
)

mononoke_fbpkg(
    name = "mononoke.statistics_collector",
    path_actions = {
        "statistics_collector": "//eden/mononoke:statistics_collector",
    },
)

mononoke_fbpkg(
    name = "mononoke.walker",
    path_actions = {
        "walker": "//eden/mononoke/walker:walker",
    },
)

mononoke_fbpkg(
    name = "mononoke.x-repo-backsync",
    path_actions = {
        "backsyncer_cmd": "//eden/mononoke/commit_rewriting/backsyncer:backsyncer_cmd",
    },
)

mononoke_fbpkg(
    name = "mononoke.x-repo-bookmarks-validator",
    path_actions = {
        "bookmarks_validator": "//eden/mononoke/commit_rewriting/bookmarks_validator:bookmarks_validator",
    },
)

mononoke_fbpkg(
    name = "mononoke.x-repo-commit-validator",
    path_actions = {
        "commit_validator": "//eden/mononoke/commit_rewriting/commit_validator:commit_validator",
    },
)

mononoke_fbpkg(
    name = "mononoke.x-repo-sync-job",
    path_actions = {
        "mononoke_x_repo_sync_job": "//eden/mononoke/commit_rewriting/mononoke_x_repo_sync_job:mononoke_x_repo_sync_job",
    },
)

mononoke_fbpkg(
    name = "mononoke.example_commit_tailer",
    compress_type = None,
    override_log_paths = ["eden/mononoke/facebook/post_commit_tailer"],
    path_actions = {
        "example_commit_tailer.par": "//eden/mononoke/facebook/post_commit_tailer:example_commit_tailer",
        "swift": "//scribeutil/swift:swift",
    },
)

mononoke_fbpkg(
    name = "mononoke.fbsource_commit_tailer",
    compress_type = None,
    override_log_paths = [
        "eden/mononoke/facebook/post_commit_tailer",
        "eden/mononoke/facebook/fbsource_commit_tailer",
    ],
    path_actions = {
        "fbsource_commit_tailer.par": "//eden/mononoke/facebook/fbsource_commit_tailer:fbsource_commit_tailer",
        "swift": "//scribeutil/swift:swift",
    },
)

tw.container(
    name = "tw.mononoke.fbsource_commit_tailer",
    features = [
        feature.fetch_fbpkg_mount(
            name = "mononoke.fbsource_commit_tailer",
            mountpoint = "/packages/mononoke.fbsource_commit_tailer",
            tag = "prod",
        ),
        feature.rpms_install(rpms = ["jellyfish"]),
    ],
    oncall = "scm_server_infra",
)

mononoke_fbpkg(
    name = "mononoke.whatsapp_commit_tailer",
    compress_type = None,
    override_log_paths = [
        "eden/mononoke/facebook/post_commit_tailer",
        "eden/mononoke/facebook/whatsapp_commit_tailer",
    ],
    path_actions = {
        "swift": "//scribeutil/swift:swift",
        "whatsapp_commit_tailer.par": "//eden/mononoke/facebook/whatsapp_commit_tailer:whatsapp_commit_tailer",
    },
)

mononoke_fbpkg(
    name = "mononoke.backfill_bonsai_blob_mapping",
    compress_type = None,
    path_actions = {
        "backfill_bonsai_blob_mapping": "//eden/mononoke/tools/facebook/backfill_bonsai_blob_mapping:backfill_bonsai_blob_mapping",
    },
)

mononoke_fbpkg(
    name = "mononoke.gitimport",
    compress_type = None,
    path_actions = {
        "gitimport": "//eden/mononoke/git/gitimport:gitimport",
    },
)

mononoke_fbpkg(
    name = "mononoke.gitexport",
    compress_type = None,
    path_actions = {
        "gitexport": "//eden/mononoke/git/gitexport:gitexport",
    },
)

mononoke_fbpkg(
    name = "mononoke.bookmark_service",
    path_actions = {
        "bookmark_service_server": "//eden/mononoke/facebook/bookmark_service:bookmark_service_server",
    },
)

mononoke_fbpkg(
    name = "mononoke.cas_sync_job",
    path_actions = {
        "mononoke_cas_sync_job": "//eden/mononoke/mononoke_cas_sync_job:mononoke_cas_sync_job",
    },
)

mononoke_fbpkg(
    name = "mononoke.mononoke_cas_new_commit_tailer",
    path_actions = {
        "mononoke_cas_new_commit_tailer": "//eden/mononoke/facebook/cas_new_commit_tailer:mononoke_cas_new_commit_tailer",
    },
)

mononoke_fbpkg(
    name = "mononoke.load_limiter",
    path_actions = {
        "load_limiter": "//eden/mononoke/facebook/load_limiter:load_limiter",
    },
)

mononoke_fbpkg(
    name = "mononoke.tail_to_cloudwatch",
    compress_type = None,
    override_log_paths = [
        "eden/mononoke/mononoke_macros",
        "eden/mononoke/tools/tail-to-cloudwatch",
        "third-party2/rust",
    ],
    path_actions = {
        "tail_to_cloudwatch": "//eden/mononoke/tools/tail-to-cloudwatch:tail-to-cloudwatch",
    },
    with_debug_symbols = False,
)

tw.container(
    name = "tw.mononoke.git_server",
    features = [
        tw.build_fbpkg(
            mononoke_fbpkg(
                name = "mononoke.git_server",
                path_actions = {
                    "git_server": "//eden/mononoke/git_server:git_server",
                },
            ),
        ),
    ],
    oncall = "scm_server_infra",
)

tw.container(
    name = "tw.mononoke.modern_sync_job",
    features = [
        tw.build_fbpkg(
            mononoke_fbpkg(
                name = "mononoke.modern_sync_job",
                path_actions = {
                    "mononoke_modern_sync_job": "//eden/mononoke/modern_sync:mononoke_modern_sync_job",
                },
            ),
        ),
    ],
    oncall = "scm_server_infra",
)

tw.container(
    name = "tw.mononoke.git_server_push_poller",
    custom_image_opts = tw.image.opts(),
    features = [
        tw.build_fbpkg(
            mononoke_fbpkg(
                name = "mononoke.git_server_push_poller",
                path_actions = {
                    "git_server_push_poller": "//eden/mononoke/facebook/git_server/push_poller:git_server_push_poller",
                },
            ),
        ),
    ],
    mixins = [zkdaemon_mixin],
    oncall = "scm_server_infra",
    parent = "//tupperware/image/source_control:scm",
)
