load("@fbcode_macros//build_defs:native_rules.bzl", "buck_filegroup", "buck_genrule", "buck_sh_test")
load("@fbsource//tools/build_defs:glob_defs.bzl", "glob")
load("//eden/mononoke/facebook/mononoke-bootstrap:lib.bzl", "binaries_cmd", "env_for_binaries")

oncall("mononoke")

buck_sh_test(
    name = "check",
    args = [
        "$(location //eden/mononoke/facebook/mononoke-bootstrap:mononoke-bootstrap)",
    ],
    # Those are used to expose Buck-built binary to mononoke-bootstrap.
    # Normally, we don't use those, but we do it for tests.
    env = env_for_binaries([(".", "admin")]),
    test = "check.sh",
)

buck_filegroup(
    name = "mononoke-bootstrap",
    srcs = glob([
        "**/*.sh",
    ]),
)

buck_genrule(
    name = "binaries",
    out = "env.txt",
    # If the env.txt output is stored in cache then we won't build the binaries
    # and will instead fetch just the manifest. However, if the cache was
    # populated by sandcastle, then the paths inside of env.txt will point to
    # sandcastle's buck-out dir.
    #
    # Disable caching to prevent these issues.
    cacheable = False,
    cmd = binaries_cmd([
        (".", "admin"),
        (".", "mononoke"),
        ("git/gitimport", "gitimport"),
        ("lfs_server", "lfs_server"),
        ("scs_server", "scs_server"),
        ("tools/admin", "newadmin"),
    ]),
)
