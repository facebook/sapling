# This code was initially generated by ServiceFoundry
load("@fbcode_macros//build_defs:rust_binary.bzl", "rust_binary")
load("@fbcode_macros//build_defs:rust_library.bzl", "rust_library")
load("@fbsource//tools/build_defs:glob_defs.bzl", "glob")
load("//antlir/fbpkg:fbpkg.bzl", "fbpkg")
load("//tupperware/image/bzl:tw.bzl", "tw")

oncall("mononoke")

rust_binary(
    name = "derived_data_service",
    srcs = glob([
        "server/**/*.rs",
    ]),
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-trait",
        "fbsource//third-party/rust:clap",
        "fbsource//third-party/rust:dashmap",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:nonzero_ext",
        "fbsource//third-party/rust:serde_json",
        "fbsource//third-party/rust:slog",
        "fbsource//third-party/rust:thiserror",
        "fbsource//third-party/rust:tokio",
        ":derivation_queue",
        "//common/rust/shed/cloned:cloned",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/futures_stats:futures_stats",
        "//common/rust/shed/shared_error:shared_error",
        "//common/rust/shed/stats:stats",
        "//common/rust/shed/time_ext:time_ext",
        "//common/rust/srserver:srserver",
        "//eden/mononoke/cmdlib/mononoke_app:mononoke_app",
        "//eden/mononoke/common/scuba_ext:scuba_ext",
        "//eden/mononoke/derived_data:basename_suffix_skeleton_manifest",
        "//eden/mononoke/derived_data:blame",
        "//eden/mononoke/derived_data:changeset_info",
        "//eden/mononoke/derived_data:deleted_manifest",
        "//eden/mononoke/derived_data:derived_data",
        "//eden/mononoke/derived_data:derived_data_manager",
        "//eden/mononoke/derived_data:fastlog",
        "//eden/mononoke/derived_data:fsnodes",
        "//eden/mononoke/derived_data:skeleton_manifest",
        "//eden/mononoke/derived_data:unodes",
        "//eden/mononoke/derived_data/filenodes_derivation:filenodes_derivation",
        "//eden/mononoke/derived_data/mercurial_derivation:mercurial_derivation",
        "//eden/mononoke/derived_data/remote/if:DerivedDataService-metadata-sys",
        "//eden/mononoke/derived_data/remote/if:derived_data_service_if-rust",
        "//eden/mononoke/git/git_types:git_types",
        "//eden/mononoke/metaconfig:metaconfig_types",
        "//eden/mononoke/mononoke_repos:mononoke_repos",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/repo_attributes/repo_derived_data_service:repo_derived_data_service",
        "//eden/mononoke/server/context:context",
        "//eden/mononoke/server/metadata:metadata",
        "//eden/mononoke/tunables:tunables",
        "//eden/scm/lib/clientinfo:clientinfo",
        "//fb303/thrift:fb303_core-rust",
    ],
)

rust_library(
    name = "derived_data_client_library",
    srcs = glob([
        "client/lib/**/*.rs",
    ]),
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-trait",
        "//common/rust/shed/fbinit:fbinit",
        "//eden/mononoke/common/facebook/thrift_client:thrift_client",
        "//eden/mononoke/derived_data:derived_data_remote",
        "//eden/mononoke/derived_data/remote/if:derived_data_service_if-rust",
        "//eden/mononoke/tunables:tunables",
        "//fb303/thrift:fb303_core-rust",
    ],
)

rust_binary(
    name = "2ds_client",
    srcs = glob(["client/**/*.rs"]),
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:clap-2",
        "fbsource//third-party/rust:env_logger",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:log",
        "fbsource//third-party/rust:structopt",
        ":derived_data_client_library",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//eden/mononoke/derived_data/remote/if:derived_data_service_if-rust",
        "//eden/mononoke/mononoke_api:mononoke_api",
    ],
)

rust_library(
    name = "derivation_queue",
    srcs = glob(["derivation_queue/**/*.rs"]),
    test_deps = [
        "fbsource//third-party/rust:assert_matches",
        "fbsource//third-party/rust:pretty_assertions",
        "fbsource//third-party/rust:tokio",
        "//common/rust/shed/facet:facet",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//eden/mononoke/blobrepo:changeset_fetcher",
        "//eden/mononoke/blobrepo:repo_blobstore",
        "//eden/mononoke/bonsai_hg_mapping:bonsai_hg_mapping",
        "//eden/mononoke/bookmarks:bookmarks",
        "//eden/mononoke/changesets:changesets",
        "//eden/mononoke/derived_data:unodes",
        "//eden/mononoke/filestore:filestore",
        "//eden/mononoke/repo_attributes/repo_derived_data:repo_derived_data",
        "//eden/mononoke/repo_factory:test_repo_factory",
        "//eden/mononoke/server/context:context",
        "//eden/mononoke/tests/utils:tests_utils",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-trait",
        "fbsource//third-party/rust:bytes",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:parking_lot",
        "fbsource//third-party/rust:slog",
        "fbsource//third-party/rust:strum",
        "fbsource//third-party/rust:thiserror",
        "//common/rust/shed/cloned:cloned",
        "//common/rust/zeus:zeus_client",
        "//eden/mononoke/blobrepo:changeset_fetcher",
        "//eden/mononoke/common/bounded_traversal:bounded_traversal",
        "//eden/mononoke/derived_data:derived_data_manager",
        "//eden/mononoke/derived_data:derived_data_utils",
        "//eden/mononoke/facebook/derived_data_service/derivation_queue/if:derivation_queue_thrift-rust",
        "//eden/mononoke/mononoke_repos:mononoke_repos",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/repo_attributes/commit_graph/commit_graph:commit_graph",
        "//eden/mononoke/repo_attributes/repo_derived_data_service:repo_derived_data_service",
        "//eden/mononoke/server/context:context",
        "//eden/scm/lib/clientinfo:clientinfo",
        "//thrift/lib/rust:fbthrift",
    ],
)

rust_binary(
    name = "derivation_worker",
    srcs = glob(["workers/**/*.rs"]),
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-trait",
        "fbsource//third-party/rust:clap",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:slog",
        "fbsource//third-party/rust:tokio",
        ":derivation_queue",
        "//common/rust/shed/cloned:cloned",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/futures_stats:futures_stats",
        "//common/rust/shed/time_ext:time_ext",
        "//eden/mononoke/cmdlib/mononoke_app:mononoke_app",
        "//eden/mononoke/cmdlib/sharding:executor_lib",
        "//eden/mononoke/cmdlib/sharding_ext:sharding_ext",
        "//eden/mononoke/common/scuba_ext:scuba_ext",
        "//eden/mononoke/derived_data:basename_suffix_skeleton_manifest",
        "//eden/mononoke/derived_data:blame",
        "//eden/mononoke/derived_data:changeset_info",
        "//eden/mononoke/derived_data:deleted_manifest",
        "//eden/mononoke/derived_data:derived_data_manager",
        "//eden/mononoke/derived_data:derived_data_utils",
        "//eden/mononoke/derived_data:fastlog",
        "//eden/mononoke/derived_data:fsnodes",
        "//eden/mononoke/derived_data:skeleton_manifest",
        "//eden/mononoke/derived_data:unodes",
        "//eden/mononoke/derived_data/filenodes_derivation:filenodes_derivation",
        "//eden/mononoke/derived_data/mercurial_derivation:mercurial_derivation",
        "//eden/mononoke/git/git_types:git_types",
        "//eden/mononoke/metaconfig:metaconfig_types",
        "//eden/mononoke/mononoke_repos:mononoke_repos",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/repo_attributes/repo_derived_data_service:repo_derived_data_service",
        "//eden/mononoke/server/context:context",
        "//eden/mononoke/server/metadata:metadata",
        "//eden/mononoke/tunables:tunables",
        "//eden/scm/lib/clientinfo:clientinfo",
    ],
)

tw.container(
    name = "tw.mononoke.derived_data_service",
    features = [
        tw.build_fbpkg(
            fbpkg.builder(
                name = "mononoke.derived_data_service",
                path_actions = {
                    "derivation_worker": ":derivation_worker",
                    "derived_data_service": ":derived_data_service",
                },
            ),
        ),
    ],
    oncall = "scm_server_infra",
)
